[{"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort(field_1_vcenter);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort(field_1_vcenter);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$field_1_", "$$v", "$$c", "$$ent", "$$er)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(", "$$field_1_", "$$v", "$$c", "$$ent", "$$er)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void AddAll(NGit.Util.BlockList<T> src) {\n    if (src.size == 0) {\n        return;\n    }\n    int srcDirIdx = 0;\n    for (; srcDirIdx < src.tailDirIdx; srcDirIdx++) {\n        AddAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);\n    }\n    if (src.tailBlkIdx != 0) {\n        AddAll(src.tailBlock, 0, src.tailBlkIdx);\n    }\n}\n", "java": "public void addAll(BlockList<T> src) {\n    if (src.size == 0)return;\n    int srcDirIdx = 0;\n    for (; srcDirIdx < src.tailDirIdx; srcDirIdx++)addAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);\n    if (src.tailBlkIdx != 0)addAll(src.tailBlock, 0, src.tailBlkIdx);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Add", "$$All", "$$(", "$$N", "$$Git", "$$.", "$$Util.", "$$Block", "$$List<", "$$T>", "\u2581src", "$$)", "\u2581{"], ["\u2581if", "\u2581(s", "$$rc", "$$.size", "\u2581==", "\u25810)", "\u2581{"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581int", "\u2581src", "$$Dir", "$$Idx", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(", "$$;", "\u2581src", "$$Dir", "$$Idx", "\u2581<", "\u2581src", "$$.", "$$ta", "$$il", "$$Dir", "$$Idx", "$$;", "\u2581src", "$$Dir", "$$Idx", "$$++)", "\u2581{"], ["\u2581Add", "$$All", "$$(src", "$$.d", "$$irectory", "$$[", "$$s", "$$rc", "$$Dir", "$$Idx", "$$],", "\u25810,", "\u2581B", "$$LOCK_SIZE", "$$)", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(s", "$$rc", "$$.", "$$ta", "$$il", "$$B", "$$l", "$$k", "$$Idx", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581Add", "$$All", "$$(src", "$$.", "$$ta", "$$il", "$$Block", "$$,", "\u25810,", "\u2581src", "$$.", "$$ta", "$$il", "$$B", "$$l", "$$k", "$$Idx", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581add", "$$All", "$$(", "$$Block", "$$List<", "$$T>", "\u2581src", "$$)", "\u2581{"], ["\u2581if", "\u2581(s", "$$rc", "$$.size", "\u2581==", "\u25810)return", "$$;"], ["\u2581int", "\u2581src", "$$Dir", "$$Idx", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(", "$$;", "\u2581src", "$$Dir", "$$Idx", "\u2581<", "\u2581src", "$$.", "$$ta", "$$il", "$$Dir", "$$Idx", "$$;", "\u2581src", "$$Dir", "$$Idx", "$$++)", "$$add", "$$All", "$$(src", "$$.d", "$$irectory", "$$[", "$$s", "$$rc", "$$Dir", "$$Idx", "$$],", "\u25810,", "\u2581B", "$$LOCK_SIZE", "$$)", "$$;"], ["\u2581if", "\u2581(s", "$$rc", "$$.", "$$ta", "$$il", "$$B", "$$l", "$$k", "$$Idx", "\u2581!=", "\u25810)", "$$add", "$$All", "$$(src", "$$.", "$$ta", "$$il", "$$Block", "$$,", "\u25810,", "\u2581src", "$$.", "$$ta", "$$il", "$$B", "$$l", "$$k", "$$Idx", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void WriteByte(byte b) {\n    if (outerInstance.upto == outerInstance.blockSize) {\n        if (outerInstance.currentBlock != null) {\n            outerInstance.blocks.Add(outerInstance.currentBlock);\n            outerInstance.blockEnd.Add(outerInstance.upto);\n        }\n        outerInstance.currentBlock = new byte[outerInstance.blockSize];\n        outerInstance.upto = 0;\n    }\n    outerInstance.currentBlock[outerInstance.upto++] = (byte)b;\n}\n", "java": "public void writeByte(byte b) {\n    if (upto == blockSize) {\n        if (currentBlock != null) {\n            addBlock(currentBlock);\n        }\n        currentBlock = new byte[blockSize];\n        upto = 0;\n    }\n    currentBlock[upto++] = b;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Write", "$$Byte", "$$(byte", "\u2581b)", "\u2581{"], ["\u2581if", "\u2581(", "$$out", "$$erInstance", "$$.", "$$upto", "\u2581==", "\u2581out", "$$erInstance", "$$.", "$$block", "$$Size)", "\u2581{"], ["\u2581if", "\u2581(", "$$out", "$$erInstance", "$$.c", "$$urrent", "$$Block", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581out", "$$erInstance", "$$.", "$$blocks", "$$.Add(", "$$out", "$$erInstance", "$$.c", "$$urrent", "$$Block", "$$)", "$$;"], ["\u2581out", "$$erInstance", "$$.", "$$block", "$$End", "$$.Add(", "$$out", "$$erInstance", "$$.", "$$upto", "$$)", "$$;"], ["\u2581}"], ["\u2581out", "$$erInstance", "$$.c", "$$urrent", "$$Block", "\u2581=", "\u2581new", "\u2581byte[", "$$out", "$$erInstance", "$$.", "$$block", "$$Size", "$$]", "$$;"], ["\u2581out", "$$erInstance", "$$.", "$$upto", "\u2581=", "\u25810;"], ["\u2581}"], ["\u2581out", "$$erInstance", "$$.c", "$$urrent", "$$Block", "$$[", "$$out", "$$erInstance", "$$.", "$$upto", "$$++]", "\u2581=", "\u2581(byte)", "$$b", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581write", "$$Byte", "$$(byte", "\u2581b)", "\u2581{"], ["\u2581if", "\u2581(", "$$upto", "\u2581==", "\u2581block", "$$Size)", "\u2581{"], ["\u2581if", "\u2581(c", "$$urrent", "$$Block", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581add", "$$Block", "$$(c", "$$urrent", "$$Block", "$$)", "$$;"], ["\u2581}"], ["\u2581current", "$$Block", "\u2581=", "\u2581new", "\u2581byte[", "$$block", "$$Size", "$$]", "$$;"], ["\u2581upto", "\u2581=", "\u25810;"], ["\u2581}"], ["\u2581current", "$$Block", "$$[", "$$upto", "$$++]", "\u2581=", "\u2581b", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ObjectId GetObjectId() {\n    return objectId;\n}\n", "java": "public ObjectId getObjectId() {\n    return objectId;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581ObjectId", "\u2581Get", "$$ObjectId", "$$()", "\u2581{"], ["\u2581return", "\u2581object", "$$Id", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ObjectId", "\u2581get", "$$ObjectId", "$$()", "\u2581{"], ["\u2581return", "\u2581object", "$$Id", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteDomainEntryResponse DeleteDomainEntry(DeleteDomainEntryRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteDomainEntryRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteDomainEntryResponseUnmarshaller.Instance;\n    return Invoke<DeleteDomainEntryResponse>(request, options);\n}\n", "java": "public DeleteDomainEntryResult deleteDomainEntry(DeleteDomainEntryRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteDomainEntry(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Domain", "$$Entry", "$$Response", "\u2581Delete", "$$Domain", "$$Entry", "$$(Delete", "$$Domain", "$$Entry", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Domain", "$$Entry", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Domain", "$$Entry", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Domain", "$$Entry", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Domain", "$$Entry", "$$Result", "\u2581delete", "$$Domain", "$$Entry", "$$(Delete", "$$Domain", "$$Entry", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Domain", "$$Entry", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual long RamBytesUsed() {\n    return fst == null ? 0 : fst.GetSizeInBytes();\n}\n", "java": "public long ramBytesUsed() {\n    return ((termOffsets!=null)? termOffsets.ramBytesUsed() : 0) +((termsDictOffsets!=null)? termsDictOffsets.ramBytesUsed() : 0);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581long", "\u2581Ram", "$$BytesUsed()", "\u2581{"], ["\u2581return", "\u2581f", "$$st", "\u2581==", "\u2581null", "\u2581?", "\u25810", "\u2581:", "\u2581f", "$$st", "$$.Get", "$$Size", "$$InBytes", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581long", "\u2581ram", "$$BytesUsed()", "\u2581{"], ["\u2581return", "\u2581((", "$$term", "$$Offset", "$$s", "$$!", "$$=", "$$null", "$$)", "$$?", "\u2581term", "$$Offset", "$$s.", "$$ram", "$$BytesUsed()", "\u2581:", "\u25810)", "\u2581+", "$$((", "$$term", "$$s", "$$D", "$$i", "$$ct", "$$Offset", "$$s", "$$!", "$$=", "$$null", "$$)", "$$?", "\u2581term", "$$s", "$$D", "$$i", "$$ct", "$$Offset", "$$s.", "$$ram", "$$BytesUsed()", "\u2581:", "\u25810)", "$$;"], ["\u2581}"]]}, {"cs": "public string GetFullMessage() {\n    byte[] raw = buffer;\n    int msgB = RawParseUtils.TagMessage(raw, 0);\n    if (msgB < 0) {\n        return string.Empty;\n    }\n    Encoding enc = RawParseUtils.ParseEncoding(raw);\n    return RawParseUtils.Decode(enc, raw, msgB, raw.Length);\n}\n", "java": "public final String getFullMessage() {\n    byte[] raw = buffer;\n    int msgB = RawParseUtils.tagMessage(raw, 0);\n    if (msgB < 0) {\n        return \"\";\n    }\n    return RawParseUtils.decode(guessEncoding(), raw, msgB, raw.length);\n}\n", "cs_t": [["\u2581public", "\u2581string", "\u2581Get", "$$Full", "$$Message", "$$()", "\u2581{"], ["\u2581byte[]", "\u2581raw", "\u2581=", "\u2581buffer", "$$;"], ["\u2581int", "\u2581msg", "$$B", "\u2581=", "\u2581RawParseUtils.", "$$Tag", "$$Message", "$$(", "$$raw", "$$,", "\u25810)", "$$;"], ["\u2581if", "\u2581(m", "$$sg", "$$B", "\u2581<", "\u25810)", "\u2581{"], ["\u2581return", "\u2581string", "$$.", "$$Empty", "$$;"], ["\u2581}"], ["\u2581", "$$Encoding", "\u2581", "$$enc", "\u2581=", "\u2581RawParseUtils.", "$$Parse", "$$Encoding", "$$(", "$$raw", "$$)", "$$;"], ["\u2581return", "\u2581RawParseUtils.", "$$D", "$$ecode", "$$(", "$$enc", "$$,", "\u2581raw", "$$,", "\u2581msg", "$$B", "$$,", "\u2581raw", "$$.Length)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581String", "\u2581get", "$$Full", "$$Message", "$$()", "\u2581{"], ["\u2581byte[]", "\u2581raw", "\u2581=", "\u2581buffer", "$$;"], ["\u2581int", "\u2581msg", "$$B", "\u2581=", "\u2581RawParseUtils.", "$$tag", "$$Message", "$$(", "$$raw", "$$,", "\u25810)", "$$;"], ["\u2581if", "\u2581(m", "$$sg", "$$B", "\u2581<", "\u25810)", "\u2581{"], ["\u2581return", "\u2581\"", "$$\"", "$$;"], ["\u2581}"], ["\u2581return", "\u2581RawParseUtils.", "$$d", "$$ecode", "$$(", "$$g", "$$u", "$$ess", "$$Encoding", "$$(),", "\u2581raw", "$$,", "\u2581msg", "$$B", "$$,", "\u2581raw", "$$.length)", "$$;"], ["\u2581}"]]}, {"cs": "public POIFSFileSystem() {\n    HeaderBlock headerBlock = new HeaderBlock(bigBlockSize);\n    _property_table = new PropertyTable(headerBlock);\n    _documents      = new ArrayList();\n    _root           = null;\n}\n", "java": "public POIFSFileSystem() {\n    this(true);\n    _header.setBATCount(1);\n    _header.setBATArray(new int[] {1});\n    BATBlock bb = BATBlock.createEmptyBATBlock(bigBlockSize, false);\n    bb.setOurBlockIndex(1);\n    _bat_blocks.add(bb);\n    setNextBlock(0, POIFSConstants.END_OF_CHAIN);\n    setNextBlock(1, POIFSConstants.FAT_SECTOR_BLOCK);\n    _property_table.setStartBlock(0);\n}\n", "cs_t": [["\u2581public", "\u2581P", "$$O", "$$I", "$$F", "$$S", "$$FileSystem", "$$()", "\u2581{"], ["\u2581H", "$$ead", "$$er", "$$Block", "\u2581head", "$$er", "$$Block", "\u2581=", "\u2581new", "\u2581H", "$$ead", "$$er", "$$Block", "$$(b", "$$ig", "$$Block", "$$Size)", "$$;"], ["\u2581_", "$$pro", "$$per", "$$ty", "$$_", "$$table", "\u2581=", "\u2581new", "\u2581", "$$Property", "$$Table", "$$(", "$$head", "$$er", "$$Block", "$$)", "$$;"], ["\u2581_d", "$$oc", "$$ument", "$$s", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581new", "\u2581Array", "$$List", "$$()", "$$;"], ["\u2581_", "$$root", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581null", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$O", "$$I", "$$F", "$$S", "$$FileSystem", "$$()", "\u2581{"], ["\u2581this", "$$(t", "$$rue", "$$)", "$$;"], ["\u2581_", "$$head", "$$er.", "$$set", "$$B", "$$AT", "$$Count", "$$(", "$$1)", "$$;"], ["\u2581_", "$$head", "$$er.", "$$set", "$$B", "$$AT", "$$Array", "$$(new", "\u2581int[]", "\u2581{", "$$1", "$$}", "$$)", "$$;"], ["\u2581B", "$$AT", "$$Block", "\u2581b", "$$b", "\u2581=", "\u2581B", "$$AT", "$$Block", "$$.create", "$$Empty", "$$B", "$$AT", "$$Block", "$$(b", "$$ig", "$$Block", "$$Size,", "\u2581false", "$$)", "$$;"], ["\u2581b", "$$b", "$$.set", "$$O", "$$ur", "$$Block", "$$Index(", "$$1)", "$$;"], ["\u2581_b", "$$at", "$$_", "$$block", "$$s.add(", "$$b", "$$b", "$$)", "$$;"], ["\u2581set", "$$Next", "$$Block", "$$(", "$$0,", "\u2581P", "$$O", "$$I", "$$F", "$$S", "$$Constants.", "$$EN", "$$D_", "$$OF", "$$_", "$$CH", "$$A", "$$IN", "$$)", "$$;"], ["\u2581set", "$$Next", "$$Block", "$$(", "$$1,", "\u2581P", "$$O", "$$I", "$$F", "$$S", "$$Constants.", "$$FA", "$$T_", "$$SE", "$$CT", "$$OR", "$$_B", "$$LOCK", "$$)", "$$;"], ["\u2581_", "$$pro", "$$per", "$$ty", "$$_", "$$table", "$$.set", "$$Start", "$$Block", "$$(", "$$0)", "$$;"], ["\u2581}"]]}, {"cs": "public void Init(int address) {\n    slice = pool.Buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];\n    Debug.Assert(slice != null);\n    upto = address & ByteBlockPool.BYTE_BLOCK_MASK;\n    offset0 = address;\n    Debug.Assert(upto < slice.Length);\n}\n", "java": "public void init(int address) {\n    slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];\n    assert slice != null;\n    upto = address & ByteBlockPool.BYTE_BLOCK_MASK;\n    offset0 = address;\n    assert upto < slice.length;\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581In", "$$it", "$$(int", "\u2581add", "$$res", "$$s)", "\u2581{"], ["\u2581slice", "\u2581=", "\u2581po", "$$ol", "$$.", "$$Buffer", "$$s[", "$$add", "$$ress", "\u2581>>", "\u2581Byte", "$$Block", "$$Pool", "$$.B", "$$YTE", "$$_B", "$$LOCK", "$$_", "$$SH", "$$I", "$$F", "$$T", "$$]", "$$;"], ["\u2581Debug.Assert", "$$(s", "$$lice", "\u2581!=", "\u2581null)", "$$;"], ["\u2581upto", "\u2581=", "\u2581add", "$$ress", "\u2581&", "\u2581Byte", "$$Block", "$$Pool", "$$.B", "$$YTE", "$$_B", "$$LOCK", "$$_M", "$$AS", "$$K", "$$;"], ["\u2581offset", "$$0", "\u2581=", "\u2581add", "$$ress", "$$;"], ["\u2581Debug.Assert(", "$$upto", "\u2581<", "\u2581slice", "$$.Length)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581in", "$$it", "$$(int", "\u2581add", "$$res", "$$s)", "\u2581{"], ["\u2581slice", "\u2581=", "\u2581po", "$$ol", "$$.", "$$buffer", "$$s[", "$$add", "$$ress", "\u2581>>", "\u2581Byte", "$$Block", "$$Pool", "$$.B", "$$YTE", "$$_B", "$$LOCK", "$$_", "$$SH", "$$I", "$$F", "$$T", "$$]", "$$;"], ["\u2581assert", "\u2581slice", "\u2581!=", "\u2581null", "$$;"], ["\u2581upto", "\u2581=", "\u2581add", "$$ress", "\u2581&", "\u2581Byte", "$$Block", "$$Pool", "$$.B", "$$YTE", "$$_B", "$$LOCK", "$$_M", "$$AS", "$$K", "$$;"], ["\u2581offset", "$$0", "\u2581=", "\u2581add", "$$ress", "$$;"], ["\u2581assert", "\u2581upto", "\u2581<", "\u2581slice", "$$.length;"], ["\u2581}"]]}, {"cs": "public virtual NGit.Api.SubmoduleAddCommand SetPath(string path) {\n    this.path = path;\n    return this;\n}\n", "java": "public SubmoduleAddCommand setPath(String path) {\n    this.path = path;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581NGit.Api.", "$$Sub", "$$module", "$$Add", "$$Command", "\u2581Set", "$$Path", "$$(string", "\u2581path", "$$)", "\u2581{"], ["\u2581this.", "$$path", "\u2581=", "\u2581path", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Sub", "$$module", "$$Add", "$$Command", "\u2581set", "$$Path", "$$(String", "\u2581path", "$$)", "\u2581{"], ["\u2581this.", "$$path", "\u2581=", "\u2581path", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListIngestionsResponse ListIngestions(ListIngestionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListIngestionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListIngestionsResponseUnmarshaller.Instance;\n    return Invoke<ListIngestionsResponse>(request, options);\n}\n", "java": "public ListIngestionsResult listIngestions(ListIngestionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListIngestions(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$In", "$$ges", "$$tion", "$$sResponse", "\u2581List", "$$In", "$$ges", "$$tion", "$$s(List", "$$In", "$$ges", "$$tion", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$In", "$$ges", "$$tion", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$In", "$$ges", "$$tion", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$In", "$$ges", "$$tion", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$In", "$$ges", "$$tion", "$$sResult", "\u2581list", "$$In", "$$ges", "$$tion", "$$s(List", "$$In", "$$ges", "$$tion", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$In", "$$ges", "$$tion", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public QueryParserTokenManager(ICharStream stream, int lexState): this(stream) {\n    SwitchTo(lexState);\n}\n", "java": "public QueryParserTokenManager(CharStream stream, int lexState) {\n    this(stream);\n    SwitchTo(lexState);\n}\n", "cs_t": [["\u2581public", "\u2581Query", "$$Parser", "$$Token", "$$Man", "$$ag", "$$er(", "$$I", "$$Char", "$$Stream", "\u2581stream", "$$,", "\u2581int", "\u2581lex", "$$State", "$$):", "\u2581this", "$$(st", "$$ream", "$$)", "\u2581{"], ["\u2581S", "$$witch", "$$To(", "$$lex", "$$State", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Query", "$$Parser", "$$Token", "$$Man", "$$ag", "$$er(", "$$Char", "$$Stream", "\u2581stream", "$$,", "\u2581int", "\u2581lex", "$$State", "$$)", "\u2581{"], ["\u2581this", "$$(st", "$$ream", "$$)", "$$;"], ["\u2581S", "$$witch", "$$To(", "$$lex", "$$State", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetShardIteratorRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetShardIteratorResponseUnmarshaller.Instance;\n    return Invoke<GetShardIteratorResponse>(request, options);\n}\n", "java": "public GetShardIteratorResult getShardIterator(GetShardIteratorRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetShardIterator(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Sh", "$$ard", "$$Iterator", "$$Response", "\u2581Get", "$$Sh", "$$ard", "$$Iterator", "$$(Get", "$$Sh", "$$ard", "$$Iterator", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Sh", "$$ard", "$$Iterator", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Sh", "$$ard", "$$Iterator", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Sh", "$$ard", "$$Iterator", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Sh", "$$ard", "$$Iterator", "$$Result", "\u2581get", "$$Sh", "$$ard", "$$Iterator", "$$(Get", "$$Sh", "$$ard", "$$Iterator", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Sh", "$$ard", "$$Iterator", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ModifyStrategyRequest(): base(\"aegis\", \"2016-11-11\", \"ModifyStrategy\", \"vipaegis\", \"openAPI\") {\n    Method = MethodType.POST;\n}\n", "java": "public ModifyStrategyRequest() {\n    super(\"aegis\", \"2016-11-11\", \"ModifyStrategy\", \"vipaegis\");\n    setMethod(MethodType.POST);\n}\n", "cs_t": [["\u2581public", "\u2581Modify", "$$Strategy", "$$Request():", "\u2581base(\"", "$$a", "$$eg", "$$is", "$$\",", "\u2581\"201", "$$6", "$$-1", "$$1", "$$-11\",", "\u2581\"", "$$Modify", "$$Strategy", "$$\",", "\u2581\"", "$$vi", "$$pa", "$$eg", "$$is", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Method", "\u2581=", "\u2581MethodType.POST", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Modify", "$$Strategy", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$a", "$$eg", "$$is", "$$\",", "\u2581\"201", "$$6", "$$-1", "$$1", "$$-11\",", "\u2581\"", "$$Modify", "$$Strategy", "$$\",", "\u2581\"", "$$vi", "$$pa", "$$eg", "$$is", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.POST", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool ready() {\n    lock (@lock) {\n        if (@in == null) {\n            throw new System.IO.IOException(\"InputStreamReader is closed\");\n        }\n        try {\n            return bytes.hasRemaining() || @in.available() > 0;\n        }\n        catch (System.IO.IOException) {\n            return false;\n        }\n    }\n}\n", "java": "public boolean ready() throws IOException {\n    synchronized (lock) {\n        if (in == null) {\n            throw new IOException(\"InputStreamReader is closed\");\n        }\n        try {\n            return bytes.hasRemaining() || in.available() > 0;\n        }\n        catch (IOException e) {\n            return false;\n        }\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581read", "$$y", "$$()", "\u2581{"], ["\u2581lock", "\u2581(@", "$$lock", "$$)", "\u2581{"], ["\u2581if", "\u2581(@", "$$in", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.", "$$IO", "$$.", "$$IO", "$$Exception(\"", "$$InputStream", "$$Reader", "\u2581is", "\u2581c", "$$lo", "$$sed", "$$\")", "$$;"], ["\u2581}"], ["\u2581try", "\u2581{"], ["\u2581return", "\u2581bytes", "$$.has", "$$Remaining", "$$()", "\u2581||", "\u2581@in", "$$.", "$$avail", "$$able", "$$()", "\u2581>", "\u25810;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$System", "$$.", "$$IO", "$$.", "$$I", "$$OException", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581read", "$$y", "$$()", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581synchronized", "\u2581(", "$$lock", "$$)", "\u2581{"], ["\u2581if", "\u2581(in", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IO", "$$Exception(\"", "$$InputStream", "$$Reader", "\u2581is", "\u2581c", "$$lo", "$$sed", "$$\")", "$$;"], ["\u2581}"], ["\u2581try", "\u2581{"], ["\u2581return", "\u2581bytes", "$$.has", "$$Remaining", "$$()", "\u2581||", "\u2581in", "$$.", "$$avail", "$$able", "$$()", "\u2581>", "\u25810;"], ["\u2581}"], ["\u2581catch", "\u2581(IOException", "\u2581e)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]]}, {"cs": "protected internal EscherOptRecord GetOptRecord() {\n    return _optRecord;\n}\n", "java": "public EscherOptRecord getOptRecord() {\n    return _optRecord;\n}\n", "cs_t": [["\u2581pro", "$$te", "$$c", "$$ted", "\u2581inter", "$$n", "$$al", "\u2581Escher", "$$O", "$$pt", "$$Record", "\u2581Get", "$$O", "$$pt", "$$Record", "$$()", "\u2581{"], ["\u2581return", "\u2581_", "$$o", "$$pt", "$$Record", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Escher", "$$O", "$$pt", "$$Record", "\u2581get", "$$O", "$$pt", "$$Record", "$$()", "\u2581{"], ["\u2581return", "\u2581_", "$$o", "$$pt", "$$Record", "$$;"], ["\u2581}"]]}, {"cs": "public override int read(byte[] buffer, int offset, int length) {\n    lock (this) {\n        if (buffer == null) {\n            throw new System.ArgumentNullException(\"buffer == null\");\n        }\n        java.util.Arrays.checkOffsetAndCount(buffer.Length, offset, length);\n        if (length == 0) {\n            return 0;\n        }\n        int copylen = count - pos < length ? count - pos : length;\n        {\n            for (int i = 0; i < copylen; i++) {\n                buffer[offset + i] = unchecked((byte)this.buffer[pos + i]);\n            }\n        }\n        pos += copylen;\n        return copylen;\n    }\n}\n", "java": "public synchronized int read(byte[] buffer, int offset, int length) {\n    if (buffer == null) {\n        throw new NullPointerException(\"buffer == null\");\n    }\n    Arrays.checkOffsetAndCount(buffer.length, offset, length);\n    if (length == 0) {\n        return 0;\n    }\n    int copylen = count - pos < length ? count - pos : length;\n    for (int i = 0; i < copylen; i++) {\n        buffer[offset + i] = (byte) this.buffer.charAt(pos + i);\n    }\n    pos += copylen;\n    return copylen;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int", "\u2581re", "$$ad(", "$$byte[]", "\u2581buffer,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581length)", "\u2581{"], ["\u2581lock", "\u2581(this)", "\u2581{"], ["\u2581if", "\u2581(b", "$$uffer", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.Ar", "$$gument", "$$Null", "$$Exception(\"", "$$buffer", "\u2581==", "\u2581null", "$$\")", "$$;"], ["\u2581}"], ["\u2581java.", "$$u", "$$til", "$$.Ar", "$$ray", "$$s.", "$$check", "$$Offset", "$$And", "$$Count", "$$(buffer", "$$.Length", "$$,", "\u2581offset,", "\u2581length)", "$$;"], ["\u2581if", "\u2581(", "$$length", "\u2581==", "\u25810)", "\u2581{"], ["\u2581return", "\u25810;"], ["\u2581}"], ["\u2581int", "\u2581copy", "$$len", "\u2581=", "\u2581count", "\u2581-", "\u2581pos", "\u2581<", "\u2581length", "\u2581?", "\u2581count", "\u2581-", "\u2581pos", "\u2581:", "\u2581length", "$$;"], ["\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581copy", "$$len", "$$;", "\u2581i++)", "\u2581{"], ["\u2581buffer", "$$[offset", "\u2581+", "\u2581i", "$$]", "\u2581=", "\u2581un", "$$check", "$$ed(", "$$(byte", "$$)", "$$this.", "$$buffer", "$$[", "$$pos", "\u2581+", "\u2581i", "$$]", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581pos", "\u2581+=", "\u2581copy", "$$len", "$$;"], ["\u2581return", "\u2581copy", "$$len", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581synchronized", "\u2581int", "\u2581re", "$$ad(", "$$byte[]", "\u2581buffer,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581length)", "\u2581{"], ["\u2581if", "\u2581(b", "$$uffer", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Null", "$$Pointer", "$$Exception(\"", "$$buffer", "\u2581==", "\u2581null", "$$\")", "$$;"], ["\u2581}"], ["\u2581Arrays.", "$$check", "$$Offset", "$$And", "$$Count", "$$(buffer", "$$.length,", "\u2581offset,", "\u2581length)", "$$;"], ["\u2581if", "\u2581(", "$$length", "\u2581==", "\u25810)", "\u2581{"], ["\u2581return", "\u25810;"], ["\u2581}"], ["\u2581int", "\u2581copy", "$$len", "\u2581=", "\u2581count", "\u2581-", "\u2581pos", "\u2581<", "\u2581length", "\u2581?", "\u2581count", "\u2581-", "\u2581pos", "\u2581:", "\u2581length", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581copy", "$$len", "$$;", "\u2581i++)", "\u2581{"], ["\u2581buffer", "$$[offset", "\u2581+", "\u2581i", "$$]", "\u2581=", "\u2581(byte)", "\u2581this.", "$$buffer", "$$.char", "$$At(", "$$pos", "\u2581+", "\u2581i", "$$)", "$$;"], ["\u2581}"], ["\u2581pos", "\u2581+=", "\u2581copy", "$$len", "$$;"], ["\u2581return", "\u2581copy", "$$len", "$$;"], ["\u2581}"]]}, {"cs": "public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) {\n    this.sentenceOp = sentenceOp;\n}\n", "java": "public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) {\n    this.sentenceOp = sentenceOp;\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Open", "$$N", "$$L", "$$PS", "$$entence", "$$Break", "$$Iterator", "$$(", "$$N", "$$L", "$$PS", "$$entence", "$$Detector", "$$Op", "\u2581s", "$$entence", "$$Op", "$$)", "\u2581{"], ["\u2581this.", "$$s", "$$entence", "$$Op", "\u2581=", "\u2581s", "$$entence", "$$Op", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Open", "$$N", "$$L", "$$PS", "$$entence", "$$Break", "$$Iterator", "$$(", "$$N", "$$L", "$$PS", "$$entence", "$$Detector", "$$Op", "\u2581s", "$$entence", "$$Op", "$$)", "\u2581{"], ["\u2581this.", "$$s", "$$entence", "$$Op", "\u2581=", "\u2581s", "$$entence", "$$Op", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void print(string str) {\n    write(str != null ? str : Sharpen.StringHelper.GetValueOf((object)null));\n}\n", "java": "public void print(String str) {\n    write(str != null ? str : String.valueOf((Object) null));\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581print", "$$(string", "\u2581str", "$$)", "\u2581{"], ["\u2581write", "$$(st", "$$r", "\u2581!=", "\u2581null", "\u2581?", "\u2581str", "\u2581:", "\u2581Sharpen.", "$$String", "$$H", "$$el", "$$per", "$$.Get", "$$Value", "$$Of(", "$$(object", "$$)", "$$null", "$$))", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581print", "$$(String", "\u2581str", "$$)", "\u2581{"], ["\u2581write", "$$(st", "$$r", "\u2581!=", "\u2581null", "\u2581?", "\u2581str", "\u2581:", "\u2581String", "$$.value", "$$Of", "$$((", "$$Object", "$$)", "\u2581null", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public NotImplementedFunctionException(string functionName, NotImplementedException cause): base(functionName,cause) {\n    this.functionName = functionName;\n}\n", "java": "public NotImplementedFunctionException(String functionName, NotImplementedException cause) {\n    super(functionName, cause);\n    this.functionName = functionName;\n}\n", "cs_t": [["\u2581public", "\u2581Not", "$$Implemented", "$$Function", "$$Exception", "$$(string", "\u2581function", "$$Name,", "\u2581Not", "$$Implemented", "$$Exception", "\u2581c", "$$a", "$$use", "$$):", "\u2581base", "$$(f", "$$unction", "$$Name,", "$$c", "$$a", "$$use", "$$)", "\u2581{"], ["\u2581this.f", "$$unction", "$$Name", "\u2581=", "\u2581function", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Not", "$$Implemented", "$$Function", "$$Exception", "$$(String", "\u2581function", "$$Name,", "\u2581Not", "$$Implemented", "$$Exception", "\u2581c", "$$a", "$$use", "$$)", "\u2581{"], ["\u2581super(", "$$f", "$$unction", "$$Name,", "\u2581c", "$$a", "$$use", "$$)", "$$;"], ["\u2581this.f", "$$unction", "$$Name", "\u2581=", "\u2581function", "$$Name", "$$;"], ["\u2581}"]]}, {"cs": "public override V next() {\n    return this.nextEntry().value;\n}\n", "java": "public V next() {\n    return super.nextEntry().getValue();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581V", "\u2581next", "$$()", "\u2581{"], ["\u2581return", "\u2581this.", "$$next", "$$Entry", "$$().", "$$value", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581V", "\u2581next", "$$()", "\u2581{"], ["\u2581return", "\u2581super.", "$$next", "$$Entry", "$$().get", "$$Value", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public override sealed void ReadBytes(byte[] b, int offset, int len, bool useBuffer) {\n    int available = bufferLength - bufferPosition;\n    if (len <= available) {\n        if (len > 0) {\n            Buffer.BlockCopy(m_buffer, bufferPosition, b, offset, len);\n        }\n        bufferPosition += len;\n    }\n    else {\n        if (available > 0) {\n            Buffer.BlockCopy(m_buffer, bufferPosition, b, offset, available);\n            offset += available;\n            len -= available;\n            bufferPosition += available;\n        }\n        if (useBuffer && len < bufferSize) {\n            Refill();\n            if (bufferLength < len) {\n                Buffer.BlockCopy(m_buffer, 0, b, offset, bufferLength);\n                throw new EndOfStreamException(\"read past EOF: \" + this);\n            }\n            else {\n                Buffer.BlockCopy(m_buffer, 0, b, offset, len);\n                bufferPosition = len;\n            }\n        }\n        else {\n            long after = bufferStart + bufferPosition + len;\n            if (after > Length) {\n                throw new EndOfStreamException(\"read past EOF: \" + this);\n            }\n            ReadInternal(b, offset, len);\n            bufferStart = after;\n            bufferPosition = 0;\n            bufferLength = 0;\n        }\n    }\n}\n", "java": "public final void readBytes(byte[] b, int offset, int len, boolean useBuffer) throws IOException {\n    int available = bufferLength - bufferPosition;\n    if(len <= available) {\n        if(len>0) System.arraycopy(buffer, bufferPosition, b, offset, len);\n        bufferPosition+=len;\n    }\n    else {\n        if(available > 0) {\n            System.arraycopy(buffer, bufferPosition, b, offset, available);\n            offset += available;\n            len -= available;\n            bufferPosition += available;\n        }\n        if (useBuffer && len<bufferSize) {\n            refill();\n            if(bufferLength<len) {\n                System.arraycopy(buffer, 0, b, offset, bufferLength);\n                throw new EOFException(\"read past EOF: \" + this);\n            }\n            else {\n                System.arraycopy(buffer, 0, b, offset, len);\n                bufferPosition=len;\n            }\n        }\n        else {\n            long after = bufferStart+bufferPosition+len;\n            if(after > length())throw new EOFException(\"read past EOF: \" + this);\n            readInternal(b, offset, len);\n            bufferStart = after;\n            bufferPosition = 0;\n            bufferLength = 0;\n        }\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581sealed", "\u2581void", "\u2581Read", "$$Bytes", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581len", "$$,", "\u2581bool", "\u2581use", "$$Buffer", "$$)", "\u2581{"], ["\u2581int", "\u2581avail", "$$able", "\u2581=", "\u2581buffer", "$$Length", "\u2581-", "\u2581buffer", "$$Position", "$$;"], ["\u2581if", "\u2581(", "$$len", "\u2581<=", "\u2581avail", "$$able", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$len", "\u2581>", "\u25810)", "\u2581{"], ["\u2581", "$$Buffer.", "$$Block", "$$Copy", "$$(", "$$m_", "$$buffer", "$$,", "\u2581buffer", "$$Position", "$$,", "\u2581b,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581}"], ["\u2581buffer", "$$Position", "\u2581+=", "\u2581len", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581if", "\u2581(", "$$avail", "$$able", "\u2581>", "\u25810)", "\u2581{"], ["\u2581", "$$Buffer.", "$$Block", "$$Copy", "$$(", "$$m_", "$$buffer", "$$,", "\u2581buffer", "$$Position", "$$,", "\u2581b,", "\u2581offset,", "\u2581avail", "$$able", "$$)", "$$;"], ["\u2581offset", "\u2581+=", "\u2581avail", "$$able", "$$;"], ["\u2581len", "\u2581-=", "\u2581avail", "$$able", "$$;"], ["\u2581buffer", "$$Position", "\u2581+=", "\u2581avail", "$$able", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$use", "$$Buffer", "\u2581&&", "\u2581len", "\u2581<", "\u2581buffer", "$$Size)", "\u2581{"], ["\u2581Re", "$$fill", "$$()", "$$;"], ["\u2581if", "\u2581(b", "$$uffer", "$$Length", "\u2581<", "\u2581len)", "\u2581{"], ["\u2581", "$$Buffer.", "$$Block", "$$Copy", "$$(", "$$m_", "$$buffer", "$$,", "\u25810,", "\u2581b,", "\u2581offset,", "\u2581buffer", "$$Length", "$$)", "$$;"], ["\u2581throw", "\u2581new", "\u2581", "$$End", "$$Of", "$$Stream", "$$Exception(\"", "$$read", "\u2581p", "$$ast", "\u2581E", "$$OF", "$$:", "\u2581\"", "\u2581+", "\u2581this", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581", "$$Buffer.", "$$Block", "$$Copy", "$$(", "$$m_", "$$buffer", "$$,", "\u25810,", "\u2581b,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581buffer", "$$Position", "\u2581=", "\u2581len", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581long", "\u2581a", "$$fter", "\u2581=", "\u2581buffer", "$$Start", "\u2581+", "\u2581buffer", "$$Position", "\u2581+", "\u2581len", "$$;"], ["\u2581if", "\u2581(", "$$af", "$$ter", "\u2581>", "\u2581", "$$Length", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$End", "$$Of", "$$Stream", "$$Exception(\"", "$$read", "\u2581p", "$$ast", "\u2581E", "$$OF", "$$:", "\u2581\"", "\u2581+", "\u2581this", "$$)", "$$;"], ["\u2581}"], ["\u2581Read", "$$Internal", "$$(b,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581buffer", "$$Start", "\u2581=", "\u2581a", "$$fter", "$$;"], ["\u2581buffer", "$$Position", "\u2581=", "\u25810;"], ["\u2581buffer", "$$Length", "\u2581=", "\u25810;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581void", "\u2581read", "$$Bytes", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581len", "$$,", "\u2581boolean", "\u2581use", "$$Buffer", "$$)", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581int", "\u2581avail", "$$able", "\u2581=", "\u2581buffer", "$$Length", "\u2581-", "\u2581buffer", "$$Position", "$$;"], ["\u2581if(", "$$len", "\u2581<=", "\u2581avail", "$$able", "$$)", "\u2581{"], ["\u2581if(", "$$len", "$$>", "$$0)", "\u2581System.arraycopy", "$$(buffer", "$$,", "\u2581buffer", "$$Position", "$$,", "\u2581b,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581buffer", "$$Position", "$$+", "$$=", "$$len", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581if(", "$$avail", "$$able", "\u2581>", "\u25810)", "\u2581{"], ["\u2581System.arraycopy", "$$(buffer", "$$,", "\u2581buffer", "$$Position", "$$,", "\u2581b,", "\u2581offset,", "\u2581avail", "$$able", "$$)", "$$;"], ["\u2581offset", "\u2581+=", "\u2581avail", "$$able", "$$;"], ["\u2581len", "\u2581-=", "\u2581avail", "$$able", "$$;"], ["\u2581buffer", "$$Position", "\u2581+=", "\u2581avail", "$$able", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$use", "$$Buffer", "\u2581&&", "\u2581len", "$$<", "$$buffer", "$$Size)", "\u2581{"], ["\u2581re", "$$fill", "$$()", "$$;"], ["\u2581if", "$$(buffer", "$$Length", "$$<", "$$len", "$$)", "\u2581{"], ["\u2581System.arraycopy", "$$(buffer", "$$,", "\u25810,", "\u2581b,", "\u2581offset,", "\u2581buffer", "$$Length", "$$)", "$$;"], ["\u2581throw", "\u2581new", "\u2581E", "$$OF", "$$Exception(\"", "$$read", "\u2581p", "$$ast", "\u2581E", "$$OF", "$$:", "\u2581\"", "\u2581+", "\u2581this", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581System.arraycopy", "$$(buffer", "$$,", "\u25810,", "\u2581b,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581buffer", "$$Position", "$$=", "$$len", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581long", "\u2581a", "$$fter", "\u2581=", "\u2581buffer", "$$Start", "$$+", "$$buffer", "$$Position", "$$+", "$$len", "$$;"], ["\u2581if(", "$$af", "$$ter", "\u2581>", "\u2581length", "$$())", "$$throw", "\u2581new", "\u2581E", "$$OF", "$$Exception(\"", "$$read", "\u2581p", "$$ast", "\u2581E", "$$OF", "$$:", "\u2581\"", "\u2581+", "\u2581this", "$$)", "$$;"], ["\u2581read", "$$Internal", "$$(b,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581buffer", "$$Start", "\u2581=", "\u2581a", "$$fter", "$$;"], ["\u2581buffer", "$$Position", "\u2581=", "\u25810;"], ["\u2581buffer", "$$Length", "\u2581=", "\u25810;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual TagQueueResponse TagQueue(TagQueueRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = TagQueueRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = TagQueueResponseUnmarshaller.Instance;\n    return Invoke<TagQueueResponse>(request, options);\n}\n", "java": "public TagQueueResult tagQueue(TagQueueRequest request) {\n    request = beforeClientExecution(request);\n    return executeTagQueue(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Tag", "$$Queue", "$$Response", "\u2581", "$$Tag", "$$Queue", "$$(", "$$Tag", "$$Queue", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581", "$$Tag", "$$Queue", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581", "$$Tag", "$$Queue", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Tag", "$$Queue", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Tag", "$$Queue", "$$Result", "\u2581tag", "$$Queue", "$$(", "$$Tag", "$$Queue", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Tag", "$$Queue", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Remove() {\n    throw new NotSupportedException();\n}\n", "java": "public void remove() {\n    throw new UnsupportedOperationException();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Remove", "$$()", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Not", "$$Supported", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581remove", "$$()", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Un", "$$supported", "$$Operation", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ModifyCacheSubnetGroupResponse ModifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ModifyCacheSubnetGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ModifyCacheSubnetGroupResponseUnmarshaller.Instance;\n    return Invoke<ModifyCacheSubnetGroupResponse>(request, options);\n}\n", "java": "public CacheSubnetGroup modifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeModifyCacheSubnetGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Modify", "$$Cache", "$$SubnetGroup", "$$Response", "\u2581Modify", "$$Cache", "$$SubnetGroup", "$$(Modify", "$$Cache", "$$SubnetGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Modify", "$$Cache", "$$SubnetGroup", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Modify", "$$Cache", "$$SubnetGroup", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Modify", "$$Cache", "$$SubnetGroup", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581C", "$$ache", "$$SubnetGroup", "\u2581modify", "$$Cache", "$$SubnetGroup", "$$(Modify", "$$Cache", "$$SubnetGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeModify", "$$Cache", "$$SubnetGroup", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void SetParams(string @params) {\n    base.SetParams(@params);\n    culture = \"\";\n    string ignore;\n    StringTokenizer st = new StringTokenizer(@params, \",\");\n    if (st.MoveNext())culture = st.Current;\n    if (st.MoveNext())culture += \"-\" + st.Current;\n    if (st.MoveNext())ignore = st.Current;\n}\n", "java": "public void setParams(String params) {\n    super.setParams(params);\n    language = country = variant = \"\";\n    StringTokenizer st = new StringTokenizer(params, \",\");\n    if (st.hasMoreTokens())language = st.nextToken();\n    if (st.hasMoreTokens())country = st.nextToken();\n    if (st.hasMoreTokens())variant = st.nextToken();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Set", "$$Param", "$$s(", "$$string", "\u2581@", "$$param", "$$s)", "\u2581{"], ["\u2581base", "$$.Set", "$$Param", "$$s(", "$$@", "$$param", "$$s)", "$$;"], ["\u2581c", "$$ulture", "\u2581=", "\u2581\"", "$$\"", "$$;"], ["\u2581string", "\u2581i", "$$gn", "$$ore", "$$;"], ["\u2581String", "$$Token", "$$izer", "\u2581st", "\u2581=", "\u2581new", "\u2581String", "$$Token", "$$iz", "$$er(", "$$@", "$$param", "$$s,", "\u2581\",", "$$\")", "$$;"], ["\u2581if", "\u2581(", "$$st", "$$.", "$$Mo", "$$ve", "$$Next())", "$$c", "$$ulture", "\u2581=", "\u2581st", "$$.C", "$$urrent", "$$;"], ["\u2581if", "\u2581(", "$$st", "$$.", "$$Mo", "$$ve", "$$Next())", "$$c", "$$ulture", "\u2581+=", "\u2581\"", "$$-", "$$\"", "\u2581+", "\u2581st", "$$.C", "$$urrent", "$$;"], ["\u2581if", "\u2581(", "$$st", "$$.", "$$Mo", "$$ve", "$$Next())", "$$ign", "$$ore", "\u2581=", "\u2581st", "$$.C", "$$urrent", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Param", "$$s(", "$$String", "\u2581par", "$$am", "$$s)", "\u2581{"], ["\u2581super.", "$$set", "$$Param", "$$s(", "$$param", "$$s)", "$$;"], ["\u2581l", "$$ang", "$$u", "$$age", "\u2581=", "\u2581count", "$$ry", "\u2581=", "\u2581var", "$$iant", "\u2581=", "\u2581\"", "$$\"", "$$;"], ["\u2581String", "$$Token", "$$izer", "\u2581st", "\u2581=", "\u2581new", "\u2581String", "$$Token", "$$iz", "$$er(", "$$param", "$$s,", "\u2581\",", "$$\")", "$$;"], ["\u2581if", "\u2581(", "$$st", "$$.has", "$$M", "$$ore", "$$Token", "$$s", "$$())", "$$lan", "$$g", "$$u", "$$age", "\u2581=", "\u2581st", "$$.next", "$$Token", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$st", "$$.has", "$$M", "$$ore", "$$Token", "$$s", "$$())", "$$count", "$$ry", "\u2581=", "\u2581st", "$$.next", "$$Token", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$st", "$$.has", "$$M", "$$ore", "$$Token", "$$s", "$$())", "$$v", "$$ariant", "\u2581=", "\u2581st", "$$.next", "$$Token", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteDocumentationVersionResponse DeleteDocumentationVersion(DeleteDocumentationVersionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteDocumentationVersionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteDocumentationVersionResponseUnmarshaller.Instance;\n    return Invoke<DeleteDocumentationVersionResponse>(request, options);\n}\n", "java": "public DeleteDocumentationVersionResult deleteDocumentationVersion(DeleteDocumentationVersionRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteDocumentationVersion(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Documentation", "$$Version", "$$Response", "\u2581Delete", "$$Documentation", "$$Version", "$$(Delete", "$$Documentation", "$$Version", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Documentation", "$$Version", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Documentation", "$$Version", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Documentation", "$$Version", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Documentation", "$$Version", "$$Result", "\u2581delete", "$$Documentation", "$$Version", "$$(Delete", "$$Documentation", "$$Version", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Documentation", "$$Version", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Equals(object obj) {\n    if (!(obj is FacetLabel)) {\n        return false;\n    }\n    FacetLabel other = (FacetLabel)obj;\n    if (Length != other.Length) {\n        return false;\n    }\n    for (int i = Length - 1; i >= 0; i--) {\n        if (!Components[i].Equals(other.Components[i], StringComparison.Ordinal)) {\n            return false;\n        }\n    }\n    return true;\n}\n", "java": "public boolean equals(Object obj) {\n    if (!(obj instanceof FacetLabel)) {\n        return false;\n    }\n    FacetLabel other = (FacetLabel) obj;\n    if (length != other.length) {\n        return false;\n    }\n    for (int i = length - 1; i >= 0; i--) {\n        if (!components[i].equals(other.components[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Equals(object", "\u2581obj)", "\u2581{"], ["\u2581if", "\u2581(!(o", "$$bj", "\u2581is", "\u2581F", "$$acet", "$$Label", "$$))", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581F", "$$acet", "$$Label", "\u2581other", "\u2581=", "\u2581(", "$$Facet", "$$Label", "$$)", "$$obj", "$$;"], ["\u2581if", "\u2581(", "$$Length", "\u2581!=", "\u2581other.", "$$Length", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u2581", "$$Length", "\u2581-", "\u25811", "$$;", "\u2581i", "\u2581>=", "\u25810;", "\u2581i", "$$--", "$$)", "\u2581{"], ["\u2581if", "\u2581(!", "$$Component", "$$s[i]", "$$.Equals(", "$$other.", "$$Component", "$$s[i]", "$$,", "\u2581StringComparison.Ordinal", "$$))", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581equals(Object", "\u2581obj)", "\u2581{"], ["\u2581if", "\u2581(!(o", "$$bj", "\u2581instanceof", "\u2581F", "$$acet", "$$Label", "$$))", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581F", "$$acet", "$$Label", "\u2581other", "\u2581=", "\u2581(", "$$Facet", "$$Label", "$$)", "\u2581obj", "$$;"], ["\u2581if", "\u2581(", "$$length", "\u2581!=", "\u2581other.", "$$length", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u2581length", "\u2581-", "\u25811", "$$;", "\u2581i", "\u2581>=", "\u25810;", "\u2581i", "$$--", "$$)", "\u2581{"], ["\u2581if", "\u2581(!", "$$com", "$$ponent", "$$s[i]", "$$.equals(", "$$other.", "$$com", "$$ponent", "$$s[i]", "$$))", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetInstanceAccessDetailsResponse GetInstanceAccessDetails(GetInstanceAccessDetailsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetInstanceAccessDetailsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetInstanceAccessDetailsResponseUnmarshaller.Instance;\n    return Invoke<GetInstanceAccessDetailsResponse>(request, options);\n}\n", "java": "public GetInstanceAccessDetailsResult getInstanceAccessDetails(GetInstanceAccessDetailsRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetInstanceAccessDetails(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Instance", "$$Access", "$$Detail", "$$sResponse", "\u2581Get", "$$Instance", "$$Access", "$$Detail", "$$s(Get", "$$Instance", "$$Access", "$$Detail", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Instance", "$$Access", "$$Detail", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Instance", "$$Access", "$$Detail", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Instance", "$$Access", "$$Detail", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Instance", "$$Access", "$$Detail", "$$sResult", "\u2581get", "$$Instance", "$$Access", "$$Detail", "$$s(Get", "$$Instance", "$$Access", "$$Detail", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Instance", "$$Access", "$$Detail", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public HSSFPolygon CreatePolygon(HSSFChildAnchor anchor) {\n    HSSFPolygon shape = new HSSFPolygon(this, anchor);\n    shape.Parent = this;\n    shape.Anchor = anchor;\n    shapes.Add(shape);\n    OnCreate(shape);\n    return shape;\n}\n", "java": "public HSSFPolygon createPolygon(HSSFChildAnchor anchor) {\n    HSSFPolygon shape = new HSSFPolygon(this, anchor);\n    shape.setParent(this);\n    shape.setAnchor(anchor);\n    shapes.add(shape);\n    onCreate(shape);\n    return shape;\n}\n", "cs_t": [["\u2581public", "\u2581HSSF", "$$P", "$$ol", "$$y", "$$g", "$$on", "\u2581Create", "$$P", "$$ol", "$$y", "$$g", "$$on", "$$(HSSF", "$$Child", "$$Anchor", "\u2581anchor", "$$)", "\u2581{"], ["\u2581HSSF", "$$P", "$$ol", "$$y", "$$g", "$$on", "\u2581shape", "\u2581=", "\u2581new", "\u2581HSSF", "$$P", "$$ol", "$$y", "$$g", "$$on", "$$(this,", "\u2581anchor", "$$)", "$$;"], ["\u2581shape", "$$.", "$$Parent", "\u2581=", "\u2581this", "$$;"], ["\u2581shape", "$$.A", "$$n", "$$chor", "\u2581=", "\u2581anchor", "$$;"], ["\u2581sh", "$$ap", "$$es", "$$.Add(", "$$shape", "$$)", "$$;"], ["\u2581", "$$On", "$$Create", "$$(", "$$shape", "$$)", "$$;"], ["\u2581return", "\u2581shape", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581HSSF", "$$P", "$$ol", "$$y", "$$g", "$$on", "\u2581create", "$$P", "$$ol", "$$y", "$$g", "$$on", "$$(HSSF", "$$Child", "$$Anchor", "\u2581anchor", "$$)", "\u2581{"], ["\u2581HSSF", "$$P", "$$ol", "$$y", "$$g", "$$on", "\u2581shape", "\u2581=", "\u2581new", "\u2581HSSF", "$$P", "$$ol", "$$y", "$$g", "$$on", "$$(this,", "\u2581anchor", "$$)", "$$;"], ["\u2581shape", "$$.set", "$$Parent", "$$(this", "$$)", "$$;"], ["\u2581shape", "$$.set", "$$Anchor", "$$(", "$$an", "$$chor", "$$)", "$$;"], ["\u2581sh", "$$ap", "$$es", "$$.add(", "$$shape", "$$)", "$$;"], ["\u2581on", "$$Create", "$$(", "$$shape", "$$)", "$$;"], ["\u2581return", "\u2581shape", "$$;"], ["\u2581}"]]}, {"cs": "public String GetSheetName(int sheetIndex) {\n    return GetBoundSheetRec(sheetIndex).Sheetname;\n}\n", "java": "public String getSheetName(int sheetIndex) {\n    return getBoundSheetRec(sheetIndex).getSheetname();\n}\n", "cs_t": [["\u2581public", "\u2581String", "\u2581Get", "$$SheetName", "$$(int", "\u2581sheet", "$$Index)", "\u2581{"], ["\u2581return", "\u2581Get", "$$Bound", "$$Sheet", "$$Rec", "$$(", "$$sheet", "$$Index)", "$$.", "$$Sheet", "$$name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$SheetName", "$$(int", "\u2581sheet", "$$Index)", "\u2581{"], ["\u2581return", "\u2581get", "$$Bound", "$$Sheet", "$$Rec", "$$(", "$$sheet", "$$Index)", "$$.get", "$$Sheet", "$$name", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetDashboardResponse GetDashboard(GetDashboardRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetDashboardRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetDashboardResponseUnmarshaller.Instance;\n    return Invoke<GetDashboardResponse>(request, options);\n}\n", "java": "public GetDashboardResult getDashboard(GetDashboardRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetDashboard(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Dashboard", "$$Response", "\u2581Get", "$$Dash", "$$bo", "$$ar", "$$d(", "$$Get", "$$Dashboard", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Dashboard", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Dashboard", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Dashboard", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Dashboard", "$$Result", "\u2581get", "$$Dash", "$$bo", "$$ar", "$$d(", "$$Get", "$$Dashboard", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Dashboard", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual AssociateSigninDelegateGroupsWithAccountResponse AssociateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = AssociateSigninDelegateGroupsWithAccountRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = AssociateSigninDelegateGroupsWithAccountResponseUnmarshaller.Instance;\n    return Invoke<AssociateSigninDelegateGroupsWithAccountResponse>(request, options);\n}\n", "java": "public AssociateSigninDelegateGroupsWithAccountResult associateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request) {\n    request = beforeClientExecution(request);\n    return executeAssociateSigninDelegateGroupsWithAccount(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Associate", "$$Sign", "$$in", "$$De", "$$legate", "$$Group", "$$sWith", "$$Account", "$$Response", "\u2581Associate", "$$Sign", "$$in", "$$De", "$$legate", "$$Group", "$$sWith", "$$Account", "$$(", "$$Associate", "$$Sign", "$$in", "$$De", "$$legate", "$$Group", "$$sWith", "$$Account", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Associate", "$$Sign", "$$in", "$$De", "$$legate", "$$Group", "$$sWith", "$$Account", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Associate", "$$Sign", "$$in", "$$De", "$$legate", "$$Group", "$$sWith", "$$Account", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Associate", "$$Sign", "$$in", "$$De", "$$legate", "$$Group", "$$sWith", "$$Account", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Associate", "$$Sign", "$$in", "$$De", "$$legate", "$$Group", "$$sWith", "$$Account", "$$Result", "\u2581", "$$associate", "$$Sign", "$$in", "$$De", "$$legate", "$$Group", "$$sWith", "$$Account", "$$(", "$$Associate", "$$Sign", "$$in", "$$De", "$$legate", "$$Group", "$$sWith", "$$Account", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Associate", "$$Sign", "$$in", "$$De", "$$legate", "$$Group", "$$sWith", "$$Account", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void AddMultipleBlanks(MulBlankRecord mbr) {\n    for (int j = 0; j < mbr.NumColumns; j++) {\n        BlankRecord br = new BlankRecord();\n        br.Column = j + mbr.FirstColumn;\n        br.Row = mbr.Row;\n        br.XFIndex = (mbr.GetXFAt(j));\n        InsertCell(br);\n    }\n}\n", "java": "public void addMultipleBlanks(MulBlankRecord mbr) {\n    for (int j = 0; j < mbr.getNumColumns(); j++) {\n        BlankRecord br = new BlankRecord();\n        br.setColumn(( short ) (j + mbr.getFirstColumn()));\n        br.setRow(mbr.getRow());\n        br.setXFIndex(mbr.getXFAt(j));\n        insertCell(br);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Add", "$$Multi", "$$p", "$$le", "$$Blank", "$$s(", "$$M", "$$ul", "$$Blank", "$$Record", "\u2581m", "$$b", "$$r", "$$)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581j", "\u2581=", "\u25810;", "\u2581j", "\u2581<", "\u2581m", "$$b", "$$r", "$$.N", "$$um", "$$Column", "$$s;", "\u2581j", "$$++)", "\u2581{"], ["\u2581B", "$$lank", "$$Record", "\u2581b", "$$r", "\u2581=", "\u2581new", "\u2581B", "$$lank", "$$Record", "$$()", "$$;"], ["\u2581b", "$$r", "$$.", "$$Column", "\u2581=", "\u2581j", "\u2581+", "\u2581m", "$$b", "$$r", "$$.", "$$FirstColumn", "$$;"], ["\u2581b", "$$r", "$$.", "$$Row", "\u2581=", "\u2581m", "$$b", "$$r", "$$.", "$$Row", "$$;"], ["\u2581b", "$$r", "$$.", "$$X", "$$F", "$$Index", "\u2581=", "\u2581(m", "$$b", "$$r", "$$.Get", "$$X", "$$F", "$$At(", "$$j", "$$))", "$$;"], ["\u2581In", "$$sert", "$$Cell", "$$(b", "$$r", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581add", "$$Multi", "$$p", "$$le", "$$Blank", "$$s(", "$$M", "$$ul", "$$Blank", "$$Record", "\u2581m", "$$b", "$$r", "$$)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581j", "\u2581=", "\u25810;", "\u2581j", "\u2581<", "\u2581m", "$$b", "$$r", "$$.get", "$$Num", "$$Column", "$$s()", "$$;", "\u2581j", "$$++)", "\u2581{"], ["\u2581B", "$$lank", "$$Record", "\u2581b", "$$r", "\u2581=", "\u2581new", "\u2581B", "$$lank", "$$Record", "$$()", "$$;"], ["\u2581b", "$$r", "$$.set", "$$Column", "$$((", "\u2581short", "\u2581)", "\u2581(", "$$j", "\u2581+", "\u2581m", "$$b", "$$r", "$$.get", "$$FirstColumn", "$$()))", "$$;"], ["\u2581b", "$$r", "$$.set", "$$Row", "$$(m", "$$b", "$$r", "$$.get", "$$Row", "$$())", "$$;"], ["\u2581b", "$$r", "$$.set", "$$X", "$$F", "$$Index", "$$(m", "$$b", "$$r", "$$.get", "$$X", "$$F", "$$At(", "$$j", "$$))", "$$;"], ["\u2581insert", "$$Cell", "$$(b", "$$r", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public static string quote(string @string) {\n    java.lang.StringBuilder sb = new java.lang.StringBuilder();\n    sb.append(\"\\\\Q\");\n    int apos = 0;\n    int k;\n    while ((k = @string.IndexOf(\"\\\\E\", apos)) >= 0) {\n        sb.append(Sharpen.StringHelper.Substring(@string, apos, k + 2)).append(\"\\\\\\\\E\\\\Q\");\n        apos = k + 2;\n    }\n    return sb.append(Sharpen.StringHelper.Substring(@string, apos)).append(\"\\\\E\").ToString();\n}\n", "java": "public static String quote(String string) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"\\\\Q\");\n    int apos = 0;\n    int k;\n    while ((k = string.indexOf(\"\\\\E\", apos)) >= 0) {\n        sb.append(string.substring(apos, k + 2)).append(\"\\\\\\\\E\\\\Q\");\n        apos = k + 2;\n    }\n    return sb.append(string.substring(apos)).append(\"\\\\E\").toString();\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581string", "\u2581qu", "$$ote", "$$(string", "\u2581@", "$$string", "$$)", "\u2581{"], ["\u2581java.lang.String", "$$Builder", "\u2581sb", "\u2581=", "\u2581new", "\u2581java.lang.String", "$$Builder", "$$()", "$$;"], ["\u2581sb.append(\"", "$$\\", "$$\\", "$$Q", "$$\")", "$$;"], ["\u2581int", "\u2581ap", "$$os", "\u2581=", "\u25810;"], ["\u2581int", "\u2581k", "$$;"], ["\u2581while", "\u2581((", "$$k", "\u2581=", "\u2581@", "$$string", "$$.", "$$Index", "$$Of", "$$(\"", "$$\\", "$$\\", "$$E", "$$\",", "\u2581ap", "$$os", "$$))", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581sb.append(", "$$Sh", "$$arpen.", "$$String", "$$H", "$$el", "$$per", "$$.Sub", "$$string(", "$$@", "$$string", "$$,", "\u2581ap", "$$o", "$$s,", "\u2581k", "\u2581+", "\u25812", "$$))", "$$.append(\"", "$$\\", "$$\\", "$$\\", "$$\\", "$$E", "$$\\", "$$\\", "$$Q", "$$\")", "$$;"], ["\u2581ap", "$$os", "\u2581=", "\u2581k", "\u2581+", "\u25812", "$$;"], ["\u2581}"], ["\u2581return", "\u2581sb.append(", "$$Sh", "$$arpen.", "$$String", "$$H", "$$el", "$$per", "$$.Sub", "$$string(", "$$@", "$$string", "$$,", "\u2581ap", "$$os", "$$))", "$$.append(\"", "$$\\", "$$\\", "$$E", "$$\")", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581String", "\u2581qu", "$$ote", "$$(String", "\u2581string", "$$)", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581sb.append(\"", "$$\\", "$$\\", "$$Q", "$$\")", "$$;"], ["\u2581int", "\u2581ap", "$$os", "\u2581=", "\u25810;"], ["\u2581int", "\u2581k", "$$;"], ["\u2581while", "\u2581((", "$$k", "\u2581=", "\u2581string", "$$.", "$$index", "$$Of", "$$(\"", "$$\\", "$$\\", "$$E", "$$\",", "\u2581ap", "$$os", "$$))", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581sb.append(", "$$string", "$$.sub", "$$string(", "$$ap", "$$o", "$$s,", "\u2581k", "\u2581+", "\u25812", "$$))", "$$.append(\"", "$$\\", "$$\\", "$$\\", "$$\\", "$$E", "$$\\", "$$\\", "$$Q", "$$\")", "$$;"], ["\u2581ap", "$$os", "\u2581=", "\u2581k", "\u2581+", "\u25812", "$$;"], ["\u2581}"], ["\u2581return", "\u2581sb.append(", "$$string", "$$.sub", "$$string(", "$$ap", "$$os", "$$))", "$$.append(\"", "$$\\", "$$\\", "$$E", "$$\")", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.ByteBuffer putInt(int value) {\n    throw new java.nio.ReadOnlyBufferException();\n}\n", "java": "public ByteBuffer putInt(int value) {\n    throw new ReadOnlyBufferException();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.ByteBuffer", "\u2581put", "$$Int", "$$(int", "\u2581value)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581java.nio.Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ByteBuffer", "\u2581put", "$$Int", "$$(int", "\u2581value)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public ArrayPtg(Object[][] values2d) {\n    int nColumns = values2d[0].Length;\n    int nRows = values2d.Length;\n    _nColumns = (short)nColumns;\n    _nRows = (short)nRows;\n    Object[] vv = new Object[_nColumns * _nRows];\n    for (int r = 0; r < nRows; r++) {\n        Object[] rowData = values2d[r];\n        for (int c = 0; c < nColumns; c++) {\n            vv[GetValueIndex(c, r)] = rowData[c];\n        }\n    }\n    _arrayValues = vv;\n    _reserved0Int = 0;\n    _reserved1Short = 0;\n    _reserved2Byte = 0;\n}\n", "java": "public ArrayPtg(Object[][] values2d) {\n    int nColumns = values2d[0].length;\n    int nRows = values2d.length;\n    _nColumns = (short) nColumns;\n    _nRows = (short) nRows;\n    Object[] vv = new Object[_nColumns * _nRows];\n    for (int r=0; r<nRows; r++) {\n        Object[] rowData = values2d[r];\n        for (int c=0; c<nColumns; c++) {\n            vv[getValueIndex(c, r)] = rowData[c];\n        }\n    }\n    _arrayValues = vv;\n    _reserved0Int = 0;\n    _reserved1Short = 0;\n    _reserved2Byte = 0;\n}\n", "cs_t": [["\u2581public", "\u2581Array", "$$Ptg", "$$(Object", "$$[]", "$$[]", "\u2581values", "$$2", "$$d", "$$)", "\u2581{"], ["\u2581int", "\u2581n", "$$Column", "$$s", "\u2581=", "\u2581values", "$$2", "$$d", "$$[0]", "$$.Length;"], ["\u2581int", "\u2581n", "$$Row", "$$s", "\u2581=", "\u2581values", "$$2", "$$d", "$$.Length;"], ["\u2581_", "$$n", "$$Column", "$$s", "\u2581=", "\u2581(short)", "$$n", "$$Column", "$$s;"], ["\u2581_", "$$n", "$$Row", "$$s", "\u2581=", "\u2581(short)", "$$n", "$$Row", "$$s;"], ["\u2581Object", "$$[]", "\u2581v", "$$v", "\u2581=", "\u2581new", "\u2581Object", "$$[", "$$_", "$$n", "$$Column", "$$s", "\u2581*", "\u2581_", "$$n", "$$Row", "$$s", "$$]", "$$;"], ["\u2581for", "\u2581(int", "\u2581r", "\u2581=", "\u25810;", "\u2581r", "\u2581<", "\u2581n", "$$Row", "$$s;", "\u2581r", "$$++)", "\u2581{"], ["\u2581Object", "$$[]", "\u2581row", "$$Data", "\u2581=", "\u2581values", "$$2", "$$d", "$$[", "$$r", "$$]", "$$;"], ["\u2581for", "\u2581(int", "\u2581c", "\u2581=", "\u25810;", "\u2581c", "\u2581<", "\u2581n", "$$Column", "$$s;", "\u2581c", "$$++)", "\u2581{"], ["\u2581v", "$$v", "$$[", "$$Get", "$$Value", "$$Index", "$$(c", "$$,", "\u2581r", "$$)", "$$]", "\u2581=", "\u2581row", "$$Data", "$$[", "$$c", "$$]", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581_", "$$array", "$$Values", "\u2581=", "\u2581v", "$$v", "$$;"], ["\u2581_", "$$reserved", "$$0", "$$Int", "\u2581=", "\u25810;"], ["\u2581_", "$$reserved", "$$1", "$$Short", "\u2581=", "\u25810;"], ["\u2581_", "$$reserved", "$$2", "$$Byte", "\u2581=", "\u25810;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Array", "$$Ptg", "$$(Object", "$$[]", "$$[]", "\u2581values", "$$2", "$$d", "$$)", "\u2581{"], ["\u2581int", "\u2581n", "$$Column", "$$s", "\u2581=", "\u2581values", "$$2", "$$d", "$$[0]", "$$.length;"], ["\u2581int", "\u2581n", "$$Row", "$$s", "\u2581=", "\u2581values", "$$2", "$$d", "$$.length;"], ["\u2581_", "$$n", "$$Column", "$$s", "\u2581=", "\u2581(short)", "\u2581n", "$$Column", "$$s;"], ["\u2581_", "$$n", "$$Row", "$$s", "\u2581=", "\u2581(short)", "\u2581n", "$$Row", "$$s;"], ["\u2581Object", "$$[]", "\u2581v", "$$v", "\u2581=", "\u2581new", "\u2581Object", "$$[", "$$_", "$$n", "$$Column", "$$s", "\u2581*", "\u2581_", "$$n", "$$Row", "$$s", "$$]", "$$;"], ["\u2581for", "\u2581(int", "\u2581r", "$$=0", "$$;", "\u2581r", "$$<", "$$n", "$$Row", "$$s;", "\u2581r", "$$++)", "\u2581{"], ["\u2581Object", "$$[]", "\u2581row", "$$Data", "\u2581=", "\u2581values", "$$2", "$$d", "$$[", "$$r", "$$]", "$$;"], ["\u2581for", "\u2581(int", "\u2581c", "$$=0", "$$;", "\u2581c", "$$<", "$$n", "$$Column", "$$s;", "\u2581c", "$$++)", "\u2581{"], ["\u2581v", "$$v", "$$[", "$$get", "$$Value", "$$Index", "$$(c", "$$,", "\u2581r", "$$)", "$$]", "\u2581=", "\u2581row", "$$Data", "$$[", "$$c", "$$]", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581_", "$$array", "$$Values", "\u2581=", "\u2581v", "$$v", "$$;"], ["\u2581_", "$$reserved", "$$0", "$$Int", "\u2581=", "\u25810;"], ["\u2581_", "$$reserved", "$$1", "$$Short", "\u2581=", "\u25810;"], ["\u2581_", "$$reserved", "$$2", "$$Byte", "\u2581=", "\u25810;"], ["\u2581}"]]}, {"cs": "public virtual GetIceServerConfigResponse GetIceServerConfig(GetIceServerConfigRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetIceServerConfigRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetIceServerConfigResponseUnmarshaller.Instance;\n    return Invoke<GetIceServerConfigResponse>(request, options);\n}\n", "java": "public GetIceServerConfigResult getIceServerConfig(GetIceServerConfigRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetIceServerConfig(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$I", "$$ce", "$$Server", "$$Config", "$$Response", "\u2581Get", "$$I", "$$ce", "$$Server", "$$Config", "$$(Get", "$$I", "$$ce", "$$Server", "$$Config", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$I", "$$ce", "$$Server", "$$Config", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$I", "$$ce", "$$Server", "$$Config", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$I", "$$ce", "$$Server", "$$Config", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$I", "$$ce", "$$Server", "$$Config", "$$Result", "\u2581get", "$$I", "$$ce", "$$Server", "$$Config", "$$(Get", "$$I", "$$ce", "$$Server", "$$Config", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$I", "$$ce", "$$Server", "$$Config", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder sb = new StringBuilder(64);\n    sb.Append(GetType().Name).Append(\" [\");\n    sb.Append(GetValueAsString());\n    sb.Append(\"]\");\n    return sb.ToString();\n}\n", "java": "public String toString() {\n    return getClass().getName() + \" [\" +getValueAsString() +\"]\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder(", "$$64", "$$)", "$$;"], ["\u2581sb.Append(", "$$Get", "$$Type().", "$$Name)", "$$.Append(\"", "\u2581[", "$$\")", "$$;"], ["\u2581sb.Append(", "$$Get", "$$Value", "$$As", "$$String()", "$$)", "$$;"], ["\u2581sb.Append(\"", "$$]", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581get", "$$Class().get", "$$Name()", "\u2581+", "\u2581\"", "\u2581[", "$$\"", "\u2581+", "$$get", "$$Value", "$$As", "$$String()", "\u2581+\"", "$$]", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString(string field) {\n    return \"ToChildBlockJoinQuery (\" + _parentQuery + \")\";\n}\n", "java": "public String toString(String field) {\n    return \"ToChildBlockJoinQuery (\"+parentQuery.toString()+\")\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581To", "$$String", "$$(string", "\u2581field)", "\u2581{"], ["\u2581return", "\u2581\"", "$$To", "$$Child", "$$Block", "$$Jo", "$$in", "$$Query", "\u2581(\"", "\u2581+", "\u2581_", "$$parent", "$$Query", "\u2581+", "\u2581\")", "$$\"", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581to", "$$String(String", "\u2581field)", "\u2581{"], ["\u2581return", "\u2581\"", "$$To", "$$Child", "$$Block", "$$Jo", "$$in", "$$Query", "\u2581(\"", "$$+", "$$parent", "$$Query", "$$.toString()", "$$+", "$$\")", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public void IncRef() {\n    refCount.IncrementAndGet();\n}\n", "java": "public final void incRef() {\n    refCount.incrementAndGet();\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581In", "$$c", "$$Ref", "$$()", "\u2581{"], ["\u2581ref", "$$Count", "$$.", "$$Increment", "$$And", "$$Get", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581void", "\u2581in", "$$c", "$$Ref", "$$()", "\u2581{"], ["\u2581ref", "$$Count", "$$.", "$$in", "$$crement", "$$And", "$$Get", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateConfigurationSetSendingEnabledResponse UpdateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateConfigurationSetSendingEnabledRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateConfigurationSetSendingEnabledResponseUnmarshaller.Instance;\n    return Invoke<UpdateConfigurationSetSendingEnabledResponse>(request, options);\n}\n", "java": "public UpdateConfigurationSetSendingEnabledResult updateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateConfigurationSetSendingEnabled(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$ConfigurationSet", "$$Send", "$$ing", "$$Enabled", "$$Response", "\u2581Update", "$$ConfigurationSet", "$$Send", "$$ing", "$$Enable", "$$d(", "$$Update", "$$ConfigurationSet", "$$Send", "$$ing", "$$Enabled", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$ConfigurationSet", "$$Send", "$$ing", "$$Enabled", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$ConfigurationSet", "$$Send", "$$ing", "$$Enabled", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$ConfigurationSet", "$$Send", "$$ing", "$$Enabled", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$ConfigurationSet", "$$Send", "$$ing", "$$Enabled", "$$Result", "\u2581update", "$$ConfigurationSet", "$$Send", "$$ing", "$$Enable", "$$d(", "$$Update", "$$ConfigurationSet", "$$Send", "$$ing", "$$Enabled", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$ConfigurationSet", "$$Send", "$$ing", "$$Enabled", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public int GetNextXBATChainOffset() {\n    return GetXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;\n}\n", "java": "public int getNextXBATChainOffset() {\n    return getXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581Get", "$$Next", "$$X", "$$B", "$$AT", "$$Ch", "$$a", "$$in", "$$Offset", "$$()", "\u2581{"], ["\u2581return", "\u2581Get", "$$X", "$$B", "$$AT", "$$Ent", "$$ries", "$$Per", "$$Block", "$$()", "\u2581*", "\u2581LittleEndian", "$$Con", "$$st", "$$s.", "$$IN", "$$T_", "$$SIZE", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$Next", "$$X", "$$B", "$$AT", "$$Ch", "$$a", "$$in", "$$Offset", "$$()", "\u2581{"], ["\u2581return", "\u2581get", "$$X", "$$B", "$$AT", "$$Ent", "$$ries", "$$Per", "$$Block", "$$()", "\u2581*", "\u2581LittleEndian", "$$Con", "$$st", "$$s.", "$$IN", "$$T_", "$$SIZE", "$$;"], ["\u2581}"]]}, {"cs": "public void multiplyByPowerOfTen(int pow10) {\n    TenPower tp = TenPower.GetInstance(Math.Abs(pow10));\n    if (pow10 < 0) {\n        mulShift(tp._divisor, tp._divisorShift);\n    }\n    else {\n        mulShift(tp._multiplicand, tp._multiplierShift);\n    }\n}\n", "java": "public void multiplyByPowerOfTen(int pow10) {\n    TenPower tp = TenPower.getInstance(Math.abs(pow10));\n    if (pow10 < 0) {\n        mulShift(tp._divisor, tp._divisorShift);\n    }\n    else {\n        mulShift(tp._multiplicand, tp._multiplierShift);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581m", "$$ulti", "$$ply", "$$By", "$$Po", "$$wer", "$$Of", "$$T", "$$en", "$$(int", "\u2581po", "$$w", "$$1", "$$0)", "\u2581{"], ["\u2581T", "$$en", "$$Po", "$$wer", "\u2581t", "$$p", "\u2581=", "\u2581T", "$$en", "$$Po", "$$w", "$$er.", "$$Get", "$$Instance", "$$(", "$$M", "$$ath", "$$.A", "$$b", "$$s(", "$$po", "$$w", "$$10", "$$))", "$$;"], ["\u2581if", "\u2581(", "$$po", "$$w", "$$10", "\u2581<", "\u25810)", "\u2581{"], ["\u2581m", "$$ul", "$$Sh", "$$ift", "$$(t", "$$p", "$$._", "$$d", "$$i", "$$v", "$$is", "$$or", "$$,", "\u2581t", "$$p", "$$._", "$$d", "$$i", "$$v", "$$is", "$$or", "$$Sh", "$$ift", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581m", "$$ul", "$$Sh", "$$ift", "$$(t", "$$p", "$$._", "$$m", "$$ulti", "$$plic", "$$and", "$$,", "\u2581t", "$$p", "$$._", "$$m", "$$ulti", "$$p", "$$li", "$$er", "$$Sh", "$$ift", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581m", "$$ulti", "$$ply", "$$By", "$$Po", "$$wer", "$$Of", "$$T", "$$en", "$$(int", "\u2581po", "$$w", "$$1", "$$0)", "\u2581{"], ["\u2581T", "$$en", "$$Po", "$$wer", "\u2581t", "$$p", "\u2581=", "\u2581T", "$$en", "$$Po", "$$wer", "$$.get", "$$Instance", "$$(", "$$Math.", "$$ab", "$$s(", "$$po", "$$w", "$$10", "$$))", "$$;"], ["\u2581if", "\u2581(", "$$po", "$$w", "$$10", "\u2581<", "\u25810)", "\u2581{"], ["\u2581m", "$$ul", "$$Sh", "$$ift", "$$(t", "$$p", "$$._", "$$d", "$$i", "$$v", "$$is", "$$or", "$$,", "\u2581t", "$$p", "$$._", "$$d", "$$i", "$$v", "$$is", "$$or", "$$Sh", "$$ift", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581m", "$$ul", "$$Sh", "$$ift", "$$(t", "$$p", "$$._", "$$m", "$$ulti", "$$plic", "$$and", "$$,", "\u2581t", "$$p", "$$._", "$$m", "$$ulti", "$$p", "$$li", "$$er", "$$Sh", "$$ift", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    StringBuilder builder = new StringBuilder();\n    int length = this.Length;\n    builder.Append(Path.DirectorySeparatorChar);\n    for (int i = 0; i < length; i++) {\n        builder.Append(this.GetComponent(i));\n        if (i < (length - 1)) {\n            builder.Append(Path.DirectorySeparatorChar);\n        }\n    }\n    return builder.ToString();\n}\n", "java": "public String toString() {\n    final StringBuilder b = new StringBuilder();\n    final int          l = length();\n    b.append(File.separatorChar);\n    for (int i = 0; i < l; i++) {\n        b.append(getComponent(i));\n        if (i < l - 1) {\n            b.append(File.separatorChar);\n        }\n    }\n    return b.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581build", "$$er", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581int", "\u2581length", "\u2581=", "\u2581this.", "$$Length", "$$;"], ["\u2581build", "$$er", "$$.Append(", "$$Path", "$$.", "$$Directory", "$$Se", "$$parator", "$$Char", "$$)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581length", "$$;", "\u2581i++)", "\u2581{"], ["\u2581build", "$$er", "$$.Append(", "$$this", "$$.Get", "$$Component", "$$(i", "$$))", "$$;"], ["\u2581if", "\u2581(i", "\u2581<", "\u2581(", "$$length", "\u2581-", "\u25811", "$$))", "\u2581{"], ["\u2581build", "$$er", "$$.Append(", "$$Path", "$$.", "$$Directory", "$$Se", "$$parator", "$$Char", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581build", "$$er.", "$$To", "$$String()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581final", "\u2581StringBuilder", "\u2581b", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581final", "\u2581int", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581l", "\u2581=", "\u2581length", "$$()", "$$;"], ["\u2581b", "$$.append(", "$$File", "$$.se", "$$parator", "$$Char", "$$)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581l", "$$;", "\u2581i++)", "\u2581{"], ["\u2581b", "$$.append(", "$$get", "$$Component", "$$(i", "$$))", "$$;"], ["\u2581if", "\u2581(i", "\u2581<", "\u2581l", "\u2581-", "\u25811)", "\u2581{"], ["\u2581b", "$$.append(", "$$File", "$$.se", "$$parator", "$$Char", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581b", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public void withFetcher(ECSMetadataServiceCredentialsFetcher fetcher) {\n    this.fetcher = fetcher;\n    this.fetcher.SetRoleName(roleName);\n}\n", "java": "public InstanceProfileCredentialsProvider withFetcher(ECSMetadataServiceCredentialsFetcher fetcher) {\n    this.fetcher = fetcher;\n    this.fetcher.setRoleName(roleName);\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581w", "$$ith", "$$F", "$$etch", "$$er(", "$$EC", "$$S", "$$Metadata", "$$Service", "$$Credentials", "$$F", "$$et", "$$cher", "\u2581f", "$$et", "$$cher", "$$)", "\u2581{"], ["\u2581this.f", "$$et", "$$cher", "\u2581=", "\u2581f", "$$et", "$$cher", "$$;"], ["\u2581this.f", "$$etch", "$$er.", "$$Set", "$$Role", "$$Name(", "$$ro", "$$le", "$$Name)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Instance", "$$Profile", "$$Credentials", "$$Provider", "\u2581w", "$$ith", "$$F", "$$etch", "$$er(", "$$EC", "$$S", "$$Metadata", "$$Service", "$$Credentials", "$$F", "$$et", "$$cher", "\u2581f", "$$et", "$$cher", "$$)", "\u2581{"], ["\u2581this.f", "$$et", "$$cher", "\u2581=", "\u2581f", "$$et", "$$cher", "$$;"], ["\u2581this.f", "$$etch", "$$er.", "$$set", "$$Role", "$$Name(", "$$ro", "$$le", "$$Name)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetProgressMonitor(ProgressMonitor pm) {\n    progressMonitor = pm;\n}\n", "java": "public void setProgressMonitor(ProgressMonitor pm) {\n    progressMonitor = pm;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Progress", "$$Monitor", "$$(", "$$Progress", "$$Monitor", "\u2581p", "$$m", "$$)", "\u2581{"], ["\u2581pro", "$$gress", "$$Monitor", "\u2581=", "\u2581p", "$$m", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Progress", "$$Monitor", "$$(", "$$Progress", "$$Monitor", "\u2581p", "$$m", "$$)", "\u2581{"], ["\u2581pro", "$$gress", "$$Monitor", "\u2581=", "\u2581p", "$$m", "$$;"], ["\u2581}"]]}, {"cs": "public override void Reset() {\n    if (!First) {\n        ptr = 0;\n        if (!Eof) {\n            ParseEntry();\n        }\n    }\n}\n", "java": "public void reset() {\n    if (!first()) {\n        ptr = 0;\n        if (!eof())parseEntry();\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Reset", "$$()", "\u2581{"], ["\u2581if", "\u2581(!", "$$First", "$$)", "\u2581{"], ["\u2581ptr", "\u2581=", "\u25810;"], ["\u2581if", "\u2581(!", "$$E", "$$of", "$$)", "\u2581{"], ["\u2581Parse", "$$Entry", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581reset", "$$()", "\u2581{"], ["\u2581if", "\u2581(!", "$$first", "$$())", "\u2581{"], ["\u2581ptr", "\u2581=", "\u25810;"], ["\u2581if", "\u2581(!", "$$e", "$$of", "$$())", "$$parse", "$$Entry", "$$()", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public E previous() {\n    if (iterator.previousIndex() >= start) {\n        return iterator.previous();\n    }\n    throw new java.util.NoSuchElementException();\n}\n", "java": "public E previous() {\n    if (iterator.previousIndex() >= start) {\n        return iterator.previous();\n    }\n    throw new NoSuchElementException();\n}\n", "cs_t": [["\u2581public", "\u2581E", "\u2581pre", "$$vio", "$$u", "$$s()", "\u2581{"], ["\u2581if", "\u2581(i", "$$terator", "$$.", "$$pre", "$$vious", "$$Index", "$$()", "\u2581>=", "\u2581start", "$$)", "\u2581{"], ["\u2581return", "\u2581iterator", "$$.", "$$pre", "$$vio", "$$u", "$$s()", "$$;"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581java.util.", "$$No", "$$Su", "$$ch", "$$E", "$$lem", "$$entException", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581E", "\u2581pre", "$$vio", "$$u", "$$s()", "\u2581{"], ["\u2581if", "\u2581(i", "$$terator", "$$.", "$$pre", "$$vious", "$$Index", "$$()", "\u2581>=", "\u2581start", "$$)", "\u2581{"], ["\u2581return", "\u2581iterator", "$$.", "$$pre", "$$vio", "$$u", "$$s()", "$$;"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581N", "$$o", "$$Su", "$$ch", "$$E", "$$lem", "$$entException", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string GetNewPrefix() {\n    return this.newPrefix;\n}\n", "java": "public String getNewPrefix() {\n    return this.newPrefix;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581Get", "$$New", "$$Prefix", "$$()", "\u2581{"], ["\u2581return", "\u2581this.", "$$new", "$$Prefix", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$New", "$$Prefix", "$$()", "\u2581{"], ["\u2581return", "\u2581this.", "$$new", "$$Prefix", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int indexOfValue(int value) {\n    {\n        for (int i = 0; i < mSize; i++) {\n            if (mValues[i] == value) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n", "java": "public int indexOfValue(int value) {\n    for (int i = 0; i < mSize; i++)if (mValues[i] == value)return i;\n    return -1;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581index", "$$Of", "$$Value", "$$(int", "\u2581value)", "\u2581{"], ["\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581m", "$$Size", "$$;", "\u2581i++)", "\u2581{"], ["\u2581if", "\u2581(m", "$$Values", "$$[i]", "\u2581==", "\u2581value)", "\u2581{"], ["\u2581return", "\u2581i", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581index", "$$Of", "$$Value", "$$(int", "\u2581value)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581m", "$$Size", "$$;", "\u2581i++)", "$$if", "\u2581(m", "$$Values", "$$[i]", "\u2581==", "\u2581value)", "$$return", "\u2581i", "$$;"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"]]}, {"cs": "public IList<CharsRef> UniqueStems(char[] word, int length) {\n    IList<CharsRef> stems = Stem(word, length);\n    if (stems.Count < 2) {\n        return stems;\n    }\n    CharArraySet terms = new CharArraySet(\n#pragma warning disable 612, 618\nLuceneVersion.LUCENE_CURRENT, 8, dictionary.ignoreCase);\n#pragma warning restore 612, 618\nIList<CharsRef> deduped = new List<CharsRef>(); \n    foreach (CharsRef s in stems) {\n        if (!terms.Contains(s)) {\n            deduped.Add(s);\n            terms.Add(s);\n        }\n    }\n    return deduped;\n}\n", "java": "public List<CharsRef> uniqueStems(char word[], int length) {\n    List<CharsRef> stems = stem(word, length);\n    if (stems.size() < 2) {\n        return stems;\n    }\n    CharArraySet terms = new CharArraySet(8, dictionary.ignoreCase);\n    List<CharsRef> deduped = new ArrayList<>();\n    for (CharsRef s : stems) {\n        if (!terms.contains(s)) {\n            deduped.add(s);\n            terms.add(s);\n        }\n    }\n    return deduped;\n}\n", "cs_t": [["\u2581public", "\u2581IList<", "$$Char", "$$sRef", "$$>", "\u2581", "$$Uni", "$$qu", "$$e", "$$Stem", "$$s(", "$$char", "$$[]", "\u2581word", "$$,", "\u2581int", "\u2581length)", "\u2581{"], ["\u2581IList<", "$$Char", "$$sRef", "$$>", "\u2581s", "$$tem", "$$s", "\u2581=", "\u2581S", "$$tem", "$$(", "$$word", "$$,", "\u2581length)", "$$;"], ["\u2581if", "\u2581(s", "$$tem", "$$s.Count", "\u2581<", "\u25812)", "\u2581{"], ["\u2581return", "\u2581s", "$$tem", "$$s;"], ["\u2581}"], ["\u2581Char", "$$Array", "$$Set", "\u2581term", "$$s", "\u2581=", "\u2581new", "\u2581Char", "$$Array", "$$Set("], ["\u2581", "$$#", "$$p", "$$ra", "$$g", "$$ma", "\u2581w", "$$arn", "$$ing", "\u2581dis", "$$able", "\u25816", "$$1", "$$2,", "\u25816", "$$1", "$$8"], ["\u2581L", "$$ucene", "$$Version", "$$.", "$$LU", "$$C", "$$EN", "$$E_", "$$C", "$$UR", "$$RE", "$$N", "$$T", "$$,", "\u25818", "$$,", "\u2581d", "$$ictionary", "$$.", "$$ign", "$$oreCase", "$$)", "$$;"], ["\u2581", "$$#", "$$p", "$$ra", "$$g", "$$ma", "\u2581w", "$$arn", "$$ing", "\u2581r", "$$estore", "\u25816", "$$1", "$$2,", "\u25816", "$$1", "$$8"], ["\u2581IList<", "$$Char", "$$sRef", "$$>", "\u2581de", "$$d", "$$up", "$$ed", "\u2581=", "\u2581new", "\u2581List<", "$$Char", "$$sRef", "$$>", "$$()", "$$;"], ["\u2581foreach", "\u2581(", "$$Char", "$$sRef", "\u2581s", "\u2581in", "\u2581s", "$$tem", "$$s)", "\u2581{"], ["\u2581if", "\u2581(!", "$$term", "$$s.", "$$Contain", "$$s(", "$$s", "$$))", "\u2581{"], ["\u2581de", "$$d", "$$up", "$$ed", "$$.Add(", "$$s)", "$$;"], ["\u2581term", "$$s.Add(", "$$s)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581de", "$$d", "$$up", "$$ed", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List<", "$$Char", "$$sRef", "$$>", "\u2581un", "$$i", "$$qu", "$$e", "$$Stem", "$$s(", "$$char", "\u2581word", "$$[]", "$$,", "\u2581int", "\u2581length)", "\u2581{"], ["\u2581List<", "$$Char", "$$sRef", "$$>", "\u2581s", "$$tem", "$$s", "\u2581=", "\u2581s", "$$tem", "$$(", "$$word", "$$,", "\u2581length)", "$$;"], ["\u2581if", "\u2581(s", "$$tem", "$$s.size()", "\u2581<", "\u25812)", "\u2581{"], ["\u2581return", "\u2581s", "$$tem", "$$s;"], ["\u2581}"], ["\u2581Char", "$$Array", "$$Set", "\u2581term", "$$s", "\u2581=", "\u2581new", "\u2581Char", "$$Array", "$$Set(", "$$8", "$$,", "\u2581d", "$$ictionary", "$$.", "$$ign", "$$oreCase", "$$)", "$$;"], ["\u2581List<", "$$Char", "$$sRef", "$$>", "\u2581de", "$$d", "$$up", "$$ed", "\u2581=", "\u2581new", "\u2581ArrayList<", "$$>", "$$()", "$$;"], ["\u2581for", "\u2581(", "$$Char", "$$sRef", "\u2581s", "\u2581:", "\u2581s", "$$tem", "$$s)", "\u2581{"], ["\u2581if", "\u2581(!", "$$term", "$$s.", "$$con", "$$tain", "$$s(", "$$s", "$$))", "\u2581{"], ["\u2581de", "$$d", "$$up", "$$ed", "$$.add(", "$$s)", "$$;"], ["\u2581term", "$$s.add(", "$$s)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581de", "$$d", "$$up", "$$ed", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetGatewayResponsesResponse GetGatewayResponses(GetGatewayResponsesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetGatewayResponsesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetGatewayResponsesResponseUnmarshaller.Instance;\n    return Invoke<GetGatewayResponsesResponse>(request, options);\n}\n", "java": "public GetGatewayResponsesResult getGatewayResponses(GetGatewayResponsesRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetGatewayResponses(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Gateway", "$$Respon", "$$ses", "$$Response", "\u2581Get", "$$Gateway", "$$Respon", "$$ses", "$$(Get", "$$Gateway", "$$Respon", "$$ses", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Gateway", "$$Respon", "$$ses", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Gateway", "$$Respon", "$$ses", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Gateway", "$$Respon", "$$ses", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Gateway", "$$Respon", "$$ses", "$$Result", "\u2581get", "$$Gateway", "$$Respon", "$$ses", "$$(Get", "$$Gateway", "$$Respon", "$$ses", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Gateway", "$$Respon", "$$ses", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void SetPosition(long position) {\n    currentBlockIndex = (int)(position >> outerInstance.blockBits);\n    currentBlock = outerInstance.blocks[currentBlockIndex];\n    currentBlockUpto = (int)(position & outerInstance.blockMask);\n}\n", "java": "public void setPosition(long pos) {\n    currentBlockIndex = (int) (pos >> blockBits);\n    currentBlock = blocks[currentBlockIndex];\n    currentBlockUpto = (int) (pos & blockMask);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Set", "$$Position", "$$(long", "\u2581position", "$$)", "\u2581{"], ["\u2581current", "$$Block", "$$Index", "\u2581=", "\u2581(int)", "$$(", "$$position", "\u2581>>", "\u2581out", "$$erInstance", "$$.", "$$block", "$$Bit", "$$s)", "$$;"], ["\u2581current", "$$Block", "\u2581=", "\u2581out", "$$erInstance", "$$.", "$$block", "$$s[", "$$current", "$$Block", "$$Index", "$$]", "$$;"], ["\u2581current", "$$Block", "$$Upto", "\u2581=", "\u2581(int)", "$$(", "$$position", "\u2581&", "\u2581out", "$$erInstance", "$$.", "$$block", "$$M", "$$ask", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Position", "$$(long", "\u2581po", "$$s)", "\u2581{"], ["\u2581current", "$$Block", "$$Index", "\u2581=", "\u2581(int)", "\u2581(pos", "\u2581>>", "\u2581block", "$$Bit", "$$s)", "$$;"], ["\u2581current", "$$Block", "\u2581=", "\u2581blocks[", "$$current", "$$Block", "$$Index", "$$]", "$$;"], ["\u2581current", "$$Block", "$$Upto", "\u2581=", "\u2581(int)", "\u2581(pos", "\u2581&", "\u2581block", "$$M", "$$ask", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override long Skip(long n) {\n    int s = (int)Math.Min(Available(), Math.Max(0, n));\n    ptr += s;\n    return s;\n}\n", "java": "public long skip(long n) {\n    int s = (int) Math.min(available(), Math.max(0, n));\n    ptr += s;\n    return s;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581long", "\u2581S", "$$kip", "$$(long", "\u2581n", "$$)", "\u2581{"], ["\u2581int", "\u2581s", "\u2581=", "\u2581(int)", "$$Math.", "$$Min", "$$(", "$$Avail", "$$able", "$$(),", "\u2581Math.", "$$Max", "$$(", "$$0,", "\u2581n", "$$))", "$$;"], ["\u2581ptr", "\u2581+=", "\u2581s", "$$;"], ["\u2581return", "\u2581s", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581long", "\u2581skip", "$$(long", "\u2581n", "$$)", "\u2581{"], ["\u2581int", "\u2581s", "\u2581=", "\u2581(int)", "\u2581Math.", "$$min", "$$(", "$$avail", "$$able", "$$(),", "\u2581Math.", "$$max", "$$(", "$$0,", "\u2581n", "$$))", "$$;"], ["\u2581ptr", "\u2581+=", "\u2581s", "$$;"], ["\u2581return", "\u2581s", "$$;"], ["\u2581}"]]}, {"cs": "public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig) {\n    _bootstrapActionConfig = bootstrapActionConfig;\n}\n", "java": "public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig) {\n    setBootstrapActionConfig(bootstrapActionConfig);\n}\n", "cs_t": [["\u2581public", "\u2581Bo", "$$ot", "$$st", "$$rap", "$$Action", "$$Detail", "$$(", "$$Bo", "$$ot", "$$st", "$$rap", "$$Action", "$$Config", "\u2581bo", "$$ot", "$$st", "$$rap", "$$Action", "$$Config", "$$)", "\u2581{"], ["\u2581_", "$$boot", "$$st", "$$rap", "$$Action", "$$Config", "\u2581=", "\u2581bo", "$$ot", "$$st", "$$rap", "$$Action", "$$Config", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Bo", "$$ot", "$$st", "$$rap", "$$Action", "$$Detail", "$$(", "$$Bo", "$$ot", "$$st", "$$rap", "$$Action", "$$Config", "\u2581bo", "$$ot", "$$st", "$$rap", "$$Action", "$$Config", "$$)", "\u2581{"], ["\u2581set", "$$Bo", "$$ot", "$$st", "$$rap", "$$Action", "$$Config", "$$(bo", "$$ot", "$$st", "$$rap", "$$Action", "$$Config", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort(field_1_row);\n    out1.WriteShort(field_2_col);\n    out1.WriteShort(field_3_flags);\n    out1.WriteShort(field_4_shapeid);\n    out1.WriteShort(field_6_author.Length);\n    out1.WriteByte(field_5_hasMultibyte ? 0x01 : 0x00);\n    if (field_5_hasMultibyte) {\n        StringUtil.PutUnicodeLE(field_6_author, out1);\n    }\n    else {\n        StringUtil.PutCompressedUnicode(field_6_author, out1);\n    }\n    if (field_7_padding != null) {\n        out1.WriteByte(Convert.ToInt32(field_7_padding, CultureInfo.InvariantCulture));\n    }\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort(field_1_row);\n    out.writeShort(field_2_col);\n    out.writeShort(field_3_flags);\n    out.writeShort(field_4_shapeid);\n    out.writeShort(field_6_author.length());\n    out.writeByte(field_5_hasMultibyte ? 0x01 : 0x00);\n    if (field_5_hasMultibyte) {\n        StringUtil.putUnicodeLE(field_6_author, out);\n    }\n    else {\n        StringUtil.putCompressedUnicode(field_6_author, out);\n    }\n    if (field_7_padding != null) {\n        out.writeByte(field_7_padding.intValue());\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$field_1_", "$$row", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$field_2_", "$$col", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$field_3_", "$$flag", "$$s)", "$$;"], ["\u2581out1.WriteShort(", "$$field_4_", "$$shape", "$$id", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$field_", "$$6_", "$$a", "$$uthor", "$$.Length)", "$$;"], ["\u2581out1.WriteByte(", "$$field_", "$$5_", "$$has", "$$Multi", "$$byte", "\u2581?", "\u25810x0", "$$1", "\u2581:", "\u25810x00", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$field_", "$$5_", "$$has", "$$Multi", "$$byte", "$$)", "\u2581{"], ["\u2581StringUtil.", "$$Put", "$$Unicode", "$$LE", "$$(", "$$field_", "$$6_", "$$a", "$$uthor", "$$,", "\u2581out1)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581StringUtil.", "$$Put", "$$Comp", "$$ressed", "$$Unicode", "$$(", "$$field_", "$$6_", "$$a", "$$uthor", "$$,", "\u2581out1)", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$field_", "$$7_", "$$p", "$$add", "$$ing", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581out1.WriteByte(", "$$Con", "$$vert", "$$.To", "$$Int32", "$$(", "$$field_", "$$7_", "$$p", "$$add", "$$ing", "$$,", "\u2581C", "$$ulture", "$$Info.", "$$Inv", "$$ariant", "$$Culture", "$$))", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(", "$$field_1_", "$$row", "$$)", "$$;"], ["\u2581out.writeShort(", "$$field_2_", "$$col", "$$)", "$$;"], ["\u2581out.writeShort(", "$$field_3_", "$$flag", "$$s)", "$$;"], ["\u2581out.writeShort(", "$$field_4_", "$$shape", "$$id", "$$)", "$$;"], ["\u2581out.writeShort(", "$$field_", "$$6_", "$$a", "$$uthor", "$$.length", "$$())", "$$;"], ["\u2581out.writeByte(", "$$field_", "$$5_", "$$has", "$$Multi", "$$byte", "\u2581?", "\u25810x0", "$$1", "\u2581:", "\u25810x00", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$field_", "$$5_", "$$has", "$$Multi", "$$byte", "$$)", "\u2581{"], ["\u2581StringUtil.", "$$put", "$$Unicode", "$$LE", "$$(", "$$field_", "$$6_", "$$a", "$$uthor", "$$,", "\u2581out)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581StringUtil.", "$$put", "$$Comp", "$$ressed", "$$Unicode", "$$(", "$$field_", "$$6_", "$$a", "$$uthor", "$$,", "\u2581out)", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$field_", "$$7_", "$$p", "$$add", "$$ing", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581out.writeByte(", "$$field_", "$$7_", "$$p", "$$add", "$$ing", "$$.", "$$int", "$$Value", "$$())", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual int lastIndexOf(string @string) {\n    return lastIndexOf(@string, count);\n}\n", "java": "public int lastIndexOf(String string) {\n    return lastIndexOf(string, count);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581last", "$$Index", "$$Of", "$$(string", "\u2581@", "$$string", "$$)", "\u2581{"], ["\u2581return", "\u2581last", "$$Index", "$$Of(", "$$@", "$$string", "$$,", "\u2581count)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581last", "$$Index", "$$Of", "$$(String", "\u2581string", "$$)", "\u2581{"], ["\u2581return", "\u2581last", "$$Index", "$$Of", "$$(string", "$$,", "\u2581count)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool add(E @object) {\n    return addLastImpl(@object);\n}\n", "java": "public boolean add(E object) {\n    return addLastImpl(object);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581add(", "$$E", "\u2581@object)", "\u2581{"], ["\u2581return", "\u2581add", "$$Last", "$$Impl", "$$(@", "$$object", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581add(", "$$E", "\u2581object)", "\u2581{"], ["\u2581return", "\u2581add", "$$Last", "$$Impl", "$$(object", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void UnsetSection(string section, string subsection) {\n    ConfigSnapshot src;\n    ConfigSnapshot res;\n    do {\n        src = state.Get();\n        res = UnsetSection(src, section, subsection);\n    }\n    while (!state.CompareAndSet(src, res));\n}\n", "java": "public void unsetSection(String section, String subsection) {\n    ConfigSnapshot src, res;\n    do {\n        src = state.get();\n        res = unsetSection(src, section, subsection);\n    }\n    while (!state.compareAndSet(src, res));\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Un", "$$set", "$$Section", "$$(string", "\u2581se", "$$ction", "$$,", "\u2581string", "\u2581sub", "$$se", "$$ction", "$$)", "\u2581{"], ["\u2581", "$$Config", "$$Snapshot", "\u2581src", "$$;"], ["\u2581", "$$Config", "$$Snapshot", "\u2581res", "$$;"], ["\u2581do", "\u2581{"], ["\u2581src", "\u2581=", "\u2581state", "$$.Get", "$$()", "$$;"], ["\u2581res", "\u2581=", "\u2581Un", "$$set", "$$Section", "$$(src", "$$,", "\u2581se", "$$ction", "$$,", "\u2581sub", "$$se", "$$ction", "$$)", "$$;"], ["\u2581}"], ["\u2581while", "\u2581(!", "$$state", "$$.Compare", "$$And", "$$Set", "$$(src", "$$,", "\u2581res", "$$))", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581un", "$$set", "$$Section", "$$(String", "\u2581se", "$$ction", "$$,", "\u2581String", "\u2581sub", "$$se", "$$ction", "$$)", "\u2581{"], ["\u2581", "$$Config", "$$Snapshot", "\u2581src", "$$,", "\u2581res", "$$;"], ["\u2581do", "\u2581{"], ["\u2581src", "\u2581=", "\u2581state", "$$.get", "$$()", "$$;"], ["\u2581res", "\u2581=", "\u2581un", "$$set", "$$Section", "$$(src", "$$,", "\u2581se", "$$ction", "$$,", "\u2581sub", "$$se", "$$ction", "$$)", "$$;"], ["\u2581}"], ["\u2581while", "\u2581(!", "$$state", "$$.compare", "$$And", "$$Set", "$$(src", "$$,", "\u2581res", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public string GetTagName() {\n    return tagName;\n}\n", "java": "public final String getTagName() {\n    return tagName;\n}\n", "cs_t": [["\u2581public", "\u2581string", "\u2581Get", "$$Tag", "$$Name()", "\u2581{"], ["\u2581return", "\u2581tag", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581String", "\u2581get", "$$Tag", "$$Name()", "\u2581{"], ["\u2581return", "\u2581tag", "$$Name", "$$;"], ["\u2581}"]]}, {"cs": "public void AddSubRecord(int index, SubRecord element) {\n    subrecords.Insert(index, element);\n}\n", "java": "public void addSubRecord(int index, SubRecord element) {\n    subrecords.add(index, element);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Add", "$$Sub", "$$Record(", "$$int", "\u2581index,", "\u2581Sub", "$$Record", "\u2581element", "$$)", "\u2581{"], ["\u2581sub", "$$record", "$$s.", "$$In", "$$sert", "$$(index", "$$,", "\u2581element", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581add", "$$Sub", "$$Record(", "$$int", "\u2581index,", "\u2581Sub", "$$Record", "\u2581element", "$$)", "\u2581{"], ["\u2581sub", "$$record", "$$s.add(", "$$index", "$$,", "\u2581element", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool remove(object @object) {\n    lock (mutex) {\n        return c.remove(@object);\n    }\n}\n", "java": "public boolean remove(Object o) {\n    synchronized (mutex) {\n        return delegate().remove(o);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581remove", "$$(object", "\u2581@object)", "\u2581{"], ["\u2581lock", "\u2581(m", "$$u", "$$tex", "$$)", "\u2581{"], ["\u2581return", "\u2581c", "$$.remove", "$$(@", "$$object", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581remove", "$$(Object", "\u2581o)", "\u2581{"], ["\u2581synchronized", "\u2581(m", "$$u", "$$tex", "$$)", "\u2581{"], ["\u2581return", "\u2581de", "$$legate", "$$()", "$$.remove", "$$(o", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override TokenStream Create(TokenStream input) {\n    return new DoubleMetaphoneFilter(input, maxCodeLength, inject);\n}\n", "java": "public DoubleMetaphoneFilter create(TokenStream input) {\n    return new DoubleMetaphoneFilter(input, maxCodeLength, inject);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581TokenStream", "\u2581Create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581Double", "$$Met", "$$ap", "$$h", "$$one", "$$Filter(input,", "\u2581max", "$$Code", "$$Length", "$$,", "\u2581in", "$$ject", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Double", "$$Met", "$$ap", "$$h", "$$one", "$$Filter", "\u2581create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581Double", "$$Met", "$$ap", "$$h", "$$one", "$$Filter(input,", "\u2581max", "$$Code", "$$Length", "$$,", "\u2581in", "$$ject", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual long Length() {\n    return InCoreLength();\n}\n", "java": "public long length() {\n    return inCoreLength();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581long", "\u2581", "$$Length", "$$()", "\u2581{"], ["\u2581return", "\u2581In", "$$Co", "$$re", "$$Length", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581long", "\u2581length", "$$()", "\u2581{"], ["\u2581return", "\u2581in", "$$Co", "$$re", "$$Length", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetValue(bool newValue) {\n    value = newValue;\n}\n", "java": "public void setValue(boolean newValue) {\n    value = newValue;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Value", "$$(bool", "\u2581new", "$$Value)", "\u2581{"], ["\u2581value", "\u2581=", "\u2581new", "$$Value", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Value", "$$(boolean", "\u2581new", "$$Value)", "\u2581{"], ["\u2581value", "\u2581=", "\u2581new", "$$Value", "$$;"], ["\u2581}"]]}, {"cs": "public Pair(ContentSource oldSource, ContentSource newSource) {\n    this.oldSource = oldSource;\n    this.newSource = newSource;\n}\n", "java": "public Pair(ContentSource oldSource, ContentSource newSource) {\n    this.oldSource = oldSource;\n    this.newSource = newSource;\n}\n", "cs_t": [["\u2581public", "\u2581P", "$$a", "$$ir", "$$(", "$$Content", "$$Source", "\u2581old", "$$Source", "$$,", "\u2581Con", "$$tent", "$$Source", "\u2581new", "$$Source", "$$)", "\u2581{"], ["\u2581this.", "$$old", "$$Source", "\u2581=", "\u2581old", "$$Source", "$$;"], ["\u2581this.", "$$new", "$$Source", "\u2581=", "\u2581new", "$$Source", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$a", "$$ir", "$$(", "$$Content", "$$Source", "\u2581old", "$$Source", "$$,", "\u2581Con", "$$tent", "$$Source", "\u2581new", "$$Source", "$$)", "\u2581{"], ["\u2581this.", "$$old", "$$Source", "\u2581=", "\u2581old", "$$Source", "$$;"], ["\u2581this.", "$$new", "$$Source", "\u2581=", "\u2581new", "$$Source", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int Get(int i) {\n    if (count <= i) {\n        throw Sharpen.Extensions.CreateIndexOutOfRangeException(i);\n    }\n    return entries[i];\n}\n", "java": "public int get(int i) {\n    if (count <= i)throw new ArrayIndexOutOfBoundsException(i);\n    return entries[i];\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581Get", "$$(int", "\u2581i", "$$)", "\u2581{"], ["\u2581if", "\u2581(count", "\u2581<=", "\u2581i", "$$)", "\u2581{"], ["\u2581throw", "\u2581Sharpen.", "$$Ex", "$$tension", "$$s.", "$$Create", "$$IndexOutOf", "$$Range", "$$Exception(", "$$i)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581", "$$entries", "$$[i]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get(int", "\u2581i", "$$)", "\u2581{"], ["\u2581if", "\u2581(count", "\u2581<=", "\u2581i", "$$)", "$$throw", "\u2581new", "\u2581Array", "$$IndexOutOf", "$$Bounds", "$$Exception(", "$$i)", "$$;"], ["\u2581return", "\u2581", "$$entries", "$$[i]", "$$;"], ["\u2581}"]]}, {"cs": "public CreateRepoRequest(): base(\"cr\", \"2016-06-07\", \"CreateRepo\", \"cr\", \"openAPI\") {\n    UriPattern = \"/repos\";\n    Method = MethodType.PUT;\n}\n", "java": "public CreateRepoRequest() {\n    super(\"cr\", \"2016-06-07\", \"CreateRepo\", \"cr\");\n    setUriPattern(\"/repos\");\n    setMethod(MethodType.PUT);\n}\n", "cs_t": [["\u2581public", "\u2581Create", "$$Repo", "$$Request():", "\u2581base(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"", "$$Create", "$$Repo", "$$\",", "\u2581\"", "$$cr\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581", "$$UriPattern", "\u2581=", "\u2581\"/", "$$re", "$$pos", "$$\"", "$$;"], ["\u2581Method", "\u2581=", "\u2581Method", "$$Type.", "$$P", "$$UT", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Repo", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"", "$$Create", "$$Repo", "$$\",", "\u2581\"", "$$cr", "$$\")", "$$;"], ["\u2581set", "$$UriPattern", "$$(\"/", "$$re", "$$pos", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.", "$$P", "$$UT", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool IsDeltaBaseAsOffset() {\n    return deltaBaseAsOffset;\n}\n", "java": "public boolean isDeltaBaseAsOffset() {\n    return deltaBaseAsOffset;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581Is", "$$Delta", "$$Base", "$$As", "$$Offset", "$$()", "\u2581{"], ["\u2581return", "\u2581delta", "$$Base", "$$As", "$$Offset", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$Delta", "$$Base", "$$As", "$$Offset", "$$()", "\u2581{"], ["\u2581return", "\u2581delta", "$$Base", "$$As", "$$Offset", "$$;"], ["\u2581}"]]}, {"cs": "public void remove() {\n    if (expectedModCount == list.modCount) {\n        if (lastLink != null) {\n            java.util.LinkedList.Link<ET> next_1 = lastLink.next;\n            java.util.LinkedList.Link<ET> previous_1 = lastLink.previous;\n            next_1.previous = previous_1;\n            previous_1.next = next_1;\n            if (lastLink == link) {\n                pos--;\n            }\n            link = previous_1;\n            lastLink = null;\n            expectedModCount++;\n            list._size--;\n            list.modCount++;\n        }\n        else {\n            throw new System.InvalidOperationException();\n        }\n    }\n    else {\n        throw new java.util.ConcurrentModificationException();\n    }\n}\n", "java": "public void remove() {\n    if (expectedModCount == list.modCount) {\n        if (lastLink != null) {\n            Link<ET> next = lastLink.next;\n            Link<ET> previous = lastLink.previous;\n            next.previous = previous;\n            previous.next = next;\n            if (lastLink == link) {\n                pos--;\n            }\n            link = previous;\n            lastLink = null;\n            expectedModCount++;\n            list.size--;\n            list.modCount++;\n        }\n        else {\n            throw new IllegalStateException();\n        }\n    }\n    else {\n        throw new ConcurrentModificationException();\n    }\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581remove", "$$()", "\u2581{"], ["\u2581if", "\u2581(", "$$expected", "$$Mod", "$$Count", "\u2581==", "\u2581list", "$$.", "$$mod", "$$Count)", "\u2581{"], ["\u2581if", "\u2581(", "$$last", "$$Link", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581java.util.", "$$Link", "$$ed", "$$List", "$$.", "$$Link", "$$<", "$$E", "$$T>", "\u2581next", "$$_1", "\u2581=", "\u2581last", "$$Link", "$$.next", "$$;"], ["\u2581java.util.", "$$Link", "$$ed", "$$List", "$$.", "$$Link", "$$<", "$$E", "$$T>", "\u2581pre", "$$vious", "$$_1", "\u2581=", "\u2581last", "$$Link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581next", "$$_", "$$1.", "$$pre", "$$vious", "\u2581=", "\u2581pre", "$$vious", "$$_1", "$$;"], ["\u2581pre", "$$vious", "$$_", "$$1.", "$$next", "\u2581=", "\u2581next", "$$_1", "$$;"], ["\u2581if", "\u2581(", "$$last", "$$Link", "\u2581==", "\u2581link", "$$)", "\u2581{"], ["\u2581pos", "$$--", "$$;"], ["\u2581}"], ["\u2581link", "\u2581=", "\u2581pre", "$$vious", "$$_1", "$$;"], ["\u2581last", "$$Link", "\u2581=", "\u2581null", "$$;"], ["\u2581expected", "$$Mod", "$$Count", "$$++", "$$;"], ["\u2581list", "$$._", "$$size", "$$--", "$$;"], ["\u2581list", "$$.", "$$mod", "$$Count", "$$++", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.", "$$Invalid", "$$Operation", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581java.util.", "$$Con", "$$current", "$$Modification", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581remove", "$$()", "\u2581{"], ["\u2581if", "\u2581(", "$$expected", "$$Mod", "$$Count", "\u2581==", "\u2581list", "$$.", "$$mod", "$$Count)", "\u2581{"], ["\u2581if", "\u2581(", "$$last", "$$Link", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581L", "$$ink", "$$<", "$$E", "$$T>", "\u2581next", "\u2581=", "\u2581last", "$$Link", "$$.next", "$$;"], ["\u2581L", "$$ink", "$$<", "$$E", "$$T>", "\u2581pre", "$$vious", "\u2581=", "\u2581last", "$$Link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581next", "$$.", "$$pre", "$$vious", "\u2581=", "\u2581pre", "$$vious", "$$;"], ["\u2581pre", "$$vio", "$$u", "$$s.", "$$next", "\u2581=", "\u2581next", "$$;"], ["\u2581if", "\u2581(", "$$last", "$$Link", "\u2581==", "\u2581link", "$$)", "\u2581{"], ["\u2581pos", "$$--", "$$;"], ["\u2581}"], ["\u2581link", "\u2581=", "\u2581pre", "$$vious", "$$;"], ["\u2581last", "$$Link", "\u2581=", "\u2581null", "$$;"], ["\u2581expected", "$$Mod", "$$Count", "$$++", "$$;"], ["\u2581list", "$$.size", "$$--", "$$;"], ["\u2581list", "$$.", "$$mod", "$$Count", "$$++", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalState", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Con", "$$current", "$$Modification", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual MergeShardsResponse MergeShards(MergeShardsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = MergeShardsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = MergeShardsResponseUnmarshaller.Instance;\n    return Invoke<MergeShardsResponse>(request, options);\n}\n", "java": "public MergeShardsResult mergeShards(MergeShardsRequest request) {\n    request = beforeClientExecution(request);\n    return executeMergeShards(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Merge", "$$Sh", "$$ard", "$$sResponse", "\u2581Merge", "$$Sh", "$$ard", "$$s(", "$$Merge", "$$Sh", "$$ard", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Merge", "$$Sh", "$$ard", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Merge", "$$Sh", "$$ard", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Merge", "$$Sh", "$$ard", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Merge", "$$Sh", "$$ard", "$$sResult", "\u2581m", "$$erge", "$$Sh", "$$ard", "$$s(", "$$Merge", "$$Sh", "$$ard", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Merge", "$$Sh", "$$ard", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual AllocateHostedConnectionResponse AllocateHostedConnection(AllocateHostedConnectionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = AllocateHostedConnectionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = AllocateHostedConnectionResponseUnmarshaller.Instance;\n    return Invoke<AllocateHostedConnectionResponse>(request, options);\n}\n", "java": "public AllocateHostedConnectionResult allocateHostedConnection(AllocateHostedConnectionRequest request) {\n    request = beforeClientExecution(request);\n    return executeAllocateHostedConnection(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581A", "$$l", "$$locate", "$$Hosted", "$$Connection", "$$Response", "\u2581A", "$$l", "$$locate", "$$Hosted", "$$Connection", "$$(", "$$Al", "$$locate", "$$Hosted", "$$Connection", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581A", "$$l", "$$locate", "$$Hosted", "$$Connection", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581A", "$$l", "$$locate", "$$Hosted", "$$Connection", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Al", "$$locate", "$$Hosted", "$$Connection", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581A", "$$l", "$$locate", "$$Hosted", "$$Connection", "$$Result", "\u2581all", "$$oc", "$$ate", "$$Hosted", "$$Connection", "$$(", "$$Al", "$$locate", "$$Hosted", "$$Connection", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Al", "$$locate", "$$Hosted", "$$Connection", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public int getBeginIndex() {\n    return start;\n}\n", "java": "public int getBeginIndex() {\n    return start;\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581get", "$$Be", "$$gin", "$$Index", "$$()", "\u2581{"], ["\u2581return", "\u2581start", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$Be", "$$gin", "$$Index", "$$()", "\u2581{"], ["\u2581return", "\u2581start", "$$;"], ["\u2581}"]]}, {"cs": "public static WeightedTerm[] GetTerms(Query query) {\n    return GetTerms(query, false);\n}\n", "java": "public static final WeightedTerm[] getTerms(Query query) {\n    return getTerms(query,false);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581W", "$$eighted", "$$Term", "$$[]", "\u2581Get", "$$Term", "$$s(", "$$Query", "\u2581query", "$$)", "\u2581{"], ["\u2581return", "\u2581Get", "$$Term", "$$s(", "$$query", "$$,", "\u2581false", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581final", "\u2581W", "$$eighted", "$$Term", "$$[]", "\u2581get", "$$Term", "$$s(", "$$Query", "\u2581query", "$$)", "\u2581{"], ["\u2581return", "\u2581get", "$$Term", "$$s(", "$$query", "$$,", "$$f", "$$alse", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.ByteBuffer compact() {\n    throw new java.nio.ReadOnlyBufferException();\n}\n", "java": "public ByteBuffer compact() {\n    throw new ReadOnlyBufferException();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.ByteBuffer", "\u2581comp", "$$act", "$$()", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581java.nio.Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ByteBuffer", "\u2581comp", "$$act", "$$()", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n    for (int i = 0; i < iterations; ++i) {\n        int byte0 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (int)((uint)byte0 >> 2);\n        int byte1 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte0 & 3) << 4) | ((int)((uint)byte1 >> 4));\n        int byte2 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte1 & 15) << 2) | ((int)((uint)byte2 >> 6));\n        values[valuesOffset++] = byte2 & 63;\n    }\n}\n", "java": "public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n    for (int i = 0; i < iterations; ++i) {\n        final long byte0 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = byte0 >>> 2;\n        final long byte1 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte0 & 3) << 4) | (byte1 >>> 4);\n        final long byte2 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte1 & 15) << 2) | (byte2 >>> 6);\n        values[valuesOffset++] = byte2 & 63;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581D", "$$ecode", "$$(byte[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581int[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581iterations;", "\u2581++i)", "\u2581{"], ["\u2581int", "\u2581byte", "$$0", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(int", "$$)((", "$$uint)", "$$byte", "$$0", "\u2581>>", "\u25812)", "$$;"], ["\u2581int", "\u2581byte", "$$1", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((byte", "$$0", "\u2581&", "\u25813", "$$)", "\u2581<<", "\u25814)", "\u2581|", "\u2581((int)((", "$$uint)", "$$byte", "$$1", "\u2581>>", "\u25814", "$$))", "$$;"], ["\u2581int", "\u2581byte", "$$2", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((byte", "$$1", "\u2581&", "\u25811", "$$5", "$$)", "\u2581<<", "\u25812)", "\u2581|", "\u2581((int)((", "$$uint)", "$$byte", "$$2", "\u2581>>", "\u25816", "$$))", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581byte", "$$2", "\u2581&", "\u25816", "$$3", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581decode", "$$(byte[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581long[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581iterations;", "\u2581++i)", "\u2581{"], ["\u2581final", "\u2581long", "\u2581byte", "$$0", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581byte", "$$0", "\u2581>>>", "\u25812", "$$;"], ["\u2581final", "\u2581long", "\u2581byte", "$$1", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((byte", "$$0", "\u2581&", "\u25813", "$$)", "\u2581<<", "\u25814)", "\u2581|", "\u2581(byte", "$$1", "\u2581>>>", "\u25814)", "$$;"], ["\u2581final", "\u2581long", "\u2581byte", "$$2", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((byte", "$$1", "\u2581&", "\u25811", "$$5", "$$)", "\u2581<<", "\u25812)", "\u2581|", "\u2581(byte", "$$2", "\u2581>>>", "\u25816", "$$)", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581byte", "$$2", "\u2581&", "\u25816", "$$3", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual string GetHumanishName() {\n    if (string.Empty.Equals(GetPath()) || GetPath() == null) {\n        throw new ArgumentException();\n    }\n    string s = GetPath();\n    string[] elements;\n    if (\"file\".Equals(scheme) || LOCAL_FILE.Matcher(s).Matches()) {\n        elements = s.Split(\"[\\\\\" + FilePath.separatorChar + \"/]\");\n    }\n    else {\n        elements = s.Split(\"/\");\n    }\n    if (elements.Length == 0) {\n        throw new ArgumentException();\n    }\n    string result = elements[elements.Length - 1];\n    if (Constants.DOT_GIT.Equals(result)) {\n        result = elements[elements.Length - 2];\n    }\n    else {\n        if (result.EndsWith(Constants.DOT_GIT_EXT)) {\n            result = Sharpen.Runtime.Substring(result, 0, result.Length - Constants.DOT_GIT_EXT.Length);\n        }\n    }\n    return result;\n}\n", "java": "public String getHumanishName() throws IllegalArgumentException {\n    String s = getPath();\n    if (\"/\".equals(s) || \"\".equals(s)) s = getHost();\n    if (s == null) throw new IllegalArgumentException();\n    String[] elements;\n    if (\"file\".equals(scheme) || LOCAL_FILE.matcher(s).matches()) elements = s.split(\"[\\\\\" + File.separatorChar + \"/]\");\n    elseelements = s.split(\"/+\");\n    if (elements.length == 0)throw new IllegalArgumentException();\n    String result = elements[elements.length - 1];\n    if (Constants.DOT_GIT.equals(result))result = elements[elements.length - 2];\n    else if (result.endsWith(Constants.DOT_GIT_EXT))result = result.substring(0, result.length()- Constants.DOT_GIT_EXT.length());\n    return result;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581Get", "$$Human", "$$ish", "$$Name()", "\u2581{"], ["\u2581if", "\u2581(", "$$string", "$$.", "$$Empty", "$$.Equals(", "$$Get", "$$Path", "$$())", "\u2581||", "\u2581Get", "$$Path", "$$()", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$ArgumentException", "$$()", "$$;"], ["\u2581}"], ["\u2581string", "\u2581s", "\u2581=", "\u2581Get", "$$Path", "$$()", "$$;"], ["\u2581string[]", "\u2581element", "$$s;"], ["\u2581if", "\u2581(\"", "$$file", "$$\"", "$$.Equals(", "$$s", "$$ch", "$$eme", "$$)", "\u2581||", "\u2581L", "$$O", "$$C", "$$AL", "$$_", "$$FI", "$$LE", "$$.", "$$Match", "$$er(", "$$s)", "$$.", "$$Match", "$$es", "$$())", "\u2581{"], ["\u2581element", "$$s", "\u2581=", "\u2581s", "$$.", "$$Sp", "$$lit", "$$(\"", "$$[", "$$\\", "$$\\\"", "\u2581+", "\u2581File", "$$Path", "$$.se", "$$parator", "$$Char", "\u2581+", "\u2581\"/", "$$]", "$$\")", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581element", "$$s", "\u2581=", "\u2581s", "$$.", "$$Sp", "$$lit", "$$(\"/", "$$\")", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(e", "$$lement", "$$s.Length", "\u2581==", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$ArgumentException", "$$()", "$$;"], ["\u2581}"], ["\u2581string", "\u2581result", "\u2581=", "\u2581element", "$$s[", "$$e", "$$lement", "$$s.Length", "\u2581-", "\u25811", "$$]", "$$;"], ["\u2581if", "\u2581(", "$$Constants.", "$$D", "$$O", "$$T_", "$$G", "$$IT", "$$.Equals(", "$$result", "$$))", "\u2581{"], ["\u2581result", "\u2581=", "\u2581element", "$$s[", "$$e", "$$lement", "$$s.Length", "\u2581-", "\u25812", "$$]", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581if", "\u2581(result", "$$.", "$$End", "$$sWith", "$$(", "$$Constants.", "$$D", "$$O", "$$T_", "$$G", "$$I", "$$T_", "$$E", "$$X", "$$T", "$$))", "\u2581{"], ["\u2581result", "\u2581=", "\u2581Sharpen.", "$$Runtime", "$$.Sub", "$$string(", "$$result", "$$,", "\u25810,", "\u2581result", "$$.Length", "\u2581-", "\u2581Constants.", "$$D", "$$O", "$$T_", "$$G", "$$I", "$$T_", "$$E", "$$X", "$$T", "$$.Length)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Human", "$$ish", "$$Name()", "\u2581throws", "\u2581IllegalArgumentException", "\u2581{"], ["\u2581String", "\u2581s", "\u2581=", "\u2581get", "$$Path", "$$()", "$$;"], ["\u2581if", "\u2581(\"", "$$/", "$$\"", "$$.equals(", "$$s)", "\u2581||", "\u2581\"", "$$\"", "$$.equals(", "$$s", "$$))", "\u2581s", "\u2581=", "\u2581get", "$$Host", "$$()", "$$;"], ["\u2581if", "\u2581(s", "\u2581==", "\u2581null)", "\u2581throw", "\u2581new", "\u2581IllegalArgumentException", "$$()", "$$;"], ["\u2581String[]", "\u2581element", "$$s;"], ["\u2581if", "\u2581(\"", "$$file", "$$\"", "$$.equals(", "$$s", "$$ch", "$$eme", "$$)", "\u2581||", "\u2581L", "$$O", "$$C", "$$AL", "$$_", "$$FI", "$$LE", "$$.", "$$match", "$$er(", "$$s)", "$$.", "$$match", "$$es", "$$())", "\u2581element", "$$s", "\u2581=", "\u2581s", "$$.", "$$sp", "$$lit", "$$(\"", "$$[", "$$\\", "$$\\\"", "\u2581+", "\u2581File", "$$.se", "$$parator", "$$Char", "\u2581+", "\u2581\"/", "$$]", "$$\")", "$$;"], ["\u2581else", "$$e", "$$lement", "$$s", "\u2581=", "\u2581s", "$$.", "$$sp", "$$lit", "$$(\"/", "$$+", "$$\")", "$$;"], ["\u2581if", "\u2581(e", "$$lement", "$$s.length", "\u2581==", "\u25810)", "$$throw", "\u2581new", "\u2581IllegalArgumentException", "$$()", "$$;"], ["\u2581String", "\u2581result", "\u2581=", "\u2581element", "$$s[", "$$e", "$$lement", "$$s.length", "\u2581-", "\u25811", "$$]", "$$;"], ["\u2581if", "\u2581(", "$$Constants.", "$$D", "$$O", "$$T_", "$$G", "$$IT", "$$.equals(", "$$result", "$$))", "$$result", "\u2581=", "\u2581element", "$$s[", "$$e", "$$lement", "$$s.length", "\u2581-", "\u25812", "$$]", "$$;"], ["\u2581else", "\u2581if", "\u2581(result", "$$.", "$$end", "$$sWith", "$$(", "$$Constants.", "$$D", "$$O", "$$T_", "$$G", "$$I", "$$T_", "$$E", "$$X", "$$T", "$$))", "$$result", "\u2581=", "\u2581result", "$$.sub", "$$string(", "$$0,", "\u2581result", "$$.length()", "$$-", "\u2581Constants.", "$$D", "$$O", "$$T_", "$$G", "$$I", "$$T_", "$$E", "$$X", "$$T", "$$.length", "$$())", "$$;"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeNotebookInstanceLifecycleConfigResponse DescribeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeNotebookInstanceLifecycleConfigRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.Instance;\n    return Invoke<DescribeNotebookInstanceLifecycleConfigResponse>(request, options);\n}\n", "java": "public DescribeNotebookInstanceLifecycleConfigResult describeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeNotebookInstanceLifecycleConfig(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$NotebookInstance", "$$Lifecycle", "$$Config", "$$Response", "\u2581Describe", "$$NotebookInstance", "$$Lifecycle", "$$Config", "$$(Describe", "$$NotebookInstance", "$$Lifecycle", "$$Config", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$NotebookInstance", "$$Lifecycle", "$$Config", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$NotebookInstance", "$$Lifecycle", "$$Config", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$NotebookInstance", "$$Lifecycle", "$$Config", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$NotebookInstance", "$$Lifecycle", "$$Config", "$$Result", "\u2581describe", "$$NotebookInstance", "$$Lifecycle", "$$Config", "$$(Describe", "$$NotebookInstance", "$$Lifecycle", "$$Config", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$NotebookInstance", "$$Lifecycle", "$$Config", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public string GetAccessKeySecret() {\n    return AccessSecret;\n}\n", "java": "public String getAccessKeySecret() {\n    return this.accessKeySecret;\n}\n", "cs_t": [["\u2581public", "\u2581string", "\u2581Get", "$$Access", "$$Key", "$$Sec", "$$re", "$$t", "$$()", "\u2581{"], ["\u2581return", "\u2581Ac", "$$cess", "$$Sec", "$$re", "$$t", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Access", "$$Key", "$$Sec", "$$re", "$$t", "$$()", "\u2581{"], ["\u2581return", "\u2581this.", "$$ac", "$$cess", "$$Key", "$$Sec", "$$re", "$$t", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateVpnConnectionResponse CreateVpnConnection(CreateVpnConnectionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateVpnConnectionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateVpnConnectionResponseUnmarshaller.Instance;\n    return Invoke<CreateVpnConnectionResponse>(request, options);\n}\n", "java": "public CreateVpnConnectionResult createVpnConnection(CreateVpnConnectionRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateVpnConnection(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Vpn", "$$Connection", "$$Response", "\u2581Create", "$$Vpn", "$$Connection", "$$(Create", "$$Vpn", "$$Connection", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Vpn", "$$Connection", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Vpn", "$$Connection", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Vpn", "$$Connection", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Vpn", "$$Connection", "$$Result", "\u2581create", "$$Vpn", "$$Connection", "$$(Create", "$$Vpn", "$$Connection", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Vpn", "$$Connection", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeVoicesResponse DescribeVoices(DescribeVoicesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeVoicesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeVoicesResponseUnmarshaller.Instance;\n    return Invoke<DescribeVoicesResponse>(request, options);\n}\n", "java": "public DescribeVoicesResult describeVoices(DescribeVoicesRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeVoices(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Vo", "$$i", "$$ces", "$$Response", "\u2581Describe", "$$Vo", "$$i", "$$ces", "$$(Describe", "$$Vo", "$$i", "$$ces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Vo", "$$i", "$$ces", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Vo", "$$i", "$$ces", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Vo", "$$i", "$$ces", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Vo", "$$i", "$$ces", "$$Result", "\u2581describe", "$$Vo", "$$i", "$$ces", "$$(Describe", "$$Vo", "$$i", "$$ces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Vo", "$$i", "$$ces", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListMonitoringExecutionsResponse ListMonitoringExecutions(ListMonitoringExecutionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListMonitoringExecutionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListMonitoringExecutionsResponseUnmarshaller.Instance;\n    return Invoke<ListMonitoringExecutionsResponse>(request, options);\n}\n", "java": "public ListMonitoringExecutionsResult listMonitoringExecutions(ListMonitoringExecutionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListMonitoringExecutions(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Monitoring", "$$Execution", "$$sResponse", "\u2581List", "$$Monitoring", "$$Execution", "$$s(List", "$$Monitoring", "$$Execution", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Monitoring", "$$Execution", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Monitoring", "$$Execution", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Monitoring", "$$Execution", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Monitoring", "$$Execution", "$$sResult", "\u2581list", "$$Monitoring", "$$Execution", "$$s(List", "$$Monitoring", "$$Execution", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Monitoring", "$$Execution", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public DescribeJobRequest(string vaultName, string jobId) {\n    _vaultName = vaultName;\n    _jobId = jobId;\n}\n", "java": "public DescribeJobRequest(String vaultName, String jobId) {\n    setVaultName(vaultName);\n    setJobId(jobId);\n}\n", "cs_t": [["\u2581public", "\u2581Describe", "$$Job", "$$Request(string", "\u2581vault", "$$Name,", "\u2581string", "\u2581j", "$$o", "$$b", "$$Id)", "\u2581{"], ["\u2581_", "$$vault", "$$Name", "\u2581=", "\u2581vault", "$$Name", "$$;"], ["\u2581_", "$$j", "$$o", "$$b", "$$Id", "\u2581=", "\u2581j", "$$o", "$$b", "$$Id", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Job", "$$Request(String", "\u2581vault", "$$Name,", "\u2581String", "\u2581j", "$$o", "$$b", "$$Id)", "\u2581{"], ["\u2581set", "$$Vault", "$$Name(", "$$vault", "$$Name)", "$$;"], ["\u2581set", "$$Job", "$$Id(", "$$j", "$$o", "$$b", "$$Id)", "$$;"], ["\u2581}"]]}, {"cs": "public EscherRecord GetEscherRecord(int index) {\n    return escherRecords[index];\n}\n", "java": "public EscherRecord getEscherRecord(int index) {\n    return escherRecords.get(index);\n}\n", "cs_t": [["\u2581public", "\u2581Escher", "$$Record", "\u2581Get", "$$Escher", "$$Record(", "$$int", "\u2581index)", "\u2581{"], ["\u2581return", "\u2581escher", "$$Record", "$$s[index", "$$]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Escher", "$$Record", "\u2581get", "$$Escher", "$$Record(", "$$int", "\u2581index)", "\u2581{"], ["\u2581return", "\u2581escher", "$$Record", "$$s.get", "$$(index", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetApisResponse GetApis(GetApisRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetApisRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetApisResponseUnmarshaller.Instance;\n    return Invoke<GetApisResponse>(request, options);\n}\n", "java": "public GetApisResult getApis(GetApisRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetApis(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Ap", "$$is", "$$Response", "\u2581Get", "$$Ap", "$$is", "$$(Get", "$$Ap", "$$is", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Ap", "$$is", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Ap", "$$is", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Ap", "$$is", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Ap", "$$is", "$$Result", "\u2581get", "$$Ap", "$$is", "$$(Get", "$$Ap", "$$is", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Ap", "$$is", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteSmsChannelResponse DeleteSmsChannel(DeleteSmsChannelRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteSmsChannelRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteSmsChannelResponseUnmarshaller.Instance;\n    return Invoke<DeleteSmsChannelResponse>(request, options);\n}\n", "java": "public DeleteSmsChannelResult deleteSmsChannel(DeleteSmsChannelRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteSmsChannel(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Sm", "$$s", "$$Channel", "$$Response", "\u2581Delete", "$$Sm", "$$s", "$$Channel", "$$(Delete", "$$Sm", "$$s", "$$Channel", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Sm", "$$s", "$$Channel", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Sm", "$$s", "$$Channel", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Sm", "$$s", "$$Channel", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Sm", "$$s", "$$Channel", "$$Result", "\u2581delete", "$$Sm", "$$s", "$$Channel", "$$(Delete", "$$Sm", "$$s", "$$Channel", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Sm", "$$s", "$$Channel", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual TrackingRefUpdate GetTrackingRefUpdate() {\n    return trackingRefUpdate;\n}\n", "java": "public TrackingRefUpdate getTrackingRefUpdate() {\n    return trackingRefUpdate;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Tracking", "$$Ref", "$$Update", "\u2581Get", "$$Tracking", "$$Ref", "$$Update", "$$()", "\u2581{"], ["\u2581return", "\u2581t", "$$ra", "$$ck", "$$ing", "$$Ref", "$$Update", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Tracking", "$$Ref", "$$Update", "\u2581get", "$$Tracking", "$$Ref", "$$Update", "$$()", "\u2581{"], ["\u2581return", "\u2581t", "$$ra", "$$ck", "$$ing", "$$Ref", "$$Update", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void print(bool b) {\n    print(b.ToString());\n}\n", "java": "public void print(boolean b) {\n    print(String.valueOf(b));\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581print", "$$(bool", "\u2581b)", "\u2581{"], ["\u2581print", "$$(b", "$$.ToString()", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581print", "$$(boolean", "\u2581b)", "\u2581{"], ["\u2581print", "$$(String", "$$.value", "$$Of", "$$(b", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public virtual IQueryNode GetChild() {\n    return GetChildren()[0];\n}\n", "java": "public QueryNode getChild() {\n    return getChildren().get(0);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581I", "$$QueryNode", "\u2581Get", "$$Child", "$$()", "\u2581{"], ["\u2581return", "\u2581Get", "$$Children", "$$()", "$$[0]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$QueryNode", "\u2581get", "$$Child", "$$()", "\u2581{"], ["\u2581return", "\u2581get", "$$Children", "$$().get", "$$(", "$$0)", "$$;"], ["\u2581}"]]}, {"cs": "public NotIgnoredFilter(int workdirTreeIndex) {\n    this.index = workdirTreeIndex;\n}\n", "java": "public NotIgnoredFilter(int workdirTreeIndex) {\n    this.index = workdirTreeIndex;\n}\n", "cs_t": [["\u2581public", "\u2581Not", "$$I", "$$gn", "$$ore", "$$d", "$$Filter", "$$(int", "\u2581work", "$$d", "$$ir", "$$Tree", "$$Index)", "\u2581{"], ["\u2581this.", "$$index", "\u2581=", "\u2581work", "$$d", "$$ir", "$$Tree", "$$Index", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Not", "$$I", "$$gn", "$$ore", "$$d", "$$Filter", "$$(int", "\u2581work", "$$d", "$$ir", "$$Tree", "$$Index)", "\u2581{"], ["\u2581this.", "$$index", "\u2581=", "\u2581work", "$$d", "$$ir", "$$Tree", "$$Index", "$$;"], ["\u2581}"]]}, {"cs": "public AreaRecord(RecordInputStream in1) {\n    field_1_formatFlags = in1.ReadShort();\n}\n", "java": "public AreaRecord(RecordInputStream in) {\n    field_1_formatFlags            = in.readShort();\n}\n", "cs_t": [["\u2581public", "\u2581A", "$$rea", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581field_1_", "$$format", "$$Flag", "$$s", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581A", "$$rea", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581field_1_", "$$format", "$$Flag", "$$s", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public GetThumbnailRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"GetThumbnail\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public GetThumbnailRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"GetThumbnail\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581Get", "$$Th", "$$um", "$$b", "$$n", "$$ail", "$$Request():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"Get", "$$Th", "$$um", "$$b", "$$n", "$$ail", "$$\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Th", "$$um", "$$b", "$$n", "$$ail", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"Get", "$$Th", "$$um", "$$b", "$$n", "$$ail", "$$\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeTransitGatewayVpcAttachmentsResponse DescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeTransitGatewayVpcAttachmentsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller.Instance;\n    return Invoke<DescribeTransitGatewayVpcAttachmentsResponse>(request, options);\n}\n", "java": "public DescribeTransitGatewayVpcAttachmentsResult describeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeTransitGatewayVpcAttachments(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$TransitGateway", "$$Vpc", "$$Attachment", "$$sResponse", "\u2581Describe", "$$TransitGateway", "$$Vpc", "$$Attachment", "$$s(Describe", "$$TransitGateway", "$$Vpc", "$$Attachment", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$TransitGateway", "$$Vpc", "$$Attachment", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$TransitGateway", "$$Vpc", "$$Attachment", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$TransitGateway", "$$Vpc", "$$Attachment", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$TransitGateway", "$$Vpc", "$$Attachment", "$$sResult", "\u2581describe", "$$TransitGateway", "$$Vpc", "$$Attachment", "$$s(Describe", "$$TransitGateway", "$$Vpc", "$$Attachment", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$TransitGateway", "$$Vpc", "$$Attachment", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual PutVoiceConnectorStreamingConfigurationResponse PutVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = PutVoiceConnectorStreamingConfigurationRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = PutVoiceConnectorStreamingConfigurationResponseUnmarshaller.Instance;\n    return Invoke<PutVoiceConnectorStreamingConfigurationResponse>(request, options);\n}\n", "java": "public PutVoiceConnectorStreamingConfigurationResult putVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request) {\n    request = beforeClientExecution(request);\n    return executePutVoiceConnectorStreamingConfiguration(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Put", "$$VoiceConnector", "$$Streaming", "$$Configuration", "$$Response", "\u2581Put", "$$VoiceConnector", "$$Streaming", "$$Configuration", "$$(Put", "$$VoiceConnector", "$$Streaming", "$$ConfigurationRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Put", "$$VoiceConnector", "$$Streaming", "$$Configuration", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Put", "$$VoiceConnector", "$$Streaming", "$$Configuration", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Put", "$$VoiceConnector", "$$Streaming", "$$Configuration", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Put", "$$VoiceConnector", "$$Streaming", "$$Configuration", "$$Result", "\u2581put", "$$VoiceConnector", "$$Streaming", "$$Configuration", "$$(Put", "$$VoiceConnector", "$$Streaming", "$$ConfigurationRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executePut", "$$VoiceConnector", "$$Streaming", "$$Configuration", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override OrdRange GetOrdRange(string dim) {\n    OrdRange result;\n    prefixToOrdRange.TryGetValue(dim, out result);\n    return result;\n}\n", "java": "public OrdRange getOrdRange(String dim) {\n    return prefixToOrdRange.get(dim);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581", "$$Ord", "$$Range", "\u2581Get", "$$Ord", "$$Range", "$$(string", "\u2581d", "$$im", "$$)", "\u2581{"], ["\u2581", "$$Ord", "$$Range", "\u2581result", "$$;"], ["\u2581prefix", "$$To", "$$Ord", "$$Range", "$$.", "$$TryGet", "$$Value", "$$(d", "$$im", "$$,", "\u2581out", "\u2581result", "$$)", "$$;"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Ord", "$$Range", "\u2581get", "$$Ord", "$$Range", "$$(String", "\u2581d", "$$im", "$$)", "\u2581{"], ["\u2581return", "\u2581prefix", "$$To", "$$Ord", "$$Range", "$$.get", "$$(d", "$$im", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    string symbol = string.Empty;\n    if (startIndex >= 0 && startIndex < ((ICharStream)InputStream).Size) {\n        symbol = ((ICharStream)InputStream).GetText(Interval.Of(startIndex, startIndex));\n        symbol = Utils.EscapeWhitespace(symbol, false);\n    }\n    return string.Format(CultureInfo.CurrentCulture, \"{0}('{1}')\", typeof(Antlr4.Runtime.LexerNoViableAltException).Name, symbol);\n}\n", "java": "public String toString() {\n    String symbol = \"\";\n    if (startIndex >= 0 && startIndex < getInputStream().size()) {\n        symbol = getInputStream().getText(Interval.of(startIndex,startIndex));\n        symbol = Utils.escapeWhitespace(symbol, false);\n    }\n    return String.format(Locale.getDefault(), \"%s('%s')\", LexerNoViableAltException.class.getSimpleName(), symbol);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581string", "\u2581s", "$$ymbol", "\u2581=", "\u2581string", "$$.", "$$Empty", "$$;"], ["\u2581if", "\u2581(start", "$$Index", "\u2581>=", "\u25810", "\u2581&&", "\u2581start", "$$Index", "\u2581<", "\u2581((", "$$I", "$$Char", "$$Stream", "$$)", "$$InputStream", "$$).", "$$Size)", "\u2581{"], ["\u2581s", "$$ymbol", "\u2581=", "\u2581((", "$$I", "$$Char", "$$Stream", "$$)", "$$InputStream", "$$)", "$$.Get", "$$Text", "$$(", "$$Inter", "$$val.", "$$Of(", "$$start", "$$Index,", "\u2581start", "$$Index", "$$))", "$$;"], ["\u2581s", "$$ymbol", "\u2581=", "\u2581", "$$Utils.", "$$Escape", "$$W", "$$h", "$$it", "$$es", "$$pace", "$$(s", "$$ymbol", "$$,", "\u2581false", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581string", "$$.Format", "$$(", "$$Culture", "$$Info", "$$.C", "$$urrent", "$$Culture", "$$,", "\u2581\"", "$${", "$$0", "$$}", "$$(", "$$'", "$${", "$$1", "$$}", "$$')", "$$\",", "\u2581type", "$$of", "$$(", "$$An", "$$t", "$$lr", "$$4.", "$$Runtime", "$$.", "$$Lexer", "$$No", "$$V", "$$iable", "$$Alt", "$$Exception", "$$).", "$$Name,", "\u2581s", "$$ymbol", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581String", "\u2581s", "$$ymbol", "\u2581=", "\u2581\"", "$$\"", "$$;"], ["\u2581if", "\u2581(start", "$$Index", "\u2581>=", "\u25810", "\u2581&&", "\u2581start", "$$Index", "\u2581<", "\u2581get", "$$InputStream", "$$().", "$$size", "$$())", "\u2581{"], ["\u2581s", "$$ymbol", "\u2581=", "\u2581get", "$$InputStream", "$$().get", "$$Text", "$$(", "$$Inter", "$$val.", "$$of", "$$(start", "$$Index,", "$$start", "$$Index", "$$))", "$$;"], ["\u2581s", "$$ymbol", "\u2581=", "\u2581", "$$Utils.", "$$escape", "$$W", "$$h", "$$it", "$$es", "$$pace", "$$(s", "$$ymbol", "$$,", "\u2581false", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581String", "$$.format", "$$(", "$$Local", "$$e", "$$.get", "$$Default", "$$(),", "\u2581\"", "$$%", "$$s(", "$$'", "$$%", "$$s", "$$')", "$$\",", "\u2581Lex", "$$er", "$$No", "$$V", "$$iable", "$$Alt", "$$Exception", "$$.c", "$$las", "$$s.get", "$$Simple", "$$Name", "$$(),", "\u2581s", "$$ymbol", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual E peek() {\n    return peekFirstImpl();\n}\n", "java": "public E peek() {\n    return peekFirstImpl();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581E", "\u2581p", "$$eek", "$$()", "\u2581{"], ["\u2581return", "\u2581p", "$$eek", "$$First", "$$Impl", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581E", "\u2581p", "$$eek", "$$()", "\u2581{"], ["\u2581return", "\u2581p", "$$eek", "$$First", "$$Impl", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateWorkspacesResponse CreateWorkspaces(CreateWorkspacesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateWorkspacesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateWorkspacesResponseUnmarshaller.Instance;\n    return Invoke<CreateWorkspacesResponse>(request, options);\n}\n", "java": "public CreateWorkspacesResult createWorkspaces(CreateWorkspacesRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateWorkspaces(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Workspaces", "$$Response", "\u2581Create", "$$Workspaces", "$$(Create", "$$Workspaces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Workspaces", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Workspaces", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Workspaces", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Workspaces", "$$Result", "\u2581create", "$$Workspaces", "$$(Create", "$$Workspaces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Workspaces", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override Object Clone() {\n    NumberFormatIndexRecord rec = new NumberFormatIndexRecord();\n    rec.field_1_formatIndex = field_1_formatIndex;\n    return rec;\n}\n", "java": "public NumberFormatIndexRecord clone() {\n    return copy();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581Object", "\u2581Clone()", "\u2581{"], ["\u2581Number", "$$Format", "$$Index", "$$Record", "\u2581rec", "\u2581=", "\u2581new", "\u2581Number", "$$Format", "$$Index", "$$Record", "$$()", "$$;"], ["\u2581rec", "$$.", "$$field_1_", "$$format", "$$Index", "\u2581=", "\u2581field_1_", "$$format", "$$Index", "$$;"], ["\u2581return", "\u2581rec", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Number", "$$Format", "$$Index", "$$Record", "\u2581clone()", "\u2581{"], ["\u2581return", "\u2581copy", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeRepositoriesResponse DescribeRepositories(DescribeRepositoriesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeRepositoriesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeRepositoriesResponseUnmarshaller.Instance;\n    return Invoke<DescribeRepositoriesResponse>(request, options);\n}\n", "java": "public DescribeRepositoriesResult describeRepositories(DescribeRepositoriesRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeRepositories(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Re", "$$posit", "$$or", "$$ies", "$$Response", "\u2581Describe", "$$Re", "$$posit", "$$or", "$$ies", "$$(Describe", "$$Re", "$$posit", "$$or", "$$ies", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Re", "$$posit", "$$or", "$$ies", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Re", "$$posit", "$$or", "$$ies", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Re", "$$posit", "$$or", "$$ies", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Re", "$$posit", "$$or", "$$ies", "$$Result", "\u2581describe", "$$Re", "$$posit", "$$or", "$$ies", "$$(Describe", "$$Re", "$$posit", "$$or", "$$ies", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Re", "$$posit", "$$or", "$$ies", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public SparseIntArray(int initialCapacity) {\n    initialCapacity = android.util.@internal.ArrayUtils.idealIntArraySize(initialCapacity);\n    mKeys = new int[initialCapacity];\n    mValues = new int[initialCapacity];\n    mSize = 0;\n}\n", "java": "public SparseIntArray(int initialCapacity) {\n    initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);\n    mKeys = new int[initialCapacity];\n    mValues = new int[initialCapacity];\n    mSize = 0;\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$parse", "$$Int", "$$Array", "$$(int", "\u2581in", "$$itial", "$$Capacity", "$$)", "\u2581{"], ["\u2581in", "$$itial", "$$Capacity", "\u2581=", "\u2581and", "$$ro", "$$id", "$$.", "$$util.", "$$@", "$$int", "$$er", "$$n", "$$al", "$$.Ar", "$$ray", "$$Utils.", "$$ide", "$$al", "$$Int", "$$Array", "$$Size", "$$(in", "$$itial", "$$Capacity", "$$)", "$$;"], ["\u2581m", "$$Key", "$$s", "\u2581=", "\u2581new", "\u2581int[", "$$in", "$$itial", "$$Capacity", "$$]", "$$;"], ["\u2581m", "$$Values", "\u2581=", "\u2581new", "\u2581int[", "$$in", "$$itial", "$$Capacity", "$$]", "$$;"], ["\u2581m", "$$Size", "\u2581=", "\u25810;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$parse", "$$Int", "$$Array", "$$(int", "\u2581in", "$$itial", "$$Capacity", "$$)", "\u2581{"], ["\u2581in", "$$itial", "$$Capacity", "\u2581=", "\u2581Array", "$$Utils.", "$$ide", "$$al", "$$Int", "$$Array", "$$Size", "$$(in", "$$itial", "$$Capacity", "$$)", "$$;"], ["\u2581m", "$$Key", "$$s", "\u2581=", "\u2581new", "\u2581int[", "$$in", "$$itial", "$$Capacity", "$$]", "$$;"], ["\u2581m", "$$Values", "\u2581=", "\u2581new", "\u2581int[", "$$in", "$$itial", "$$Capacity", "$$]", "$$;"], ["\u2581m", "$$Size", "\u2581=", "\u25810;"], ["\u2581}"]]}, {"cs": "public override TokenStream Create(TokenStream input) {\n    return new HyphenatedWordsFilter(input);\n}\n", "java": "public HyphenatedWordsFilter create(TokenStream input) {\n    return new HyphenatedWordsFilter(input);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581TokenStream", "\u2581Create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581H", "$$yp", "$$h", "$$en", "$$ated", "$$Word", "$$s", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581H", "$$yp", "$$h", "$$en", "$$ated", "$$Word", "$$s", "$$Filter", "\u2581create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581H", "$$yp", "$$h", "$$en", "$$ated", "$$Word", "$$s", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateDistributionWithTagsResponse CreateDistributionWithTags(CreateDistributionWithTagsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateDistributionWithTagsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateDistributionWithTagsResponseUnmarshaller.Instance;\n    return Invoke<CreateDistributionWithTagsResponse>(request, options);\n}\n", "java": "public CreateDistributionWithTagsResult createDistributionWithTags(CreateDistributionWithTagsRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateDistributionWithTags(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Distribution", "$$With", "$$Tag", "$$sResponse", "\u2581Create", "$$Distribution", "$$With", "$$Tag", "$$s(", "$$Create", "$$Distribution", "$$With", "$$Tag", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Distribution", "$$With", "$$Tag", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Distribution", "$$With", "$$Tag", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Distribution", "$$With", "$$Tag", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Distribution", "$$With", "$$Tag", "$$sResult", "\u2581create", "$$Distribution", "$$With", "$$Tag", "$$s(", "$$Create", "$$Distribution", "$$With", "$$Tag", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Distribution", "$$With", "$$Tag", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public RandomAccessFile(string fileName, string mode) : this(new java.io.File(fileName), mode) {\n    throw new System.NotImplementedException();\n}\n", "java": "public RandomAccessFile(String fileName, String mode) throws FileNotFoundException {\n    this(new File(fileName), mode);\n}\n", "cs_t": [["\u2581public", "\u2581R", "$$and", "$$om", "$$Access", "$$File", "$$(string", "\u2581file", "$$Name,", "\u2581string", "\u2581mode", "$$)", "\u2581:", "\u2581this", "$$(new", "\u2581java.", "$$io.", "$$File", "$$(", "$$file", "$$Name)", "$$,", "\u2581mode", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.NotImplemented", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581R", "$$and", "$$om", "$$Access", "$$File", "$$(String", "\u2581file", "$$Name,", "\u2581String", "\u2581mode", "$$)", "\u2581throws", "\u2581File", "$$Not", "$$Found", "$$Exception", "\u2581{"], ["\u2581this", "$$(new", "\u2581File", "$$(", "$$file", "$$Name)", "$$,", "\u2581mode", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteWorkspaceImageResponse DeleteWorkspaceImage(DeleteWorkspaceImageRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteWorkspaceImageRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteWorkspaceImageResponseUnmarshaller.Instance;\n    return Invoke<DeleteWorkspaceImageResponse>(request, options);\n}\n", "java": "public DeleteWorkspaceImageResult deleteWorkspaceImage(DeleteWorkspaceImageRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteWorkspaceImage(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Workspace", "$$Image", "$$Response", "\u2581Delete", "$$Workspace", "$$Image", "$$(Delete", "$$Workspace", "$$Image", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Workspace", "$$Image", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Workspace", "$$Image", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Workspace", "$$Image", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Workspace", "$$Image", "$$Result", "\u2581delete", "$$Workspace", "$$Image", "$$(Delete", "$$Workspace", "$$Image", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Workspace", "$$Image", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static string ToHex(int value) {\n    return ToHex((long)value, 8);\n}\n", "java": "public static String toHex(long value) {\n    StringBuilder sb = new StringBuilder(16);\n    writeHex(sb, value, 16, \"\");\n    return sb.toString();\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581string", "\u2581To", "$$Hex", "$$(int", "\u2581value)", "\u2581{"], ["\u2581return", "\u2581To", "$$Hex", "$$((", "$$long", "$$)", "$$value", "$$,", "\u25818)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581String", "\u2581to", "$$Hex", "$$(long", "\u2581value)", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder(", "$$16", "$$)", "$$;"], ["\u2581write", "$$Hex", "$$(s", "$$b", "$$,", "\u2581value", "$$,", "\u258116", "$$,", "\u2581\"", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateDistributionResponse UpdateDistribution(UpdateDistributionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateDistributionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateDistributionResponseUnmarshaller.Instance;\n    return Invoke<UpdateDistributionResponse>(request, options);\n}\n", "java": "public UpdateDistributionResult updateDistribution(UpdateDistributionRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateDistribution(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$Distribution", "$$Response", "\u2581Update", "$$Distribution", "$$(Update", "$$Distribution", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$Distribution", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$Distribution", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$Distribution", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$Distribution", "$$Result", "\u2581update", "$$Distribution", "$$(Update", "$$Distribution", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$Distribution", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public HSSFColor GetColor(short index) {\n    if (index == HSSFColor.Automatic.Index)return HSSFColor.Automatic.GetInstance();\n    else {\n        byte[] b = palette.GetColor(index);\n        if (b != null) {\n            return new CustomColor(index, b);\n        }\n    }\n    return null;\n}\n", "java": "public HSSFColor getColor(short index) {\n    if (index == HSSFColorPredefined.AUTOMATIC.getIndex()) {\n        return HSSFColorPredefined.AUTOMATIC.getColor();\n    }\n    byte[] b = _palette.getColor(index);\n    return (b == null) ? null : new CustomColor(index, b);\n}\n", "cs_t": [["\u2581public", "\u2581HSSF", "$$Color", "\u2581Get", "$$Color", "$$(short", "\u2581index)", "\u2581{"], ["\u2581if", "\u2581(index", "\u2581==", "\u2581HSSF", "$$Color", "$$.A", "$$ut", "$$o", "$$ma", "$$tic", "$$.", "$$Index)", "$$return", "\u2581HSSF", "$$Color", "$$.A", "$$ut", "$$o", "$$ma", "$$tic", "$$.Get", "$$Instance", "$$()", "$$;"], ["\u2581else", "\u2581{"], ["\u2581byte[]", "\u2581b", "\u2581=", "\u2581p", "$$alette", "$$.Get", "$$Color", "$$(index", "$$)", "$$;"], ["\u2581if", "\u2581(b", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581C", "$$ustom", "$$Color", "$$(index", "$$,", "\u2581b)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581null", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581HSSF", "$$Color", "\u2581get", "$$Color", "$$(short", "\u2581index)", "\u2581{"], ["\u2581if", "\u2581(index", "\u2581==", "\u2581HSSF", "$$Color", "$$Pre", "$$de", "$$fin", "$$ed", "$$.A", "$$UT", "$$O", "$$M", "$$AT", "$$I", "$$C", "$$.get", "$$Index", "$$())", "\u2581{"], ["\u2581return", "\u2581HSSF", "$$Color", "$$Pre", "$$de", "$$fin", "$$ed", "$$.A", "$$UT", "$$O", "$$M", "$$AT", "$$I", "$$C", "$$.get", "$$Color", "$$()", "$$;"], ["\u2581}"], ["\u2581byte[]", "\u2581b", "\u2581=", "\u2581_", "$$p", "$$alette", "$$.get", "$$Color", "$$(index", "$$)", "$$;"], ["\u2581return", "\u2581(b", "\u2581==", "\u2581null)", "\u2581?", "\u2581null", "\u2581:", "\u2581new", "\u2581C", "$$ustom", "$$Color", "$$(index", "$$,", "\u2581b)", "$$;"], ["\u2581}"]]}, {"cs": "public ValueEval Evaluate(ValueEval[] operands, int srcRow, int srcCol) {\n    throw new NotImplementedFunctionException(_functionName);\n}\n", "java": "public ValueEval evaluate(ValueEval[] operands, int srcRow, int srcCol) {\n    throw new NotImplementedFunctionException(_functionName);\n}\n", "cs_t": [["\u2581public", "\u2581ValueEval", "\u2581Evaluate", "$$(ValueEval", "$$[]", "\u2581operand", "$$s,", "\u2581int", "\u2581src", "$$Row,", "\u2581int", "\u2581src", "$$Col", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Not", "$$Implemented", "$$Function", "$$Exception(", "$$_", "$$f", "$$unction", "$$Name)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ValueEval", "\u2581evaluate", "$$(ValueEval", "$$[]", "\u2581operand", "$$s,", "\u2581int", "\u2581src", "$$Row,", "\u2581int", "\u2581src", "$$Col", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Not", "$$Implemented", "$$Function", "$$Exception(", "$$_", "$$f", "$$unction", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort((short)field_1_number_crn_records);\n    out1.WriteShort((short)field_2_sheet_table_index);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort((short)field_1_number_crn_records);\n    out.writeShort((short)field_2_sheet_table_index);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$(", "$$short)", "$$field_1_", "$$number", "$$_", "$$c", "$$rn", "$$_", "$$record", "$$s)", "$$;"], ["\u2581out1.WriteShort(", "$$(", "$$short)", "$$field_2_", "$$sheet", "$$_", "$$table", "$$_index", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(", "$$(", "$$short)", "$$field_1_", "$$number", "$$_", "$$c", "$$rn", "$$_", "$$record", "$$s)", "$$;"], ["\u2581out.writeShort(", "$$(", "$$short)", "$$field_2_", "$$sheet", "$$_", "$$table", "$$_index", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeDBEngineVersionsResponse DescribeDBEngineVersions() {\n    return DescribeDBEngineVersions(new DescribeDBEngineVersionsRequest());\n}\n", "java": "public DescribeDBEngineVersionsResult describeDBEngineVersions() {\n    return describeDBEngineVersions(new DescribeDBEngineVersionsRequest());\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581DescribeDB", "$$Engine", "$$Version", "$$sResponse", "\u2581DescribeDB", "$$Engine", "$$Version", "$$s()", "\u2581{"], ["\u2581return", "\u2581DescribeDB", "$$Engine", "$$Version", "$$s(new", "\u2581DescribeDB", "$$Engine", "$$Version", "$$sRequest", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581DescribeDB", "$$Engine", "$$Version", "$$sResult", "\u2581describe", "$$DB", "$$Engine", "$$Version", "$$s()", "\u2581{"], ["\u2581return", "\u2581describe", "$$DB", "$$Engine", "$$Version", "$$s(new", "\u2581DescribeDB", "$$Engine", "$$Version", "$$sRequest", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public FormatRun(short character, short fontIndex) {\n    this._character = character;\n    this._fontIndex = fontIndex;\n}\n", "java": "public FormatRun(short character, short fontIndex) {\n    this._character = character;\n    this._fontIndex = fontIndex;\n}\n", "cs_t": [["\u2581public", "\u2581Format", "$$Run", "$$(short", "\u2581char", "$$acter", "$$,", "\u2581short", "\u2581font", "$$Index)", "\u2581{"], ["\u2581this._", "$$char", "$$acter", "\u2581=", "\u2581char", "$$acter", "$$;"], ["\u2581this._", "$$font", "$$Index", "\u2581=", "\u2581font", "$$Index", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Format", "$$Run", "$$(short", "\u2581char", "$$acter", "$$,", "\u2581short", "\u2581font", "$$Index)", "\u2581{"], ["\u2581this._", "$$char", "$$acter", "\u2581=", "\u2581char", "$$acter", "$$;"], ["\u2581this._", "$$font", "$$Index", "\u2581=", "\u2581font", "$$Index", "$$;"], ["\u2581}"]]}, {"cs": "public static byte[] toBigEndianUtf16Bytes(char[] chars, int offset, int length) {\n    byte[] result = new byte[length * 2];\n    int end = offset + length;\n    int resultIndex = 0;\n    {\n        for (int i = offset; i < end; ++i) {\n            char ch = chars[i];\n            result[resultIndex++] = unchecked((byte)(ch >> 8));\n            result[resultIndex++] = unchecked((byte)ch);\n        }\n    }\n    return result;\n}\n", "java": "public static byte[] toBigEndianUtf16Bytes(char[] chars, int offset, int length) {\n    byte[] result = new byte[length * 2];\n    int end = offset + length;\n    int resultIndex = 0;\n    for (int i = offset; i < end; ++i) {\n        char ch = chars[i];\n        result[resultIndex++] = (byte) (ch >> 8);\n        result[resultIndex++] = (byte) ch;\n    }\n    return result;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581byte[]", "\u2581to", "$$B", "$$ig", "$$Endian", "$$U", "$$t", "$$f", "$$16", "$$Bytes", "$$(char[]", "\u2581char", "$$s,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581length)", "\u2581{"], ["\u2581byte[]", "\u2581result", "\u2581=", "\u2581new", "\u2581byte[", "$$length", "\u2581*", "\u25812", "$$]", "$$;"], ["\u2581int", "\u2581end", "\u2581=", "\u2581offset", "\u2581+", "\u2581length", "$$;"], ["\u2581int", "\u2581result", "$$Index", "\u2581=", "\u25810;"], ["\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u2581offset", "$$;", "\u2581i", "\u2581<", "\u2581end", "$$;", "\u2581++i)", "\u2581{"], ["\u2581char", "\u2581ch", "\u2581=", "\u2581char", "$$s[i]", "$$;"], ["\u2581result", "$$[", "$$result", "$$Index", "$$++]", "\u2581=", "\u2581un", "$$check", "$$ed(", "$$(byte", "$$)", "$$(", "$$ch", "\u2581>>", "\u25818", "$$))", "$$;"], ["\u2581result", "$$[", "$$result", "$$Index", "$$++]", "\u2581=", "\u2581un", "$$check", "$$ed(", "$$(byte", "$$)", "$$ch", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581byte[]", "\u2581to", "$$B", "$$ig", "$$Endian", "$$U", "$$t", "$$f", "$$16", "$$Bytes", "$$(char[]", "\u2581char", "$$s,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581length)", "\u2581{"], ["\u2581byte[]", "\u2581result", "\u2581=", "\u2581new", "\u2581byte[", "$$length", "\u2581*", "\u25812", "$$]", "$$;"], ["\u2581int", "\u2581end", "\u2581=", "\u2581offset", "\u2581+", "\u2581length", "$$;"], ["\u2581int", "\u2581result", "$$Index", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u2581offset", "$$;", "\u2581i", "\u2581<", "\u2581end", "$$;", "\u2581++i)", "\u2581{"], ["\u2581char", "\u2581ch", "\u2581=", "\u2581char", "$$s[i]", "$$;"], ["\u2581result", "$$[", "$$result", "$$Index", "$$++]", "\u2581=", "\u2581(byte)", "\u2581(", "$$ch", "\u2581>>", "\u25818)", "$$;"], ["\u2581result", "$$[", "$$result", "$$Index", "$$++]", "\u2581=", "\u2581(byte)", "\u2581ch", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UploadArchiveResponse UploadArchive(UploadArchiveRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UploadArchiveRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UploadArchiveResponseUnmarshaller.Instance;\n    return Invoke<UploadArchiveResponse>(request, options);\n}\n", "java": "public UploadArchiveResult uploadArchive(UploadArchiveRequest request) {\n    request = beforeClientExecution(request);\n    return executeUploadArchive(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Upload", "$$Ar", "$$ch", "$$ive", "$$Response", "\u2581", "$$Upload", "$$Ar", "$$ch", "$$ive", "$$(", "$$Upload", "$$Ar", "$$ch", "$$ive", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581", "$$Upload", "$$Ar", "$$ch", "$$ive", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581", "$$Upload", "$$Ar", "$$ch", "$$ive", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Upload", "$$Ar", "$$ch", "$$ive", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Upload", "$$Ar", "$$ch", "$$ive", "$$Result", "\u2581up", "$$load", "$$Ar", "$$ch", "$$ive", "$$(", "$$Upload", "$$Ar", "$$ch", "$$ive", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Upload", "$$Ar", "$$ch", "$$ive", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual IList<IToken> GetHiddenTokensToLeft(int tokenIndex) {\n    return GetHiddenTokensToLeft(tokenIndex, -1);\n}\n", "java": "public List<Token> getHiddenTokensToLeft(int tokenIndex) {\n    return getHiddenTokensToLeft(tokenIndex, -1);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581IList<", "$$I", "$$Token", "$$>", "\u2581Get", "$$H", "$$id", "$$d", "$$en", "$$Token", "$$sTo", "$$Left", "$$(int", "\u2581token", "$$Index)", "\u2581{"], ["\u2581return", "\u2581Get", "$$H", "$$id", "$$d", "$$en", "$$Token", "$$sTo", "$$Left", "$$(", "$$token", "$$Index,", "\u2581-1)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List<", "$$Token", "$$>", "\u2581get", "$$H", "$$id", "$$d", "$$en", "$$Token", "$$sTo", "$$Left", "$$(int", "\u2581token", "$$Index)", "\u2581{"], ["\u2581return", "\u2581get", "$$H", "$$id", "$$d", "$$en", "$$Token", "$$sTo", "$$Left", "$$(", "$$token", "$$Index,", "\u2581-1)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Equals(object obj) {\n    if (this == obj) {\n        return true;\n    }\n    if (!base.Equals(obj)) {\n        return false;\n    }\n    if (this.GetType() != obj.GetType()) {\n        return false;\n    }\n    AutomatonQuery other = (AutomatonQuery)obj;\n    if (!m_compiled.Equals(other.m_compiled)) {\n        return false;\n    }\n    if (m_term == null) {\n        if (other.m_term != null) {\n            return false;\n        }\n    }\n    else if (!m_term.Equals(other.m_term)) {\n        return false;\n    }\n    return true;\n}\n", "java": "public boolean equals(Object obj) {\n    if (this == obj)return true;\n    if (!super.equals(obj))return false;\n    if (getClass() != obj.getClass())return false;\n    AutomatonQuery other = (AutomatonQuery) obj;\n    if (!compiled.equals(other.compiled))return false;\n    if (term == null) {\n        if (other.term != null)return false;\n    }\n    else if (!term.equals(other.term))return false;\n    return true;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Equals(object", "\u2581obj)", "\u2581{"], ["\u2581if", "\u2581(this", "\u2581==", "\u2581obj)", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(!", "$$base", "$$.Equals(", "$$obj", "$$))", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(this", "$$.Get", "$$Type()", "\u2581!=", "\u2581obj", "$$.Get", "$$Type", "$$())", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581A", "$$ut", "$$omaton", "$$Query", "\u2581other", "\u2581=", "\u2581(", "$$Aut", "$$omaton", "$$Query", "$$)", "$$obj", "$$;"], ["\u2581if", "\u2581(!", "$$m_", "$$comp", "$$iled", "$$.Equals(", "$$other.", "$$m_", "$$comp", "$$iled", "$$))", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(m", "$$_", "$$term", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581if", "\u2581(", "$$other.", "$$m_", "$$term", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(!", "$$m_", "$$term", "$$.Equals(", "$$other.", "$$m_", "$$term", "$$))", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581equals(Object", "\u2581obj)", "\u2581{"], ["\u2581if", "\u2581(this", "\u2581==", "\u2581obj)", "$$return", "\u2581true", "$$;"], ["\u2581if", "\u2581(!", "$$s", "$$up", "$$er.", "$$equals(", "$$obj", "$$))return", "\u2581false", "$$;"], ["\u2581if", "\u2581(get", "$$Class", "$$()", "\u2581!=", "\u2581obj", "$$.get", "$$Class", "$$())", "$$return", "\u2581false", "$$;"], ["\u2581A", "$$ut", "$$omaton", "$$Query", "\u2581other", "\u2581=", "\u2581(", "$$Aut", "$$omaton", "$$Query", "$$)", "\u2581obj", "$$;"], ["\u2581if", "\u2581(!", "$$comp", "$$iled", "$$.equals(", "$$other.", "$$comp", "$$iled", "$$))return", "\u2581false", "$$;"], ["\u2581if", "\u2581(", "$$term", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581if", "\u2581(", "$$other.", "$$term", "\u2581!=", "\u2581null)", "$$return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(!", "$$term", "$$.equals(", "$$other.", "$$term", "$$))return", "\u2581false", "$$;"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]]}, {"cs": "public virtual SpanQuery MakeSpanClause() {\n    List<SpanQuery> spanQueries = new List<SpanQuery>();\n    foreach (var wsq in weightBySpanQuery) {\n        wsq.Key.Boost = wsq.Value;\n        spanQueries.Add(wsq.Key);\n    }\n    if (spanQueries.Count == 1)return spanQueries[0];\n    elsereturn new SpanOrQuery(spanQueries.ToArray());\n}\n", "java": "public SpanQuery makeSpanClause() {\n    SpanQuery [] spanQueries = new SpanQuery[size()];\n    Iterator<SpanQuery> sqi = weightBySpanQuery.keySet().iterator();\n    int i = 0;\n    while (sqi.hasNext()) {\n        SpanQuery sq = sqi.next();\n        float boost = weightBySpanQuery.get(sq);\n        if (boost != 1f) {\n            sq = new SpanBoostQuery(sq, boost);\n        }\n        spanQueries[i++] = sq;\n    }\n    if (spanQueries.length == 1)return spanQueries[0];\n    elsereturn new SpanOrQuery(spanQueries);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Span", "$$Query", "\u2581M", "$$a", "$$ke", "$$Span", "$$Cl", "$$a", "$$use", "$$()", "\u2581{"], ["\u2581List<", "$$Span", "$$Query", "$$>", "\u2581sp", "$$an", "$$Qu", "$$eries", "\u2581=", "\u2581new", "\u2581List<", "$$Span", "$$Query", "$$>", "$$()", "$$;"], ["\u2581foreach", "\u2581(v", "$$ar", "\u2581w", "$$sq", "\u2581in", "\u2581w", "$$eight", "$$By", "$$Span", "$$Query", "$$)", "\u2581{"], ["\u2581w", "$$sq", "$$.", "$$Key", "$$.", "$$Boost", "\u2581=", "\u2581w", "$$sq", "$$.", "$$Value", "$$;"], ["\u2581sp", "$$an", "$$Qu", "$$eries", "$$.Add(", "$$w", "$$sq", "$$.", "$$Key", "$$)", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(s", "$$p", "$$an", "$$Qu", "$$eries", "$$.Count", "\u2581==", "\u25811)", "$$return", "\u2581sp", "$$an", "$$Qu", "$$eries", "$$[0]", "$$;"], ["\u2581else", "$$return", "\u2581new", "\u2581Span", "$$Or", "$$Query", "$$(s", "$$p", "$$an", "$$Qu", "$$eries", "$$.To", "$$Array", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Span", "$$Query", "\u2581", "$$mak", "$$e", "$$Span", "$$Cl", "$$a", "$$use", "$$()", "\u2581{"], ["\u2581Span", "$$Query", "\u2581", "$$[]", "\u2581sp", "$$an", "$$Qu", "$$eries", "\u2581=", "\u2581new", "\u2581Span", "$$Query", "$$[", "$$size()", "$$]", "$$;"], ["\u2581Iterator<", "$$Span", "$$Query", "$$>", "\u2581s", "$$q", "$$i", "\u2581=", "\u2581w", "$$eight", "$$By", "$$Span", "$$Query", "$$.", "$$key", "$$Set", "$$().", "$$iterator", "$$()", "$$;"], ["\u2581int", "\u2581i", "\u2581=", "\u25810;"], ["\u2581while", "\u2581(s", "$$q", "$$i.", "$$has", "$$Next())", "\u2581{"], ["\u2581Span", "$$Query", "\u2581s", "$$q", "\u2581=", "\u2581s", "$$q", "$$i", "$$.next", "$$()", "$$;"], ["\u2581float", "\u2581bo", "$$ost", "\u2581=", "\u2581w", "$$eight", "$$By", "$$Span", "$$Query", "$$.get", "$$(s", "$$q", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$bo", "$$ost", "\u2581!=", "\u25811", "$$f", "$$)", "\u2581{"], ["\u2581s", "$$q", "\u2581=", "\u2581new", "\u2581Span", "$$Boost", "$$Query", "$$(s", "$$q", "$$,", "\u2581bo", "$$ost", "$$)", "$$;"], ["\u2581}"], ["\u2581sp", "$$an", "$$Qu", "$$eries", "$$[", "$$i", "$$++]", "\u2581=", "\u2581s", "$$q", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(s", "$$p", "$$an", "$$Qu", "$$eries", "$$.length", "\u2581==", "\u25811)", "$$return", "\u2581sp", "$$an", "$$Qu", "$$eries", "$$[0]", "$$;"], ["\u2581else", "$$return", "\u2581new", "\u2581Span", "$$Or", "$$Query", "$$(s", "$$p", "$$an", "$$Qu", "$$eries", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StashCreateCommand StashCreate() {\n    return new StashCreateCommand(repo);\n}\n", "java": "public StashCreateCommand stashCreate() {\n    return new StashCreateCommand(repo);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581St", "$$ash", "$$Create", "$$Command", "\u2581St", "$$ash", "$$Create", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581St", "$$ash", "$$Create", "$$Command", "$$(repo", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581St", "$$ash", "$$Create", "$$Command", "\u2581st", "$$ash", "$$Create", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581St", "$$ash", "$$Create", "$$Command", "$$(repo", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public FieldInfo FieldInfo(string fieldName) {\n    FieldInfo ret;\n    byName.TryGetValue(fieldName, out ret);\n    return ret;\n}\n", "java": "public FieldInfo fieldInfo(String fieldName) {\n    return byName.get(fieldName);\n}\n", "cs_t": [["\u2581public", "\u2581Field", "$$Info", "\u2581Field", "$$Info", "$$(string", "\u2581field", "$$Name)", "\u2581{"], ["\u2581Field", "$$Info", "\u2581ret", "$$;"], ["\u2581b", "$$y", "$$Name", "$$.", "$$TryGet", "$$Value(", "$$field", "$$Name,", "\u2581out", "\u2581ret", "$$)", "$$;"], ["\u2581return", "\u2581ret", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Field", "$$Info", "\u2581field", "$$Info", "$$(String", "\u2581field", "$$Name)", "\u2581{"], ["\u2581return", "\u2581b", "$$y", "$$Name", "$$.get", "$$(field", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeEventSourceResponse DescribeEventSource(DescribeEventSourceRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeEventSourceRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeEventSourceResponseUnmarshaller.Instance;\n    return Invoke<DescribeEventSourceResponse>(request, options);\n}\n", "java": "public DescribeEventSourceResult describeEventSource(DescribeEventSourceRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeEventSource(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Event", "$$Source", "$$Response", "\u2581Describe", "$$Event", "$$Source", "$$(Describe", "$$Event", "$$Source", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Event", "$$Source", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Event", "$$Source", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Event", "$$Source", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Event", "$$Source", "$$Result", "\u2581describe", "$$Event", "$$Source", "$$(Describe", "$$Event", "$$Source", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Event", "$$Source", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetDocumentAnalysisResponse GetDocumentAnalysis(GetDocumentAnalysisRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetDocumentAnalysisRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetDocumentAnalysisResponseUnmarshaller.Instance;\n    return Invoke<GetDocumentAnalysisResponse>(request, options);\n}\n", "java": "public GetDocumentAnalysisResult getDocumentAnalysis(GetDocumentAnalysisRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetDocumentAnalysis(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Document", "$$An", "$$al", "$$ys", "$$is", "$$Response", "\u2581Get", "$$Document", "$$An", "$$al", "$$ys", "$$is", "$$(Get", "$$Document", "$$An", "$$al", "$$ys", "$$is", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Document", "$$An", "$$al", "$$ys", "$$is", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Document", "$$An", "$$al", "$$ys", "$$is", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Document", "$$An", "$$al", "$$ys", "$$is", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Document", "$$An", "$$al", "$$ys", "$$is", "$$Result", "\u2581get", "$$Document", "$$An", "$$al", "$$ys", "$$is", "$$(Get", "$$Document", "$$An", "$$al", "$$ys", "$$is", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Document", "$$An", "$$al", "$$ys", "$$is", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CancelUpdateStackResponse CancelUpdateStack(CancelUpdateStackRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CancelUpdateStackRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CancelUpdateStackResponseUnmarshaller.Instance;\n    return Invoke<CancelUpdateStackResponse>(request, options);\n}\n", "java": "public CancelUpdateStackResult cancelUpdateStack(CancelUpdateStackRequest request) {\n    request = beforeClientExecution(request);\n    return executeCancelUpdateStack(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Cancel", "$$Update", "$$Stack", "$$Response", "\u2581Cancel", "$$Update", "$$Stack", "$$(", "$$Cancel", "$$Update", "$$Stack", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Cancel", "$$Update", "$$Stack", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Cancel", "$$Update", "$$Stack", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Cancel", "$$Update", "$$Stack", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Cancel", "$$Update", "$$Stack", "$$Result", "\u2581c", "$$ancel", "$$Update", "$$Stack", "$$(", "$$Cancel", "$$Update", "$$Stack", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Cancel", "$$Update", "$$Stack", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ModifyLoadBalancerAttributesResponse ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ModifyLoadBalancerAttributesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ModifyLoadBalancerAttributesResponseUnmarshaller.Instance;\n    return Invoke<ModifyLoadBalancerAttributesResponse>(request, options);\n}\n", "java": "public ModifyLoadBalancerAttributesResult modifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request) {\n    request = beforeClientExecution(request);\n    return executeModifyLoadBalancerAttributes(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Modify", "$$LoadBalancer", "$$Attributes", "$$Response", "\u2581Modify", "$$LoadBalancer", "$$Attributes", "$$(Modify", "$$LoadBalancer", "$$AttributesRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Modify", "$$LoadBalancer", "$$Attributes", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Modify", "$$LoadBalancer", "$$Attributes", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Modify", "$$LoadBalancer", "$$Attributes", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Modify", "$$LoadBalancer", "$$Attributes", "$$Result", "\u2581modify", "$$LoadBalancer", "$$Attributes", "$$(Modify", "$$LoadBalancer", "$$AttributesRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeModify", "$$LoadBalancer", "$$Attributes", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual SetInstanceProtectionResponse SetInstanceProtection(SetInstanceProtectionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = SetInstanceProtectionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = SetInstanceProtectionResponseUnmarshaller.Instance;\n    return Invoke<SetInstanceProtectionResponse>(request, options);\n}\n", "java": "public SetInstanceProtectionResult setInstanceProtection(SetInstanceProtectionRequest request) {\n    request = beforeClientExecution(request);\n    return executeSetInstanceProtection(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Set", "$$Instance", "$$Pro", "$$te", "$$ction", "$$Response", "\u2581Set", "$$Instance", "$$Pro", "$$te", "$$ction", "$$(", "$$Set", "$$Instance", "$$Pro", "$$te", "$$ction", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Set", "$$Instance", "$$Pro", "$$te", "$$ction", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Set", "$$Instance", "$$Pro", "$$te", "$$ction", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Set", "$$Instance", "$$Pro", "$$te", "$$ction", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Set", "$$Instance", "$$Pro", "$$te", "$$ction", "$$Result", "\u2581set", "$$Instance", "$$Pro", "$$te", "$$ction", "$$(", "$$Set", "$$Instance", "$$Pro", "$$te", "$$ction", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Set", "$$Instance", "$$Pro", "$$te", "$$ction", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ModifyDBProxyResponse ModifyDBProxy(ModifyDBProxyRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ModifyDBProxyRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ModifyDBProxyResponseUnmarshaller.Instance;\n    return Invoke<ModifyDBProxyResponse>(request, options);\n}\n", "java": "public ModifyDBProxyResult modifyDBProxy(ModifyDBProxyRequest request) {\n    request = beforeClientExecution(request);\n    return executeModifyDBProxy(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Modify", "$$DBProxy", "$$Response", "\u2581Modify", "$$DBProxy", "$$(Modify", "$$DBProxy", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Modify", "$$DBProxy", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Modify", "$$DBProxy", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Modify", "$$DBProxy", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Modify", "$$DBProxy", "$$Result", "\u2581modify", "$$DBProxy", "$$(Modify", "$$DBProxy", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeModify", "$$DBProxy", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void Add(char[] output, int offset, int len, int endOffset, int posLength) {\n    if (count == outputs.Length) {\n        CharsRef[] next = new CharsRef[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n        Array.Copy(outputs, 0, next, 0, count);\n        outputs = next;\n    }\n    if (count == endOffsets.Length) {\n        int[] next = new int[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];\n        Array.Copy(endOffsets, 0, next, 0, count);\n        endOffsets = next;\n    }\n    if (count == posLengths.Length) {\n        int[] next = new int[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];\n        Array.Copy(posLengths, 0, next, 0, count);\n        posLengths = next;\n    }\n    if (outputs[count] == null) {\n        outputs[count] = new CharsRef();\n    }\n    outputs[count].CopyChars(output, offset, len);\n    endOffsets[count] = endOffset;\n    posLengths[count] = posLength;\n    count++;\n}\n", "java": "public void add(char[] output, int offset, int len, int endOffset, int posLength) {\n    if (count == outputs.length) {\n        outputs = ArrayUtil.grow(outputs, count+1);\n    }\n    if (count == endOffsets.length) {\n        final int[] next = new int[ArrayUtil.oversize(1+count, Integer.BYTES)];\n        System.arraycopy(endOffsets, 0, next, 0, count);\n        endOffsets = next;\n    }\n    if (count == posLengths.length) {\n        final int[] next = new int[ArrayUtil.oversize(1+count, Integer.BYTES)];\n        System.arraycopy(posLengths, 0, next, 0, count);\n        posLengths = next;\n    }\n    if (outputs[count] == null) {\n        outputs[count] = new CharsRefBuilder();\n    }\n    outputs[count].copyChars(output, offset, len);\n    endOffsets[count] = endOffset;\n    posLengths[count] = posLength;\n    count++;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Add(", "$$char", "$$[]", "\u2581output", "$$,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581len", "$$,", "\u2581int", "\u2581end", "$$Offset,", "\u2581int", "\u2581pos", "$$Length", "$$)", "\u2581{"], ["\u2581if", "\u2581(count", "\u2581==", "\u2581output", "$$s.Length", "$$)", "\u2581{"], ["\u2581CharsRef", "$$[]", "\u2581next", "\u2581=", "\u2581new", "\u2581CharsRef", "$$[", "$$Array", "$$Util.", "$$Over", "$$size", "$$(", "$$1", "\u2581+", "\u2581count", "$$,", "\u2581RamUsageEstimator.NUM_BYTES_", "$$OBJECT_", "$$REF", "$$)", "$$]", "$$;"], ["\u2581Array.Copy", "$$(out", "$$put", "$$s,", "\u25810,", "\u2581next", "$$,", "\u25810,", "\u2581count)", "$$;"], ["\u2581output", "$$s", "\u2581=", "\u2581next", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(count", "\u2581==", "\u2581end", "$$Offset", "$$s.Length", "$$)", "\u2581{"], ["\u2581int[]", "\u2581next", "\u2581=", "\u2581new", "\u2581int[", "$$Array", "$$Util.", "$$Over", "$$size", "$$(", "$$1", "\u2581+", "\u2581count", "$$,", "\u2581RamUsageEstimator.NUM_BYTES_", "$$IN", "$$T", "$$32", "$$)", "$$]", "$$;"], ["\u2581Array.Copy", "$$(", "$$end", "$$Offset", "$$s,", "\u25810,", "\u2581next", "$$,", "\u25810,", "\u2581count)", "$$;"], ["\u2581end", "$$Offset", "$$s", "\u2581=", "\u2581next", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(count", "\u2581==", "\u2581pos", "$$Length", "$$s.Length", "$$)", "\u2581{"], ["\u2581int[]", "\u2581next", "\u2581=", "\u2581new", "\u2581int[", "$$Array", "$$Util.", "$$Over", "$$size", "$$(", "$$1", "\u2581+", "\u2581count", "$$,", "\u2581RamUsageEstimator.NUM_BYTES_", "$$IN", "$$T", "$$32", "$$)", "$$]", "$$;"], ["\u2581Array.Copy", "$$(", "$$pos", "$$Length", "$$s,", "\u25810,", "\u2581next", "$$,", "\u25810,", "\u2581count)", "$$;"], ["\u2581pos", "$$Length", "$$s", "\u2581=", "\u2581next", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$output", "$$s[", "$$count", "$$]", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581output", "$$s[", "$$count", "$$]", "\u2581=", "\u2581new", "\u2581CharsRef", "$$()", "$$;"], ["\u2581}"], ["\u2581output", "$$s[", "$$count", "$$]", "$$.Copy", "$$Char", "$$s(", "$$output", "$$,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581end", "$$Offset", "$$s[", "$$count", "$$]", "\u2581=", "\u2581end", "$$Offset", "$$;"], ["\u2581pos", "$$Length", "$$s[", "$$count", "$$]", "\u2581=", "\u2581pos", "$$Length", "$$;"], ["\u2581count", "$$++", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581add(", "$$char", "$$[]", "\u2581output", "$$,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581len", "$$,", "\u2581int", "\u2581end", "$$Offset,", "\u2581int", "\u2581pos", "$$Length", "$$)", "\u2581{"], ["\u2581if", "\u2581(count", "\u2581==", "\u2581output", "$$s.length", "$$)", "\u2581{"], ["\u2581output", "$$s", "\u2581=", "\u2581Array", "$$Util.", "$$g", "$$row", "$$(out", "$$put", "$$s,", "\u2581count", "$$+", "$$1)", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(count", "\u2581==", "\u2581end", "$$Offset", "$$s.length", "$$)", "\u2581{"], ["\u2581final", "\u2581int[]", "\u2581next", "\u2581=", "\u2581new", "\u2581int[", "$$Array", "$$Util.", "$$o", "$$ver", "$$size", "$$(", "$$1", "$$+", "$$count", "$$,", "\u2581Integ", "$$er.", "$$B", "$$YTE", "$$S", "$$)", "$$]", "$$;"], ["\u2581System.arraycopy", "$$(", "$$end", "$$Offset", "$$s,", "\u25810,", "\u2581next", "$$,", "\u25810,", "\u2581count)", "$$;"], ["\u2581end", "$$Offset", "$$s", "\u2581=", "\u2581next", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(count", "\u2581==", "\u2581pos", "$$Length", "$$s.length", "$$)", "\u2581{"], ["\u2581final", "\u2581int[]", "\u2581next", "\u2581=", "\u2581new", "\u2581int[", "$$Array", "$$Util.", "$$o", "$$ver", "$$size", "$$(", "$$1", "$$+", "$$count", "$$,", "\u2581Integ", "$$er.", "$$B", "$$YTE", "$$S", "$$)", "$$]", "$$;"], ["\u2581System.arraycopy", "$$(", "$$pos", "$$Length", "$$s,", "\u25810,", "\u2581next", "$$,", "\u25810,", "\u2581count)", "$$;"], ["\u2581pos", "$$Length", "$$s", "\u2581=", "\u2581next", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$output", "$$s[", "$$count", "$$]", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581output", "$$s[", "$$count", "$$]", "\u2581=", "\u2581new", "\u2581CharsRef", "$$Builder", "$$()", "$$;"], ["\u2581}"], ["\u2581output", "$$s[", "$$count", "$$]", "$$.", "$$copy", "$$Char", "$$s(", "$$output", "$$,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581end", "$$Offset", "$$s[", "$$count", "$$]", "\u2581=", "\u2581end", "$$Offset", "$$;"], ["\u2581pos", "$$Length", "$$s[", "$$count", "$$]", "\u2581=", "\u2581pos", "$$Length", "$$;"], ["\u2581count", "$$++", "$$;"], ["\u2581}"]]}, {"cs": "public FetchLibrariesRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"FetchLibraries\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public FetchLibrariesRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"FetchLibraries\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581F", "$$etch", "$$Li", "$$b", "$$r", "$$ar", "$$ies", "$$Request():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$F", "$$etch", "$$Li", "$$b", "$$r", "$$ar", "$$ies", "$$\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581F", "$$etch", "$$Li", "$$b", "$$r", "$$ar", "$$ies", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$F", "$$etch", "$$Li", "$$b", "$$r", "$$ar", "$$ies", "$$\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Exists() {\n    return objects.Exists();\n}\n", "java": "public boolean exists() {\n    return fs.exists(objects);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Ex", "$$ist", "$$s()", "\u2581{"], ["\u2581return", "\u2581object", "$$s.", "$$Ex", "$$ist", "$$s()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581ex", "$$ist", "$$s()", "\u2581{"], ["\u2581return", "\u2581f", "$$s.", "$$ex", "$$ist", "$$s(", "$$object", "$$s)", "$$;"], ["\u2581}"]]}, {"cs": "public FilterOutputStream(java.io.OutputStream @out) {\n    this.@out = @out;\n}\n", "java": "public FilterOutputStream(OutputStream out) {\n    this.out = out;\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Filter", "$$OutputStream", "$$(", "$$java.", "$$io.", "$$OutputStream", "\u2581@out", "$$)", "\u2581{"], ["\u2581this.", "$$@", "$$out", "\u2581=", "\u2581@out", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Filter", "$$OutputStream", "$$(", "$$OutputStream", "\u2581out)", "\u2581{"], ["\u2581this.", "$$out", "\u2581=", "\u2581out", "$$;"], ["\u2581}"]]}, {"cs": "public ScaleClusterRequest(): base(\"CS\", \"2015-12-15\", \"ScaleCluster\", \"cs\", \"openAPI\") {\n    UriPattern = \"/clusters/[ClusterId]\";\n    Method = MethodType.PUT;\n}\n", "java": "public ScaleClusterRequest() {\n    super(\"CS\", \"2015-12-15\", \"ScaleCluster\", \"csk\");\n    setUriPattern(\"/clusters/[ClusterId]\");\n    setMethod(MethodType.PUT);\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$cal", "$$e", "$$Cluster", "$$Request():", "\u2581base(\"", "$$C", "$$S", "$$\",", "\u2581\"201", "$$5", "$$-1", "$$2", "$$-1", "$$5", "$$\",", "\u2581\"", "$$Sc", "$$ale", "$$Cluster", "$$\",", "\u2581\"c", "$$s\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581", "$$UriPattern", "\u2581=", "\u2581\"/", "$$c", "$$l", "$$uster", "$$s", "$$/[", "$$Cluster", "$$Id", "$$]", "$$\"", "$$;"], ["\u2581Method", "\u2581=", "\u2581Method", "$$Type.", "$$P", "$$UT", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$cal", "$$e", "$$Cluster", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$C", "$$S", "$$\",", "\u2581\"201", "$$5", "$$-1", "$$2", "$$-1", "$$5", "$$\",", "\u2581\"", "$$Sc", "$$ale", "$$Cluster", "$$\",", "\u2581\"c", "$$sk", "$$\")", "$$;"], ["\u2581set", "$$UriPattern", "$$(\"/", "$$c", "$$l", "$$uster", "$$s", "$$/[", "$$Cluster", "$$Id", "$$]", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.", "$$P", "$$UT", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public IDataValidationConstraint CreateTimeConstraint(int operatorType, String formula1, String formula2) {\n    return DVConstraint.CreateTimeConstraint(operatorType, formula1, formula2);\n}\n", "java": "public DataValidationConstraint createTimeConstraint(int operatorType, String formula1, String formula2) {\n    return DVConstraint.createTimeConstraint(operatorType, formula1, formula2);\n}\n", "cs_t": [["\u2581public", "\u2581I", "$$Data", "$$Valid", "$$ation", "$$Constraint", "\u2581Create", "$$Time", "$$Constraint", "$$(int", "\u2581o", "$$per", "$$ator", "$$Type,", "\u2581String", "\u2581formula", "$$1,", "\u2581String", "\u2581formula", "$$2)", "\u2581{"], ["\u2581return", "\u2581D", "$$V", "$$Constraint", "$$.Create", "$$Time", "$$Constraint", "$$(o", "$$per", "$$ator", "$$Type,", "\u2581formula", "$$1,", "\u2581formula", "$$2)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$ata", "$$Valid", "$$ation", "$$Constraint", "\u2581create", "$$Time", "$$Constraint", "$$(int", "\u2581o", "$$per", "$$ator", "$$Type,", "\u2581String", "\u2581formula", "$$1,", "\u2581String", "\u2581formula", "$$2)", "\u2581{"], ["\u2581return", "\u2581D", "$$V", "$$Constraint", "$$.create", "$$Time", "$$Constraint", "$$(o", "$$per", "$$ator", "$$Type,", "\u2581formula", "$$1,", "\u2581formula", "$$2)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListObjectParentPathsResponse ListObjectParentPaths(ListObjectParentPathsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListObjectParentPathsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListObjectParentPathsResponseUnmarshaller.Instance;\n    return Invoke<ListObjectParentPathsResponse>(request, options);\n}\n", "java": "public ListObjectParentPathsResult listObjectParentPaths(ListObjectParentPathsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListObjectParentPaths(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Object", "$$Parent", "$$Path", "$$sResponse", "\u2581List", "$$Object", "$$Parent", "$$Path", "$$s(List", "$$Object", "$$Parent", "$$Path", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Object", "$$Parent", "$$Path", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Object", "$$Parent", "$$Path", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Object", "$$Parent", "$$Path", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Object", "$$Parent", "$$Path", "$$sResult", "\u2581list", "$$Object", "$$Parent", "$$Path", "$$s(List", "$$Object", "$$Parent", "$$Path", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Object", "$$Parent", "$$Path", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeCacheSubnetGroupsResponse DescribeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeCacheSubnetGroupsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeCacheSubnetGroupsResponseUnmarshaller.Instance;\n    return Invoke<DescribeCacheSubnetGroupsResponse>(request, options);\n}\n", "java": "public DescribeCacheSubnetGroupsResult describeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeCacheSubnetGroups(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Cache", "$$SubnetGroup", "$$sResponse", "\u2581Describe", "$$Cache", "$$SubnetGroup", "$$s(Describe", "$$Cache", "$$SubnetGroup", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Cache", "$$SubnetGroup", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Cache", "$$SubnetGroup", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Cache", "$$SubnetGroup", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Cache", "$$SubnetGroup", "$$sResult", "\u2581describe", "$$Cache", "$$SubnetGroup", "$$s(Describe", "$$Cache", "$$SubnetGroup", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Cache", "$$SubnetGroup", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void SetSharedFormula(bool flag) {\n    field_5_options =sharedFormula.SetShortBoolean(field_5_options, flag);\n}\n", "java": "public void setSharedFormula(boolean flag) {\n    field_5_options =sharedFormula.setShortBoolean(field_5_options, flag);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Set", "$$Sh", "$$ared", "$$Formula", "$$(bool", "\u2581flag", "$$)", "\u2581{"], ["\u2581field_5_", "$$options", "\u2581=", "$$sh", "$$ared", "$$Formula", "$$.Set", "$$Short", "$$Boolean", "$$(", "$$field_", "$$5_", "$$options", "$$,", "\u2581flag", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Sh", "$$ared", "$$Formula", "$$(boolean", "\u2581flag", "$$)", "\u2581{"], ["\u2581field_5_", "$$options", "\u2581=", "$$sh", "$$ared", "$$Formula", "$$.set", "$$Short", "$$Boolean", "$$(", "$$field_", "$$5_", "$$options", "$$,", "\u2581flag", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool IsReuseObjects() {\n    return reuseObjects;\n}\n", "java": "public boolean isReuseObjects() {\n    return reuseObjects;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581Is", "$$Re", "$$use", "$$Object", "$$s()", "\u2581{"], ["\u2581return", "\u2581re", "$$use", "$$Object", "$$s;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$Re", "$$use", "$$Object", "$$s()", "\u2581{"], ["\u2581return", "\u2581re", "$$use", "$$Object", "$$s;"], ["\u2581}"]]}, {"cs": "public virtual IErrorNode AddErrorNode(IToken badToken) {\n    ErrorNodeImpl t = new ErrorNodeImpl(badToken);\n    AddChild(t);\n    t.Parent = this;\n    return t;\n}\n", "java": "public ErrorNode addErrorNode(Token badToken) {\n    ErrorNodeImpl t = new ErrorNodeImpl(badToken);\n    addAnyChild(t);\n    t.setParent(this);\n    return t;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581I", "$$Error", "$$Node", "\u2581Add", "$$Error", "$$Node", "$$(I", "$$Token", "\u2581b", "$$ad", "$$Token", "$$)", "\u2581{"], ["\u2581Error", "$$Node", "$$Impl", "\u2581t", "\u2581=", "\u2581new", "\u2581Error", "$$Node", "$$Impl", "$$(b", "$$ad", "$$Token", "$$)", "$$;"], ["\u2581Add", "$$Ch", "$$ild(", "$$t", "$$)", "$$;"], ["\u2581t", "$$.", "$$Parent", "\u2581=", "\u2581this", "$$;"], ["\u2581return", "\u2581t", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Error", "$$Node", "\u2581add", "$$Error", "$$Node", "$$(", "$$Token", "\u2581b", "$$ad", "$$Token", "$$)", "\u2581{"], ["\u2581Error", "$$Node", "$$Impl", "\u2581t", "\u2581=", "\u2581new", "\u2581Error", "$$Node", "$$Impl", "$$(b", "$$ad", "$$Token", "$$)", "$$;"], ["\u2581add", "$$Any", "$$Ch", "$$ild(", "$$t", "$$)", "$$;"], ["\u2581t", "$$.set", "$$Parent", "$$(this", "$$)", "$$;"], ["\u2581return", "\u2581t", "$$;"], ["\u2581}"]]}, {"cs": "public LatvianStemFilterFactory(IDictionary<string, string> args): base(args) {\n    if (args.Count > 0) {\n        throw new System.ArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "java": "public LatvianStemFilterFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n        throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581L", "$$at", "$$v", "$$ian", "$$Stem", "$$FilterFactory(IDictionary<string,", "\u2581string>", "\u2581args):", "\u2581base(args)", "\u2581{"], ["\u2581if", "\u2581(args.Count", "\u2581>", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581L", "$$at", "$$v", "$$ian", "$$Stem", "$$FilterFactory(Map<String,String>", "\u2581args)", "\u2581{"], ["\u2581super(", "$$arg", "$$s)", "$$;"], ["\u2581if", "\u2581(!args.isEmpty())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual RemoveSourceIdentifierFromSubscriptionResponse RemoveSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.Instance;\n    return Invoke<RemoveSourceIdentifierFromSubscriptionResponse>(request, options);\n}\n", "java": "public EventSubscription removeSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request) {\n    request = beforeClientExecution(request);\n    return executeRemoveSourceIdentifierFromSubscription(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Remove", "$$Source", "$$Identifier", "$$From", "$$Subscription", "$$Response", "\u2581Remove", "$$Source", "$$Identifier", "$$From", "$$Subscription", "$$(", "$$Remove", "$$Source", "$$Identifier", "$$From", "$$Subscription", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Remove", "$$Source", "$$Identifier", "$$From", "$$Subscription", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Remove", "$$Source", "$$Identifier", "$$From", "$$Subscription", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Remove", "$$Source", "$$Identifier", "$$From", "$$Subscription", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Event", "$$Subscription", "\u2581remove", "$$Source", "$$Identifier", "$$From", "$$Subscription", "$$(", "$$Remove", "$$Source", "$$Identifier", "$$From", "$$Subscription", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Remove", "$$Source", "$$Identifier", "$$From", "$$Subscription", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static TokenFilterFactory ForName(string name, IDictionary<string, string> args) {\n    return loader.NewInstance(name, args);\n}\n", "java": "public static TokenFilterFactory forName(String name, Map<String,String> args) {\n    return loader.newInstance(name, args);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581Token", "$$Filter", "$$Factory", "\u2581", "$$For", "$$Name", "$$(string", "\u2581name,", "\u2581I", "$$D", "$$ictionary<string,", "\u2581string>", "\u2581args)", "\u2581{"], ["\u2581return", "\u2581load", "$$er.", "$$New", "$$Instance", "$$(name,", "\u2581args)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581Token", "$$Filter", "$$Factory", "\u2581for", "$$Name", "$$(String", "\u2581name,", "\u2581M", "$$ap", "$$<", "$$String,", "$$String>", "\u2581args)", "\u2581{"], ["\u2581return", "\u2581load", "$$er.", "$$new", "$$Instance", "$$(name,", "\u2581args)", "$$;"], ["\u2581}"]]}, {"cs": "public AddAlbumPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"AddAlbumPhotos\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public AddAlbumPhotosRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"AddAlbumPhotos\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581Add", "$$Al", "$$b", "$$um", "$$Photo", "$$sRequest", "$$():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Add", "$$Al", "$$b", "$$um", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Add", "$$Al", "$$b", "$$um", "$$Photo", "$$sRequest", "$$()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Add", "$$Al", "$$b", "$$um", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetThreatIntelSetResponse GetThreatIntelSet(GetThreatIntelSetRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetThreatIntelSetRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetThreatIntelSetResponseUnmarshaller.Instance;\n    return Invoke<GetThreatIntelSetResponse>(request, options);\n}\n", "java": "public GetThreatIntelSetResult getThreatIntelSet(GetThreatIntelSetRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetThreatIntelSet(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Th", "$$reat", "$$In", "$$te", "$$l", "$$Set", "$$Response", "\u2581Get", "$$Th", "$$reat", "$$In", "$$te", "$$l", "$$Set", "$$(Get", "$$Th", "$$reat", "$$In", "$$te", "$$l", "$$Set", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Th", "$$reat", "$$In", "$$te", "$$l", "$$Set", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Th", "$$reat", "$$In", "$$te", "$$l", "$$Set", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Th", "$$reat", "$$In", "$$te", "$$l", "$$Set", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Th", "$$reat", "$$In", "$$te", "$$l", "$$Set", "$$Result", "\u2581get", "$$Th", "$$reat", "$$In", "$$te", "$$l", "$$Set", "$$(Get", "$$Th", "$$reat", "$$In", "$$te", "$$l", "$$Set", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Th", "$$reat", "$$In", "$$te", "$$l", "$$Set", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override TreeFilter Clone() {\n    return new AndTreeFilter.Binary(a.Clone(), b.Clone());\n}\n", "java": "public RevFilter clone() {\n    return new Binary(a.clone(), b.clone());\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581TreeFilter", "\u2581Clone()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581An", "$$d", "$$TreeFilter", "$$.B", "$$inary", "$$(a", "$$.", "$$Clone", "$$(),", "\u2581b.", "$$Clone", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581RevFilter", "\u2581clone()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581B", "$$inary", "$$(a", "$$.c", "$$lone", "$$(),", "\u2581b", "$$.c", "$$lone", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Equals(object o) {\n    return o is ArmenianStemmer;\n}\n", "java": "public boolean equals( Object o ) {\n    return o instanceof ArmenianStemmer;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Equals(object", "\u2581o)", "\u2581{"], ["\u2581return", "\u2581o", "\u2581is", "\u2581", "$$Ar", "$$m", "$$en", "$$ian", "$$Stem", "$$mer", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581equals(", "\u2581Object", "\u2581o", "\u2581)", "\u2581{"], ["\u2581return", "\u2581o", "\u2581instanceof", "\u2581", "$$Ar", "$$m", "$$en", "$$ian", "$$Stem", "$$mer", "$$;"], ["\u2581}"]]}, {"cs": "public sealed override bool hasArray() {\n    return protectedHasArray();\n}\n", "java": "public final boolean hasArray() {\n    return protectedHasArray();\n}\n", "cs_t": [["\u2581public", "\u2581sealed", "\u2581override", "\u2581bool", "\u2581has", "$$Array", "$$()", "\u2581{"], ["\u2581return", "\u2581pro", "$$te", "$$c", "$$ted", "$$Has", "$$Array", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581boolean", "\u2581has", "$$Array", "$$()", "\u2581{"], ["\u2581return", "\u2581pro", "$$te", "$$c", "$$ted", "$$Has", "$$Array", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateContributorInsightsResponse UpdateContributorInsights(UpdateContributorInsightsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateContributorInsightsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateContributorInsightsResponseUnmarshaller.Instance;\n    return Invoke<UpdateContributorInsightsResponse>(request, options);\n}\n", "java": "public UpdateContributorInsightsResult updateContributorInsights(UpdateContributorInsightsRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateContributorInsights(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$Con", "$$trib", "$$utor", "$$Insight", "$$sResponse", "\u2581Update", "$$Con", "$$trib", "$$utor", "$$Insight", "$$s(", "$$Update", "$$Con", "$$trib", "$$utor", "$$Insight", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$Con", "$$trib", "$$utor", "$$Insight", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$Con", "$$trib", "$$utor", "$$Insight", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$Con", "$$trib", "$$utor", "$$Insight", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$Con", "$$trib", "$$utor", "$$Insight", "$$sResult", "\u2581update", "$$Con", "$$trib", "$$utor", "$$Insight", "$$s(", "$$Update", "$$Con", "$$trib", "$$utor", "$$Insight", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$Con", "$$trib", "$$utor", "$$Insight", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void UnwriteProtectWorkbook() {\n    records.Remove(fileShare);\n    records.Remove(WriteProtect);\n    fileShare = null;\n    writeProtect = null;\n}\n", "java": "public void unwriteProtectWorkbook() {\n    records.remove(fileShare);\n    records.remove(writeProtect);\n    fileShare = null;\n    writeProtect = null;\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Un", "$$write", "$$Protect", "$$Workbook", "$$()", "\u2581{"], ["\u2581record", "$$s.", "$$Remove", "$$(", "$$file", "$$Sh", "$$are", "$$)", "$$;"], ["\u2581record", "$$s.", "$$Remove", "$$(", "$$Write", "$$Protect", "$$)", "$$;"], ["\u2581file", "$$Sh", "$$are", "\u2581=", "\u2581null", "$$;"], ["\u2581write", "$$Protect", "\u2581=", "\u2581null", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581un", "$$write", "$$Protect", "$$Workbook", "$$()", "\u2581{"], ["\u2581record", "$$s.", "$$re", "$$move", "$$(", "$$file", "$$Sh", "$$are", "$$)", "$$;"], ["\u2581record", "$$s.", "$$re", "$$move", "$$(w", "$$rite", "$$Protect", "$$)", "$$;"], ["\u2581file", "$$Sh", "$$are", "\u2581=", "\u2581null", "$$;"], ["\u2581write", "$$Protect", "\u2581=", "\u2581null", "$$;"], ["\u2581}"]]}, {"cs": "public SolrSynonymParser(bool dedup, bool expand, Analyzer analyzer): base(dedup, analyzer) {\n    this.expand = expand;\n}\n", "java": "public SolrSynonymParser(boolean dedup, boolean expand, Analyzer analyzer) {\n    super(dedup, analyzer);\n    this.expand = expand;\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$ol", "$$r", "$$Syn", "$$on", "$$ym", "$$Parser", "$$(bool", "\u2581de", "$$d", "$$up", "$$,", "\u2581bool", "\u2581exp", "$$and", "$$,", "\u2581An", "$$alyzer", "\u2581analyzer", "$$):", "\u2581base", "$$(", "$$ded", "$$up", "$$,", "\u2581analyzer", "$$)", "\u2581{"], ["\u2581this.", "$$exp", "$$and", "\u2581=", "\u2581exp", "$$and", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$ol", "$$r", "$$Syn", "$$on", "$$ym", "$$Parser", "$$(boolean", "\u2581de", "$$d", "$$up", "$$,", "\u2581boolean", "\u2581exp", "$$and", "$$,", "\u2581An", "$$alyzer", "\u2581analyzer", "$$)", "\u2581{"], ["\u2581super(", "$$ded", "$$up", "$$,", "\u2581analyzer", "$$)", "$$;"], ["\u2581this.", "$$exp", "$$and", "\u2581=", "\u2581exp", "$$and", "$$;"], ["\u2581}"]]}, {"cs": "public virtual RequestSpotInstancesResponse RequestSpotInstances(RequestSpotInstancesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = RequestSpotInstancesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = RequestSpotInstancesResponseUnmarshaller.Instance;\n    return Invoke<RequestSpotInstancesResponse>(request, options);\n}\n", "java": "public RequestSpotInstancesResult requestSpotInstances(RequestSpotInstancesRequest request) {\n    request = beforeClientExecution(request);\n    return executeRequestSpotInstances(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Request", "$$Spot", "$$Instances", "$$Response", "\u2581", "$$Request", "$$Spot", "$$Instances", "$$(", "$$Request", "$$Spot", "$$InstancesRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581", "$$Request", "$$Spot", "$$Instances", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581", "$$Request", "$$Spot", "$$Instances", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Request", "$$Spot", "$$Instances", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Request", "$$Spot", "$$Instances", "$$Result", "\u2581request", "$$Spot", "$$Instances", "$$(", "$$Request", "$$Spot", "$$InstancesRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Request", "$$Spot", "$$Instances", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public byte[] GetObjectData() {\n    return FindObjectRecord().ObjectData;\n}\n", "java": "public byte[] getObjectData() {\n    return findObjectRecord().getObjectData();\n}\n", "cs_t": [["\u2581public", "\u2581byte[]", "\u2581Get", "$$Object", "$$Data", "$$()", "\u2581{"], ["\u2581return", "\u2581F", "$$ind", "$$Object", "$$Record", "$$().", "$$Object", "$$Data", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581byte[]", "\u2581get", "$$Object", "$$Data", "$$()", "\u2581{"], ["\u2581return", "\u2581find", "$$Object", "$$Record", "$$().get", "$$Object", "$$Data", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetContactAttributesResponse GetContactAttributes(GetContactAttributesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetContactAttributesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetContactAttributesResponseUnmarshaller.Instance;\n    return Invoke<GetContactAttributesResponse>(request, options);\n}\n", "java": "public GetContactAttributesResult getContactAttributes(GetContactAttributesRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetContactAttributes(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Contact", "$$Attributes", "$$Response", "\u2581Get", "$$Contact", "$$Attributes", "$$(Get", "$$Contact", "$$AttributesRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Contact", "$$Attributes", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Contact", "$$Attributes", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Contact", "$$Attributes", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Contact", "$$Attributes", "$$Result", "\u2581get", "$$Contact", "$$Attributes", "$$(Get", "$$Contact", "$$AttributesRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Contact", "$$Attributes", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return GetKey() + \": \" + GetValue();\n}\n", "java": "public String toString() {\n    return getKey() + \": \" + getValue();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581Get", "$$Key", "$$()", "\u2581+", "\u2581\":", "\u2581\"", "\u2581+", "\u2581Get", "$$Value", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581get", "$$Key", "$$()", "\u2581+", "\u2581\":", "\u2581\"", "\u2581+", "\u2581get", "$$Value", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListTextTranslationJobsResponse ListTextTranslationJobs(ListTextTranslationJobsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListTextTranslationJobsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListTextTranslationJobsResponseUnmarshaller.Instance;\n    return Invoke<ListTextTranslationJobsResponse>(request, options);\n}\n", "java": "public ListTextTranslationJobsResult listTextTranslationJobs(ListTextTranslationJobsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListTextTranslationJobs(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Text", "$$Trans", "$$lation", "$$Job", "$$sResponse", "\u2581List", "$$Text", "$$Trans", "$$lation", "$$Job", "$$s(List", "$$Text", "$$Trans", "$$lation", "$$Job", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Text", "$$Trans", "$$lation", "$$Job", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Text", "$$Trans", "$$lation", "$$Job", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Text", "$$Trans", "$$lation", "$$Job", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Text", "$$Trans", "$$lation", "$$Job", "$$sResult", "\u2581list", "$$Text", "$$Trans", "$$lation", "$$Job", "$$s(List", "$$Text", "$$Trans", "$$lation", "$$Job", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Text", "$$Trans", "$$lation", "$$Job", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetContactMethodsResponse GetContactMethods(GetContactMethodsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetContactMethodsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetContactMethodsResponseUnmarshaller.Instance;\n    return Invoke<GetContactMethodsResponse>(request, options);\n}\n", "java": "public GetContactMethodsResult getContactMethods(GetContactMethodsRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetContactMethods(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Contact", "$$Method", "$$sResponse", "\u2581Get", "$$Contact", "$$Method", "$$s(Get", "$$Contact", "$$Method", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Contact", "$$Method", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Contact", "$$Method", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Contact", "$$Method", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Contact", "$$Method", "$$sResult", "\u2581get", "$$Contact", "$$Method", "$$s(Get", "$$Contact", "$$Method", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Contact", "$$Method", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static short LookupIndexByName(String name) {\n    FunctionMetadata fd = GetInstance().GetFunctionByNameInternal(name);\n    if (fd == null) {\n        return -1;\n    }\n    return (short)fd.Index;\n}\n", "java": "public static short lookupIndexByName(String name) {\n    FunctionMetadata fd = getInstance().getFunctionByNameInternal(name);\n    if (fd == null) {\n        fd = getInstanceCetab().getFunctionByNameInternal(name);\n        if (fd == null) {\n            return -1;\n        }\n    }\n    return (short) fd.getIndex();\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581short", "\u2581", "$$Lookup", "$$Index", "$$By", "$$Name", "$$(String", "\u2581name)", "\u2581{"], ["\u2581F", "$$unction", "$$Metadata", "\u2581f", "$$d", "\u2581=", "\u2581Get", "$$Instance", "$$()", "$$.Get", "$$Function", "$$By", "$$Name", "$$Internal", "$$(name", "$$)", "$$;"], ["\u2581if", "\u2581(f", "$$d", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581return", "\u2581(short)", "$$f", "$$d", "$$.", "$$Index", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581short", "\u2581lo", "$$okup", "$$Index", "$$By", "$$Name", "$$(String", "\u2581name)", "\u2581{"], ["\u2581F", "$$unction", "$$Metadata", "\u2581f", "$$d", "\u2581=", "\u2581get", "$$Instance", "$$().get", "$$Function", "$$By", "$$Name", "$$Internal", "$$(name", "$$)", "$$;"], ["\u2581if", "\u2581(f", "$$d", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581f", "$$d", "\u2581=", "\u2581get", "$$Instance", "$$C", "$$et", "$$ab", "$$().get", "$$Function", "$$By", "$$Name", "$$Internal", "$$(name", "$$)", "$$;"], ["\u2581if", "\u2581(f", "$$d", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581(short)", "\u2581f", "$$d", "$$.get", "$$Index", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeAnomalyDetectorsResponse DescribeAnomalyDetectors(DescribeAnomalyDetectorsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeAnomalyDetectorsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeAnomalyDetectorsResponseUnmarshaller.Instance;\n    return Invoke<DescribeAnomalyDetectorsResponse>(request, options);\n}\n", "java": "public DescribeAnomalyDetectorsResult describeAnomalyDetectors(DescribeAnomalyDetectorsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeAnomalyDetectors(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$An", "$$om", "$$aly", "$$Detector", "$$sResponse", "\u2581Describe", "$$An", "$$om", "$$aly", "$$Detector", "$$s(Describe", "$$An", "$$om", "$$aly", "$$Detector", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$An", "$$om", "$$aly", "$$Detector", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$An", "$$om", "$$aly", "$$Detector", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$An", "$$om", "$$aly", "$$Detector", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$An", "$$om", "$$aly", "$$Detector", "$$sResult", "\u2581describe", "$$An", "$$om", "$$aly", "$$Detector", "$$s(Describe", "$$An", "$$om", "$$aly", "$$Detector", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$An", "$$om", "$$aly", "$$Detector", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static string InsertId(string message, ObjectId changeId) {\n    return InsertId(message, changeId, false);\n}\n", "java": "public static String insertId(String message, ObjectId changeId) {\n    return insertId(message, changeId, false);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581string", "\u2581In", "$$sert", "$$Id(", "$$string", "\u2581message", "$$,", "\u2581ObjectId", "\u2581ch", "$$ange", "$$Id)", "\u2581{"], ["\u2581return", "\u2581In", "$$sert", "$$Id(", "$$m", "$$essage", "$$,", "\u2581ch", "$$ange", "$$Id,", "\u2581false", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581String", "\u2581insert", "$$Id(", "$$String", "\u2581message", "$$,", "\u2581ObjectId", "\u2581ch", "$$ange", "$$Id)", "\u2581{"], ["\u2581return", "\u2581insert", "$$Id(", "$$m", "$$essage", "$$,", "\u2581ch", "$$ange", "$$Id,", "\u2581false", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override long GetObjectSize(AnyObjectId objectId, int typeHint) {\n    long sz = db.GetObjectSize(this, objectId);\n    if (sz < 0) {\n        if (typeHint == OBJ_ANY) {\n            throw new MissingObjectException(objectId.Copy(), \"unknown\");\n        }\n        throw new MissingObjectException(objectId.Copy(), typeHint);\n    }\n    return sz;\n}\n", "java": "public long getObjectSize(AnyObjectId objectId, int typeHint)throws MissingObjectException, IncorrectObjectTypeException,IOException {\n    long sz = db.getObjectSize(this, objectId);\n    if (sz < 0) {\n        if (typeHint == OBJ_ANY)throw new MissingObjectException(objectId.copy(),JGitText.get().unknownObjectType2);\n        throw new MissingObjectException(objectId.copy(), typeHint);\n    }\n    return sz;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581long", "\u2581Get", "$$Object", "$$Size", "$$(", "$$AnyObjectId", "\u2581object", "$$Id,", "\u2581int", "\u2581type", "$$H", "$$int)", "\u2581{"], ["\u2581long", "\u2581sz", "\u2581=", "\u2581db", "$$.Get", "$$Object", "$$Size", "$$(this,", "\u2581object", "$$Id)", "$$;"], ["\u2581if", "\u2581(s", "$$z", "\u2581<", "\u25810)", "\u2581{"], ["\u2581if", "\u2581(t", "$$ype", "$$H", "$$int", "\u2581==", "\u2581", "$$OBJ", "$$_", "$$AN", "$$Y", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581M", "$$issing", "$$Object", "$$Exception", "$$(object", "$$Id", "$$.Copy", "$$(),", "\u2581\"", "$$un", "$$known", "$$\")", "$$;"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581M", "$$issing", "$$Object", "$$Exception", "$$(object", "$$Id", "$$.Copy", "$$(),", "\u2581type", "$$H", "$$int)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581sz", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581long", "\u2581get", "$$Object", "$$Size", "$$(", "$$AnyObjectId", "\u2581object", "$$Id,", "\u2581int", "\u2581type", "$$H", "$$int)", "$$throw", "$$s", "\u2581M", "$$issing", "$$Object", "$$Exception", "$$,", "\u2581In", "$$c", "$$or", "$$re", "$$ct", "$$Object", "$$Type", "$$Exception", "$$,", "$$I", "$$OException", "\u2581{"], ["\u2581long", "\u2581sz", "\u2581=", "\u2581db", "$$.get", "$$Object", "$$Size", "$$(this,", "\u2581object", "$$Id)", "$$;"], ["\u2581if", "\u2581(s", "$$z", "\u2581<", "\u25810)", "\u2581{"], ["\u2581if", "\u2581(t", "$$ype", "$$H", "$$int", "\u2581==", "\u2581", "$$OBJ", "$$_", "$$AN", "$$Y", "$$)", "$$throw", "\u2581new", "\u2581M", "$$issing", "$$Object", "$$Exception", "$$(object", "$$Id", "$$.", "$$copy", "$$(),", "$$JGitText", "$$.get().", "$$un", "$$known", "$$Object", "$$Type", "$$2)", "$$;"], ["\u2581throw", "\u2581new", "\u2581M", "$$issing", "$$Object", "$$Exception", "$$(object", "$$Id", "$$.", "$$copy", "$$(),", "\u2581type", "$$H", "$$int)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581sz", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ImportInstallationMediaResponse ImportInstallationMedia(ImportInstallationMediaRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ImportInstallationMediaRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ImportInstallationMediaResponseUnmarshaller.Instance;\n    return Invoke<ImportInstallationMediaResponse>(request, options);\n}\n", "java": "public ImportInstallationMediaResult importInstallationMedia(ImportInstallationMediaRequest request) {\n    request = beforeClientExecution(request);\n    return executeImportInstallationMedia(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581I", "$$mport", "$$In", "$$st", "$$all", "$$ation", "$$M", "$$ed", "$$ia", "$$Response", "\u2581I", "$$mport", "$$In", "$$st", "$$all", "$$ation", "$$M", "$$ed", "$$ia", "$$(I", "$$mport", "$$In", "$$st", "$$all", "$$ation", "$$M", "$$ed", "$$ia", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581I", "$$mport", "$$In", "$$st", "$$all", "$$ation", "$$M", "$$ed", "$$ia", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581I", "$$mport", "$$In", "$$st", "$$all", "$$ation", "$$M", "$$ed", "$$ia", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Import", "$$In", "$$st", "$$all", "$$ation", "$$M", "$$ed", "$$ia", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581I", "$$mport", "$$In", "$$st", "$$all", "$$ation", "$$M", "$$ed", "$$ia", "$$Result", "\u2581i", "$$mport", "$$In", "$$st", "$$all", "$$ation", "$$M", "$$ed", "$$ia", "$$(I", "$$mport", "$$In", "$$st", "$$all", "$$ation", "$$M", "$$ed", "$$ia", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Import", "$$In", "$$st", "$$all", "$$ation", "$$M", "$$ed", "$$ia", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual PutLifecycleEventHookExecutionStatusResponse PutLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = PutLifecycleEventHookExecutionStatusRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = PutLifecycleEventHookExecutionStatusResponseUnmarshaller.Instance;\n    return Invoke<PutLifecycleEventHookExecutionStatusResponse>(request, options);\n}\n", "java": "public PutLifecycleEventHookExecutionStatusResult putLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request) {\n    request = beforeClientExecution(request);\n    return executePutLifecycleEventHookExecutionStatus(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Put", "$$Lifecycle", "$$Event", "$$H", "$$o", "$$ok", "$$Execution", "$$Statu", "$$sResponse", "\u2581Put", "$$Lifecycle", "$$Event", "$$H", "$$o", "$$ok", "$$Execution", "$$Statu", "$$s(", "$$Put", "$$Lifecycle", "$$Event", "$$H", "$$o", "$$ok", "$$Execution", "$$Statu", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Put", "$$Lifecycle", "$$Event", "$$H", "$$o", "$$ok", "$$Execution", "$$Status", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Put", "$$Lifecycle", "$$Event", "$$H", "$$o", "$$ok", "$$Execution", "$$Status", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Put", "$$Lifecycle", "$$Event", "$$H", "$$o", "$$ok", "$$Execution", "$$Statu", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Put", "$$Lifecycle", "$$Event", "$$H", "$$o", "$$ok", "$$Execution", "$$Statu", "$$sResult", "\u2581put", "$$Lifecycle", "$$Event", "$$H", "$$o", "$$ok", "$$Execution", "$$Statu", "$$s(", "$$Put", "$$Lifecycle", "$$Event", "$$H", "$$o", "$$ok", "$$Execution", "$$Statu", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executePut", "$$Lifecycle", "$$Event", "$$H", "$$o", "$$ok", "$$Execution", "$$Status", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public NumberPtg(ILittleEndianInput in1) {\n    field_1_value = in1.ReadDouble();\n}\n", "java": "public NumberPtg(LittleEndianInput in)  {\n    this(in.readDouble());\n}\n", "cs_t": [["\u2581public", "\u2581Number", "$$Ptg", "$$(I", "$$LittleEndian", "$$Input", "\u2581in1)", "\u2581{"], ["\u2581field_1_", "$$value", "\u2581=", "\u2581in1.Read", "$$Double", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Number", "$$Ptg", "$$(", "$$LittleEndian", "$$Input", "\u2581in)", "\u2581", "\u2581{"], ["\u2581this", "$$(in", "$$.read", "$$Double", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetFieldLevelEncryptionConfigResponse GetFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetFieldLevelEncryptionConfigRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetFieldLevelEncryptionConfigResponseUnmarshaller.Instance;\n    return Invoke<GetFieldLevelEncryptionConfigResponse>(request, options);\n}\n", "java": "public GetFieldLevelEncryptionConfigResult getFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetFieldLevelEncryptionConfig(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$FieldLevelEncryption", "$$Config", "$$Response", "\u2581Get", "$$FieldLevelEncryption", "$$Config", "$$(Get", "$$FieldLevelEncryption", "$$Config", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$FieldLevelEncryption", "$$Config", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$FieldLevelEncryption", "$$Config", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$FieldLevelEncryption", "$$Config", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$FieldLevelEncryption", "$$Config", "$$Result", "\u2581get", "$$FieldLevelEncryption", "$$Config", "$$(Get", "$$FieldLevelEncryption", "$$Config", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$FieldLevelEncryption", "$$Config", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeDetectorResponse DescribeDetector(DescribeDetectorRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeDetectorRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeDetectorResponseUnmarshaller.Instance;\n    return Invoke<DescribeDetectorResponse>(request, options);\n}\n", "java": "public DescribeDetectorResult describeDetector(DescribeDetectorRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeDetector(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Detector", "$$Response", "\u2581Describe", "$$Detector", "$$(Describe", "$$Detector", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Detector", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Detector", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Detector", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Detector", "$$Result", "\u2581describe", "$$Detector", "$$(Describe", "$$Detector", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Detector", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ReportInstanceStatusResponse ReportInstanceStatus(ReportInstanceStatusRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ReportInstanceStatusRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ReportInstanceStatusResponseUnmarshaller.Instance;\n    return Invoke<ReportInstanceStatusResponse>(request, options);\n}\n", "java": "public ReportInstanceStatusResult reportInstanceStatus(ReportInstanceStatusRequest request) {\n    request = beforeClientExecution(request);\n    return executeReportInstanceStatus(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Re", "$$port", "$$Instance", "$$Statu", "$$sResponse", "\u2581Re", "$$port", "$$Instance", "$$Statu", "$$s(", "$$Report", "$$Instance", "$$Statu", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Re", "$$port", "$$Instance", "$$Status", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Re", "$$port", "$$Instance", "$$Status", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Report", "$$Instance", "$$Statu", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Re", "$$port", "$$Instance", "$$Statu", "$$sResult", "\u2581re", "$$port", "$$Instance", "$$Statu", "$$s(", "$$Report", "$$Instance", "$$Statu", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Report", "$$Instance", "$$Status", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteAlarmResponse DeleteAlarm(DeleteAlarmRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteAlarmRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteAlarmResponseUnmarshaller.Instance;\n    return Invoke<DeleteAlarmResponse>(request, options);\n}\n", "java": "public DeleteAlarmResult deleteAlarm(DeleteAlarmRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteAlarm(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Alarm", "$$Response", "\u2581Delete", "$$Alarm", "$$(Delete", "$$Alarm", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Alarm", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Alarm", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Alarm", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Alarm", "$$Result", "\u2581delete", "$$Alarm", "$$(Delete", "$$Alarm", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Alarm", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override TokenStream Create(TokenStream input) {\n    return new PortugueseStemFilter(input);\n}\n", "java": "public TokenStream create(TokenStream input) {\n    return new PortugueseStemFilter(input);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581TokenStream", "\u2581Create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581P", "$$or", "$$tu", "$$g", "$$ues", "$$e", "$$Stem", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581TokenStream", "\u2581create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581P", "$$or", "$$tu", "$$g", "$$ues", "$$e", "$$Stem", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public FtCblsSubRecord() {\n    reserved = new byte[ENCODED_SIZE];\n}\n", "java": "public FtCblsSubRecord() {\n    reserved = new byte[ENCODED_SIZE];\n}\n", "cs_t": [["\u2581public", "\u2581F", "$$t", "$$C", "$$b", "$$l", "$$s", "$$Sub", "$$Record", "$$()", "\u2581{"], ["\u2581res", "$$erved", "\u2581=", "\u2581new", "\u2581byte[", "$$EN", "$$CO", "$$DE", "$$D_", "$$SIZE", "$$]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581F", "$$t", "$$C", "$$b", "$$l", "$$s", "$$Sub", "$$Record", "$$()", "\u2581{"], ["\u2581res", "$$erved", "\u2581=", "\u2581new", "\u2581byte[", "$$EN", "$$CO", "$$DE", "$$D_", "$$SIZE", "$$]", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool remove(object @object) {\n    lock (mutex) {\n        return c.remove(@object);\n    }\n}\n", "java": "@Override public boolean remove(Object object) {\n    synchronized (mutex) {\n        return c.remove(object);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581remove", "$$(object", "\u2581@object)", "\u2581{"], ["\u2581lock", "\u2581(m", "$$u", "$$tex", "$$)", "\u2581{"], ["\u2581return", "\u2581c", "$$.remove", "$$(@", "$$object", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581@Override", "\u2581public", "\u2581boolean", "\u2581remove", "$$(Object", "\u2581object)", "\u2581{"], ["\u2581synchronized", "\u2581(m", "$$u", "$$tex", "$$)", "\u2581{"], ["\u2581return", "\u2581c", "$$.remove", "$$(object", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual GetDedicatedIpResponse GetDedicatedIp(GetDedicatedIpRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetDedicatedIpRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetDedicatedIpResponseUnmarshaller.Instance;\n    return Invoke<GetDedicatedIpResponse>(request, options);\n}\n", "java": "public GetDedicatedIpResult getDedicatedIp(GetDedicatedIpRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetDedicatedIp(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Dedicated", "$$Ip", "$$Response", "\u2581Get", "$$Dedicated", "$$Ip", "$$(Get", "$$Dedicated", "$$Ip", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Dedicated", "$$Ip", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Dedicated", "$$Ip", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Dedicated", "$$Ip", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Dedicated", "$$Ip", "$$Result", "\u2581get", "$$Dedicated", "$$Ip", "$$(Get", "$$Dedicated", "$$Ip", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Dedicated", "$$Ip", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return precedence + \" >= _p\";\n}\n", "java": "public String toString() {\n    return precedence + \" >= _p\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581precedence", "\u2581+", "\u2581\"", "\u2581>=", "\u2581_", "$$p", "$$\"", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581precedence", "\u2581+", "\u2581\"", "\u2581>=", "\u2581_", "$$p", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListStreamProcessorsResponse ListStreamProcessors(ListStreamProcessorsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListStreamProcessorsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListStreamProcessorsResponseUnmarshaller.Instance;\n    return Invoke<ListStreamProcessorsResponse>(request, options);\n}\n", "java": "public ListStreamProcessorsResult listStreamProcessors(ListStreamProcessorsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListStreamProcessors(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Stream", "$$Processor", "$$sResponse", "\u2581List", "$$Stream", "$$Processor", "$$s(List", "$$Stream", "$$Processor", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Stream", "$$Processor", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Stream", "$$Processor", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Stream", "$$Processor", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Stream", "$$Processor", "$$sResult", "\u2581list", "$$Stream", "$$Processor", "$$s(List", "$$Stream", "$$Processor", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Stream", "$$Processor", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public DeleteLoadBalancerPolicyRequest(string loadBalancerName, string policyName) {\n    _loadBalancerName = loadBalancerName;\n    _policyName = policyName;\n}\n", "java": "public DeleteLoadBalancerPolicyRequest(String loadBalancerName, String policyName) {\n    setLoadBalancerName(loadBalancerName);\n    setPolicyName(policyName);\n}\n", "cs_t": [["\u2581public", "\u2581Delete", "$$LoadBalancer", "$$Policy", "$$Request(string", "\u2581load", "$$Balancer", "$$Name,", "\u2581string", "\u2581po", "$$licy", "$$Name)", "\u2581{"], ["\u2581_", "$$load", "$$Balancer", "$$Name", "\u2581=", "\u2581load", "$$Balancer", "$$Name", "$$;"], ["\u2581_", "$$po", "$$licy", "$$Name", "\u2581=", "\u2581po", "$$licy", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$LoadBalancer", "$$Policy", "$$Request(String", "\u2581load", "$$Balancer", "$$Name,", "\u2581String", "\u2581po", "$$licy", "$$Name)", "\u2581{"], ["\u2581set", "$$LoadBalancer", "$$Name(", "$$load", "$$Balancer", "$$Name)", "$$;"], ["\u2581set", "$$Policy", "$$Name(", "$$po", "$$licy", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public WindowProtectRecord(int options) {\n    _options = options;\n}\n", "java": "public WindowProtectRecord(int options) {\n    _options = options;\n}\n", "cs_t": [["\u2581public", "\u2581W", "$$indow", "$$Protect", "$$Record(", "$$int", "\u2581options", "$$)", "\u2581{"], ["\u2581_", "$$options", "\u2581=", "\u2581options", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581W", "$$indow", "$$Protect", "$$Record(", "$$int", "\u2581options", "$$)", "\u2581{"], ["\u2581_", "$$options", "\u2581=", "\u2581options", "$$;"], ["\u2581}"]]}, {"cs": "public UnbufferedCharStream(int bufferSize) {\n    n = 0;\n    data = new int[bufferSize];\n}\n", "java": "public UnbufferedCharStream(int bufferSize) {\n    n = 0;\n    data = new int[bufferSize];\n}\n", "cs_t": [["\u2581public", "\u2581Un", "$$bu", "$$ff", "$$e", "$$red", "$$Char", "$$Stream", "$$(int", "\u2581buffer", "$$Size)", "\u2581{"], ["\u2581n", "\u2581=", "\u25810;"], ["\u2581data", "\u2581=", "\u2581new", "\u2581int[", "$$buffer", "$$Size", "$$]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Un", "$$bu", "$$ff", "$$e", "$$red", "$$Char", "$$Stream", "$$(int", "\u2581buffer", "$$Size)", "\u2581{"], ["\u2581n", "\u2581=", "\u25810;"], ["\u2581data", "\u2581=", "\u2581new", "\u2581int[", "$$buffer", "$$Size", "$$]", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetOperationsResponse GetOperations(GetOperationsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetOperationsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetOperationsResponseUnmarshaller.Instance;\n    return Invoke<GetOperationsResponse>(request, options);\n}\n", "java": "public GetOperationsResult getOperations(GetOperationsRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetOperations(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Operation", "$$sResponse", "\u2581Get", "$$Operation", "$$s(Get", "$$Operation", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Operation", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Operation", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Operation", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Operation", "$$sResult", "\u2581get", "$$Operation", "$$s(Get", "$$Operation", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Operation", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void CopyRawTo(byte[] b, int o) {\n    NB.EncodeInt32(b, o, w1);\n    NB.EncodeInt32(b, o + 4, w2);\n    NB.EncodeInt32(b, o + 8, w3);\n    NB.EncodeInt32(b, o + 12, w4);\n    NB.EncodeInt32(b, o + 16, w5);\n}\n", "java": "public void copyRawTo(byte[] b, int o) {\n    NB.encodeInt32(b, o, w1);\n    NB.encodeInt32(b, o + 4, w2);\n    NB.encodeInt32(b, o + 8, w3);\n    NB.encodeInt32(b, o + 12, w4);\n    NB.encodeInt32(b, o + 16, w5);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Copy", "$$Raw", "$$To", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581o)", "\u2581{"], ["\u2581NB", "$$.", "$$Encode", "$$Int32", "$$(b,", "\u2581o", "$$,", "\u2581w", "$$1)", "$$;"], ["\u2581NB", "$$.", "$$Encode", "$$Int32", "$$(b,", "\u2581o", "\u2581+", "\u25814", "$$,", "\u2581w", "$$2)", "$$;"], ["\u2581NB", "$$.", "$$Encode", "$$Int32", "$$(b,", "\u2581o", "\u2581+", "\u25818", "$$,", "\u2581w", "$$3", "$$)", "$$;"], ["\u2581NB", "$$.", "$$Encode", "$$Int32", "$$(b,", "\u2581o", "\u2581+", "\u25811", "$$2,", "\u2581w", "$$4", "$$)", "$$;"], ["\u2581NB", "$$.", "$$Encode", "$$Int32", "$$(b,", "\u2581o", "\u2581+", "\u258116", "$$,", "\u2581w", "$$5", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581copy", "$$Raw", "$$To", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581o)", "\u2581{"], ["\u2581NB", "$$.", "$$en", "$$code", "$$Int32", "$$(b,", "\u2581o", "$$,", "\u2581w", "$$1)", "$$;"], ["\u2581NB", "$$.", "$$en", "$$code", "$$Int32", "$$(b,", "\u2581o", "\u2581+", "\u25814", "$$,", "\u2581w", "$$2)", "$$;"], ["\u2581NB", "$$.", "$$en", "$$code", "$$Int32", "$$(b,", "\u2581o", "\u2581+", "\u25818", "$$,", "\u2581w", "$$3", "$$)", "$$;"], ["\u2581NB", "$$.", "$$en", "$$code", "$$Int32", "$$(b,", "\u2581o", "\u2581+", "\u25811", "$$2,", "\u2581w", "$$4", "$$)", "$$;"], ["\u2581NB", "$$.", "$$en", "$$code", "$$Int32", "$$(b,", "\u2581o", "\u2581+", "\u258116", "$$,", "\u2581w", "$$5", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public WindowOneRecord(RecordInputStream in1) {\n    field_1_h_hold = in1.ReadShort();\n    field_2_v_hold = in1.ReadShort();\n    field_3_width = in1.ReadShort();\n    field_4_height = in1.ReadShort();\n    field_5_options = in1.ReadShort();\n    field_6_active_sheet = in1.ReadShort();\n    field_7_first_visible_tab = in1.ReadShort();\n    field_8_num_selected_tabs = in1.ReadShort();\n    field_9_tab_width_ratio = in1.ReadShort();\n}\n", "java": "public WindowOneRecord(RecordInputStream in) {\n    field_1_h_hold            = in.readShort();\n    field_2_v_hold            = in.readShort();\n    field_3_width             = in.readShort();\n    field_4_height            = in.readShort();\n    field_5_options           = in.readShort();\n    field_6_active_sheet      = in.readShort();\n    field_7_first_visible_tab = in.readShort();\n    field_8_num_selected_tabs = in.readShort();\n    field_9_tab_width_ratio   = in.readShort();\n}\n", "cs_t": [["\u2581public", "\u2581W", "$$indow", "$$On", "$$e", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581field_1_", "$$h", "$$_", "$$h", "$$old", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581field_2_", "$$v", "$$_", "$$h", "$$old", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581field_3_", "$$w", "$$idth", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581field_4_", "$$h", "$$eight", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581field_5_", "$$options", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581field_6_", "$$ac", "$$tive", "$$_", "$$sheet", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581field_", "$$7_", "$$first", "$$_", "$$v", "$$is", "$$ib", "$$le", "$$_", "$$t", "$$ab", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581field_", "$$8", "$$_", "$$num", "$$_", "$$se", "$$le", "$$c", "$$ted", "$$_", "$$t", "$$ab", "$$s", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581field_", "$$9", "$$_", "$$t", "$$ab", "$$_", "$$w", "$$idth", "$$_", "$$ra", "$$ti", "$$o", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581W", "$$indow", "$$On", "$$e", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581field_1_", "$$h", "$$_", "$$h", "$$old", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581field_2_", "$$v", "$$_", "$$h", "$$old", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581field_3_", "$$w", "$$idth", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581field_4_", "$$h", "$$eight", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581field_5_", "$$options", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581field_6_", "$$ac", "$$tive", "$$_", "$$sheet", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581field_", "$$7_", "$$first", "$$_", "$$v", "$$is", "$$ib", "$$le", "$$_", "$$t", "$$ab", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581field_", "$$8", "$$_", "$$num", "$$_", "$$se", "$$le", "$$c", "$$ted", "$$_", "$$t", "$$ab", "$$s", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581field_", "$$9", "$$_", "$$t", "$$ab", "$$_", "$$w", "$$idth", "$$_", "$$ra", "$$ti", "$$o", "\u2581", "\u2581", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StopWorkspacesResponse StopWorkspaces(StopWorkspacesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = StopWorkspacesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = StopWorkspacesResponseUnmarshaller.Instance;\n    return Invoke<StopWorkspacesResponse>(request, options);\n}\n", "java": "public StopWorkspacesResult stopWorkspaces(StopWorkspacesRequest request) {\n    request = beforeClientExecution(request);\n    return executeStopWorkspaces(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Stop", "$$Workspaces", "$$Response", "\u2581Stop", "$$Workspaces", "$$(", "$$Stop", "$$Workspaces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Stop", "$$Workspaces", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Stop", "$$Workspaces", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Stop", "$$Workspaces", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Stop", "$$Workspaces", "$$Result", "\u2581stop", "$$Workspaces", "$$(", "$$Stop", "$$Workspaces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Stop", "$$Workspaces", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void close() throws IOException {if (isOpen) {\n        isOpen = false;\n        try {\n            dump();\n        }\n        finally {\n            try {\n                channel.truncate(fileLength);\n            }\n            finally {\n                try {\n                    channel.close();\n                }\n                finally {\n                    fos.close();\n                }\n            }\n        }\n    }\n}\n", "java": "public void close() throws IOException {\n    if (isOpen) {\n        isOpen = false;\n        try {\n            dump();\n        }\n        finally {\n            try {\n                channel.truncate(fileLength);\n            }\n            finally {\n                try {\n                    channel.close();\n                }\n                finally {\n                    fos.close();\n                }\n            }\n        }\n    }\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581c", "$$lose", "$$()", "\u2581throws", "\u2581IOException", "\u2581{", "$$if", "\u2581(is", "$$Open", "$$)", "\u2581{"], ["\u2581is", "$$Open", "\u2581=", "\u2581false", "$$;"], ["\u2581try", "\u2581{"], ["\u2581d", "$$ump", "$$()", "$$;"], ["\u2581}"], ["\u2581finally", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581ch", "$$annel", "$$.", "$$tr", "$$unc", "$$ate", "$$(", "$$file", "$$Length", "$$)", "$$;"], ["\u2581}"], ["\u2581finally", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581ch", "$$annel", "$$.c", "$$lose", "$$()", "$$;"], ["\u2581}"], ["\u2581finally", "\u2581{"], ["\u2581f", "$$o", "$$s.", "$$c", "$$lose", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581c", "$$lose", "$$()", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581if", "\u2581(is", "$$Open", "$$)", "\u2581{"], ["\u2581is", "$$Open", "\u2581=", "\u2581false", "$$;"], ["\u2581try", "\u2581{"], ["\u2581d", "$$ump", "$$()", "$$;"], ["\u2581}"], ["\u2581finally", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581ch", "$$annel", "$$.", "$$tr", "$$unc", "$$ate", "$$(", "$$file", "$$Length", "$$)", "$$;"], ["\u2581}"], ["\u2581finally", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581ch", "$$annel", "$$.c", "$$lose", "$$()", "$$;"], ["\u2581}"], ["\u2581finally", "\u2581{"], ["\u2581f", "$$o", "$$s.", "$$c", "$$lose", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual DescribeMatchmakingRuleSetsResponse DescribeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeMatchmakingRuleSetsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeMatchmakingRuleSetsResponseUnmarshaller.Instance;\n    return Invoke<DescribeMatchmakingRuleSetsResponse>(request, options);\n}\n", "java": "public DescribeMatchmakingRuleSetsResult describeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeMatchmakingRuleSets(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Matchmaking", "$$Rule", "$$Set", "$$sResponse", "\u2581Describe", "$$Matchmaking", "$$Rule", "$$Set", "$$s(Describe", "$$Matchmaking", "$$Rule", "$$Set", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Matchmaking", "$$Rule", "$$Set", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Matchmaking", "$$Rule", "$$Set", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Matchmaking", "$$Rule", "$$Set", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Matchmaking", "$$Rule", "$$Set", "$$sResult", "\u2581describe", "$$Matchmaking", "$$Rule", "$$Set", "$$s(Describe", "$$Matchmaking", "$$Rule", "$$Set", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Matchmaking", "$$Rule", "$$Set", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public string GetPronunciation(int wordId, char[] surface, int off, int len) {\n    return null;\n}\n", "java": "public String getPronunciation(int wordId, char surface[], int off, int len) {\n    return null;\n}\n", "cs_t": [["\u2581public", "\u2581string", "\u2581Get", "$$P", "$$ron", "$$unc", "$$i", "$$ation", "$$(int", "\u2581word", "$$Id,", "\u2581char[]", "\u2581s", "$$ur", "$$face", "$$,", "\u2581int", "\u2581off,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581return", "\u2581null", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$P", "$$ron", "$$unc", "$$i", "$$ation", "$$(int", "\u2581word", "$$Id,", "\u2581char", "\u2581s", "$$ur", "$$face", "$$[]", "$$,", "\u2581int", "\u2581off,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581return", "\u2581null", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string GetPath() {\n    return pathStr;\n}\n", "java": "public String getPath() {\n    return pathStr;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581Get", "$$Path", "$$()", "\u2581{"], ["\u2581return", "\u2581path", "$$Str", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Path", "$$()", "\u2581{"], ["\u2581return", "\u2581path", "$$Str", "$$;"], ["\u2581}"]]}, {"cs": "public static double devsq(double[] v) {\n    double r = double.NaN;\n    if (v != null && v.Length >= 1) {\n        double m = 0;\n        double s = 0;\n        int n = v.Length;\n        for (int i = 0; i < n; i++) {\n            s += v[i];\n        }\n        m = s / n;\n        s = 0;\n        for (int i = 0; i < n; i++) {\n            s += (v[i] - m) * (v[i] - m);\n        }\n        r = (n == 1)? 0: s;\n    }\n    return r;\n}\n", "java": "public static double devsq(double[] v) {\n    double r = Double.NaN;\n    if (v!=null && v.length >= 1) {\n        double m = 0;\n        double s = 0;\n        int n = v.length;\n        for (int i=0; i<n; i++) {\n            s += v[i];\n        }\n        m = s / n;\n        s = 0;\n        for (int i=0; i<n; i++) {\n            s += (v[i]- m) * (v[i] - m);\n        }\n        r = (n == 1)? 0: s;\n    }\n    return r;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581de", "$$v", "$$sq", "$$(double", "$$[]", "\u2581v)", "\u2581{"], ["\u2581double", "\u2581r", "\u2581=", "\u2581double", "$$.N", "$$a", "$$N", "$$;"], ["\u2581if", "\u2581(v", "\u2581!=", "\u2581null", "\u2581&&", "\u2581v", "$$.Length", "\u2581>=", "\u25811)", "\u2581{"], ["\u2581double", "\u2581m", "\u2581=", "\u25810;"], ["\u2581double", "\u2581s", "\u2581=", "\u25810;"], ["\u2581int", "\u2581n", "\u2581=", "\u2581v", "$$.Length;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581n", "$$;", "\u2581i++)", "\u2581{"], ["\u2581s", "\u2581+=", "\u2581v", "$$[i]", "$$;"], ["\u2581}"], ["\u2581m", "\u2581=", "\u2581s", "\u2581/", "\u2581n", "$$;"], ["\u2581s", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581n", "$$;", "\u2581i++)", "\u2581{"], ["\u2581s", "\u2581+=", "\u2581(v", "$$[i]", "\u2581-", "\u2581m", "$$)", "\u2581*", "\u2581(v", "$$[i]", "\u2581-", "\u2581m", "$$)", "$$;"], ["\u2581}"], ["\u2581r", "\u2581=", "\u2581(n", "\u2581==", "\u25811)", "$$?", "\u25810", "$$:", "\u2581s", "$$;"], ["\u2581}"], ["\u2581return", "\u2581r", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581de", "$$v", "$$sq", "$$(double", "$$[]", "\u2581v)", "\u2581{"], ["\u2581double", "\u2581r", "\u2581=", "\u2581Double", "$$.N", "$$a", "$$N", "$$;"], ["\u2581if", "\u2581(v", "$$!", "$$=", "$$null", "\u2581&&", "\u2581v", "$$.length", "\u2581>=", "\u25811)", "\u2581{"], ["\u2581double", "\u2581m", "\u2581=", "\u25810;"], ["\u2581double", "\u2581s", "\u2581=", "\u25810;"], ["\u2581int", "\u2581n", "\u2581=", "\u2581v", "$$.length;"], ["\u2581for", "\u2581(int", "\u2581i", "$$=0", "$$;", "\u2581i", "$$<", "$$n", "$$;", "\u2581i++)", "\u2581{"], ["\u2581s", "\u2581+=", "\u2581v", "$$[i]", "$$;"], ["\u2581}"], ["\u2581m", "\u2581=", "\u2581s", "\u2581/", "\u2581n", "$$;"], ["\u2581s", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(int", "\u2581i", "$$=0", "$$;", "\u2581i", "$$<", "$$n", "$$;", "\u2581i++)", "\u2581{"], ["\u2581s", "\u2581+=", "\u2581(v", "$$[i]", "$$-", "\u2581m", "$$)", "\u2581*", "\u2581(v", "$$[i]", "\u2581-", "\u2581m", "$$)", "$$;"], ["\u2581}"], ["\u2581r", "\u2581=", "\u2581(n", "\u2581==", "\u25811)", "$$?", "\u25810", "$$:", "\u2581s", "$$;"], ["\u2581}"], ["\u2581return", "\u2581r", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeResizeResponse DescribeResize(DescribeResizeRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeResizeRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeResizeResponseUnmarshaller.Instance;\n    return Invoke<DescribeResizeResponse>(request, options);\n}\n", "java": "public DescribeResizeResult describeResize(DescribeResizeRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeResize(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Res", "$$ize", "$$Response", "\u2581Describe", "$$Res", "$$ize", "$$(Describe", "$$Res", "$$ize", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Res", "$$ize", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Res", "$$ize", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Res", "$$ize", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Res", "$$ize", "$$Result", "\u2581describe", "$$Res", "$$ize", "$$(Describe", "$$Res", "$$ize", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Res", "$$ize", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public bool hasPassedThroughNonGreedyDecision() {\n    return passedThroughNonGreedyDecision;\n}\n", "java": "public final boolean hasPassedThroughNonGreedyDecision() {\n    return passedThroughNonGreedyDecision;\n}\n", "cs_t": [["\u2581public", "\u2581bool", "\u2581has", "$$P", "$$as", "$$sed", "$$Th", "$$ro", "$$u", "$$gh", "$$Non", "$$G", "$$re", "$$ed", "$$y", "$$Decision", "$$()", "\u2581{"], ["\u2581return", "\u2581p", "$$as", "$$sed", "$$Th", "$$ro", "$$u", "$$gh", "$$Non", "$$G", "$$re", "$$ed", "$$y", "$$Decision", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581boolean", "\u2581has", "$$P", "$$as", "$$sed", "$$Th", "$$ro", "$$u", "$$gh", "$$Non", "$$G", "$$re", "$$ed", "$$y", "$$Decision", "$$()", "\u2581{"], ["\u2581return", "\u2581p", "$$as", "$$sed", "$$Th", "$$ro", "$$u", "$$gh", "$$Non", "$$G", "$$re", "$$ed", "$$y", "$$Decision", "$$;"], ["\u2581}"]]}, {"cs": "public int end() {\n    return end(0);\n}\n", "java": "public int end() {\n    return end(0);\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581end", "$$()", "\u2581{"], ["\u2581return", "\u2581en", "$$d(", "$$0)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581end", "$$()", "\u2581{"], ["\u2581return", "\u2581en", "$$d(", "$$0)", "$$;"], ["\u2581}"]]}, {"cs": "public void Traverse(ICellHandler handler) {\n    int firstRow = range.FirstRow;\n    int lastRow = range.LastRow;\n    int firstColumn = range.FirstColumn;\n    int lastColumn = range.LastColumn;\n    int width = lastColumn - firstColumn + 1;\n    SimpleCellWalkContext ctx = new SimpleCellWalkContext();\n    IRow currentRow = null;\n    ICell currentCell = null;\n    for (ctx.rowNumber = firstRow; ctx.rowNumber <= lastRow; ++ctx.rowNumber) {\n        currentRow = sheet.GetRow(ctx.rowNumber);\n        if (currentRow == null) {\n            continue;\n        }\n        for (ctx.colNumber = firstColumn; ctx.colNumber <= lastColumn; ++ctx.colNumber) {\n            currentCell = currentRow.GetCell(ctx.colNumber);\n            if (currentCell == null) {\n                continue;\n            }\n            if (IsEmpty(currentCell) && !traverseEmptyCells) {\n                continue;\n            }\n            ctx.ordinalNumber =(ctx.rowNumber - firstRow) * width +(ctx.colNumber - firstColumn + 1);\n            handler.OnCell(currentCell, ctx);\n        }\n    }\n}\n", "java": "public void traverse(CellHandler handler) {\n    int firstRow = range.getFirstRow();\n    int lastRow = range.getLastRow();\n    int firstColumn = range.getFirstColumn();\n    int lastColumn = range.getLastColumn();\n    final int width = lastColumn - firstColumn + 1;\n    SimpleCellWalkContext ctx = new SimpleCellWalkContext();\n    Row currentRow = null;\n    Cell currentCell = null;\n    for (ctx.rowNumber = firstRow; ctx.rowNumber <= lastRow; ++ctx.rowNumber) {\n        currentRow = sheet.getRow(ctx.rowNumber);\n        if (currentRow == null) {\n            continue;\n        }\n        for (ctx.colNumber = firstColumn; ctx.colNumber <= lastColumn; ++ctx.colNumber) {\n            currentCell = currentRow.getCell(ctx.colNumber);\n            if (currentCell == null) {\n                continue;\n            }\n            if (isEmpty(currentCell) && !traverseEmptyCells) {\n                continue;\n            }\n            long rowSize = ArithmeticUtils.mulAndCheck((long)ArithmeticUtils.subAndCheck(ctx.rowNumber, firstRow), (long)width);\n            ctx.ordinalNumber = ArithmeticUtils.addAndCheck(rowSize, (ctx.colNumber - firstColumn + 1));\n            handler.onCell(currentCell, ctx);\n        }\n    }\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581", "$$Tra", "$$verse", "$$(I", "$$Cell", "$$Handler", "\u2581h", "$$and", "$$l", "$$er)", "\u2581{"], ["\u2581int", "\u2581first", "$$Row", "\u2581=", "\u2581range", "$$.", "$$FirstRow", "$$;"], ["\u2581int", "\u2581last", "$$Row", "\u2581=", "\u2581range", "$$.", "$$LastRow", "$$;"], ["\u2581int", "\u2581first", "$$Column", "\u2581=", "\u2581range", "$$.", "$$FirstColumn", "$$;"], ["\u2581int", "\u2581last", "$$Column", "\u2581=", "\u2581range", "$$.", "$$Last", "$$Column", "$$;"], ["\u2581int", "\u2581width", "\u2581=", "\u2581last", "$$Column", "\u2581-", "\u2581first", "$$Column", "\u2581+", "\u25811", "$$;"], ["\u2581Simple", "$$Cell", "$$Walk", "$$Context", "\u2581ctx", "\u2581=", "\u2581new", "\u2581Simple", "$$Cell", "$$Walk", "$$Context", "$$()", "$$;"], ["\u2581I", "$$Row", "\u2581current", "$$Row", "\u2581=", "\u2581null", "$$;"], ["\u2581I", "$$Cell", "\u2581current", "$$Cell", "\u2581=", "\u2581null", "$$;"], ["\u2581for", "\u2581(", "$$ctx", "$$.", "$$row", "$$Number", "\u2581=", "\u2581first", "$$Row", "$$;", "\u2581ctx", "$$.", "$$row", "$$Number", "\u2581<=", "\u2581last", "$$Row", "$$;", "\u2581++", "$$ctx", "$$.", "$$row", "$$Number", "$$)", "\u2581{"], ["\u2581current", "$$Row", "\u2581=", "\u2581sheet", "$$.Get", "$$Row", "$$(", "$$ctx", "$$.", "$$row", "$$Number", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$urrent", "$$Row", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581c", "$$ontinue", "$$;"], ["\u2581}"], ["\u2581for", "\u2581(", "$$ctx", "$$.c", "$$ol", "$$Number", "\u2581=", "\u2581first", "$$Column", "$$;", "\u2581ctx", "$$.c", "$$ol", "$$Number", "\u2581<=", "\u2581last", "$$Column", "$$;", "\u2581++", "$$ctx", "$$.c", "$$ol", "$$Number", "$$)", "\u2581{"], ["\u2581current", "$$Cell", "\u2581=", "\u2581current", "$$Row", "$$.Get", "$$Cell(", "$$ctx", "$$.c", "$$ol", "$$Number", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$urrent", "$$Cell", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581c", "$$ontinue", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$Is", "$$Empty", "$$(c", "$$urrent", "$$Cell", "$$)", "\u2581&&", "\u2581!", "$$tra", "$$verse", "$$Empty", "$$Cell", "$$s)", "\u2581{"], ["\u2581c", "$$ontinue", "$$;"], ["\u2581}"], ["\u2581ctx", "$$.", "$$ord", "$$inal", "$$Number", "\u2581=", "$$(", "$$ctx", "$$.", "$$row", "$$Number", "\u2581-", "\u2581first", "$$Row", "$$)", "\u2581*", "\u2581width", "\u2581+", "$$(", "$$ctx", "$$.c", "$$ol", "$$Number", "\u2581-", "\u2581first", "$$Column", "\u2581+", "\u25811)", "$$;"], ["\u2581h", "$$and", "$$l", "$$er.", "$$On", "$$Cell", "$$(c", "$$urrent", "$$Cell", "$$,", "\u2581ctx", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581t", "$$ra", "$$verse", "$$(", "$$Cell", "$$Handler", "\u2581h", "$$and", "$$l", "$$er)", "\u2581{"], ["\u2581int", "\u2581first", "$$Row", "\u2581=", "\u2581range", "$$.get", "$$FirstRow", "$$()", "$$;"], ["\u2581int", "\u2581last", "$$Row", "\u2581=", "\u2581range", "$$.get", "$$LastRow", "$$()", "$$;"], ["\u2581int", "\u2581first", "$$Column", "\u2581=", "\u2581range", "$$.get", "$$FirstColumn", "$$()", "$$;"], ["\u2581int", "\u2581last", "$$Column", "\u2581=", "\u2581range", "$$.get", "$$Last", "$$Column", "$$()", "$$;"], ["\u2581final", "\u2581int", "\u2581width", "\u2581=", "\u2581last", "$$Column", "\u2581-", "\u2581first", "$$Column", "\u2581+", "\u25811", "$$;"], ["\u2581Simple", "$$Cell", "$$Walk", "$$Context", "\u2581ctx", "\u2581=", "\u2581new", "\u2581Simple", "$$Cell", "$$Walk", "$$Context", "$$()", "$$;"], ["\u2581Row", "\u2581current", "$$Row", "\u2581=", "\u2581null", "$$;"], ["\u2581Cell", "\u2581current", "$$Cell", "\u2581=", "\u2581null", "$$;"], ["\u2581for", "\u2581(", "$$ctx", "$$.", "$$row", "$$Number", "\u2581=", "\u2581first", "$$Row", "$$;", "\u2581ctx", "$$.", "$$row", "$$Number", "\u2581<=", "\u2581last", "$$Row", "$$;", "\u2581++", "$$ctx", "$$.", "$$row", "$$Number", "$$)", "\u2581{"], ["\u2581current", "$$Row", "\u2581=", "\u2581sheet", "$$.get", "$$Row", "$$(", "$$ctx", "$$.", "$$row", "$$Number", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$urrent", "$$Row", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581c", "$$ontinue", "$$;"], ["\u2581}"], ["\u2581for", "\u2581(", "$$ctx", "$$.c", "$$ol", "$$Number", "\u2581=", "\u2581first", "$$Column", "$$;", "\u2581ctx", "$$.c", "$$ol", "$$Number", "\u2581<=", "\u2581last", "$$Column", "$$;", "\u2581++", "$$ctx", "$$.c", "$$ol", "$$Number", "$$)", "\u2581{"], ["\u2581current", "$$Cell", "\u2581=", "\u2581current", "$$Row", "$$.get", "$$Cell(", "$$ctx", "$$.c", "$$ol", "$$Number", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$urrent", "$$Cell", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581c", "$$ontinue", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$isEmpty", "$$(c", "$$urrent", "$$Cell", "$$)", "\u2581&&", "\u2581!", "$$tra", "$$verse", "$$Empty", "$$Cell", "$$s)", "\u2581{"], ["\u2581c", "$$ontinue", "$$;"], ["\u2581}"], ["\u2581long", "\u2581row", "$$Size", "\u2581=", "\u2581A", "$$ri", "$$th", "$$m", "$$e", "$$tic", "$$Utils.", "$$m", "$$ul", "$$And", "$$Check", "$$((", "$$long", "$$)", "$$A", "$$ri", "$$th", "$$m", "$$e", "$$tic", "$$Utils.", "$$sub", "$$And", "$$Check", "$$(", "$$ctx", "$$.", "$$row", "$$Number", "$$,", "\u2581first", "$$Row", "$$),", "\u2581(", "$$long", "$$)", "$$w", "$$idth", "$$)", "$$;"], ["\u2581ctx", "$$.", "$$ord", "$$inal", "$$Number", "\u2581=", "\u2581A", "$$ri", "$$th", "$$m", "$$e", "$$tic", "$$Utils.", "$$add", "$$And", "$$Check", "$$(", "$$row", "$$Size,", "\u2581(", "$$ctx", "$$.c", "$$ol", "$$Number", "\u2581-", "\u2581first", "$$Column", "\u2581+", "\u25811", "$$))", "$$;"], ["\u2581h", "$$and", "$$l", "$$er.", "$$on", "$$Cell", "$$(c", "$$urrent", "$$Cell", "$$,", "\u2581ctx", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public int GetReadIndex() {\n    return _ReadIndex;\n}\n", "java": "public int getReadIndex() {\n    return pos;\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581Get", "$$Read", "$$Index", "$$()", "\u2581{"], ["\u2581return", "\u2581_", "$$Read", "$$Index", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$Read", "$$Index", "$$()", "\u2581{"], ["\u2581return", "\u2581pos", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int CompareTo(ScoreTerm other) {\n    if (Term.BytesEquals(other.Term)) {\n        return 0;\n    }\n    if (this.Boost == other.Boost) {\n        return other.Term.CompareTo(this.Term);\n    }\n    else {\n        return this.Boost.CompareTo(other.Boost);\n    }\n}\n", "java": "public int compareTo(ScoreTerm other) {\n    if (this.boost == other.boost)return other.bytes.get().compareTo(this.bytes.get());\n    elsereturn Float.compare(this.boost, other.boost);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581Compare", "$$To(", "$$Score", "$$Term", "\u2581other)", "\u2581{"], ["\u2581if", "\u2581(", "$$Term", "$$.", "$$Bytes", "$$E", "$$quals(", "$$other.", "$$Term", "$$))", "\u2581{"], ["\u2581return", "\u25810;"], ["\u2581}"], ["\u2581if", "\u2581(this", "$$.", "$$Boost", "\u2581==", "\u2581other.", "$$Boost", "$$)", "\u2581{"], ["\u2581return", "\u2581other.", "$$Term", "$$.Compare", "$$To", "$$(this", "$$.", "$$Term", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581this.", "$$Boost", "$$.Compare", "$$To", "$$(oth", "$$er.", "$$Boost", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581compare", "$$To(", "$$Score", "$$Term", "\u2581other)", "\u2581{"], ["\u2581if", "\u2581(this", "$$.", "$$bo", "$$ost", "\u2581==", "\u2581other.", "$$bo", "$$ost", "$$)return", "\u2581other.", "$$bytes", "$$.get().", "$$compare", "$$To", "$$(this", "$$.", "$$bytes", "$$.get", "$$())", "$$;"], ["\u2581else", "$$return", "\u2581F", "$$loat", "$$.compare", "$$(this", "$$.", "$$bo", "$$ost", "$$,", "\u2581other.", "$$bo", "$$ost", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int Normalize(char[] s, int len) {\n    for (int i = 0; i < len; i++) {\n        switch (s[i]) {\n        case FARSI_YEH:\n        case YEH_BARREE:\n            s[i] = YEH;\n            break;\n        case KEHEH:\n            s[i] = KAF;\n            break;\n        case HEH_YEH:\n        case HEH_GOAL:\n            s[i] = HEH;\n            break;\n        case HAMZA_ABOVE:\n            len = StemmerUtil.Delete(s, i, len);\n            i--;\n            break;\n        default:\n            break;\n        }\n    }\n    return len;\n}\n", "java": "public int normalize(char s[], int len) {\n    for (int i = 0; i < len; i++) {\n        switch (s[i]) {\n        case FARSI_YEH:\n        case YEH_BARREE:\n            s[i] = YEH;\n            break;\n        case KEHEH:\n            s[i] = KAF;\n            break;\n        case HEH_YEH:\n        case HEH_GOAL:\n            s[i] = HEH;\n            break;\n        case HAMZA_ABOVE:\n            len = delete(s, i, len);\n            i--;\n            break;\n        default:\n            break;\n        }\n    }\n    return len;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581N", "$$ormal", "$$ize", "$$(char[]", "\u2581s", "$$,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581len", "$$;", "\u2581i++)", "\u2581{"], ["\u2581switch", "\u2581(", "$$s[i]", "$$)", "\u2581{"], ["\u2581case", "\u2581F", "$$AR", "$$SI", "$$_", "$$Y", "$$E", "$$H", "$$:"], ["\u2581case", "\u2581", "$$Y", "$$E", "$$H", "$$_B", "$$AR", "$$RE", "$$E", "$$:"], ["\u2581s", "$$[i]", "\u2581=", "\u2581", "$$Y", "$$E", "$$H", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581K", "$$E", "$$H", "$$E", "$$H", "$$:"], ["\u2581s", "$$[i]", "\u2581=", "\u2581K", "$$A", "$$F", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581H", "$$E", "$$H", "$$_", "$$Y", "$$E", "$$H", "$$:"], ["\u2581case", "\u2581H", "$$E", "$$H", "$$_", "$$G", "$$O", "$$AL", "$$:"], ["\u2581s", "$$[i]", "\u2581=", "\u2581H", "$$E", "$$H", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581H", "$$AM", "$$Z", "$$A", "$$_", "$$A", "$$B", "$$O", "$$VE", "$$:"], ["\u2581len", "\u2581=", "\u2581S", "$$tem", "$$mer", "$$Util.", "$$Delete", "$$(s,", "\u2581i", "$$,", "\u2581len)", "$$;"], ["\u2581i", "$$--", "$$;"], ["\u2581break", "$$;"], ["\u2581default", "$$:"], ["\u2581break", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581len", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581normal", "$$ize", "$$(char", "\u2581s", "$$[]", "$$,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581len", "$$;", "\u2581i++)", "\u2581{"], ["\u2581switch", "\u2581(", "$$s[i]", "$$)", "\u2581{"], ["\u2581case", "\u2581F", "$$AR", "$$SI", "$$_", "$$Y", "$$E", "$$H", "$$:"], ["\u2581case", "\u2581", "$$Y", "$$E", "$$H", "$$_B", "$$AR", "$$RE", "$$E", "$$:"], ["\u2581s", "$$[i]", "\u2581=", "\u2581", "$$Y", "$$E", "$$H", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581K", "$$E", "$$H", "$$E", "$$H", "$$:"], ["\u2581s", "$$[i]", "\u2581=", "\u2581K", "$$A", "$$F", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581H", "$$E", "$$H", "$$_", "$$Y", "$$E", "$$H", "$$:"], ["\u2581case", "\u2581H", "$$E", "$$H", "$$_", "$$G", "$$O", "$$AL", "$$:"], ["\u2581s", "$$[i]", "\u2581=", "\u2581H", "$$E", "$$H", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581H", "$$AM", "$$Z", "$$A", "$$_", "$$A", "$$B", "$$O", "$$VE", "$$:"], ["\u2581len", "\u2581=", "\u2581delete", "$$(s,", "\u2581i", "$$,", "\u2581len)", "$$;"], ["\u2581i", "$$--", "$$;"], ["\u2581break", "$$;"], ["\u2581default", "$$:"], ["\u2581break", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581len", "$$;"], ["\u2581}"]]}, {"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort(_options);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort(_options);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$_options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(", "$$_options", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public DiagnosticErrorListener(bool exactOnly) {\n    this.exactOnly = exactOnly;\n}\n", "java": "public DiagnosticErrorListener(boolean exactOnly) {\n    this.exactOnly = exactOnly;\n}\n", "cs_t": [["\u2581public", "\u2581D", "$$i", "$$ag", "$$n", "$$os", "$$tic", "$$Error", "$$Listener", "$$(bool", "\u2581ex", "$$act", "$$Only", "$$)", "\u2581{"], ["\u2581this.", "$$ex", "$$act", "$$Only", "\u2581=", "\u2581ex", "$$act", "$$Only", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$i", "$$ag", "$$n", "$$os", "$$tic", "$$Error", "$$Listener", "$$(boolean", "\u2581ex", "$$act", "$$Only", "$$)", "\u2581{"], ["\u2581this.", "$$ex", "$$act", "$$Only", "\u2581=", "\u2581ex", "$$act", "$$Only", "$$;"], ["\u2581}"]]}, {"cs": "public KeySchemaElement(string attributeName, KeyType keyType) {\n    _attributeName = attributeName;\n    _keyType = keyType;\n}\n", "java": "public KeySchemaElement(String attributeName, KeyType keyType) {\n    setAttributeName(attributeName);\n    setKeyType(keyType.toString());\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Key", "$$Schema", "$$Element", "$$(string", "\u2581at", "$$tribute", "$$Name,", "\u2581", "$$Key", "$$Type", "\u2581key", "$$Type", "$$)", "\u2581{"], ["\u2581_", "$$at", "$$tribute", "$$Name", "\u2581=", "\u2581at", "$$tribute", "$$Name", "$$;"], ["\u2581_", "$$key", "$$Type", "\u2581=", "\u2581key", "$$Type", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Key", "$$Schema", "$$Element", "$$(String", "\u2581at", "$$tribute", "$$Name,", "\u2581", "$$Key", "$$Type", "\u2581key", "$$Type", "$$)", "\u2581{"], ["\u2581set", "$$Attribute", "$$Name(", "$$at", "$$tribute", "$$Name)", "$$;"], ["\u2581set", "$$Key", "$$Type", "$$(key", "$$Type", "$$.toString()", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetAssignmentResponse GetAssignment(GetAssignmentRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetAssignmentRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetAssignmentResponseUnmarshaller.Instance;\n    return Invoke<GetAssignmentResponse>(request, options);\n}\n", "java": "public GetAssignmentResult getAssignment(GetAssignmentRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetAssignment(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Assignment", "$$Response", "\u2581Get", "$$Assignment", "$$(Get", "$$Assignment", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Assignment", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Assignment", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Assignment", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Assignment", "$$Result", "\u2581get", "$$Assignment", "$$(Get", "$$Assignment", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Assignment", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool HasObject(AnyObjectId id) {\n    return FindOffset(id) != -1;\n}\n", "java": "public boolean hasObject(AnyObjectId id) {\n    return findOffset(id) != -1;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581H", "$$as", "$$Object", "$$(", "$$AnyObjectId", "\u2581id)", "\u2581{"], ["\u2581return", "\u2581F", "$$ind", "$$Offset", "$$(id", "$$)", "\u2581!=", "\u2581-1", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581has", "$$Object", "$$(", "$$AnyObjectId", "\u2581id)", "\u2581{"], ["\u2581return", "\u2581find", "$$Offset", "$$(id", "$$)", "\u2581!=", "\u2581-1", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GroupingSearch SetAllGroups(bool allGroups) {\n    this.allGroups = allGroups;\n    return this;\n}\n", "java": "public GroupingSearch setAllGroups(boolean allGroups) {\n    this.allGroups = allGroups;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Group", "$$ing", "$$Search", "\u2581Set", "$$All", "$$Group", "$$s(", "$$bo", "$$ol", "\u2581all", "$$Group", "$$s)", "\u2581{"], ["\u2581this.", "$$all", "$$Group", "$$s", "\u2581=", "\u2581all", "$$Group", "$$s;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Group", "$$ing", "$$Search", "\u2581set", "$$All", "$$Group", "$$s(", "$$boolean", "\u2581all", "$$Group", "$$s)", "\u2581{"], ["\u2581this.", "$$all", "$$Group", "$$s", "\u2581=", "\u2581all", "$$Group", "$$s;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetMultiValued(string dimName, bool v) {\n    lock (this) {\n        if (!fieldTypes.TryGetValue(dimName, out DimConfig fieldType)) {\n            fieldTypes[dimName] = new DimConfig { IsMultiValued = v };\n        }\n        else {\n            fieldType.IsMultiValued = v;\n        }\n    }\n}\n", "java": "public synchronized void setMultiValued(String dimName, boolean v) {\n    DimConfig ft = fieldTypes.get(dimName);\n    if (ft == null) {\n        ft = new DimConfig();\n        fieldTypes.put(dimName, ft);\n    }\n    ft.multiValued = v;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Multi", "$$Value", "$$d(", "$$string", "\u2581d", "$$im", "$$Name,", "\u2581bool", "\u2581v)", "\u2581{"], ["\u2581lock", "\u2581(this)", "\u2581{"], ["\u2581if", "\u2581(!", "$$field", "$$Types", "$$.", "$$TryGet", "$$Value", "$$(d", "$$im", "$$Name,", "\u2581out", "\u2581D", "$$im", "$$Config", "\u2581field", "$$Type", "$$))", "\u2581{"], ["\u2581field", "$$Types", "$$[", "$$d", "$$im", "$$Name", "$$]", "\u2581=", "\u2581new", "\u2581D", "$$im", "$$Config", "\u2581{", "\u2581Is", "$$Multi", "$$Value", "$$d", "\u2581=", "\u2581v", "\u2581}", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581field", "$$Type.", "$$Is", "$$Multi", "$$Value", "$$d", "\u2581=", "\u2581v", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581synchronized", "\u2581void", "\u2581set", "$$Multi", "$$Value", "$$d(", "$$String", "\u2581d", "$$im", "$$Name,", "\u2581boolean", "\u2581v)", "\u2581{"], ["\u2581D", "$$im", "$$Config", "\u2581f", "$$t", "\u2581=", "\u2581field", "$$Types", "$$.get", "$$(d", "$$im", "$$Name)", "$$;"], ["\u2581if", "\u2581(f", "$$t", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581f", "$$t", "\u2581=", "\u2581new", "\u2581D", "$$im", "$$Config", "$$()", "$$;"], ["\u2581field", "$$Types", "$$.put", "$$(d", "$$im", "$$Name,", "\u2581f", "$$t", "$$)", "$$;"], ["\u2581}"], ["\u2581f", "$$t", "$$.", "$$m", "$$ulti", "$$Value", "$$d", "\u2581=", "\u2581v", "$$;"], ["\u2581}"]]}, {"cs": "public int GetCellsVal() {\n    int size = 0;\n    foreach (char c in cells.Keys) {\n        Cell e = At(c);\n        if (e.cmd >= 0) {\n            size++;\n        }\n    }\n    return size;\n}\n", "java": "public int getCellsVal() {\n    Iterator<Character> i = cells.keySet().iterator();\n    int size = 0;\n    for (; i.hasNext();) {\n        Character c = i.next();\n        Cell e = at(c);\n        if (e.cmd >= 0) {\n            size++;\n        }\n    }\n    return size;\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581Get", "$$Cells", "$$Val", "$$()", "\u2581{"], ["\u2581int", "\u2581size", "\u2581=", "\u25810;"], ["\u2581foreach", "\u2581(char", "\u2581c", "\u2581in", "\u2581cell", "$$s.", "$$Key", "$$s)", "\u2581{"], ["\u2581Cell", "\u2581e", "\u2581=", "\u2581", "$$At", "$$(c", "$$)", "$$;"], ["\u2581if", "\u2581(e", "$$.c", "$$md", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581size", "$$++", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581size", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$Cells", "$$Val", "$$()", "\u2581{"], ["\u2581Iterator<", "$$Character", "$$>", "\u2581i", "\u2581=", "\u2581cell", "$$s.", "$$key", "$$Set", "$$().", "$$iterator", "$$()", "$$;"], ["\u2581int", "\u2581size", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(", "$$;", "\u2581i", "$$.has", "$$Next()", "$$;", "$$)", "\u2581{"], ["\u2581Character", "\u2581c", "\u2581=", "\u2581i", "$$.next", "$$()", "$$;"], ["\u2581Cell", "\u2581e", "\u2581=", "\u2581at", "$$(c", "$$)", "$$;"], ["\u2581if", "\u2581(e", "$$.c", "$$md", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581size", "$$++", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581size", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteVoiceConnectorResponse DeleteVoiceConnector(DeleteVoiceConnectorRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteVoiceConnectorRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteVoiceConnectorResponseUnmarshaller.Instance;\n    return Invoke<DeleteVoiceConnectorResponse>(request, options);\n}\n", "java": "public DeleteVoiceConnectorResult deleteVoiceConnector(DeleteVoiceConnectorRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteVoiceConnector(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$VoiceConnector", "$$Response", "\u2581Delete", "$$VoiceConnector", "$$(Delete", "$$VoiceConnector", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$VoiceConnector", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$VoiceConnector", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$VoiceConnector", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$VoiceConnector", "$$Result", "\u2581delete", "$$VoiceConnector", "$$(Delete", "$$VoiceConnector", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$VoiceConnector", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteLifecyclePolicyResponse DeleteLifecyclePolicy(DeleteLifecyclePolicyRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteLifecyclePolicyRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteLifecyclePolicyResponseUnmarshaller.Instance;\n    return Invoke<DeleteLifecyclePolicyResponse>(request, options);\n}\n", "java": "public DeleteLifecyclePolicyResult deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteLifecyclePolicy(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Lifecycle", "$$Policy", "$$Response", "\u2581Delete", "$$Lifecycle", "$$Policy", "$$(Delete", "$$Lifecycle", "$$PolicyRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Lifecycle", "$$Policy", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Lifecycle", "$$Policy", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Lifecycle", "$$Policy", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Lifecycle", "$$Policy", "$$Result", "\u2581delete", "$$Lifecycle", "$$Policy", "$$(Delete", "$$Lifecycle", "$$PolicyRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Lifecycle", "$$Policy", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void Write(byte[] b) {\n    int len = b.Length;\n    CheckPosition(len);\n    System.Array.Copy(b, 0, _buf, _writeIndex, len);\n    _writeIndex += len;\n}\n", "java": "public void write(byte[] b) {\n    int len = b.length;\n    checkPosition(len);\n    System.arraycopy(b, 0, _buf, _writeIndex, len);\n    _writeIndex += len;\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Write", "$$(byte[]", "\u2581b)", "\u2581{"], ["\u2581int", "\u2581len", "\u2581=", "\u2581b", "$$.Length;"], ["\u2581Check", "$$Position", "$$(", "$$len", "$$)", "$$;"], ["\u2581System.Array.Copy", "$$(b,", "\u25810,", "\u2581_", "$$buf", "$$,", "\u2581_", "$$write", "$$Index,", "\u2581len)", "$$;"], ["\u2581_", "$$write", "$$Index", "\u2581+=", "\u2581len", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581write", "$$(byte[]", "\u2581b)", "\u2581{"], ["\u2581int", "\u2581len", "\u2581=", "\u2581b", "$$.length;"], ["\u2581check", "$$Position", "$$(", "$$len", "$$)", "$$;"], ["\u2581System.arraycopy", "$$(b,", "\u25810,", "\u2581_", "$$buf", "$$,", "\u2581_", "$$write", "$$Index,", "\u2581len)", "$$;"], ["\u2581_", "$$write", "$$Index", "\u2581+=", "\u2581len", "$$;"], ["\u2581}"]]}, {"cs": "public virtual RebaseResult GetRebaseResult() {\n    return this.rebaseResult;\n}\n", "java": "public RebaseResult getRebaseResult() {\n    return this.rebaseResult;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Re", "$$base", "$$Result", "\u2581Get", "$$Re", "$$base", "$$Result", "$$()", "\u2581{"], ["\u2581return", "\u2581this.", "$$re", "$$base", "$$Result", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Re", "$$base", "$$Result", "\u2581get", "$$Re", "$$base", "$$Result", "$$()", "\u2581{"], ["\u2581return", "\u2581this.", "$$re", "$$base", "$$Result", "$$;"], ["\u2581}"]]}, {"cs": "public static int GetNearestSetSize(int maxNumberOfValuesExpected,float desiredSaturation) {\n    foreach (var t in from t in _usableBitSetSizeslet numSetBitsAtDesiredSaturation = (int) (t*desiredSaturation)let estimatedNumUniqueValues = GetEstimatedNumberUniqueValuesAllowingForCollisions(t, numSetBitsAtDesiredSaturation) where estimatedNumUniqueValues > maxNumberOfValuesExpected select t) {\n        return t;\n    }\n    return -1;\n}\n", "java": "public static int getNearestSetSize(int maxNumberOfValuesExpected,float desiredSaturation) {\n    for (int i = 0; i < usableBitSetSizes.length; i++) {\n        int numSetBitsAtDesiredSaturation = (int) (usableBitSetSizes[i] * desiredSaturation);\n        int estimatedNumUniqueValues = getEstimatedNumberUniqueValuesAllowingForCollisions(usableBitSetSizes[i], numSetBitsAtDesiredSaturation);\n        if (estimatedNumUniqueValues > maxNumberOfValuesExpected) {\n            return usableBitSetSizes[i];\n        }\n    }\n    return -1;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581Get", "$$N", "$$e", "$$ar", "$$est", "$$Set", "$$Size", "$$(int", "\u2581max", "$$Number", "$$Of", "$$Values", "$$Exp", "$$ected", "$$,", "$$f", "$$loat", "\u2581d", "$$es", "$$ired", "$$S", "$$atu", "$$ration", "$$)", "\u2581{"], ["\u2581foreach", "\u2581(v", "$$ar", "\u2581t", "\u2581in", "\u2581from", "\u2581t", "\u2581in", "\u2581_", "$$us", "$$able", "$$Bit", "$$Set", "$$S", "$$iz", "$$es", "$$l", "$$et", "\u2581num", "$$Set", "$$Bits", "$$At", "$$D", "$$es", "$$ired", "$$S", "$$atu", "$$ration", "\u2581=", "\u2581(int)", "\u2581(t", "$$*", "$$d", "$$es", "$$ired", "$$S", "$$atu", "$$ration", "$$)", "$$l", "$$et", "\u2581", "$$es", "$$tim", "$$ated", "$$Num", "$$Uni", "$$qu", "$$e", "$$Values", "\u2581=", "\u2581Get", "$$Estim", "$$ated", "$$Number", "$$Uni", "$$qu", "$$e", "$$Values", "$$Al", "$$low", "$$ing", "$$For", "$$Col", "$$li", "$$sion", "$$s(", "$$t", "$$,", "\u2581num", "$$Set", "$$Bits", "$$At", "$$D", "$$es", "$$ired", "$$S", "$$atu", "$$ration", "$$)", "\u2581w", "$$h", "$$e", "$$re", "\u2581", "$$es", "$$tim", "$$ated", "$$Num", "$$Uni", "$$qu", "$$e", "$$Values", "\u2581>", "\u2581max", "$$Number", "$$Of", "$$Values", "$$Exp", "$$ected", "\u2581se", "$$le", "$$ct", "\u2581t", "$$)", "\u2581{"], ["\u2581return", "\u2581t", "$$;"], ["\u2581}"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581get", "$$N", "$$e", "$$ar", "$$est", "$$Set", "$$Size", "$$(int", "\u2581max", "$$Number", "$$Of", "$$Values", "$$Exp", "$$ected", "$$,", "$$f", "$$loat", "\u2581d", "$$es", "$$ired", "$$S", "$$atu", "$$ration", "$$)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581u", "$$s", "$$able", "$$Bit", "$$Set", "$$S", "$$iz", "$$es", "$$.length;", "\u2581i++)", "\u2581{"], ["\u2581int", "\u2581num", "$$Set", "$$Bits", "$$At", "$$D", "$$es", "$$ired", "$$S", "$$atu", "$$ration", "\u2581=", "\u2581(int)", "\u2581(", "$$us", "$$able", "$$Bit", "$$Set", "$$S", "$$iz", "$$es", "$$[i]", "\u2581*", "\u2581d", "$$es", "$$ired", "$$S", "$$atu", "$$ration", "$$)", "$$;"], ["\u2581int", "\u2581", "$$es", "$$tim", "$$ated", "$$Num", "$$Uni", "$$qu", "$$e", "$$Values", "\u2581=", "\u2581get", "$$Estim", "$$ated", "$$Number", "$$Uni", "$$qu", "$$e", "$$Values", "$$Al", "$$low", "$$ing", "$$For", "$$Col", "$$li", "$$sion", "$$s(", "$$us", "$$able", "$$Bit", "$$Set", "$$S", "$$iz", "$$es", "$$[i]", "$$,", "\u2581num", "$$Set", "$$Bits", "$$At", "$$D", "$$es", "$$ired", "$$S", "$$atu", "$$ration", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$es", "$$tim", "$$ated", "$$Num", "$$Uni", "$$qu", "$$e", "$$Values", "\u2581>", "\u2581max", "$$Number", "$$Of", "$$Values", "$$Exp", "$$ected", "$$)", "\u2581{"], ["\u2581return", "\u2581u", "$$s", "$$able", "$$Bit", "$$Set", "$$S", "$$iz", "$$es", "$$[i]", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeDashboardResponse DescribeDashboard(DescribeDashboardRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeDashboardRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeDashboardResponseUnmarshaller.Instance;\n    return Invoke<DescribeDashboardResponse>(request, options);\n}\n", "java": "public DescribeDashboardResult describeDashboard(DescribeDashboardRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeDashboard(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Dashboard", "$$Response", "\u2581Describe", "$$Dash", "$$bo", "$$ar", "$$d(", "$$Describe", "$$Dashboard", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Dashboard", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Dashboard", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Dashboard", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Dashboard", "$$Result", "\u2581describe", "$$Dash", "$$bo", "$$ar", "$$d(", "$$Describe", "$$Dashboard", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Dashboard", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateSegmentResponse CreateSegment(CreateSegmentRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateSegmentRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateSegmentResponseUnmarshaller.Instance;\n    return Invoke<CreateSegmentResponse>(request, options);\n}\n", "java": "public CreateSegmentResult createSegment(CreateSegmentRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateSegment(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Segment", "$$Response", "\u2581Create", "$$Segment", "$$(Create", "$$Segment", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Segment", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Segment", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Segment", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Segment", "$$Result", "\u2581create", "$$Segment", "$$(Create", "$$Segment", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Segment", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[DBCELL]\\n\");\n    buffer.Append(\"    .rowoffset       = \").Append(StringUtil.ToHexString(RowOffset)).Append(\"\\n\");\n    for (int k = 0; k < field_2_cell_offsets.Length; k++) {\n        buffer.Append(\"    .cell_\").Append(k).Append(\" = \").Append(HexDump.ShortToHex(field_2_cell_offsets[k])).Append(\"\\n\");\n    }\n    buffer.Append(\"[/DBCELL]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"[DBCELL]\\n\");\n    buffer.append(\"    .rowoffset = \").append(HexDump.intToHex(field_1_row_offset)).append(\"\\n\");\n    for (int k = 0; k < field_2_cell_offsets.length; k++) {\n        buffer.append(\"    .cell_\").append(k).append(\" = \").append(HexDump.shortToHex(field_2_cell_offsets[ k ])).append(\"\\n\");\n    }\n    buffer.append(\"[/DBCELL]\\n\");\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$DB", "$$CE", "$$LL", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$row", "$$offset", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$String", "$$Util", "$$.To", "$$HexString(", "$$Row", "$$Offset", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581for", "\u2581(int", "\u2581k", "\u2581=", "\u25810;", "\u2581k", "\u2581<", "\u2581field_2_", "$$cell", "$$_", "$$offset", "$$s.Length;", "\u2581k", "$$++)", "\u2581{"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$cell", "$$_", "$$\").Append(", "$$k", "$$)", "$$.Append(\"", "\u2581=", "\u2581\").Append(", "$$HexDump.Short", "$$ToHex(", "$$field_2_", "$$cell", "$$_", "$$offset", "$$s[", "$$k", "$$]", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581buffer.Append(\"[/", "$$DB", "$$CE", "$$LL", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(\"[", "$$DB", "$$CE", "$$LL", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$row", "$$offset", "\u2581=", "\u2581\").append(", "$$HexDump.", "$$int", "$$ToHex(", "$$field_1_", "$$row", "$$_", "$$offset", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581for", "\u2581(int", "\u2581k", "\u2581=", "\u25810;", "\u2581k", "\u2581<", "\u2581field_2_", "$$cell", "$$_", "$$offset", "$$s.length;", "\u2581k", "$$++)", "\u2581{"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$cell", "$$_", "$$\").append(", "$$k", "$$)", "$$.append(\"", "\u2581=", "\u2581\").append(", "$$HexDump.short", "$$ToHex(", "$$field_2_", "$$cell", "$$_", "$$offset", "$$s[", "\u2581k", "\u2581", "$$]", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581buffer.append(\"[/", "$$DB", "$$CE", "$$LL", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual IList<string> GetUndeletedList() {\n    return undeletedList;\n}\n", "java": "public List<String> getUndeletedList() {\n    return undeletedList;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581IList<", "$$string>", "\u2581Get", "$$Un", "$$de", "$$lete", "$$d", "$$List", "$$()", "\u2581{"], ["\u2581return", "\u2581un", "$$de", "$$lete", "$$d", "$$List", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List<", "$$String>", "\u2581get", "$$Un", "$$de", "$$lete", "$$d", "$$List", "$$()", "\u2581{"], ["\u2581return", "\u2581un", "$$de", "$$lete", "$$d", "$$List", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    return \"[INTERFACEEND/]\\n\";\n}\n", "java": "public String toString() {\n    return \"[INTERFACEEND/]\\n\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$[", "$$IN", "$$TER", "$$FA", "$$CE", "$$EN", "$$D", "$$/", "$$]", "$$\\n", "$$\"", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$[", "$$IN", "$$TER", "$$FA", "$$CE", "$$EN", "$$D", "$$/", "$$]", "$$\\n", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public override object Clone() {\n    return this;\n}\n", "java": "public MergeScheduler clone() {\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581object", "\u2581Clone()", "\u2581{"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Merge", "$$Sched", "$$ul", "$$er", "\u2581clone()", "\u2581{"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public PlainTextDictionary(TextReader reader) {\n    @in = reader;\n}\n", "java": "public PlainTextDictionary(Reader reader) {\n    in = new BufferedReader(reader);\n}\n", "cs_t": [["\u2581public", "\u2581P", "$$la", "$$in", "$$Text", "$$D", "$$ictionary", "$$(", "$$Text", "$$Reader", "\u2581read", "$$er)", "\u2581{"], ["\u2581@in", "\u2581=", "\u2581read", "$$er", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$la", "$$in", "$$Text", "$$D", "$$ictionary", "$$(", "$$Reader", "\u2581read", "$$er)", "\u2581{"], ["\u2581in", "\u2581=", "\u2581new", "\u2581", "$$Bu", "$$ff", "$$e", "$$red", "$$Reader", "$$(re", "$$ad", "$$er)", "$$;"], ["\u2581}"]]}, {"cs": "public java.lang.StringBuilder append(java.lang.CharSequence csq) {\n    if (csq == null) {\n        appendNull();\n    }\n    else {\n        append0(csq, 0, csq.Length);\n    }\n    return this;\n}\n", "java": "public StringBuilder append(CharSequence csq) {\n    if (csq == null) {\n        appendNull();\n    }\n    else {\n        append0(csq, 0, csq.length());\n    }\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581java.lang.String", "$$Builder", "\u2581append(", "$$java.", "$$lang.", "$$CharSequence", "\u2581c", "$$sq", "$$)", "\u2581{"], ["\u2581if", "\u2581(c", "$$sq", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581append", "$$Null", "$$()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581append", "$$0", "$$(c", "$$sq", "$$,", "\u25810,", "\u2581c", "$$sq", "$$.Length)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581StringBuilder", "\u2581append(", "$$CharSequence", "\u2581c", "$$sq", "$$)", "\u2581{"], ["\u2581if", "\u2581(c", "$$sq", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581append", "$$Null", "$$()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581append", "$$0", "$$(c", "$$sq", "$$,", "\u25810,", "\u2581c", "$$sq", "$$.length", "$$())", "$$;"], ["\u2581}"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListAssociatedStacksResponse ListAssociatedStacks(ListAssociatedStacksRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListAssociatedStacksRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListAssociatedStacksResponseUnmarshaller.Instance;\n    return Invoke<ListAssociatedStacksResponse>(request, options);\n}\n", "java": "public ListAssociatedStacksResult listAssociatedStacks(ListAssociatedStacksRequest request) {\n    request = beforeClientExecution(request);\n    return executeListAssociatedStacks(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Associate", "$$d", "$$Stack", "$$sResponse", "\u2581List", "$$Associate", "$$d", "$$Stack", "$$s(List", "$$Associate", "$$d", "$$Stack", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Associate", "$$d", "$$Stack", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Associate", "$$d", "$$Stack", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Associate", "$$d", "$$Stack", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Associate", "$$d", "$$Stack", "$$sResult", "\u2581list", "$$Associate", "$$d", "$$Stack", "$$s(List", "$$Associate", "$$d", "$$Stack", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Associate", "$$d", "$$Stack", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static double avedev(double[] v) {\n    double r = 0;\n    double m = 0;\n    double s = 0;\n    for (int i = 0, iSize = v.Length; i < iSize; i++) {\n        s += v[i];\n    }\n    m = s / v.Length;\n    s = 0;\n    for (int i = 0, iSize = v.Length; i < iSize; i++) {\n        s += Math.Abs(v[i] - m);\n    }\n    r = s / v.Length;\n    return r;\n}\n", "java": "public static double avedev(double[] v) {\n    double r = 0;\n    double m = 0;\n    double s = 0;\n    for (int i=0, iSize=v.length; i<iSize; i++) {\n        s += v[i];\n    }\n    m = s / v.length;\n    s = 0;\n    for (int i=0, iSize=v.length; i<iSize; i++) {\n        s += Math.abs(v[i]-m);\n    }\n    r = s / v.length;\n    return r;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581a", "$$ve", "$$de", "$$v", "$$(double", "$$[]", "\u2581v)", "\u2581{"], ["\u2581double", "\u2581r", "\u2581=", "\u25810;"], ["\u2581double", "\u2581m", "\u2581=", "\u25810;"], ["\u2581double", "\u2581s", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810,", "\u2581i", "$$Size", "\u2581=", "\u2581v", "$$.Length;", "\u2581i", "\u2581<", "\u2581i", "$$Size", "$$;", "\u2581i++)", "\u2581{"], ["\u2581s", "\u2581+=", "\u2581v", "$$[i]", "$$;"], ["\u2581}"], ["\u2581m", "\u2581=", "\u2581s", "\u2581/", "\u2581v", "$$.Length;"], ["\u2581s", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810,", "\u2581i", "$$Size", "\u2581=", "\u2581v", "$$.Length;", "\u2581i", "\u2581<", "\u2581i", "$$Size", "$$;", "\u2581i++)", "\u2581{"], ["\u2581s", "\u2581+=", "\u2581M", "$$ath", "$$.A", "$$b", "$$s(", "$$v", "$$[i]", "\u2581-", "\u2581m", "$$)", "$$;"], ["\u2581}"], ["\u2581r", "\u2581=", "\u2581s", "\u2581/", "\u2581v", "$$.Length;"], ["\u2581return", "\u2581r", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581a", "$$ve", "$$de", "$$v", "$$(double", "$$[]", "\u2581v)", "\u2581{"], ["\u2581double", "\u2581r", "\u2581=", "\u25810;"], ["\u2581double", "\u2581m", "\u2581=", "\u25810;"], ["\u2581double", "\u2581s", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(int", "\u2581i", "$$=", "$$0,", "\u2581i", "$$Size", "$$=", "$$v", "$$.length;", "\u2581i", "$$<", "$$i", "$$Size", "$$;", "\u2581i++)", "\u2581{"], ["\u2581s", "\u2581+=", "\u2581v", "$$[i]", "$$;"], ["\u2581}"], ["\u2581m", "\u2581=", "\u2581s", "\u2581/", "\u2581v", "$$.length;"], ["\u2581s", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(int", "\u2581i", "$$=", "$$0,", "\u2581i", "$$Size", "$$=", "$$v", "$$.length;", "\u2581i", "$$<", "$$i", "$$Size", "$$;", "\u2581i++)", "\u2581{"], ["\u2581s", "\u2581+=", "\u2581Math.", "$$ab", "$$s(", "$$v", "$$[i]", "$$-", "$$m", "$$)", "$$;"], ["\u2581}"], ["\u2581r", "\u2581=", "\u2581s", "\u2581/", "\u2581v", "$$.length;"], ["\u2581return", "\u2581r", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeByoipCidrsResponse DescribeByoipCidrs(DescribeByoipCidrsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeByoipCidrsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeByoipCidrsResponseUnmarshaller.Instance;\n    return Invoke<DescribeByoipCidrsResponse>(request, options);\n}\n", "java": "public DescribeByoipCidrsResult describeByoipCidrs(DescribeByoipCidrsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeByoipCidrs(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$By", "$$o", "$$ip", "$$Cidr", "$$sResponse", "\u2581Describe", "$$By", "$$o", "$$ip", "$$Cidr", "$$s(Describe", "$$By", "$$o", "$$ip", "$$Cidr", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$By", "$$o", "$$ip", "$$Cidr", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$By", "$$o", "$$ip", "$$Cidr", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$By", "$$o", "$$ip", "$$Cidr", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$By", "$$o", "$$ip", "$$Cidr", "$$sResult", "\u2581describe", "$$By", "$$o", "$$ip", "$$Cidr", "$$s(Describe", "$$By", "$$o", "$$ip", "$$Cidr", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$By", "$$o", "$$ip", "$$Cidr", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetDiskResponse GetDisk(GetDiskRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetDiskRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetDiskResponseUnmarshaller.Instance;\n    return Invoke<GetDiskResponse>(request, options);\n}\n", "java": "public GetDiskResult getDisk(GetDiskRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetDisk(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Disk", "$$Response", "\u2581Get", "$$Disk", "$$(Get", "$$Disk", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Disk", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Disk", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Disk", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Disk", "$$Result", "\u2581get", "$$Disk", "$$(Get", "$$Disk", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Disk", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateDBClusterParameterGroupResponse CreateDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateDBClusterParameterGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateDBClusterParameterGroupResponseUnmarshaller.Instance;\n    return Invoke<CreateDBClusterParameterGroupResponse>(request, options);\n}\n", "java": "public DBClusterParameterGroup createDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateDBClusterParameterGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$DBCluster", "$$ParameterGroup", "$$Response", "\u2581Create", "$$DBCluster", "$$ParameterGroup", "$$(Create", "$$DBCluster", "$$ParameterGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$DBCluster", "$$ParameterGroup", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$DBCluster", "$$ParameterGroup", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$DBCluster", "$$ParameterGroup", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$B", "$$Cluster", "$$ParameterGroup", "\u2581create", "$$DBCluster", "$$ParameterGroup", "$$(Create", "$$DBCluster", "$$ParameterGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$DBCluster", "$$ParameterGroup", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static java.nio.CharBuffer wrap(char[] array_1, int start, int charCount) {\n    java.util.Arrays.checkOffsetAndCount(array_1.Length, start, charCount);\n    java.nio.CharBuffer buf = new java.nio.ReadWriteCharArrayBuffer(array_1);\n    buf._position = start;\n    buf._limit = start + charCount;\n    return buf;\n}\n", "java": "public static CharBuffer wrap(char[] array, int start, int charCount) {\n    Arrays.checkOffsetAndCount(array.length, start, charCount);\n    CharBuffer buf = new ReadWriteCharArrayBuffer(array);\n    buf.position = start;\n    buf.limit = start + charCount;\n    return buf;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581java.nio.", "$$CharBuffer", "\u2581w", "$$rap", "$$(char[]", "\u2581array", "$$_", "$$1,", "\u2581int", "\u2581start,", "\u2581int", "\u2581char", "$$Count)", "\u2581{"], ["\u2581java.", "$$u", "$$til", "$$.Ar", "$$ray", "$$s.", "$$check", "$$Offset", "$$And", "$$Count", "$$(array", "$$_", "$$1.", "$$Length", "$$,", "\u2581start,", "\u2581char", "$$Count)", "$$;"], ["\u2581java.nio.", "$$CharBuffer", "\u2581buf", "\u2581=", "\u2581new", "\u2581java.nio.Read", "$$Write", "$$CharArray", "$$Buffer", "$$(array", "$$_", "$$1)", "$$;"], ["\u2581buf", "$$._", "$$position", "\u2581=", "\u2581start", "$$;"], ["\u2581buf", "$$._", "$$limit", "\u2581=", "\u2581start", "\u2581+", "\u2581char", "$$Count", "$$;"], ["\u2581return", "\u2581buf", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581Char", "$$Buffer", "\u2581w", "$$rap", "$$(char[]", "\u2581array,", "\u2581int", "\u2581start,", "\u2581int", "\u2581char", "$$Count)", "\u2581{"], ["\u2581Arrays.", "$$check", "$$Offset", "$$And", "$$Count", "$$(array", "$$.length,", "\u2581start,", "\u2581char", "$$Count)", "$$;"], ["\u2581Char", "$$Buffer", "\u2581buf", "\u2581=", "\u2581new", "\u2581Read", "$$Write", "$$CharArray", "$$Buffer", "$$(array", "$$)", "$$;"], ["\u2581buf", "$$.", "$$position", "\u2581=", "\u2581start", "$$;"], ["\u2581buf", "$$.", "$$limit", "\u2581=", "\u2581start", "\u2581+", "\u2581char", "$$Count", "$$;"], ["\u2581return", "\u2581buf", "$$;"], ["\u2581}"]]}, {"cs": "public virtual SubmoduleStatusType GetType() {\n    return type;\n}\n", "java": "public SubmoduleStatusType getType() {\n    return type;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Sub", "$$module", "$$Status", "$$Type", "\u2581Get", "$$Type()", "\u2581{"], ["\u2581return", "\u2581type", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Sub", "$$module", "$$Status", "$$Type", "\u2581get", "$$Type()", "\u2581{"], ["\u2581return", "\u2581type", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeGameServerGroupResponse DescribeGameServerGroup(DescribeGameServerGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeGameServerGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeGameServerGroupResponseUnmarshaller.Instance;\n    return Invoke<DescribeGameServerGroupResponse>(request, options);\n}\n", "java": "public DescribeGameServerGroupResult describeGameServerGroup(DescribeGameServerGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeGameServerGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$GameServer", "$$Group", "$$Response", "\u2581Describe", "$$GameServer", "$$Group", "$$(Describe", "$$GameServer", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$GameServer", "$$Group", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$GameServer", "$$Group", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$GameServer", "$$Group", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$GameServer", "$$Group", "$$Result", "\u2581describe", "$$GameServer", "$$Group", "$$(Describe", "$$GameServer", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$GameServer", "$$Group", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public java.util.regex.Pattern pattern() {\n    return _pattern;\n}\n", "java": "public Pattern pattern() {\n    return pattern;\n}\n", "cs_t": [["\u2581public", "\u2581java.", "$$u", "$$til", "$$.re", "$$g", "$$ex", "$$.", "$$Pattern", "\u2581pattern", "$$()", "\u2581{"], ["\u2581return", "\u2581_", "$$pattern", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$attern", "\u2581pattern", "$$()", "\u2581{"], ["\u2581return", "\u2581pattern", "$$;"], ["\u2581}"]]}, {"cs": "public virtual V setValue(V @object) {\n    throw new System.NotSupportedException();\n}\n", "java": "public V setValue(V object) {\n    throw new UnsupportedOperationException();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581V", "\u2581set", "$$Value(", "$$V", "\u2581@object)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.Not", "$$Supported", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581V", "\u2581set", "$$Value(", "$$V", "\u2581object)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Un", "$$supported", "$$Operation", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public StringBuilder Stem(string word) {\n    string cmd = stemmer.GetLastOnPath(word);\n    if (cmd == null)return null;\n    buffer.Length = 0;\n    buffer.Append(word);\n    Diff.Apply(buffer, cmd);\n    if (buffer.Length > 0)return buffer;\n    elsereturn null;\n}\n", "java": "public StringBuilder stem(CharSequence word) {\n    CharSequence cmd = stemmer.getLastOnPath(word);\n    if (cmd == null)return null;\n    buffer.setLength(0);\n    buffer.append(word);\n    Diff.apply(buffer, cmd);\n    if (buffer.length() > 0)return buffer;\n    elsereturn null;\n}\n", "cs_t": [["\u2581public", "\u2581StringBuilder", "\u2581S", "$$tem", "$$(string", "\u2581word", "$$)", "\u2581{"], ["\u2581string", "\u2581c", "$$md", "\u2581=", "\u2581s", "$$tem", "$$m", "$$er.", "$$Get", "$$Last", "$$On", "$$Path", "$$(", "$$word", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$md", "\u2581==", "\u2581null)", "$$return", "\u2581null", "$$;"], ["\u2581buffer", "$$.Length", "\u2581=", "\u25810;"], ["\u2581buffer.Append(", "$$word", "$$)", "$$;"], ["\u2581D", "$$iff", "$$.Ap", "$$ply", "$$(buffer", "$$,", "\u2581c", "$$md", "$$)", "$$;"], ["\u2581if", "\u2581(b", "$$uffer", "$$.Length", "\u2581>", "\u25810)return", "\u2581buffer", "$$;"], ["\u2581else", "$$return", "\u2581null", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581StringBuilder", "\u2581s", "$$tem", "$$(", "$$CharSequence", "\u2581word", "$$)", "\u2581{"], ["\u2581Char", "$$Sequence", "\u2581c", "$$md", "\u2581=", "\u2581s", "$$tem", "$$mer", "$$.get", "$$Last", "$$On", "$$Path", "$$(", "$$word", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$md", "\u2581==", "\u2581null)", "$$return", "\u2581null", "$$;"], ["\u2581buffer", "$$.set", "$$Length", "$$(", "$$0)", "$$;"], ["\u2581buffer.append(", "$$word", "$$)", "$$;"], ["\u2581D", "$$iff", "$$.ap", "$$ply", "$$(buffer", "$$,", "\u2581c", "$$md", "$$)", "$$;"], ["\u2581if", "\u2581(b", "$$uffer", "$$.length()", "\u2581>", "\u25810)return", "\u2581buffer", "$$;"], ["\u2581else", "$$return", "\u2581null", "$$;"], ["\u2581}"]]}, {"cs": "public RenameFaceRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"RenameFace\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public RenameFaceRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"RenameFace\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581R", "$$en", "$$ame", "$$Face", "$$Request():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Ren", "$$ame", "$$Face", "$$\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581R", "$$en", "$$ame", "$$Face", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Ren", "$$ame", "$$Face", "$$\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual char RequireChar(IDictionary<string, string> args, string name) {\n    return Require(args, name)[0];\n}\n", "java": "public char requireChar(Map<String,String> args, String name) {\n    return require(args, name).charAt(0);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581char", "\u2581Re", "$$quire", "$$Char", "$$(", "$$IDictionary<string,", "\u2581string>", "\u2581args,", "\u2581string", "\u2581name)", "\u2581{"], ["\u2581return", "\u2581Re", "$$quire", "$$(args,", "\u2581name)", "$$[0]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581char", "\u2581re", "$$quire", "$$Char", "$$(", "$$Map<String,", "$$String>", "\u2581args,", "\u2581String", "\u2581name)", "\u2581{"], ["\u2581return", "\u2581re", "$$quire", "$$(args,", "\u2581name", "$$).", "$$char", "$$At(", "$$0)", "$$;"], ["\u2581}"]]}, {"cs": "public static string ToStringTree(ITree t) {\n    return ToStringTree(t, (IList<string>)null);\n}\n", "java": "public static String toStringTree(Tree t) {\n    return toStringTree(t, (List<String>)null);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581string", "\u2581To", "$$String", "$$Tree", "$$(I", "$$Tree", "\u2581t", "$$)", "\u2581{"], ["\u2581return", "\u2581To", "$$String", "$$Tree", "$$(t", "$$,", "\u2581(I", "$$List<", "$$string>", "$$)", "$$null", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581String", "\u2581to", "$$String", "$$Tree", "$$(", "$$Tree", "\u2581t", "$$)", "\u2581{"], ["\u2581return", "\u2581to", "$$String", "$$Tree", "$$(t", "$$,", "\u2581(", "$$List<", "$$String>", "$$)", "$$null", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return \"<deleted/>\";\n}\n", "java": "public String toString() {\n    return \"<deleted/>\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581\"<", "$$de", "$$lete", "$$d", "$$/", "$$>", "$$\"", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581\"<", "$$de", "$$lete", "$$d", "$$/", "$$>", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public GetRepoWebhookLogListRequest(): base(\"cr\", \"2016-06-07\", \"GetRepoWebhookLogList\", \"cr\", \"openAPI\") {\n    UriPattern = \"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs\";\n    Method = MethodType.GET;\n}\n", "java": "public GetRepoWebhookLogListRequest() {\n    super(\"cr\", \"2016-06-07\", \"GetRepoWebhookLogList\", \"cr\");\n    setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs\");\n    setMethod(MethodType.GET);\n}\n", "cs_t": [["\u2581public", "\u2581Get", "$$Repo", "$$Web", "$$ho", "$$ok", "$$Log", "$$List", "$$Request():", "\u2581base(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"Get", "$$Repo", "$$Web", "$$ho", "$$ok", "$$Log", "$$List", "$$\",", "\u2581\"", "$$cr\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581", "$$UriPattern", "\u2581=", "\u2581\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]/", "$$w", "$$eb", "$$ho", "$$ok", "$$s", "$$/[", "$$Web", "$$ho", "$$ok", "$$Id", "$$]/", "$$log", "$$s", "$$\"", "$$;"], ["\u2581Method", "\u2581=", "\u2581Method", "$$Type.", "$$GE", "$$T", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Repo", "$$Web", "$$ho", "$$ok", "$$Log", "$$List", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"Get", "$$Repo", "$$Web", "$$ho", "$$ok", "$$Log", "$$List", "$$\",", "\u2581\"", "$$cr", "$$\")", "$$;"], ["\u2581set", "$$UriPattern", "$$(\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]/", "$$w", "$$eb", "$$ho", "$$ok", "$$s", "$$/[", "$$Web", "$$ho", "$$ok", "$$Id", "$$]/", "$$log", "$$s", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.", "$$GE", "$$T", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetJobUnlockCodeResponse GetJobUnlockCode(GetJobUnlockCodeRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetJobUnlockCodeRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetJobUnlockCodeResponseUnmarshaller.Instance;\n    return Invoke<GetJobUnlockCodeResponse>(request, options);\n}\n", "java": "public GetJobUnlockCodeResult getJobUnlockCode(GetJobUnlockCodeRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetJobUnlockCode(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Job", "$$Un", "$$lock", "$$Code", "$$Response", "\u2581Get", "$$Job", "$$Un", "$$lock", "$$Code", "$$(Get", "$$Job", "$$Un", "$$lock", "$$Code", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Job", "$$Un", "$$lock", "$$Code", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Job", "$$Un", "$$lock", "$$Code", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Job", "$$Un", "$$lock", "$$Code", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Job", "$$Un", "$$lock", "$$Code", "$$Result", "\u2581get", "$$Job", "$$Un", "$$lock", "$$Code", "$$(Get", "$$Job", "$$Un", "$$lock", "$$Code", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Job", "$$Un", "$$lock", "$$Code", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public RemoveTagsRequest(string resourceId) {\n    _resourceId = resourceId;\n}\n", "java": "public RemoveTagsRequest(String resourceId) {\n    setResourceId(resourceId);\n}\n", "cs_t": [["\u2581public", "\u2581Remove", "$$Tag", "$$sRequest", "$$(string", "\u2581res", "$$ource", "$$Id)", "\u2581{"], ["\u2581_", "$$res", "$$ource", "$$Id", "\u2581=", "\u2581res", "$$ource", "$$Id", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Remove", "$$Tag", "$$sRequest", "$$(String", "\u2581res", "$$ource", "$$Id)", "\u2581{"], ["\u2581set", "$$Resource", "$$Id(", "$$res", "$$ource", "$$Id)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual short GetGB2312Id(char ch) {\n    try {\n        byte[] buffer = Encoding.GetEncoding(\"GB2312\").GetBytes(ch.ToString());\n        if (buffer.Length != 2) {\n            return -1;\n        }\n        int b0 = (buffer[0] & 0x0FF) - 161;\n        int b1 = (buffer[1] & 0x0FF) - 161;\n        return (short)(b0 * 94 + b1);\n    }\n    catch (ArgumentException e) {\n        throw new Exception(e.ToString(), e);\n    }\n}\n", "java": "public short getGB2312Id(char ch) {\n    try {\n        byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n        if (buffer.length != 2) {\n            return -1;\n        }\n        int b0 = (buffer[0] & 0x0FF) - 161;\n        int b1 = (buffer[1] & 0x0FF) - 161;\n        return (short) (b0 * 94 + b1);\n    }\n    catch (UnsupportedEncodingException e) {\n        throw new RuntimeException(e);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581short", "\u2581Get", "$$G", "$$B", "$$2", "$$3", "$$1", "$$2", "$$Id(", "$$char", "\u2581ch", "$$)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581byte[]", "\u2581buffer", "\u2581=", "\u2581", "$$Encoding", "$$.Get", "$$Encoding", "$$(\"", "$$G", "$$B", "$$2", "$$3", "$$1", "$$2", "$$\")", "$$.Get", "$$Bytes", "$$(", "$$ch", "$$.ToString()", "$$)", "$$;"], ["\u2581if", "\u2581(b", "$$uffer", "$$.Length", "\u2581!=", "\u25812)", "\u2581{"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581int", "\u2581b", "$$0", "\u2581=", "\u2581(b", "$$uffer", "$$[0]", "\u2581&", "\u25810x0", "$$FF", "$$)", "\u2581-", "\u258116", "$$1", "$$;"], ["\u2581int", "\u2581b", "$$1", "\u2581=", "\u2581(b", "$$uffer", "$$[1", "$$]", "\u2581&", "\u25810x0", "$$FF", "$$)", "\u2581-", "\u258116", "$$1", "$$;"], ["\u2581return", "\u2581(short)", "$$(b", "$$0", "\u2581*", "\u2581", "$$9", "$$4", "\u2581+", "\u2581b", "$$1)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$ArgumentException", "\u2581e)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$Exception(e", "$$.ToString()", "$$,", "\u2581e)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581short", "\u2581get", "$$G", "$$B", "$$2", "$$3", "$$1", "$$2", "$$Id(", "$$char", "\u2581ch", "$$)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581byte[]", "\u2581buffer", "\u2581=", "\u2581Character", "$$.to", "$$String(", "$$ch", "$$)", "$$.get", "$$Bytes", "$$(\"", "$$G", "$$B", "$$2", "$$3", "$$1", "$$2", "$$\")", "$$;"], ["\u2581if", "\u2581(b", "$$uffer", "$$.length", "\u2581!=", "\u25812)", "\u2581{"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581int", "\u2581b", "$$0", "\u2581=", "\u2581(b", "$$uffer", "$$[0]", "\u2581&", "\u25810x0", "$$FF", "$$)", "\u2581-", "\u258116", "$$1", "$$;"], ["\u2581int", "\u2581b", "$$1", "\u2581=", "\u2581(b", "$$uffer", "$$[1", "$$]", "\u2581&", "\u25810x0", "$$FF", "$$)", "\u2581-", "\u258116", "$$1", "$$;"], ["\u2581return", "\u2581(short)", "\u2581(b", "$$0", "\u2581*", "\u2581", "$$9", "$$4", "\u2581+", "\u2581b", "$$1)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$Un", "$$supported", "$$Encoding", "$$Exception", "\u2581e)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Runtime", "$$Exception(e", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual NGit.BatchRefUpdate AddCommand(ICollection<ReceiveCommand> cmd) {\n    Sharpen.Collections.AddAll(commands, cmd);\n    return this;\n}\n", "java": "public BatchRefUpdate addCommand(Collection<ReceiveCommand> cmd) {\n    commands.addAll(cmd);\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581NGit.", "$$Batch", "$$Ref", "$$Update", "\u2581Add", "$$Comm", "$$an", "$$d(", "$$I", "$$Collection<", "$$Recei", "$$ve", "$$Command", "$$>", "\u2581c", "$$md", "$$)", "\u2581{"], ["\u2581Sharpen.", "$$Collection", "$$s", "$$.Add", "$$All", "$$(", "$$com", "$$m", "$$and", "$$s,", "\u2581c", "$$md", "$$)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Batch", "$$Ref", "$$Update", "\u2581add", "$$Comm", "$$an", "$$d(", "$$Collection<", "$$Recei", "$$ve", "$$Command", "$$>", "\u2581c", "$$md", "$$)", "\u2581{"], ["\u2581com", "$$m", "$$and", "$$s.", "$$add", "$$All", "$$(c", "$$md", "$$)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public int CheckExternSheet(int sheetNumber) {\n    return OrCreateLinkTable.CheckExternSheet(sheetNumber);\n}\n", "java": "public short checkExternSheet(int sheetNumber) {\n    return (short)getOrCreateLinkTable().checkExternSheet(sheetNumber);\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581Check", "$$ExternSheet", "$$(int", "\u2581sheet", "$$Number", "$$)", "\u2581{"], ["\u2581return", "\u2581", "$$Or", "$$Create", "$$Link", "$$Table", "$$.", "$$Check", "$$ExternSheet", "$$(", "$$sheet", "$$Number", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581short", "\u2581check", "$$ExternSheet", "$$(int", "\u2581sheet", "$$Number", "$$)", "\u2581{"], ["\u2581return", "\u2581(short)", "$$get", "$$Or", "$$Create", "$$Link", "$$Table", "$$().", "$$check", "$$ExternSheet", "$$(", "$$sheet", "$$Number", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Equals(object @object) {\n    return c.Equals(@object);\n}\n", "java": "@Override public boolean equals(Object object) {\n    return c.equals(object);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Equals(object", "\u2581@object)", "\u2581{"], ["\u2581return", "\u2581c", "$$.Equals(", "$$@", "$$object", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581@Override", "\u2581public", "\u2581boolean", "\u2581equals(Object", "\u2581object)", "\u2581{"], ["\u2581return", "\u2581c", "$$.equals(", "$$object", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual Query Build(IQueryNode queryNode) {\n    AnyQueryNode andNode = (AnyQueryNode)queryNode;\n    BooleanQuery bQuery = new BooleanQuery();\n    IList<IQueryNode> children = andNode.GetChildren();\n    if (children != null) {\n        foreach (IQueryNode child in children) {\n            object obj = child.GetTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n            if (obj != null) {\n                Query query = (Query)obj;\n                try {\n                    bQuery.Add(query, Occur.SHOULD);\n                }\n                catch (BooleanQuery.TooManyClausesException ex) {\n                    throw new QueryNodeException(new Message(QueryParserMessages.EMPTY_MESSAGE), ex);\n                }\n            }\n        }\n    }\n    bQuery.MinimumNumberShouldMatch = andNode.MinimumMatchingElements;\n    return bQuery;\n}\n", "java": "public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    AnyQueryNode andNode = (AnyQueryNode) queryNode;\n    BooleanQuery.Builder bQuery = new BooleanQuery.Builder();\n    List<QueryNode> children = andNode.getChildren();\n    if (children != null) {\n        for (QueryNode child : children) {\n            Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n            if (obj != null) {\n                Query query = (Query) obj;\n                try {\n                    bQuery.add(query, BooleanClause.Occur.SHOULD);\n                }\n                catch (TooManyClauses ex) {\n                    throw new QueryNodeException(new MessageImpl(QueryParserMessages.EMPTY_MESSAGE), ex);\n                }\n            }\n        }\n    }\n    bQuery.setMinimumNumberShouldMatch(andNode.getMinimumMatchingElements());\n    return bQuery.build();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Query", "\u2581", "$$Bu", "$$ild(", "$$I", "$$QueryNode", "\u2581query", "$$Node", "$$)", "\u2581{"], ["\u2581An", "$$y", "$$QueryNode", "\u2581and", "$$Node", "\u2581=", "\u2581(", "$$Any", "$$QueryNode", "$$)", "$$query", "$$Node", "$$;"], ["\u2581Boolean", "$$Query", "\u2581b", "$$Query", "\u2581=", "\u2581new", "\u2581Boolean", "$$Query", "$$()", "$$;"], ["\u2581IList<", "$$I", "$$QueryNode", "$$>", "\u2581child", "$$ren", "\u2581=", "\u2581and", "$$Node", "$$.Get", "$$Children", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$child", "$$ren", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581foreach", "\u2581(I", "$$QueryNode", "\u2581child", "\u2581in", "\u2581child", "$$ren", "$$)", "\u2581{"], ["\u2581object", "\u2581obj", "\u2581=", "\u2581child", "$$.Get", "$$Tag", "$$(", "$$Query", "$$Tree", "$$Builder", "$$.", "$$Q", "$$U", "$$ER", "$$Y_", "$$T", "$$RE", "$$E_", "$$B", "$$U", "$$I", "$$LD", "$$ER", "$$_", "$$TA", "$$G", "$$ID", "$$)", "$$;"], ["\u2581if", "\u2581(obj", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581Query", "\u2581query", "\u2581=", "\u2581(", "$$Query", "$$)", "$$obj", "$$;"], ["\u2581try", "\u2581{"], ["\u2581b", "$$Query", "$$.Add(", "$$query", "$$,", "\u2581", "$$O", "$$c", "$$c", "$$ur", "$$.S", "$$H", "$$O", "$$UL", "$$D", "$$)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$Boolean", "$$Query", "$$.To", "$$o", "$$Man", "$$y", "$$Cl", "$$a", "$$uses", "$$Exception", "\u2581ex", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$QueryNode", "$$Exception", "$$(new", "\u2581M", "$$essage", "$$(", "$$Query", "$$Parser", "$$M", "$$ess", "$$ages", "$$.E", "$$MPTY", "$$_M", "$$E", "$$SS", "$$A", "$$GE", "$$),", "\u2581ex", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581b", "$$Query", "$$.", "$$Min", "$$im", "$$um", "$$Number", "$$Sh", "$$ould", "$$Match", "\u2581=", "\u2581and", "$$Node", "$$.", "$$Min", "$$im", "$$um", "$$Match", "$$ing", "$$Element", "$$s;"], ["\u2581return", "\u2581b", "$$Query", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Boolean", "$$Query", "\u2581bu", "$$ild(", "$$QueryNode", "\u2581query", "$$Node", "$$)", "\u2581throws", "\u2581", "$$QueryNode", "$$Exception", "\u2581{"], ["\u2581An", "$$y", "$$QueryNode", "\u2581and", "$$Node", "\u2581=", "\u2581(", "$$Any", "$$QueryNode", "$$)", "\u2581query", "$$Node", "$$;"], ["\u2581Boolean", "$$Query", "$$.", "$$Builder", "\u2581b", "$$Query", "\u2581=", "\u2581new", "\u2581Boolean", "$$Query", "$$.", "$$Builder", "$$()", "$$;"], ["\u2581List<", "$$QueryNode", "$$>", "\u2581child", "$$ren", "\u2581=", "\u2581and", "$$Node", "$$.get", "$$Children", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$child", "$$ren", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581for", "\u2581(", "$$QueryNode", "\u2581child", "\u2581:", "\u2581child", "$$ren", "$$)", "\u2581{"], ["\u2581Object", "\u2581obj", "\u2581=", "\u2581child", "$$.get", "$$Tag", "$$(", "$$Query", "$$Tree", "$$Builder", "$$.", "$$Q", "$$U", "$$ER", "$$Y_", "$$T", "$$RE", "$$E_", "$$B", "$$U", "$$I", "$$LD", "$$ER", "$$_", "$$TA", "$$G", "$$ID", "$$)", "$$;"], ["\u2581if", "\u2581(obj", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581Query", "\u2581query", "\u2581=", "\u2581(", "$$Query", "$$)", "\u2581obj", "$$;"], ["\u2581try", "\u2581{"], ["\u2581b", "$$Query", "$$.add(", "$$query", "$$,", "\u2581Boolean", "$$Cl", "$$a", "$$use", "$$.", "$$O", "$$c", "$$c", "$$ur", "$$.S", "$$H", "$$O", "$$UL", "$$D", "$$)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$To", "$$o", "$$Man", "$$y", "$$Cl", "$$a", "$$uses", "\u2581ex", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$QueryNode", "$$Exception", "$$(new", "\u2581M", "$$essage", "$$Impl", "$$(", "$$Query", "$$Parser", "$$M", "$$ess", "$$ages", "$$.E", "$$MPTY", "$$_M", "$$E", "$$SS", "$$A", "$$GE", "$$),", "\u2581ex", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581b", "$$Query", "$$.set", "$$Min", "$$im", "$$um", "$$Number", "$$Sh", "$$ould", "$$Match", "$$(", "$$and", "$$Node", "$$.get", "$$Min", "$$im", "$$um", "$$Match", "$$ing", "$$Element", "$$s", "$$())", "$$;"], ["\u2581return", "\u2581b", "$$Query", "$$.", "$$bu", "$$ild", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeStreamProcessorResponse DescribeStreamProcessor(DescribeStreamProcessorRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeStreamProcessorRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeStreamProcessorResponseUnmarshaller.Instance;\n    return Invoke<DescribeStreamProcessorResponse>(request, options);\n}\n", "java": "public DescribeStreamProcessorResult describeStreamProcessor(DescribeStreamProcessorRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeStreamProcessor(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Stream", "$$Processor", "$$Response", "\u2581Describe", "$$Stream", "$$Processor", "$$(Describe", "$$Stream", "$$Processor", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Stream", "$$Processor", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Stream", "$$Processor", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Stream", "$$Processor", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Stream", "$$Processor", "$$Result", "\u2581describe", "$$Stream", "$$Processor", "$$(Describe", "$$Stream", "$$Processor", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Stream", "$$Processor", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeDashboardPermissionsResponse DescribeDashboardPermissions(DescribeDashboardPermissionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeDashboardPermissionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeDashboardPermissionsResponseUnmarshaller.Instance;\n    return Invoke<DescribeDashboardPermissionsResponse>(request, options);\n}\n", "java": "public DescribeDashboardPermissionsResult describeDashboardPermissions(DescribeDashboardPermissionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeDashboardPermissions(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Dashboard", "$$Permission", "$$sResponse", "\u2581Describe", "$$Dashboard", "$$Permission", "$$s(Describe", "$$Dashboard", "$$Permission", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Dashboard", "$$Permission", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Dashboard", "$$Permission", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Dashboard", "$$Permission", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Dashboard", "$$Permission", "$$sResult", "\u2581describe", "$$Dashboard", "$$Permission", "$$s(Describe", "$$Dashboard", "$$Permission", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Dashboard", "$$Permission", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual Ref Peel(Ref @ref) {\n    try {\n        return RefDatabase.Peel(@ref);\n    }\n    catch (IOException) {\n        return @ref;\n    }\n}\n", "java": "public Ref peel(Ref ref) {\n    try {\n        return getRefDatabase().peel(ref);\n    }\n    catch (IOException e) {\n        return ref;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Ref", "\u2581P", "$$e", "$$el", "$$(", "$$Ref", "\u2581@", "$$ref", "$$)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581return", "\u2581Ref", "$$Database", "$$.", "$$P", "$$e", "$$el", "$$(@", "$$ref", "$$)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(IOException", "$$)", "\u2581{"], ["\u2581return", "\u2581@", "$$ref", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Ref", "\u2581p", "$$e", "$$el", "$$(", "$$Ref", "\u2581ref", "$$)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581return", "\u2581get", "$$Ref", "$$Database", "$$().", "$$p", "$$e", "$$el", "$$(re", "$$f", "$$)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(IOException", "\u2581e)", "\u2581{"], ["\u2581return", "\u2581ref", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override long RamBytesUsed() {\n    return RamUsageEstimator.AlignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * RamUsageEstimator.NUM_BYTES_INT32 + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.SizeOf(blocks);\n}\n", "java": "public long ramBytesUsed() {\n    return RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * Integer.BYTES     + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.sizeOf(blocks);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581long", "\u2581Ram", "$$BytesUsed()", "\u2581{"], ["\u2581return", "\u2581RamUsageEstimator", "$$.A", "$$li", "$$gn", "$$Object", "$$Size", "$$(", "$$R", "$$am", "$$UsageEstimator", "$$.NUM_BYTES_", "$$OBJECT_", "$$H", "$$EAD", "$$ER", "$$+", "\u25812", "\u2581*", "\u2581RamUsageEstimator.NUM_BYTES_", "$$IN", "$$T", "$$32", "\u2581+", "\u2581RamUsageEstimator.NUM_BYTES_", "$$OBJECT_", "$$REF", "$$)", "\u2581+", "\u2581RamUsageEstimator", "$$.", "$$SizeOf", "$$(block", "$$s)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581long", "\u2581ram", "$$BytesUsed()", "\u2581{"], ["\u2581return", "\u2581RamUsageEstimator", "$$.", "$$al", "$$ign", "$$Object", "$$Size", "$$(", "$$R", "$$am", "$$UsageEstimator", "$$.NUM_BYTES_", "$$OBJECT_", "$$H", "$$EAD", "$$ER", "$$+", "\u25812", "\u2581*", "\u2581Integ", "$$er.", "$$B", "$$YTE", "$$S", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581+", "\u2581RamUsageEstimator.NUM_BYTES_", "$$OBJECT_", "$$REF", "$$)", "\u2581+", "\u2581RamUsageEstimator", "$$.size", "$$Of", "$$(block", "$$s)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetDomainSuggestionsResponse GetDomainSuggestions(GetDomainSuggestionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetDomainSuggestionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetDomainSuggestionsResponseUnmarshaller.Instance;\n    return Invoke<GetDomainSuggestionsResponse>(request, options);\n}\n", "java": "public GetDomainSuggestionsResult getDomainSuggestions(GetDomainSuggestionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetDomainSuggestions(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Domain", "$$Su", "$$gg", "$$es", "$$tion", "$$sResponse", "\u2581Get", "$$Domain", "$$Su", "$$gg", "$$es", "$$tion", "$$s(Get", "$$Domain", "$$Su", "$$gg", "$$es", "$$tion", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Domain", "$$Su", "$$gg", "$$es", "$$tion", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Domain", "$$Su", "$$gg", "$$es", "$$tion", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Domain", "$$Su", "$$gg", "$$es", "$$tion", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Domain", "$$Su", "$$gg", "$$es", "$$tion", "$$sResult", "\u2581get", "$$Domain", "$$Su", "$$gg", "$$es", "$$tion", "$$s(Get", "$$Domain", "$$Su", "$$gg", "$$es", "$$tion", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Domain", "$$Su", "$$gg", "$$es", "$$tion", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeStackEventsResponse DescribeStackEvents(DescribeStackEventsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeStackEventsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeStackEventsResponseUnmarshaller.Instance;\n    return Invoke<DescribeStackEventsResponse>(request, options);\n}\n", "java": "public DescribeStackEventsResult describeStackEvents(DescribeStackEventsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeStackEvents(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Stack", "$$Event", "$$sResponse", "\u2581Describe", "$$Stack", "$$Event", "$$s(Describe", "$$Stack", "$$Event", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Stack", "$$Event", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Stack", "$$Event", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Stack", "$$Event", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Stack", "$$Event", "$$sResult", "\u2581describe", "$$Stack", "$$Event", "$$s(Describe", "$$Stack", "$$Event", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Stack", "$$Event", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void SetRule(int idx, IConditionalFormattingRule cfRule) {\n    SetRule(idx, (HSSFConditionalFormattingRule)cfRule);\n}\n", "java": "public void setRule(int idx, ConditionalFormattingRule cfRule) {\n    setRule(idx, (HSSFConditionalFormattingRule)cfRule);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Set", "$$Rule", "$$(int", "\u2581idx", "$$,", "\u2581I", "$$ConditionalFormatting", "$$Rule", "\u2581c", "$$f", "$$Rule", "$$)", "\u2581{"], ["\u2581Set", "$$Rule", "$$(id", "$$x", "$$,", "\u2581(", "$$HSSF", "$$ConditionalFormatting", "$$Rule", "$$)", "$$c", "$$f", "$$Rule", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Rule", "$$(int", "\u2581idx", "$$,", "\u2581Con", "$$ditionalFormatting", "$$Rule", "\u2581c", "$$f", "$$Rule", "$$)", "\u2581{"], ["\u2581set", "$$Rule", "$$(id", "$$x", "$$,", "\u2581(", "$$HSSF", "$$ConditionalFormatting", "$$Rule", "$$)", "$$c", "$$f", "$$Rule", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateResolverRuleResponse CreateResolverRule(CreateResolverRuleRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateResolverRuleRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateResolverRuleResponseUnmarshaller.Instance;\n    return Invoke<CreateResolverRuleResponse>(request, options);\n}\n", "java": "public CreateResolverRuleResult createResolverRule(CreateResolverRuleRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateResolverRule(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$ResolverRule", "$$Response", "\u2581Create", "$$ResolverRule", "$$(Create", "$$ResolverRule", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$ResolverRule", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$ResolverRule", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$ResolverRule", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$ResolverRule", "$$Result", "\u2581create", "$$ResolverRule", "$$(Create", "$$ResolverRule", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$ResolverRule", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public SeriesIndexRecord(RecordInputStream in1) {\n    field_1_index = in1.ReadShort();\n}\n", "java": "public SeriesIndexRecord(RecordInputStream in) {\n    field_1_index = in.readShort();\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$eries", "$$Index", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581field_1_", "$$index", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$eries", "$$Index", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581field_1_", "$$index", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public GetStylesRequest(): base(\"lubancloud\", \"2018-05-09\", \"GetStyles\", \"luban\", \"openAPI\") {\n    Method = MethodType.POST;\n}\n", "java": "public GetStylesRequest() {\n    super(\"lubancloud\", \"2018-05-09\", \"GetStyles\", \"luban\");\n    setMethod(MethodType.POST);\n}\n", "cs_t": [["\u2581public", "\u2581Get", "$$St", "$$y", "$$les", "$$Request():", "\u2581base(\"", "$$l", "$$ub", "$$an", "$$c", "$$loud", "$$\",", "\u2581\"2018", "$$-0", "$$5", "$$-0", "$$9", "$$\",", "\u2581\"Get", "$$St", "$$y", "$$les", "$$\",", "\u2581\"", "$$l", "$$ub", "$$an", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Method", "\u2581=", "\u2581MethodType.POST", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$St", "$$y", "$$les", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$l", "$$ub", "$$an", "$$c", "$$loud", "$$\",", "\u2581\"2018", "$$-0", "$$5", "$$-0", "$$9", "$$\",", "\u2581\"Get", "$$St", "$$y", "$$les", "$$\",", "\u2581\"", "$$l", "$$ub", "$$an", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.POST", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort(field_1_gridset_flag);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort(field_1_gridset_flag);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$field_1_", "$$g", "$$ri", "$$d", "$$set", "$$_", "$$flag", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(", "$$field_1_", "$$g", "$$ri", "$$d", "$$set", "$$_", "$$flag", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Equals(object obj) {\n    if (this == obj) {\n        return true;\n    }\n    if (obj == null) {\n        return false;\n    }\n    if (GetType() != obj.GetType()) {\n        return false;\n    }\n    Toffs other = (Toffs)obj;\n    if (StartOffset != other.StartOffset) {\n        return false;\n    }\n    if (EndOffset != other.EndOffset) {\n        return false;\n    }\n    return true;\n}\n", "java": "public boolean equals(Object obj) {\n    if (this == obj) {\n        return true;\n    }\n    if (obj == null) {\n        return false;\n    }\n    if (getClass() != obj.getClass()) {\n        return false;\n    }\n    Toffs other = (Toffs) obj;\n    if (getStartOffset() != other.getStartOffset()) {\n        return false;\n    }\n    if (getEndOffset() != other.getEndOffset()) {\n        return false;\n    }\n    return true;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Equals(object", "\u2581obj)", "\u2581{"], ["\u2581if", "\u2581(this", "\u2581==", "\u2581obj)", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(obj", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$Get", "$$Type()", "\u2581!=", "\u2581obj", "$$.Get", "$$Type", "$$())", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581To", "$$ff", "$$s", "\u2581other", "\u2581=", "\u2581(", "$$To", "$$ff", "$$s)", "$$obj", "$$;"], ["\u2581if", "\u2581(", "$$Start", "$$Offset", "\u2581!=", "\u2581other.", "$$Start", "$$Offset", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$End", "$$Offset", "\u2581!=", "\u2581other.", "$$End", "$$Offset", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581equals(Object", "\u2581obj)", "\u2581{"], ["\u2581if", "\u2581(this", "\u2581==", "\u2581obj)", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(obj", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(get", "$$Class", "$$()", "\u2581!=", "\u2581obj", "$$.get", "$$Class", "$$())", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581To", "$$ff", "$$s", "\u2581other", "\u2581=", "\u2581(", "$$To", "$$ff", "$$s)", "\u2581obj", "$$;"], ["\u2581if", "\u2581(get", "$$Start", "$$Offset", "$$()", "\u2581!=", "\u2581other", "$$.get", "$$Start", "$$Offset", "$$())", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(get", "$$End", "$$Offset", "$$()", "\u2581!=", "\u2581other", "$$.get", "$$End", "$$Offset", "$$())", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateGatewayGroupResponse CreateGatewayGroup(CreateGatewayGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateGatewayGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateGatewayGroupResponseUnmarshaller.Instance;\n    return Invoke<CreateGatewayGroupResponse>(request, options);\n}\n", "java": "public CreateGatewayGroupResult createGatewayGroup(CreateGatewayGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateGatewayGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Gateway", "$$Group", "$$Response", "\u2581Create", "$$Gateway", "$$Group", "$$(Create", "$$Gateway", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Gateway", "$$Group", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Gateway", "$$Group", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Gateway", "$$Group", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Gateway", "$$Group", "$$Result", "\u2581create", "$$Gateway", "$$Group", "$$(Create", "$$Gateway", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Gateway", "$$Group", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateParticipantConnectionResponse CreateParticipantConnection(CreateParticipantConnectionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateParticipantConnectionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateParticipantConnectionResponseUnmarshaller.Instance;\n    return Invoke<CreateParticipantConnectionResponse>(request, options);\n}\n", "java": "public CreateParticipantConnectionResult createParticipantConnection(CreateParticipantConnectionRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateParticipantConnection(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Par", "$$tic", "$$ip", "$$ant", "$$Connection", "$$Response", "\u2581Create", "$$Par", "$$tic", "$$ip", "$$ant", "$$Connection", "$$(Create", "$$Par", "$$tic", "$$ip", "$$ant", "$$Connection", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Par", "$$tic", "$$ip", "$$ant", "$$Connection", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Par", "$$tic", "$$ip", "$$ant", "$$Connection", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Par", "$$tic", "$$ip", "$$ant", "$$Connection", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Par", "$$tic", "$$ip", "$$ant", "$$Connection", "$$Result", "\u2581create", "$$Par", "$$tic", "$$ip", "$$ant", "$$Connection", "$$(Create", "$$Par", "$$tic", "$$ip", "$$ant", "$$Connection", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Par", "$$tic", "$$ip", "$$ant", "$$Connection", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static double irr(double[] income) {\n    return irr(income, 0.1d);\n}\n", "java": "public static double irr(double[] income) {\n    return irr(income, 0.1d);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581i", "$$rr", "$$(double", "$$[]", "\u2581in", "$$com", "$$e", "$$)", "\u2581{"], ["\u2581return", "\u2581i", "$$rr", "$$(in", "$$com", "$$e", "$$,", "\u25810", "$$.", "$$1", "$$d", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581i", "$$rr", "$$(double", "$$[]", "\u2581in", "$$com", "$$e", "$$)", "\u2581{"], ["\u2581return", "\u2581i", "$$rr", "$$(in", "$$com", "$$e", "$$,", "\u25810", "$$.", "$$1", "$$d", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual RegisterWorkspaceDirectoryResponse RegisterWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = RegisterWorkspaceDirectoryRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = RegisterWorkspaceDirectoryResponseUnmarshaller.Instance;\n    return Invoke<RegisterWorkspaceDirectoryResponse>(request, options);\n}\n", "java": "public RegisterWorkspaceDirectoryResult registerWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request) {\n    request = beforeClientExecution(request);\n    return executeRegisterWorkspaceDirectory(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Register", "$$Workspace", "$$Directory", "$$Response", "\u2581Register", "$$Workspace", "$$Directory", "$$(Re", "$$gister", "$$Workspace", "$$Directory", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Register", "$$Workspace", "$$Directory", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Register", "$$Workspace", "$$Directory", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Re", "$$gister", "$$Workspace", "$$Directory", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Register", "$$Workspace", "$$Directory", "$$Result", "\u2581re", "$$gister", "$$Workspace", "$$Directory", "$$(Re", "$$gister", "$$Workspace", "$$Directory", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Re", "$$gister", "$$Workspace", "$$Directory", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual NGit.Api.RevertCommand Include(Ref commit) {\n    CheckCallable();\n    commits.AddItem(commit);\n    return this;\n}\n", "java": "public RevertCommand include(AnyObjectId commit) {\n    return include(commit.getName(), commit);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581NGit.Api.", "$$Re", "$$vert", "$$Command", "\u2581In", "$$clude", "$$(", "$$Ref", "\u2581commit", "$$)", "\u2581{"], ["\u2581Check", "$$Callable", "$$()", "$$;"], ["\u2581commit", "$$s", "$$.Add", "$$Item", "$$(", "$$com", "$$mit", "$$)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Re", "$$vert", "$$Command", "\u2581in", "$$clude", "$$(", "$$AnyObjectId", "\u2581commit", "$$)", "\u2581{"], ["\u2581return", "\u2581in", "$$clude", "$$(", "$$com", "$$mit", "$$.get", "$$Name", "$$(),", "\u2581commit", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE) {\n    ValueEval veText1;\n    try {\n        veText1 = OperandResolver.GetSingleValue(inumberVE, srcRowIndex, srcColumnIndex);\n    }\n    catch (EvaluationException e) {\n        return e.GetErrorEval();\n    }\n    String iNumber = OperandResolver.CoerceValueToString(veText1);\n    System.Text.RegularExpressions.Match m = COMPLEX_NUMBER_PATTERN.Match(iNumber);\n    bool result = m.Success && m.Groups[0].Length>0;\n    String imaginary = \"\";\n    if (result == true) {\n        String imaginaryGroup = m.Groups[5].Value;\n        bool hasImaginaryPart = imaginaryGroup.Equals(\"i\") || imaginaryGroup.Equals(\"j\");\n        if (imaginaryGroup.Length == 0) {\n            return new StringEval(Convert.ToString(0));\n        }\n        if (hasImaginaryPart) {\n            String sign = \"\";\n            String imaginarySign = m.Groups[(GROUP3_IMAGINARY_SIGN)].Value;\n            if (imaginarySign.Length != 0 && !(imaginarySign.Equals(\"+\"))) {\n                sign = imaginarySign;\n            }\n            String groupImaginaryNumber = m.Groups[(GROUP4_IMAGINARY_INTEGER_OR_DOUBLE)].Value;\n            if (groupImaginaryNumber.Length != 0) {\n                imaginary = sign + groupImaginaryNumber;\n            }\n            else {\n                imaginary = sign + \"1\";\n            }\n        }\n    }\n    else {\n        return ErrorEval.NUM_ERROR;\n    }\n    return new StringEval(imaginary);\n}\n", "java": "public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE) {\n    ValueEval veText1;\n    try {\n        veText1 = OperandResolver.getSingleValue(inumberVE, srcRowIndex, srcColumnIndex);\n    }\n    catch (EvaluationException e) {\n        return e.getErrorEval();\n    }\n    String iNumber = OperandResolver.coerceValueToString(veText1);\n    Matcher m = COMPLEX_NUMBER_PATTERN.matcher(iNumber);\n    boolean result = m.matches();\n    String imaginary = \"\";\n    if (result) {\n        String imaginaryGroup = m.group(5);\n        boolean hasImaginaryPart = imaginaryGroup.equals(\"i\") || imaginaryGroup.equals(\"j\");\n        if (imaginaryGroup.length() == 0) {\n            return new StringEval(String.valueOf(0));\n        }\n        if (hasImaginaryPart) {\n            String sign = \"\";\n            String imaginarySign = m.group(GROUP3_IMAGINARY_SIGN);\n            if (imaginarySign.length() != 0 && !(imaginarySign.equals(\"+\"))) {\n                sign = imaginarySign;\n            }\n            String groupImaginaryNumber = m.group(GROUP4_IMAGINARY_INTEGER_OR_DOUBLE);\n            if (groupImaginaryNumber.length() != 0) {\n                imaginary = sign + groupImaginaryNumber;\n            }\n            else {\n                imaginary = sign + \"1\";\n            }\n        }\n    }\n    else {\n        return ErrorEval.NUM_ERROR;\n    }\n    return new StringEval(imaginary);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581ValueEval", "\u2581Evaluate(int", "\u2581srcRowIndex,", "\u2581int", "\u2581srcColumnIndex,", "\u2581ValueEval", "\u2581in", "$$umber", "$$VE", "$$)", "\u2581{"], ["\u2581ValueEval", "\u2581ve", "$$Text", "$$1", "$$;"], ["\u2581try", "\u2581{"], ["\u2581ve", "$$Text", "$$1", "\u2581=", "\u2581OperandResolver", "$$.Get", "$$Single", "$$Value", "$$(in", "$$umber", "$$VE", "$$,", "\u2581srcRowIndex,", "\u2581srcColumn", "$$Index)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(EvaluationException", "\u2581e)", "\u2581{"], ["\u2581return", "\u2581e", "$$.Get", "$$ErrorEval", "$$()", "$$;"], ["\u2581}"], ["\u2581String", "\u2581i", "$$Number", "\u2581=", "\u2581OperandResolver.", "$$Co", "$$erce", "$$ValueTo", "$$String(", "$$ve", "$$Text", "$$1)", "$$;"], ["\u2581System.", "$$Text", "$$.", "$$Re", "$$g", "$$ul", "$$ar", "$$Expression", "$$s.", "$$Match", "\u2581m", "\u2581=", "\u2581C", "$$O", "$$MP", "$$LE", "$$X", "$$_", "$$N", "$$UM", "$$B", "$$ER", "$$_P", "$$AT", "$$TER", "$$N", "$$.", "$$Match", "$$(i", "$$Number", "$$)", "$$;"], ["\u2581bool", "\u2581result", "\u2581=", "\u2581m", "$$.S", "$$uc", "$$cess", "\u2581&&", "\u2581m", "$$.", "$$Group", "$$s[0]", "$$.Length", "$$>", "$$0", "$$;"], ["\u2581String", "\u2581i", "$$ma", "$$gin", "$$ary", "\u2581=", "\u2581\"", "$$\"", "$$;"], ["\u2581if", "\u2581(result", "\u2581==", "\u2581true", "$$)", "\u2581{"], ["\u2581String", "\u2581i", "$$ma", "$$gin", "$$ary", "$$Group", "\u2581=", "\u2581m", "$$.", "$$Group", "$$s[", "$$5", "$$]", "$$.", "$$Value", "$$;"], ["\u2581bool", "\u2581has", "$$Ima", "$$gin", "$$ary", "$$Part", "\u2581=", "\u2581i", "$$ma", "$$gin", "$$ary", "$$Group", "$$.Equals(", "$$\"", "$$i", "$$\")", "\u2581||", "\u2581i", "$$ma", "$$gin", "$$ary", "$$Group", "$$.Equals(", "$$\"", "$$j", "$$\")", "$$;"], ["\u2581if", "\u2581(i", "$$ma", "$$gin", "$$ary", "$$Group", "$$.Length", "\u2581==", "\u25810)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581String", "$$Eval", "$$(", "$$Con", "$$vert", "$$.To", "$$String(", "$$0", "$$))", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$has", "$$Ima", "$$gin", "$$ary", "$$Part", "$$)", "\u2581{"], ["\u2581String", "\u2581s", "$$ign", "\u2581=", "\u2581\"", "$$\"", "$$;"], ["\u2581String", "\u2581i", "$$ma", "$$gin", "$$ary", "$$Sign", "\u2581=", "\u2581m", "$$.", "$$Group", "$$s[", "$$(", "$$G", "$$RO", "$$U", "$$P", "$$3_", "$$IM", "$$A", "$$G", "$$IN", "$$AR", "$$Y_", "$$SI", "$$G", "$$N", "$$)", "$$]", "$$.", "$$Value", "$$;"], ["\u2581if", "\u2581(i", "$$ma", "$$gin", "$$ary", "$$Sign", "$$.Length", "\u2581!=", "\u25810", "\u2581&&", "\u2581!", "$$(i", "$$ma", "$$gin", "$$ary", "$$Sign", "$$.Equals(", "$$\"+", "$$\"", "$$))", "$$)", "\u2581{"], ["\u2581s", "$$ign", "\u2581=", "\u2581i", "$$ma", "$$gin", "$$ary", "$$Sign", "$$;"], ["\u2581}"], ["\u2581String", "\u2581group", "$$Ima", "$$gin", "$$ary", "$$Number", "\u2581=", "\u2581m", "$$.", "$$Group", "$$s[", "$$(", "$$G", "$$RO", "$$U", "$$P", "$$4_", "$$IM", "$$A", "$$G", "$$IN", "$$AR", "$$Y_", "$$IN", "$$TE", "$$G", "$$ER", "$$_", "$$OR", "$$_", "$$D", "$$O", "$$U", "$$BLE", "$$)", "$$]", "$$.", "$$Value", "$$;"], ["\u2581if", "\u2581(", "$$group", "$$Ima", "$$gin", "$$ary", "$$Number", "$$.Length", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581i", "$$ma", "$$gin", "$$ary", "\u2581=", "\u2581s", "$$ign", "\u2581+", "\u2581group", "$$Ima", "$$gin", "$$ary", "$$Number", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581i", "$$ma", "$$gin", "$$ary", "\u2581=", "\u2581s", "$$ign", "\u2581+", "\u2581\"", "$$1", "$$\"", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581Error", "$$Eval", "$$.NUM", "$$_ERROR", "$$;"], ["\u2581}"], ["\u2581return", "\u2581new", "\u2581String", "$$Eval", "$$(i", "$$ma", "$$gin", "$$ary", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ValueEval", "\u2581evaluate(int", "\u2581srcRowIndex,", "\u2581int", "\u2581srcColumnIndex,", "\u2581ValueEval", "\u2581in", "$$umber", "$$VE", "$$)", "\u2581{"], ["\u2581ValueEval", "\u2581ve", "$$Text", "$$1", "$$;"], ["\u2581try", "\u2581{"], ["\u2581ve", "$$Text", "$$1", "\u2581=", "\u2581OperandResolver", "$$.get", "$$Single", "$$Value", "$$(in", "$$umber", "$$VE", "$$,", "\u2581srcRowIndex,", "\u2581srcColumn", "$$Index)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(EvaluationException", "\u2581e)", "\u2581{"], ["\u2581return", "\u2581e.get", "$$ErrorEval", "$$()", "$$;"], ["\u2581}"], ["\u2581String", "\u2581i", "$$Number", "\u2581=", "\u2581OperandResolver.", "$$co", "$$erce", "$$ValueTo", "$$String(", "$$ve", "$$Text", "$$1)", "$$;"], ["\u2581Match", "$$er", "\u2581m", "\u2581=", "\u2581C", "$$O", "$$MP", "$$LE", "$$X", "$$_", "$$N", "$$UM", "$$B", "$$ER", "$$_P", "$$AT", "$$TER", "$$N", "$$.", "$$match", "$$er(", "$$i", "$$Number", "$$)", "$$;"], ["\u2581boolean", "\u2581result", "\u2581=", "\u2581m", "$$.", "$$match", "$$es", "$$()", "$$;"], ["\u2581String", "\u2581i", "$$ma", "$$gin", "$$ary", "\u2581=", "\u2581\"", "$$\"", "$$;"], ["\u2581if", "\u2581(result", "$$)", "\u2581{"], ["\u2581String", "\u2581i", "$$ma", "$$gin", "$$ary", "$$Group", "\u2581=", "\u2581m", "$$.", "$$group", "$$(", "$$5", "$$)", "$$;"], ["\u2581boolean", "\u2581has", "$$Ima", "$$gin", "$$ary", "$$Part", "\u2581=", "\u2581i", "$$ma", "$$gin", "$$ary", "$$Group", "$$.equals(", "$$\"", "$$i", "$$\")", "\u2581||", "\u2581i", "$$ma", "$$gin", "$$ary", "$$Group", "$$.equals(", "$$\"", "$$j", "$$\")", "$$;"], ["\u2581if", "\u2581(i", "$$ma", "$$gin", "$$ary", "$$Group", "$$.length()", "\u2581==", "\u25810)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581String", "$$Eval", "$$(String", "$$.value", "$$Of(", "$$0", "$$))", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$has", "$$Ima", "$$gin", "$$ary", "$$Part", "$$)", "\u2581{"], ["\u2581String", "\u2581s", "$$ign", "\u2581=", "\u2581\"", "$$\"", "$$;"], ["\u2581String", "\u2581i", "$$ma", "$$gin", "$$ary", "$$Sign", "\u2581=", "\u2581m", "$$.", "$$group", "$$(", "$$G", "$$RO", "$$U", "$$P", "$$3_", "$$IM", "$$A", "$$G", "$$IN", "$$AR", "$$Y_", "$$SI", "$$G", "$$N", "$$)", "$$;"], ["\u2581if", "\u2581(i", "$$ma", "$$gin", "$$ary", "$$Sign", "$$.length()", "\u2581!=", "\u25810", "\u2581&&", "\u2581!", "$$(i", "$$ma", "$$gin", "$$ary", "$$Sign", "$$.equals(", "$$\"+", "$$\"", "$$))", "$$)", "\u2581{"], ["\u2581s", "$$ign", "\u2581=", "\u2581i", "$$ma", "$$gin", "$$ary", "$$Sign", "$$;"], ["\u2581}"], ["\u2581String", "\u2581group", "$$Ima", "$$gin", "$$ary", "$$Number", "\u2581=", "\u2581m", "$$.", "$$group", "$$(", "$$G", "$$RO", "$$U", "$$P", "$$4_", "$$IM", "$$A", "$$G", "$$IN", "$$AR", "$$Y_", "$$IN", "$$TE", "$$G", "$$ER", "$$_", "$$OR", "$$_", "$$D", "$$O", "$$U", "$$BLE", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$group", "$$Ima", "$$gin", "$$ary", "$$Number", "$$.length()", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581i", "$$ma", "$$gin", "$$ary", "\u2581=", "\u2581s", "$$ign", "\u2581+", "\u2581group", "$$Ima", "$$gin", "$$ary", "$$Number", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581i", "$$ma", "$$gin", "$$ary", "\u2581=", "\u2581s", "$$ign", "\u2581+", "\u2581\"", "$$1", "$$\"", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581Error", "$$Eval", "$$.NUM", "$$_ERROR", "$$;"], ["\u2581}"], ["\u2581return", "\u2581new", "\u2581String", "$$Eval", "$$(i", "$$ma", "$$gin", "$$ary", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual E pollLast() {\n    java.util.MapClass.Entry<E, object> entry = backingMap.pollLastEntry();\n    return (entry == null) ? default(E) : entry.getKey();\n}\n", "java": "public E pollLast() {\n    Map.Entry<E, Object> entry = backingMap.pollLastEntry();\n    return (entry == null) ? null : entry.getKey();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581E", "\u2581p", "$$ol", "$$l", "$$Last", "$$()", "\u2581{"], ["\u2581java.util.", "$$MapClass.", "$$Entry<", "$$E", "$$,", "\u2581object", "$$>", "\u2581entry", "\u2581=", "\u2581b", "$$acking", "$$Map.", "$$p", "$$ol", "$$l", "$$Last", "$$Entry", "$$()", "$$;"], ["\u2581return", "\u2581(", "$$entry", "\u2581==", "\u2581null)", "\u2581?", "\u2581default", "$$(", "$$E", "$$)", "\u2581:", "\u2581entry", "$$.get", "$$Key", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581E", "\u2581p", "$$ol", "$$l", "$$Last", "$$()", "\u2581{"], ["\u2581M", "$$ap", "$$.", "$$Entry<", "$$E", "$$,", "\u2581Object", "$$>", "\u2581entry", "\u2581=", "\u2581b", "$$acking", "$$Map.", "$$p", "$$ol", "$$l", "$$Last", "$$Entry", "$$()", "$$;"], ["\u2581return", "\u2581(", "$$entry", "\u2581==", "\u2581null)", "\u2581?", "\u2581null", "\u2581:", "\u2581entry", "$$.get", "$$Key", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public int ReadUShort() {\n    int ch1 = ReadUByte();\n    int ch2 = ReadUByte();\n    return (ch2 << 8) + (ch1 << 0);\n}\n", "java": "public int readUShort() {\n    int ch1 = readUByte();\n    int ch2 = readUByte();\n    return (ch2 << 8) + (ch1 << 0);\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581Read", "$$U", "$$Short", "$$()", "\u2581{"], ["\u2581int", "\u2581ch", "$$1", "\u2581=", "\u2581Read", "$$U", "$$Byte", "$$()", "$$;"], ["\u2581int", "\u2581ch", "$$2", "\u2581=", "\u2581Read", "$$U", "$$Byte", "$$()", "$$;"], ["\u2581return", "\u2581(", "$$ch", "$$2", "\u2581<<", "\u25818)", "\u2581+", "\u2581(", "$$ch", "$$1", "\u2581<<", "\u25810)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581read", "$$U", "$$Short", "$$()", "\u2581{"], ["\u2581int", "\u2581ch", "$$1", "\u2581=", "\u2581read", "$$U", "$$Byte", "$$()", "$$;"], ["\u2581int", "\u2581ch", "$$2", "\u2581=", "\u2581read", "$$U", "$$Byte", "$$()", "$$;"], ["\u2581return", "\u2581(", "$$ch", "$$2", "\u2581<<", "\u25818)", "\u2581+", "\u2581(", "$$ch", "$$1", "\u2581<<", "\u25810)", "$$;"], ["\u2581}"]]}, {"cs": "public ModifySnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute, OperationType operationType) {\n    _snapshotId = snapshotId;\n    _attribute = attribute;\n    _operationType = operationType;\n}\n", "java": "public ModifySnapshotAttributeRequest(String snapshotId, SnapshotAttributeName attribute, OperationType operationType) {\n    setSnapshotId(snapshotId);\n    setAttribute(attribute.toString());\n    setOperationType(operationType.toString());\n}\n", "cs_t": [["\u2581public", "\u2581Modify", "$$Snapshot", "$$Attribute", "$$Request(string", "\u2581snapshot", "$$Id,", "\u2581S", "$$napshot", "$$Attribute", "$$Name", "\u2581at", "$$tribute", "$$,", "\u2581", "$$Operation", "$$Type", "\u2581o", "$$per", "$$ation", "$$Type", "$$)", "\u2581{"], ["\u2581_", "$$s", "$$napshot", "$$Id", "\u2581=", "\u2581snapshot", "$$Id", "$$;"], ["\u2581_", "$$at", "$$tribute", "\u2581=", "\u2581at", "$$tribute", "$$;"], ["\u2581_", "$$o", "$$per", "$$ation", "$$Type", "\u2581=", "\u2581o", "$$per", "$$ation", "$$Type", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Modify", "$$Snapshot", "$$Attribute", "$$Request(String", "\u2581snapshot", "$$Id,", "\u2581S", "$$napshot", "$$Attribute", "$$Name", "\u2581at", "$$tribute", "$$,", "\u2581", "$$Operation", "$$Type", "\u2581o", "$$per", "$$ation", "$$Type", "$$)", "\u2581{"], ["\u2581set", "$$Snapshot", "$$Id(", "$$s", "$$napshot", "$$Id)", "$$;"], ["\u2581set", "$$Attribute", "$$(", "$$at", "$$tribute", "$$.toString()", "$$)", "$$;"], ["\u2581set", "$$Operation", "$$Type", "$$(o", "$$per", "$$ation", "$$Type", "$$.toString()", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListBonusPaymentsResponse ListBonusPayments(ListBonusPaymentsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListBonusPaymentsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListBonusPaymentsResponseUnmarshaller.Instance;\n    return Invoke<ListBonusPaymentsResponse>(request, options);\n}\n", "java": "public ListBonusPaymentsResult listBonusPayments(ListBonusPaymentsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListBonusPayments(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$B", "$$on", "$$us", "$$P", "$$ay", "$$ment", "$$sResponse", "\u2581List", "$$B", "$$on", "$$us", "$$P", "$$ay", "$$ment", "$$s(List", "$$B", "$$on", "$$us", "$$P", "$$ay", "$$ment", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$B", "$$on", "$$us", "$$P", "$$ay", "$$ment", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$B", "$$on", "$$us", "$$P", "$$ay", "$$ment", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$B", "$$on", "$$us", "$$P", "$$ay", "$$ment", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$B", "$$on", "$$us", "$$P", "$$ay", "$$ment", "$$sResult", "\u2581list", "$$B", "$$on", "$$us", "$$P", "$$ay", "$$ment", "$$s(List", "$$B", "$$on", "$$us", "$$P", "$$ay", "$$ment", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$B", "$$on", "$$us", "$$P", "$$ay", "$$ment", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override V Get(char[] text) {\n    if (text == null) {\n        throw new ArgumentNullException(\"text\");\n    }\n    return default(V);\n}\n", "java": "public V get(CharSequence cs) {\n    if(cs == null)throw new NullPointerException();\n    return null;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581V", "\u2581Get", "$$(char[]", "\u2581text", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$text", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$Ar", "$$gument", "$$Null", "$$Exception(\"", "$$text", "$$\")", "$$;"], ["\u2581}"], ["\u2581return", "\u2581default", "$$(", "$$V", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581V", "\u2581get", "$$(", "$$CharSequence", "\u2581c", "$$s)", "\u2581{"], ["\u2581if", "$$(c", "$$s", "\u2581==", "\u2581null)", "$$throw", "\u2581new", "\u2581Null", "$$Pointer", "$$Exception", "$$()", "$$;"], ["\u2581return", "\u2581null", "$$;"], ["\u2581}"]]}, {"cs": "public override TokenStream Create(TokenStream input) {\n    var commonGrams = (CommonGramsFilter)base.Create(input);\n    return new CommonGramsQueryFilter(commonGrams);\n}\n", "java": "public TokenFilter create(TokenStream input) {\n    CommonGramsFilter commonGrams = (CommonGramsFilter) super.create(input);\n    return new CommonGramsQueryFilter(commonGrams);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581TokenStream", "\u2581Create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581var", "\u2581com", "$$m", "$$on", "$$G", "$$ram", "$$s", "\u2581=", "\u2581(", "$$Common", "$$G", "$$ram", "$$s", "$$Filter", "$$)", "$$base", "$$.Create", "$$(input", "$$)", "$$;"], ["\u2581return", "\u2581new", "\u2581", "$$Common", "$$G", "$$ram", "$$s", "$$Query", "$$Filter", "$$(", "$$com", "$$m", "$$on", "$$G", "$$ram", "$$s)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Token", "$$Filter", "\u2581create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581", "$$Common", "$$G", "$$ram", "$$s", "$$Filter", "\u2581com", "$$m", "$$on", "$$G", "$$ram", "$$s", "\u2581=", "\u2581(", "$$Common", "$$G", "$$ram", "$$s", "$$Filter", "$$)", "\u2581super.", "$$c", "$$reate", "$$(input", "$$)", "$$;"], ["\u2581return", "\u2581new", "\u2581", "$$Common", "$$G", "$$ram", "$$s", "$$Query", "$$Filter", "$$(", "$$com", "$$m", "$$on", "$$G", "$$ram", "$$s)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string GetPath() {\n    return path;\n}\n", "java": "public String getPath() {\n    return path;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581Get", "$$Path", "$$()", "\u2581{"], ["\u2581return", "\u2581path", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Path", "$$()", "\u2581{"], ["\u2581return", "\u2581path", "$$;"], ["\u2581}"]]}, {"cs": "public virtual InitiateMultipartUploadResponse InitiateMultipartUpload(InitiateMultipartUploadRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = InitiateMultipartUploadRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = InitiateMultipartUploadResponseUnmarshaller.Instance;\n    return Invoke<InitiateMultipartUploadResponse>(request, options);\n}\n", "java": "public InitiateMultipartUploadResult initiateMultipartUpload(InitiateMultipartUploadRequest request) {\n    request = beforeClientExecution(request);\n    return executeInitiateMultipartUpload(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581In", "$$iti", "$$ate", "$$Multi", "$$p", "$$art", "$$Upload", "$$Response", "\u2581In", "$$iti", "$$ate", "$$Multi", "$$p", "$$art", "$$Up", "$$lo", "$$ad(", "$$In", "$$iti", "$$ate", "$$Multi", "$$p", "$$art", "$$Upload", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581In", "$$iti", "$$ate", "$$Multi", "$$p", "$$art", "$$Upload", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581In", "$$iti", "$$ate", "$$Multi", "$$p", "$$art", "$$Upload", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$In", "$$iti", "$$ate", "$$Multi", "$$p", "$$art", "$$Upload", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581In", "$$iti", "$$ate", "$$Multi", "$$p", "$$art", "$$Upload", "$$Result", "\u2581in", "$$iti", "$$ate", "$$Multi", "$$p", "$$art", "$$Up", "$$lo", "$$ad(", "$$In", "$$iti", "$$ate", "$$Multi", "$$p", "$$art", "$$Upload", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$In", "$$iti", "$$ate", "$$Multi", "$$p", "$$art", "$$Upload", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public java.lang.StringBuilder insert(int offset, int i) {\n    insert0(offset, System.Convert.ToString(i));\n    return this;\n}\n", "java": "public StringBuilder insert(int offset, int i) {\n    insert0(offset, Integer.toString(i));\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581java.lang.String", "$$Builder", "\u2581insert", "$$(int", "\u2581offset,", "\u2581int", "\u2581i", "$$)", "\u2581{"], ["\u2581insert", "$$0", "$$(offset", "$$,", "\u2581System.", "$$Con", "$$vert", "$$.To", "$$String(", "$$i", "$$))", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581StringBuilder", "\u2581insert", "$$(int", "\u2581offset,", "\u2581int", "\u2581i", "$$)", "\u2581{"], ["\u2581insert", "$$0", "$$(offset", "$$,", "\u2581Integ", "$$er.", "$$to", "$$String(", "$$i", "$$))", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public override void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n    for (int i = 0; i < iterations; ++i) {\n        long block = blocks[blocksOffset++];\n        for (int shift = 62; shift >= 0; shift -= 2) {\n            values[valuesOffset++] = (int)(((long)((ulong)block >> shift)) & 3);\n        }\n    }\n}\n", "java": "public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n    for (int i = 0; i < iterations; ++i) {\n        final long block = blocks[blocksOffset++];\n        for (int shift = 62; shift >= 0; shift -= 2) {\n            values[valuesOffset++] = (int) ((block >>> shift) & 3);\n        }\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581D", "$$ecode", "$$(long[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581int[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581iterations;", "\u2581++i)", "\u2581{"], ["\u2581long", "\u2581block", "\u2581=", "\u2581blocks[blocksOffset++]", "$$;"], ["\u2581for", "\u2581(int", "\u2581shift", "\u2581=", "\u25816", "$$2", "$$;", "\u2581shift", "\u2581>=", "\u25810;", "\u2581shift", "\u2581-=", "\u25812)", "\u2581{"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(int", "$$)((", "$$(long", "$$)((", "$$ul", "$$ong", "$$)", "$$block", "\u2581>>", "\u2581shift", "$$))", "\u2581&", "\u25813", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581decode", "$$(long[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581int[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581iterations;", "\u2581++i)", "\u2581{"], ["\u2581final", "\u2581long", "\u2581block", "\u2581=", "\u2581blocks[blocksOffset++]", "$$;"], ["\u2581for", "\u2581(int", "\u2581shift", "\u2581=", "\u25816", "$$2", "$$;", "\u2581shift", "\u2581>=", "\u25810;", "\u2581shift", "\u2581-=", "\u25812)", "\u2581{"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(int)", "\u2581(", "$$(block", "\u2581>>>", "\u2581shift", "$$)", "\u2581&", "\u25813", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override TokenStream Create(TokenStream input) {\n    return new ElisionFilter(input, articles);\n}\n", "java": "public TokenStream create(TokenStream input) {\n    return new ElisionFilter(input, articles);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581TokenStream", "\u2581Create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581E", "$$li", "$$sion", "$$Filter(input,", "\u2581ar", "$$tic", "$$les", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581TokenStream", "\u2581create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581E", "$$li", "$$sion", "$$Filter(input,", "\u2581ar", "$$tic", "$$les", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public bool Eat(Row @in, int[] remap) {\n    int sum = 0;\n    foreach (Cell c in @in.cells.Values) {\n        sum += c.cnt;\n        if (c.@ref >= 0) {\n            if (remap[c.@ref] == 0) {\n                c.@ref = -1;\n            }\n        }\n    }\n    int frame = sum / 10;\n    bool live = false;\n    foreach (Cell c in @in.cells.Values) {\n        if (c.cnt < frame && c.cmd >= 0) {\n            c.cnt = 0;\n            c.cmd = -1;\n        }\n        if (c.cmd >= 0 || c.@ref >= 0) {\n            live |= true;\n        }\n    }\n    return !live;\n}\n", "java": "public boolean eat(Row in, int remap[]) {\n    int sum = 0;\n    for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {\n        Cell c = i.next();\n        sum += c.cnt;\n        if (c.ref >= 0) {\n            if (remap[c.ref] == 0) {\n                c.ref = -1;\n            }\n        }\n    }\n    int frame = sum / 10;\n    boolean live = false;\n    for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {\n        Cell c = i.next();\n        if (c.cnt < frame && c.cmd >= 0) {\n            c.cnt = 0;\n            c.cmd = -1;\n        }\n        if (c.cmd >= 0 || c.ref >= 0) {\n            live |= true;\n        }\n    }\n    return !live;\n}\n", "cs_t": [["\u2581public", "\u2581bool", "\u2581E", "$$at", "$$(", "$$Row", "\u2581@in", "$$,", "\u2581int[]", "\u2581re", "$$map", "$$)", "\u2581{"], ["\u2581int", "\u2581s", "$$um", "\u2581=", "\u25810;"], ["\u2581foreach", "\u2581(", "$$Cell", "\u2581c", "\u2581in", "\u2581@in", "$$.", "$$cell", "$$s.", "$$Values", "$$)", "\u2581{"], ["\u2581s", "$$um", "\u2581+=", "\u2581c", "$$.c", "$$nt", "$$;"], ["\u2581if", "\u2581(c", "$$.", "$$@", "$$ref", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581if", "\u2581(re", "$$map", "$$[", "$$c.", "$$@", "$$ref", "$$]", "\u2581==", "\u25810)", "\u2581{"], ["\u2581c", "$$.", "$$@", "$$ref", "\u2581=", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581int", "\u2581f", "$$r", "$$ame", "\u2581=", "\u2581s", "$$um", "\u2581/", "\u258110", "$$;"], ["\u2581bool", "\u2581li", "$$ve", "\u2581=", "\u2581false", "$$;"], ["\u2581foreach", "\u2581(", "$$Cell", "\u2581c", "\u2581in", "\u2581@in", "$$.", "$$cell", "$$s.", "$$Values", "$$)", "\u2581{"], ["\u2581if", "\u2581(c", "$$.c", "$$nt", "\u2581<", "\u2581f", "$$r", "$$ame", "\u2581&&", "\u2581c", "$$.c", "$$md", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581c", "$$.c", "$$nt", "\u2581=", "\u25810;"], ["\u2581c", "$$.c", "$$md", "\u2581=", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(c", "$$.c", "$$md", "\u2581>=", "\u25810", "\u2581||", "\u2581c", "$$.", "$$@", "$$ref", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581li", "$$ve", "\u2581|=", "\u2581true", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581!", "$$li", "$$ve", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581e", "$$at", "$$(", "$$Row", "\u2581in", "$$,", "\u2581int", "\u2581re", "$$map", "$$[]", "$$)", "\u2581{"], ["\u2581int", "\u2581s", "$$um", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(", "$$Iterator", "$$<", "$$Cell", "$$>", "\u2581i", "\u2581=", "\u2581in", "$$.", "$$cell", "$$s.", "$$values", "$$().", "$$iterator", "$$()", "$$;", "\u2581i", "$$.has", "$$Next()", "$$;", "$$)", "\u2581{"], ["\u2581Cell", "\u2581c", "\u2581=", "\u2581i", "$$.next", "$$()", "$$;"], ["\u2581s", "$$um", "\u2581+=", "\u2581c", "$$.c", "$$nt", "$$;"], ["\u2581if", "\u2581(c", "$$.re", "$$f", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581if", "\u2581(re", "$$map", "$$[", "$$c", "$$.re", "$$f", "$$]", "\u2581==", "\u25810)", "\u2581{"], ["\u2581c", "$$.re", "$$f", "\u2581=", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581int", "\u2581f", "$$r", "$$ame", "\u2581=", "\u2581s", "$$um", "\u2581/", "\u258110", "$$;"], ["\u2581boolean", "\u2581li", "$$ve", "\u2581=", "\u2581false", "$$;"], ["\u2581for", "\u2581(", "$$Iterator", "$$<", "$$Cell", "$$>", "\u2581i", "\u2581=", "\u2581in", "$$.", "$$cell", "$$s.", "$$values", "$$().", "$$iterator", "$$()", "$$;", "\u2581i", "$$.has", "$$Next()", "$$;", "$$)", "\u2581{"], ["\u2581Cell", "\u2581c", "\u2581=", "\u2581i", "$$.next", "$$()", "$$;"], ["\u2581if", "\u2581(c", "$$.c", "$$nt", "\u2581<", "\u2581f", "$$r", "$$ame", "\u2581&&", "\u2581c", "$$.c", "$$md", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581c", "$$.c", "$$nt", "\u2581=", "\u25810;"], ["\u2581c", "$$.c", "$$md", "\u2581=", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(c", "$$.c", "$$md", "\u2581>=", "\u25810", "\u2581||", "\u2581c", "$$.re", "$$f", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581li", "$$ve", "\u2581|=", "\u2581true", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581!", "$$li", "$$ve", "$$;"], ["\u2581}"]]}, {"cs": "public Token GetToken(int index) {\n    Token t = Token;\n    for (int i = 0; i < index; i++) {\n        if (t.Next != null) t = t.Next;\n        else t = t.Next = TokenSource.GetNextToken();\n    }\n    return t;\n}\n", "java": "final public Token getToken(int index) {\n    Token t = jj_lookingAhead ? jj_scanpos : token;\n    for (int i = 0; i < index; i++) {\n        if (t.next != null) t = t.next;\n        else t = t.next = token_source.getNextToken();\n    }\n    return t;\n}\n", "cs_t": [["\u2581public", "\u2581Token", "\u2581Get", "$$Token", "$$(int", "\u2581index)", "\u2581{"], ["\u2581Token", "\u2581t", "\u2581=", "\u2581Token", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581index", "$$;", "\u2581i++)", "\u2581{"], ["\u2581if", "\u2581(t", "$$.N", "$$ext", "\u2581!=", "\u2581null)", "\u2581t", "\u2581=", "\u2581t", "$$.N", "$$ext", "$$;"], ["\u2581else", "\u2581t", "\u2581=", "\u2581t", "$$.N", "$$ext", "\u2581=", "\u2581Token", "$$Source", "$$.Get", "$$Next", "$$Token", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581t", "$$;"], ["\u2581}"]], "java_t": [["\u2581final", "\u2581public", "\u2581Token", "\u2581get", "$$Token", "$$(int", "\u2581index)", "\u2581{"], ["\u2581Token", "\u2581t", "\u2581=", "\u2581jj_", "$$lo", "$$ok", "$$ing", "$$A", "$$head", "\u2581?", "\u2581jj_", "$$sc", "$$an", "$$pos", "\u2581:", "\u2581token", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581index", "$$;", "\u2581i++)", "\u2581{"], ["\u2581if", "\u2581(t", "$$.next", "\u2581!=", "\u2581null)", "\u2581t", "\u2581=", "\u2581t", "$$.next", "$$;"], ["\u2581else", "\u2581t", "\u2581=", "\u2581t", "$$.next", "\u2581=", "\u2581token", "$$_", "$$source", "$$.get", "$$Next", "$$Token", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581t", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder sb = new StringBuilder();\n    sb.Append(GetType().Name).Append(\" [ARRAY]\\n\");\n    sb.Append(\" range=\").Append(Range.ToString()).Append(\"\\n\");\n    sb.Append(\" options=\").Append(HexDump.ShortToHex(_options)).Append(\"\\n\");\n    sb.Append(\" notUsed=\").Append(HexDump.IntToHex(_field3notUsed)).Append(\"\\n\");\n    sb.Append(\" formula:\").Append(\"\\n\");\n    Ptg[] ptgs = _formula.Tokens;\n    for (int i = 0; i < ptgs.Length; i++) {\n        Ptg ptg = ptgs[i];\n        sb.Append(ptg.ToString()).Append(ptg.RVAType).Append(\"\\n\");\n    }\n    sb.Append(\"]\");\n    return sb.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(getClass().getName()).append(\" [ARRAY]\\n\");\n    sb.append(\" range=\").append(getRange()).append(\"\\n\");\n    sb.append(\" options=\").append(HexDump.shortToHex(_options)).append(\"\\n\");\n    sb.append(\" notUsed=\").append(HexDump.intToHex(_field3notUsed)).append(\"\\n\");\n    sb.append(\" formula:\").append(\"\\n\");\n    Ptg[] ptgs = _formula.getTokens();\n    for (int i = 0; i < ptgs.length; i++) {\n        Ptg ptg = ptgs[i];\n        sb.append(ptg).append(ptg.getRVAType()).append(\"\\n\");\n    }\n    sb.append(\"]\");\n    return sb.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581sb.Append(", "$$Get", "$$Type().", "$$Name)", "$$.Append(\"", "\u2581[", "$$AR", "$$R", "$$A", "$$Y", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581sb.Append(\"", "\u2581range", "$$=", "$$\").Append(", "$$Range", "$$.ToString()", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581sb.Append(\"", "\u2581options", "$$=", "$$\").Append(", "$$HexDump.Short", "$$ToHex", "$$(_", "$$options", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581sb.Append(\"", "\u2581not", "$$Used", "$$=", "$$\").Append(", "$$HexDump.", "$$Int", "$$ToHex", "$$(_", "$$field", "$$3", "$$n", "$$ot", "$$Used", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581sb.Append(\"", "\u2581formula", "$$:", "$$\")", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581Ptg", "$$[]", "\u2581ptg", "$$s", "\u2581=", "\u2581_", "$$form", "$$ula", "$$.", "$$Token", "$$s;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581ptg", "$$s.Length;", "\u2581i++)", "\u2581{"], ["\u2581Ptg", "\u2581ptg", "\u2581=", "\u2581ptg", "$$s[i]", "$$;"], ["\u2581sb.Append(", "$$ptg", "$$.ToString()", "$$)", "$$.Append(", "$$pt", "$$g.", "$$R", "$$V", "$$A", "$$Type", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581sb.Append(\"", "$$]", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581sb.append(", "$$get", "$$Class().get", "$$Name", "$$())", "$$.append(\"", "\u2581[", "$$AR", "$$R", "$$A", "$$Y", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581sb.append(\"", "\u2581range", "$$=\").append(", "$$get", "$$Range", "$$())", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581sb.append(\"", "\u2581options", "$$=\").append(", "$$HexDump.short", "$$ToHex", "$$(_", "$$options", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581sb.append(\"", "\u2581not", "$$Used", "$$=\").append(", "$$HexDump.", "$$int", "$$ToHex", "$$(_", "$$field", "$$3", "$$n", "$$ot", "$$Used", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581sb.append(\"", "\u2581formula", "$$:", "$$\")", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581Ptg", "$$[]", "\u2581ptg", "$$s", "\u2581=", "\u2581_", "$$form", "$$ula", "$$.get", "$$Token", "$$s()", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581ptg", "$$s.length;", "\u2581i++)", "\u2581{"], ["\u2581Ptg", "\u2581ptg", "\u2581=", "\u2581ptg", "$$s[i]", "$$;"], ["\u2581sb.append(", "$$ptg", "$$)", "$$.append(", "$$ptg", "$$.get", "$$R", "$$V", "$$A", "$$Type", "$$())", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581sb.append(\"", "$$]", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetFolderResponse GetFolder(GetFolderRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetFolderRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetFolderResponseUnmarshaller.Instance;\n    return Invoke<GetFolderResponse>(request, options);\n}\n", "java": "public GetFolderResult getFolder(GetFolderRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetFolder(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Folder", "$$Response", "\u2581Get", "$$F", "$$old", "$$er(", "$$Get", "$$Folder", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Folder", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Folder", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Folder", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Folder", "$$Result", "\u2581get", "$$F", "$$old", "$$er(", "$$Get", "$$Folder", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Folder", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void add(int location, E @object) {\n    throw new System.NotSupportedException();\n}\n", "java": "@Override public void add(int location, E object) {\n    throw new UnsupportedOperationException();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581add(", "$$int", "\u2581location", "$$,", "\u2581E", "\u2581@object)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.Not", "$$Supported", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581@Override", "\u2581public", "\u2581void", "\u2581add(", "$$int", "\u2581location", "$$,", "\u2581E", "\u2581object)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Un", "$$supported", "$$Operation", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public PositiveScoresOnlyCollector(ICollector c) {\n    this.c = c;\n}\n", "java": "public PositiveScoresOnlyCollector(Collector in) {\n    super(in);\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Po", "$$sitive", "$$Sc", "$$ores", "$$Only", "$$Col", "$$lector", "$$(I", "$$Col", "$$lector", "\u2581c)", "\u2581{"], ["\u2581this.", "$$c", "\u2581=", "\u2581c", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Po", "$$sitive", "$$Sc", "$$ores", "$$Only", "$$Col", "$$lector", "$$(", "$$Col", "$$lector", "\u2581in)", "\u2581{"], ["\u2581super(", "$$in", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public CreateRepoBuildRuleRequest(): base(\"cr\", \"2016-06-07\", \"CreateRepoBuildRule\", \"cr\", \"openAPI\") {\n    UriPattern = \"/repos/[RepoNamespace]/[RepoName]/rules\";\n    Method = MethodType.PUT;\n}\n", "java": "public CreateRepoBuildRuleRequest() {\n    super(\"cr\", \"2016-06-07\", \"CreateRepoBuildRule\", \"cr\");\n    setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/rules\");\n    setMethod(MethodType.PUT);\n}\n", "cs_t": [["\u2581public", "\u2581Create", "$$Repo", "$$Build", "$$Rule", "$$Request():", "\u2581base(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"", "$$Create", "$$Repo", "$$Build", "$$Rule", "$$\",", "\u2581\"", "$$cr\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581", "$$UriPattern", "\u2581=", "\u2581\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]/", "$$r", "$$ules", "$$\"", "$$;"], ["\u2581Method", "\u2581=", "\u2581Method", "$$Type.", "$$P", "$$UT", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Repo", "$$Build", "$$Rule", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"", "$$Create", "$$Repo", "$$Build", "$$Rule", "$$\",", "\u2581\"", "$$cr", "$$\")", "$$;"], ["\u2581set", "$$UriPattern", "$$(\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]/", "$$r", "$$ules", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.", "$$P", "$$UT", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public BaseRef(RefEval re) {\n    _refEval = re;\n    _areaEval = null;\n    _firstRowIndex = re.Row;\n    _firstColumnIndex = re.Column;\n    _height = 1;\n    _width = 1;\n}\n", "java": "public BaseRef(AreaEval ae) {\n    _refEval = null;\n    _areaEval = ae;\n    _firstRowIndex = ae.getFirstRow();\n    _firstColumnIndex = ae.getFirstColumn();\n    _height = ae.getLastRow() - ae.getFirstRow() + 1;\n    _width = ae.getLastColumn() - ae.getFirstColumn() + 1;\n}\n", "cs_t": [["\u2581public", "\u2581B", "$$ase", "$$Ref", "$$(", "$$Ref", "$$Eval", "\u2581re", "$$)", "\u2581{"], ["\u2581_", "$$ref", "$$Eval", "\u2581=", "\u2581re", "$$;"], ["\u2581_", "$$a", "$$rea", "$$Eval", "\u2581=", "\u2581null", "$$;"], ["\u2581_first", "$$Row", "$$Index", "\u2581=", "\u2581re", "$$.", "$$Row", "$$;"], ["\u2581_first", "$$Column", "$$Index", "\u2581=", "\u2581re", "$$.", "$$Column", "$$;"], ["\u2581_", "$$h", "$$eight", "\u2581=", "\u25811", "$$;"], ["\u2581_", "$$w", "$$idth", "\u2581=", "\u25811", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581B", "$$ase", "$$Ref", "$$(", "$$Area", "$$Eval", "\u2581a", "$$e", "$$)", "\u2581{"], ["\u2581_", "$$ref", "$$Eval", "\u2581=", "\u2581null", "$$;"], ["\u2581_", "$$a", "$$rea", "$$Eval", "\u2581=", "\u2581a", "$$e", "$$;"], ["\u2581_first", "$$Row", "$$Index", "\u2581=", "\u2581a", "$$e", "$$.get", "$$FirstRow", "$$()", "$$;"], ["\u2581_first", "$$Column", "$$Index", "\u2581=", "\u2581a", "$$e", "$$.get", "$$FirstColumn", "$$()", "$$;"], ["\u2581_", "$$h", "$$eight", "\u2581=", "\u2581a", "$$e", "$$.get", "$$LastRow", "$$()", "\u2581-", "\u2581a", "$$e", "$$.get", "$$FirstRow", "$$()", "\u2581+", "\u25811", "$$;"], ["\u2581_", "$$w", "$$idth", "\u2581=", "\u2581a", "$$e", "$$.get", "$$Last", "$$Column", "$$()", "\u2581-", "\u2581a", "$$e", "$$.get", "$$FirstColumn", "$$()", "\u2581+", "\u25811", "$$;"], ["\u2581}"]]}, {"cs": "public DrawingManager2(EscherDggRecord dgg) {\n    this.dgg = dgg;\n}\n", "java": "public DrawingManager2( EscherDggRecord dgg ) {\n    this.dgg = dgg;\n}\n", "cs_t": [["\u2581public", "\u2581D", "$$raw", "$$ing", "$$Man", "$$ag", "$$er", "$$2", "$$(", "$$Escher", "$$D", "$$gg", "$$Record", "\u2581d", "$$gg", "$$)", "\u2581{"], ["\u2581this.d", "$$gg", "\u2581=", "\u2581d", "$$gg", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$raw", "$$ing", "$$Man", "$$ag", "$$er", "$$2", "$$(", "\u2581Escher", "$$D", "$$gg", "$$Record", "\u2581d", "$$gg", "\u2581)", "\u2581{"], ["\u2581this.d", "$$gg", "\u2581=", "\u2581d", "$$gg", "$$;"], ["\u2581}"]]}, {"cs": "public override void Reset() {\n    if (!First) {\n        Reset(raw);\n    }\n}\n", "java": "public void reset() {\n    if (!first())reset(raw);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Reset", "$$()", "\u2581{"], ["\u2581if", "\u2581(!", "$$First", "$$)", "\u2581{"], ["\u2581Reset", "$$(", "$$raw", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581reset", "$$()", "\u2581{"], ["\u2581if", "\u2581(!", "$$first", "$$())", "$$reset", "$$(", "$$raw", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public java.nio.charset.CharsetDecoder reset() {\n    status = INIT;\n    implReset();\n    return this;\n}\n", "java": "public final CharsetDecoder reset() {\n    status = INIT;\n    implReset();\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581java.nio.", "$$char", "$$set", "$$.", "$$Char", "$$set", "$$Dec", "$$od", "$$er", "\u2581reset", "$$()", "\u2581{"], ["\u2581st", "$$atu", "$$s", "\u2581=", "\u2581I", "$$N", "$$IT", "$$;"], ["\u2581i", "$$mpl", "$$Reset", "$$()", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581Char", "$$set", "$$Dec", "$$od", "$$er", "\u2581reset", "$$()", "\u2581{"], ["\u2581st", "$$atu", "$$s", "\u2581=", "\u2581I", "$$N", "$$IT", "$$;"], ["\u2581i", "$$mpl", "$$Reset", "$$()", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public BufferedReader(java.io.Reader @in, int size) : base(@in) {\n    if (size <= 0) {\n        throw new System.ArgumentException(\"size <= 0\");\n    }\n    this.@in = @in;\n    buf = new char[size];\n}\n", "java": "public BufferedReader(Reader in, int size) {\n    super(in);\n    if (size <= 0) {\n        throw new IllegalArgumentException(\"size <= 0\");\n    }\n    this.in = in;\n    buf = new char[size];\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Bu", "$$ff", "$$e", "$$red", "$$Read", "$$er(", "$$java.", "$$io.", "$$Reader", "\u2581@in", "$$,", "\u2581int", "\u2581size)", "\u2581:", "\u2581base", "$$(@", "$$in", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$size", "\u2581<=", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"", "$$size", "\u2581<=", "\u25810", "$$\")", "$$;"], ["\u2581}"], ["\u2581this.", "$$@", "$$in", "\u2581=", "\u2581@in", "$$;"], ["\u2581buf", "\u2581=", "\u2581new", "\u2581char[", "$$size", "$$]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Bu", "$$ff", "$$e", "$$red", "$$Read", "$$er(", "$$Reader", "\u2581in", "$$,", "\u2581int", "\u2581size)", "\u2581{"], ["\u2581super(", "$$in", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$size", "\u2581<=", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$size", "\u2581<=", "\u25810", "$$\")", "$$;"], ["\u2581}"], ["\u2581this.", "$$in", "\u2581=", "\u2581in", "$$;"], ["\u2581buf", "\u2581=", "\u2581new", "\u2581char[", "$$size", "$$]", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeCodeRepositoryResponse DescribeCodeRepository(DescribeCodeRepositoryRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeCodeRepositoryRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeCodeRepositoryResponseUnmarshaller.Instance;\n    return Invoke<DescribeCodeRepositoryResponse>(request, options);\n}\n", "java": "public DescribeCodeRepositoryResult describeCodeRepository(DescribeCodeRepositoryRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeCodeRepository(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Code", "$$Repository", "$$Response", "\u2581Describe", "$$Code", "$$Repository", "$$(Describe", "$$Code", "$$Repository", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Code", "$$Repository", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Code", "$$Repository", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Code", "$$Repository", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Code", "$$Repository", "$$Result", "\u2581describe", "$$Code", "$$Repository", "$$(Describe", "$$Code", "$$Repository", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Code", "$$Repository", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateDBSubnetGroupResponse CreateDBSubnetGroup(CreateDBSubnetGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateDBSubnetGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateDBSubnetGroupResponseUnmarshaller.Instance;\n    return Invoke<CreateDBSubnetGroupResponse>(request, options);\n}\n", "java": "public DBSubnetGroup createDBSubnetGroup(CreateDBSubnetGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateDBSubnetGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$DB", "$$SubnetGroup", "$$Response", "\u2581Create", "$$DB", "$$SubnetGroup", "$$(Create", "$$DB", "$$SubnetGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$DB", "$$SubnetGroup", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$DB", "$$SubnetGroup", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$DB", "$$SubnetGroup", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$B", "$$SubnetGroup", "\u2581create", "$$DB", "$$SubnetGroup", "$$(Create", "$$DB", "$$SubnetGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$DB", "$$SubnetGroup", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual NGit.Api.RenameBranchCommand SetOldName(string oldName) {\n    CheckCallable();\n    this.oldName = oldName;\n    return this;\n}\n", "java": "public RenameBranchCommand setOldName(String oldName) {\n    checkCallable();\n    this.oldName = oldName;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581NGit.Api.", "$$Ren", "$$ame", "$$B", "$$ran", "$$ch", "$$Command", "\u2581Set", "$$Old", "$$Name", "$$(string", "\u2581old", "$$Name)", "\u2581{"], ["\u2581Check", "$$Callable", "$$()", "$$;"], ["\u2581this.", "$$old", "$$Name", "\u2581=", "\u2581old", "$$Name", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581R", "$$en", "$$ame", "$$B", "$$ran", "$$ch", "$$Command", "\u2581set", "$$Old", "$$Name", "$$(String", "\u2581old", "$$Name)", "\u2581{"], ["\u2581check", "$$Callable", "$$()", "$$;"], ["\u2581this.", "$$old", "$$Name", "\u2581=", "\u2581old", "$$Name", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual NGit.Api.DeleteBranchCommand SetForce(bool force) {\n    CheckCallable();\n    this.force = force;\n    return this;\n}\n", "java": "public DeleteBranchCommand setForce(boolean force) {\n    checkCallable();\n    this.force = force;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581NGit.Api.", "$$Delete", "$$B", "$$ran", "$$ch", "$$Command", "\u2581Set", "$$For", "$$ce", "$$(bool", "\u2581for", "$$ce", "$$)", "\u2581{"], ["\u2581Check", "$$Callable", "$$()", "$$;"], ["\u2581this.f", "$$or", "$$ce", "\u2581=", "\u2581for", "$$ce", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$B", "$$ran", "$$ch", "$$Command", "\u2581set", "$$For", "$$ce", "$$(boolean", "\u2581for", "$$ce", "$$)", "\u2581{"], ["\u2581check", "$$Callable", "$$()", "$$;"], ["\u2581this.f", "$$or", "$$ce", "\u2581=", "\u2581for", "$$ce", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StopCompilationJobResponse StopCompilationJob(StopCompilationJobRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = StopCompilationJobRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = StopCompilationJobResponseUnmarshaller.Instance;\n    return Invoke<StopCompilationJobResponse>(request, options);\n}\n", "java": "public StopCompilationJobResult stopCompilationJob(StopCompilationJobRequest request) {\n    request = beforeClientExecution(request);\n    return executeStopCompilationJob(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Stop", "$$Comp", "$$il", "$$ation", "$$Job", "$$Response", "\u2581Stop", "$$Comp", "$$il", "$$ation", "$$Job", "$$(", "$$Stop", "$$Comp", "$$il", "$$ation", "$$Job", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Stop", "$$Comp", "$$il", "$$ation", "$$Job", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Stop", "$$Comp", "$$il", "$$ation", "$$Job", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Stop", "$$Comp", "$$il", "$$ation", "$$Job", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Stop", "$$Comp", "$$il", "$$ation", "$$Job", "$$Result", "\u2581stop", "$$Comp", "$$il", "$$ation", "$$Job", "$$(", "$$Stop", "$$Comp", "$$il", "$$ation", "$$Job", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Stop", "$$Comp", "$$il", "$$ation", "$$Job", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void incrementSecondaryProgressBy(int diff) {\n    lock (this) {\n        setSecondaryProgress(mSecondaryProgress + diff);\n    }\n}\n", "java": "public synchronized final void incrementSecondaryProgressBy(int diff) {\n    setSecondaryProgress(mSecondaryProgress + diff);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581in", "$$crement", "$$Second", "$$ary", "$$Progress", "$$By", "$$(int", "\u2581d", "$$iff", "$$)", "\u2581{"], ["\u2581lock", "\u2581(this)", "\u2581{"], ["\u2581set", "$$Second", "$$ary", "$$Pro", "$$gres", "$$s(", "$$m", "$$Second", "$$ary", "$$Progress", "\u2581+", "\u2581d", "$$iff", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581synchronized", "\u2581final", "\u2581void", "\u2581in", "$$crement", "$$Second", "$$ary", "$$Progress", "$$By", "$$(int", "\u2581d", "$$iff", "$$)", "\u2581{"], ["\u2581set", "$$Second", "$$ary", "$$Pro", "$$gres", "$$s(", "$$m", "$$Second", "$$ary", "$$Progress", "\u2581+", "\u2581d", "$$iff", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override int[] Clear() {\n    return bytesStart = null;\n}\n", "java": "public int[] clear() {\n    return bytesStart = null;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int[]", "\u2581C", "$$lear()", "\u2581{"], ["\u2581return", "\u2581bytes", "$$Start", "\u2581=", "\u2581null", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int[]", "\u2581clear()", "\u2581{"], ["\u2581return", "\u2581bytes", "$$Start", "\u2581=", "\u2581null", "$$;"], ["\u2581}"]]}, {"cs": "public string getRawPath() {\n    return path;\n}\n", "java": "public String getRawPath() {\n    return path;\n}\n", "cs_t": [["\u2581public", "\u2581string", "\u2581get", "$$Raw", "$$Path", "$$()", "\u2581{"], ["\u2581return", "\u2581path", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Raw", "$$Path", "$$()", "\u2581{"], ["\u2581return", "\u2581path", "$$;"], ["\u2581}"]]}, {"cs": "public GetUserSourceAccountRequest(): base(\"cr\", \"2016-06-07\", \"GetUserSourceAccount\", \"cr\", \"openAPI\") {\n    UriPattern = \"/users/sourceAccount\";\n    Method = MethodType.GET;\n}\n", "java": "public GetUserSourceAccountRequest() {\n    super(\"cr\", \"2016-06-07\", \"GetUserSourceAccount\", \"cr\");\n    setUriPattern(\"/users/sourceAccount\");\n    setMethod(MethodType.GET);\n}\n", "cs_t": [["\u2581public", "\u2581Get", "$$User", "$$Source", "$$Account", "$$Request():", "\u2581base(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"Get", "$$User", "$$Source", "$$Account", "$$\",", "\u2581\"", "$$cr\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581", "$$UriPattern", "\u2581=", "\u2581\"/", "$$user", "$$s", "$$/", "$$source", "$$Account", "$$\"", "$$;"], ["\u2581Method", "\u2581=", "\u2581Method", "$$Type.", "$$GE", "$$T", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$User", "$$Source", "$$Account", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"Get", "$$User", "$$Source", "$$Account", "$$\",", "\u2581\"", "$$cr", "$$\")", "$$;"], ["\u2581set", "$$UriPattern", "$$(\"/", "$$user", "$$s", "$$/", "$$source", "$$Account", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.", "$$GE", "$$T", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateExportJobResponse CreateExportJob(CreateExportJobRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateExportJobRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateExportJobResponseUnmarshaller.Instance;\n    return Invoke<CreateExportJobResponse>(request, options);\n}\n", "java": "public CreateExportJobResult createExportJob(CreateExportJobRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateExportJob(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Export", "$$Job", "$$Response", "\u2581Create", "$$Export", "$$Job", "$$(Create", "$$Export", "$$Job", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Export", "$$Job", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Export", "$$Job", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Export", "$$Job", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Export", "$$Job", "$$Result", "\u2581create", "$$Export", "$$Job", "$$(Create", "$$Export", "$$Job", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Export", "$$Job", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateDedicatedIpPoolResponse CreateDedicatedIpPool(CreateDedicatedIpPoolRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateDedicatedIpPoolRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateDedicatedIpPoolResponseUnmarshaller.Instance;\n    return Invoke<CreateDedicatedIpPoolResponse>(request, options);\n}\n", "java": "public CreateDedicatedIpPoolResult createDedicatedIpPool(CreateDedicatedIpPoolRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateDedicatedIpPool(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Dedicated", "$$Ip", "$$Pool", "$$Response", "\u2581Create", "$$Dedicated", "$$Ip", "$$Pool", "$$(Create", "$$Dedicated", "$$Ip", "$$Pool", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Dedicated", "$$Ip", "$$Pool", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Dedicated", "$$Ip", "$$Pool", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Dedicated", "$$Ip", "$$Pool", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Dedicated", "$$Ip", "$$Pool", "$$Result", "\u2581create", "$$Dedicated", "$$Ip", "$$Pool", "$$(Create", "$$Dedicated", "$$Ip", "$$Pool", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Dedicated", "$$Ip", "$$Pool", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (obj is HSSFCellStyle) {\n        HSSFCellStyle other = (HSSFCellStyle)obj;\n        if (_format == null) {\n            if (other._format != null)return false;\n        }\n        else if (!_format.Equals(other._format))return false;\n        if (index != other.index)return false;\n        return true;\n    }\n    return false;\n}\n", "java": "public boolean equals(Object obj) {\n    if (this == obj) {\n        return true;\n    }\n    if (obj == null) {\n        return false;\n    }\n    if (obj instanceof HSSFCellStyle) {\n        final HSSFCellStyle other = (HSSFCellStyle) obj;\n        if (_format == null) {\n            if (other._format != null) {\n                return false;\n            }\n        }\n        else if (!_format.equals(other._format)) {\n            return false;\n        }\n        if (_index != other._index) {\n            return false;\n        }\n        return true;\n    }\n    return false;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Equals(", "$$Object", "\u2581obj)", "\u2581{"], ["\u2581if", "\u2581(this", "\u2581==", "\u2581obj)", "\u2581return", "\u2581true", "$$;"], ["\u2581if", "\u2581(obj", "\u2581==", "\u2581null)", "\u2581return", "\u2581false", "$$;"], ["\u2581if", "\u2581(obj", "\u2581is", "\u2581HSSF", "$$Cell", "$$Style", "$$)", "\u2581{"], ["\u2581HSSF", "$$Cell", "$$Style", "\u2581other", "\u2581=", "\u2581(", "$$HSSF", "$$Cell", "$$Style", "$$)", "$$obj", "$$;"], ["\u2581if", "\u2581(_", "$$format", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581if", "\u2581(", "$$other.", "$$_", "$$format", "\u2581!=", "\u2581null)", "$$return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(!", "$$_", "$$format", "$$.Equals(", "$$other.", "$$_", "$$format", "$$))return", "\u2581false", "$$;"], ["\u2581if", "\u2581(index", "\u2581!=", "\u2581other.", "$$index", "$$)return", "\u2581false", "$$;"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581equals(Object", "\u2581obj)", "\u2581{"], ["\u2581if", "\u2581(this", "\u2581==", "\u2581obj)", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(obj", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(obj", "\u2581instanceof", "\u2581HSSF", "$$Cell", "$$Style", "$$)", "\u2581{"], ["\u2581final", "\u2581HSSF", "$$Cell", "$$Style", "\u2581other", "\u2581=", "\u2581(", "$$HSSF", "$$Cell", "$$Style", "$$)", "\u2581obj", "$$;"], ["\u2581if", "\u2581(_", "$$format", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581if", "\u2581(", "$$other.", "$$_", "$$format", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(!", "$$_", "$$format", "$$.equals(", "$$other.", "$$_", "$$format", "$$))", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(_", "$$index", "\u2581!=", "\u2581other.", "$$_index", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ReleaseHostsResponse ReleaseHosts(ReleaseHostsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ReleaseHostsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ReleaseHostsResponseUnmarshaller.Instance;\n    return Invoke<ReleaseHostsResponse>(request, options);\n}\n", "java": "public ReleaseHostsResult releaseHosts(ReleaseHostsRequest request) {\n    request = beforeClientExecution(request);\n    return executeReleaseHosts(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Re", "$$lease", "$$Host", "$$sResponse", "\u2581Re", "$$lease", "$$Host", "$$s(", "$$Re", "$$lease", "$$Host", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Re", "$$lease", "$$Host", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Re", "$$lease", "$$Host", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Re", "$$lease", "$$Host", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Re", "$$lease", "$$Host", "$$sResult", "\u2581re", "$$lease", "$$Host", "$$s(", "$$Re", "$$lease", "$$Host", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Re", "$$lease", "$$Host", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Equals(object @object) {\n    if (this == @object) {\n        return true;\n    }\n    if (@object is java.util.Set<E>) {\n        java.util.Set<E> s = (java.util.Set<E>)@object;\n        try {\n            return size() == s.size() && containsAll(s);\n        }\n        catch (System.ArgumentNullException) {\n            return false;\n        }\n        catch (System.InvalidCastException) {\n            return false;\n        }\n    }\n    return false;\n}\n", "java": "public boolean equals(Object object) {\n    if (this == object) {\n        return true;\n    }\n    if (object instanceof Set) {\n        Set<?> s = (Set<?>) object;\n        try {\n            return size() == s.size() && containsAll(s);\n        }\n        catch (NullPointerException ignored) {\n            return false;\n        }\n        catch (ClassCastException ignored) {\n            return false;\n        }\n    }\n    return false;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Equals(object", "\u2581@object)", "\u2581{"], ["\u2581if", "\u2581(this", "\u2581==", "\u2581@object)", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(@", "$$object", "\u2581is", "\u2581java.util.", "$$Set", "$$<E>", "$$)", "\u2581{"], ["\u2581java.util.", "$$Set", "$$<E>", "\u2581s", "\u2581=", "\u2581(", "$$java.util.", "$$Set", "$$<E>", "$$)", "$$@", "$$object", "$$;"], ["\u2581try", "\u2581{"], ["\u2581return", "\u2581size()", "\u2581==", "\u2581s", "$$.size()", "\u2581&&", "\u2581contain", "$$s", "$$All", "$$(", "$$s)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$System", "$$.Ar", "$$gument", "$$Null", "$$Exception", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$System", "$$.", "$$Invalid", "$$C", "$$ast", "$$Exception", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581equals(Object", "\u2581object)", "\u2581{"], ["\u2581if", "\u2581(this", "\u2581==", "\u2581object)", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$object", "\u2581instanceof", "\u2581Set", "$$)", "\u2581{"], ["\u2581Set", "$$<", "$$?", "$$>", "\u2581s", "\u2581=", "\u2581(", "$$Set<", "$$?", "$$>", "$$)", "\u2581object", "$$;"], ["\u2581try", "\u2581{"], ["\u2581return", "\u2581size()", "\u2581==", "\u2581s", "$$.size()", "\u2581&&", "\u2581contain", "$$s", "$$All", "$$(", "$$s)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$Null", "$$Pointer", "$$Exception", "\u2581i", "$$gn", "$$ore", "$$d", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$Class", "$$C", "$$ast", "$$Exception", "\u2581i", "$$gn", "$$ore", "$$d", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetRefLogMessage(string msg, bool appendStatus) {\n    if (msg == null && !appendStatus) {\n        DisableRefLog();\n    }\n    else {\n        if (msg == null && appendStatus) {\n            refLogMessage = string.Empty;\n            refLogIncludeResult = true;\n        }\n        else {\n            refLogMessage = msg;\n            refLogIncludeResult = appendStatus;\n        }\n    }\n}\n", "java": "public void setRefLogMessage(String msg, boolean appendStatus) {\n    customRefLog = true;\n    if (msg == null && !appendStatus) {\n        disableRefLog();\n    }\n    else if (msg == null && appendStatus) {\n        refLogMessage = \"\";\n        refLogIncludeResult = true;\n    }\n    else {\n        refLogMessage = msg;\n        refLogIncludeResult = appendStatus;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Ref", "$$Log", "$$Message", "$$(string", "\u2581msg", "$$,", "\u2581bool", "\u2581append", "$$Statu", "$$s)", "\u2581{"], ["\u2581if", "\u2581(m", "$$sg", "\u2581==", "\u2581null", "\u2581&&", "\u2581!", "$$ap", "$$pend", "$$Statu", "$$s)", "\u2581{"], ["\u2581Disable", "$$Ref", "$$Log", "$$()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581if", "\u2581(m", "$$sg", "\u2581==", "\u2581null", "\u2581&&", "\u2581append", "$$Statu", "$$s)", "\u2581{"], ["\u2581ref", "$$Log", "$$Message", "\u2581=", "\u2581string", "$$.", "$$Empty", "$$;"], ["\u2581ref", "$$Log", "$$In", "$$clude", "$$Result", "\u2581=", "\u2581true", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581ref", "$$Log", "$$Message", "\u2581=", "\u2581msg", "$$;"], ["\u2581ref", "$$Log", "$$In", "$$clude", "$$Result", "\u2581=", "\u2581append", "$$Statu", "$$s;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Ref", "$$Log", "$$Message", "$$(String", "\u2581msg", "$$,", "\u2581boolean", "\u2581append", "$$Statu", "$$s)", "\u2581{"], ["\u2581c", "$$ustom", "$$Ref", "$$Log", "\u2581=", "\u2581true", "$$;"], ["\u2581if", "\u2581(m", "$$sg", "\u2581==", "\u2581null", "\u2581&&", "\u2581!", "$$ap", "$$pend", "$$Statu", "$$s)", "\u2581{"], ["\u2581dis", "$$able", "$$Ref", "$$Log", "$$()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(m", "$$sg", "\u2581==", "\u2581null", "\u2581&&", "\u2581append", "$$Statu", "$$s)", "\u2581{"], ["\u2581ref", "$$Log", "$$Message", "\u2581=", "\u2581\"", "$$\"", "$$;"], ["\u2581ref", "$$Log", "$$In", "$$clude", "$$Result", "\u2581=", "\u2581true", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581ref", "$$Log", "$$Message", "\u2581=", "\u2581msg", "$$;"], ["\u2581ref", "$$Log", "$$In", "$$clude", "$$Result", "\u2581=", "\u2581append", "$$Statu", "$$s;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public StreamIDRecord(RecordInputStream in1) {\n    idstm = in1.ReadShort();\n}\n", "java": "public StreamIDRecord(RecordInputStream in) {\n    idstm = in.readShort();\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Stream", "$$ID", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581id", "$$st", "$$m", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Stream", "$$ID", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581id", "$$st", "$$m", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public RecognizeCarRequest(): base(\"visionai-poc\", \"2020-04-08\", \"RecognizeCar\") {\n    Method = MethodType.POST;\n}\n", "java": "public RecognizeCarRequest() {\n    super(\"visionai-poc\", \"2020-04-08\", \"RecognizeCar\");\n    setMethod(MethodType.POST);\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Recogn", "$$ize", "$$C", "$$ar", "$$Request():", "\u2581base(\"", "$$vision", "$$a", "$$i", "$$-", "$$p", "$$oc", "$$\",", "\u2581\"20", "$$20", "$$-0", "$$4", "$$-0", "$$8", "$$\",", "\u2581\"", "$$Recogn", "$$ize", "$$C", "$$ar", "$$\")", "\u2581{"], ["\u2581Method", "\u2581=", "\u2581MethodType.POST", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Recogn", "$$ize", "$$C", "$$ar", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$vision", "$$a", "$$i", "$$-", "$$p", "$$oc", "$$\",", "\u2581\"20", "$$20", "$$-0", "$$4", "$$-0", "$$8", "$$\",", "\u2581\"", "$$Recogn", "$$ize", "$$C", "$$ar", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.POST", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public sealed override java.nio.ByteOrder order() {\n    return java.nio.ByteOrder.nativeOrder();\n}\n", "java": "public final ByteOrder order() {\n    return ByteOrder.nativeOrder();\n}\n", "cs_t": [["\u2581public", "\u2581sealed", "\u2581override", "\u2581java.nio.", "$$Byte", "$$Order", "\u2581", "$$order", "$$()", "\u2581{"], ["\u2581return", "\u2581java.nio.", "$$Byte", "$$Ord", "$$er.", "$$n", "$$ative", "$$Order", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581Byte", "$$Order", "\u2581", "$$order", "$$()", "\u2581{"], ["\u2581return", "\u2581Byte", "$$Ord", "$$er.", "$$n", "$$ative", "$$Order", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int GetAheadCount() {\n    return aheadCount;\n}\n", "java": "public int getAheadCount() {\n    return aheadCount;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581Get", "$$A", "$$head", "$$Count", "$$()", "\u2581{"], ["\u2581return", "\u2581a", "$$head", "$$Count", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$A", "$$head", "$$Count", "$$()", "\u2581{"], ["\u2581return", "\u2581a", "$$head", "$$Count", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool IsNewFragment() {\n    return false;\n}\n", "java": "public boolean isNewFragment() {\n    return false;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581Is", "$$New", "$$Fra", "$$gment", "$$()", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$New", "$$Fra", "$$gment", "$$()", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetCloudFrontOriginAccessIdentityConfigResponse GetCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetCloudFrontOriginAccessIdentityConfigRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller.Instance;\n    return Invoke<GetCloudFrontOriginAccessIdentityConfigResponse>(request, options);\n}\n", "java": "public GetCloudFrontOriginAccessIdentityConfigResult getCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetCloudFrontOriginAccessIdentityConfig(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Config", "$$Response", "\u2581Get", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Config", "$$(Get", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Config", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Config", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Config", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Config", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Config", "$$Result", "\u2581get", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Config", "$$(Get", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Config", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Config", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {\n    return token == symbol;\n}\n", "java": "public boolean matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {\n    return label == symbol;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Match", "$$es", "$$(int", "\u2581s", "$$ymbol", "$$,", "\u2581int", "\u2581min", "$$V", "$$ocab", "$$S", "$$ymbol", "$$,", "\u2581int", "\u2581max", "$$V", "$$ocab", "$$S", "$$ymbol", "$$)", "\u2581{"], ["\u2581return", "\u2581token", "\u2581==", "\u2581s", "$$ymbol", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581match", "$$es", "$$(int", "\u2581s", "$$ymbol", "$$,", "\u2581int", "\u2581min", "$$V", "$$ocab", "$$S", "$$ymbol", "$$,", "\u2581int", "\u2581max", "$$V", "$$ocab", "$$S", "$$ymbol", "$$)", "\u2581{"], ["\u2581return", "\u2581label", "\u2581==", "\u2581s", "$$ymbol", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteTransitGatewayResponse DeleteTransitGateway(DeleteTransitGatewayRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteTransitGatewayRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteTransitGatewayResponseUnmarshaller.Instance;\n    return Invoke<DeleteTransitGatewayResponse>(request, options);\n}\n", "java": "public DeleteTransitGatewayResult deleteTransitGateway(DeleteTransitGatewayRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteTransitGateway(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$TransitGateway", "$$Response", "\u2581Delete", "$$TransitGateway", "$$(Delete", "$$TransitGateway", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$TransitGateway", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$TransitGateway", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$TransitGateway", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$TransitGateway", "$$Result", "\u2581delete", "$$TransitGateway", "$$(Delete", "$$TransitGateway", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$TransitGateway", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static double[] Grow(double[] array, int minSize) {\n    Debug.Assert(minSize >= 0, \"size must be positive (got \" + minSize + \"): likely integer overflow?\");\n    if (array.Length < minSize) {\n        double[] newArray = new double[Oversize(minSize, RamUsageEstimator.NUM_BYTES_DOUBLE)];\n        Array.Copy(array, 0, newArray, 0, array.Length);\n        return newArray;\n    }\n    else {\n        return array;\n    }\n}\n", "java": "public static byte[] grow(byte[] array, int minSize) {\n    assert minSize >= 0: \"size must be positive (got \" + minSize + \"): likely integer overflow?\";\n    if (array.length < minSize) {\n        return growExact(array, oversize(minSize, Byte.BYTES));\n    }\n    elsereturn array;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581double", "$$[]", "\u2581Grow", "$$(double", "$$[]", "\u2581array,", "\u2581int", "\u2581minSize)", "\u2581{"], ["\u2581Debug.Assert(", "$$min", "$$Size", "\u2581>=", "\u25810,", "\u2581\"", "$$size", "\u2581must", "\u2581be", "\u2581po", "$$sitive", "\u2581(", "$$g", "$$ot", "\u2581\"", "\u2581+", "\u2581min", "$$Size", "\u2581+", "\u2581\")", "$$:", "\u2581li", "$$k", "$$el", "$$y", "\u2581in", "$$teg", "$$er", "\u2581over", "$$flow", "$$?", "$$\")", "$$;"], ["\u2581if", "\u2581(array", "$$.Length", "\u2581<", "\u2581minSize)", "\u2581{"], ["\u2581double", "$$[]", "\u2581newArray", "\u2581=", "\u2581new", "\u2581double", "$$[", "$$Over", "$$size", "$$(", "$$min", "$$Size,", "\u2581RamUsageEstimator.NUM_BYTES_", "$$D", "$$O", "$$U", "$$BLE", "$$)", "$$]", "$$;"], ["\u2581Array.Copy", "$$(array,", "\u25810,", "\u2581newArray", "$$,", "\u25810,", "\u2581array", "$$.Length)", "$$;"], ["\u2581return", "\u2581newArray", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581array", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581byte[]", "\u2581grow", "$$(byte[]", "\u2581array,", "\u2581int", "\u2581minSize)", "\u2581{"], ["\u2581assert", "\u2581min", "$$Size", "\u2581>=", "\u25810", "$$:", "\u2581\"", "$$size", "\u2581must", "\u2581be", "\u2581po", "$$sitive", "\u2581(", "$$g", "$$ot", "\u2581\"", "\u2581+", "\u2581min", "$$Size", "\u2581+", "\u2581\")", "$$:", "\u2581li", "$$k", "$$el", "$$y", "\u2581in", "$$teg", "$$er", "\u2581over", "$$flow", "$$?", "$$\"", "$$;"], ["\u2581if", "\u2581(array", "$$.length", "\u2581<", "\u2581minSize)", "\u2581{"], ["\u2581return", "\u2581grow", "$$Exact", "$$(array,", "\u2581over", "$$size", "$$(", "$$min", "$$Size,", "\u2581Byte", "$$.B", "$$YTE", "$$S", "$$))", "$$;"], ["\u2581}"], ["\u2581else", "$$return", "\u2581array", "$$;"], ["\u2581}"]]}, {"cs": "public CreateTransactionRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"CreateTransaction\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public CreateTransactionRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"CreateTransaction\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581Create", "$$Trans", "$$a", "$$ction", "$$Request():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Create", "$$Trans", "$$a", "$$ction", "$$\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Trans", "$$a", "$$ction", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Create", "$$Trans", "$$a", "$$ction", "$$\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual NGit.BatchRefUpdate SetRefLogIdent(PersonIdent pi) {\n    refLogIdent = pi;\n    return this;\n}\n", "java": "public BatchRefUpdate setRefLogIdent(PersonIdent pi) {\n    refLogIdent = pi;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581NGit.", "$$Batch", "$$Ref", "$$Update", "\u2581Set", "$$Ref", "$$Log", "$$Ident", "$$(", "$$Per", "$$son", "$$Ident", "\u2581p", "$$i)", "\u2581{"], ["\u2581ref", "$$Log", "$$Ident", "\u2581=", "\u2581p", "$$i", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Batch", "$$Ref", "$$Update", "\u2581set", "$$Ref", "$$Log", "$$Ident", "$$(", "$$Per", "$$son", "$$Ident", "\u2581p", "$$i)", "\u2581{"], ["\u2581ref", "$$Log", "$$Ident", "\u2581=", "\u2581p", "$$i", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetLaunchTemplateDataResponse GetLaunchTemplateData(GetLaunchTemplateDataRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetLaunchTemplateDataRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetLaunchTemplateDataResponseUnmarshaller.Instance;\n    return Invoke<GetLaunchTemplateDataResponse>(request, options);\n}\n", "java": "public GetLaunchTemplateDataResult getLaunchTemplateData(GetLaunchTemplateDataRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetLaunchTemplateData(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$LaunchTemplate", "$$Data", "$$Response", "\u2581Get", "$$LaunchTemplate", "$$Data", "$$(Get", "$$LaunchTemplate", "$$Data", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$LaunchTemplate", "$$Data", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$LaunchTemplate", "$$Data", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$LaunchTemplate", "$$Data", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$LaunchTemplate", "$$Data", "$$Result", "\u2581get", "$$LaunchTemplate", "$$Data", "$$(Get", "$$LaunchTemplate", "$$Data", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$LaunchTemplate", "$$Data", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ParseInfo(ProfilingATNSimulator atnSimulator) {\n    this.atnSimulator = atnSimulator;\n}\n", "java": "public ParseInfo(ProfilingATNSimulator atnSimulator) {\n    this.atnSimulator = atnSimulator;\n}\n", "cs_t": [["\u2581public", "\u2581Parse", "$$Info", "$$(", "$$Profi", "$$l", "$$ing", "$$ATN", "$$S", "$$im", "$$ul", "$$ator", "\u2581at", "$$n", "$$S", "$$im", "$$ul", "$$ator", "$$)", "\u2581{"], ["\u2581this.", "$$at", "$$n", "$$S", "$$im", "$$ul", "$$ator", "\u2581=", "\u2581at", "$$n", "$$S", "$$im", "$$ul", "$$ator", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Parse", "$$Info", "$$(", "$$Profi", "$$l", "$$ing", "$$ATN", "$$S", "$$im", "$$ul", "$$ator", "\u2581at", "$$n", "$$S", "$$im", "$$ul", "$$ator", "$$)", "\u2581{"], ["\u2581this.", "$$at", "$$n", "$$S", "$$im", "$$ul", "$$ator", "\u2581=", "\u2581at", "$$n", "$$S", "$$im", "$$ul", "$$ator", "$$;"], ["\u2581}"]]}, {"cs": "public SimpleQQParser(string[] qqNames, string indexField) {\n    this.qqNames = qqNames;\n    this.indexField = indexField;\n}\n", "java": "public SimpleQQParser(String qqNames[], String indexField) {\n    this.qqNames = qqNames;\n    this.indexField = indexField;\n}\n", "cs_t": [["\u2581public", "\u2581Simple", "$$Q", "$$Q", "$$Parser", "$$(string", "$$[]", "\u2581q", "$$q", "$$Names", "$$,", "\u2581string", "\u2581index", "$$Field", "$$)", "\u2581{"], ["\u2581this.", "$$q", "$$q", "$$Names", "\u2581=", "\u2581q", "$$q", "$$Names", "$$;"], ["\u2581this.", "$$index", "$$Field", "\u2581=", "\u2581index", "$$Field", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Simple", "$$Q", "$$Q", "$$Parser", "$$(String", "\u2581q", "$$q", "$$Names", "$$[]", "$$,", "\u2581String", "\u2581index", "$$Field", "$$)", "\u2581{"], ["\u2581this.", "$$q", "$$q", "$$Names", "\u2581=", "\u2581q", "$$q", "$$Names", "$$;"], ["\u2581this.", "$$index", "$$Field", "\u2581=", "\u2581index", "$$Field", "$$;"], ["\u2581}"]]}, {"cs": "public virtual PromoteReadReplicaDBClusterResponse PromoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = PromoteReadReplicaDBClusterRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = PromoteReadReplicaDBClusterResponseUnmarshaller.Instance;\n    return Invoke<PromoteReadReplicaDBClusterResponse>(request, options);\n}\n", "java": "public DBCluster promoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request) {\n    request = beforeClientExecution(request);\n    return executePromoteReadReplicaDBCluster(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Pro", "$$mote", "$$Read", "$$Re", "$$plic", "$$a", "$$DBCluster", "$$Response", "\u2581", "$$Pro", "$$mote", "$$Read", "$$Re", "$$plic", "$$a", "$$DBCluster", "$$(", "$$Pro", "$$mote", "$$Read", "$$Re", "$$plic", "$$a", "$$DBCluster", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581", "$$Pro", "$$mote", "$$Read", "$$Re", "$$plic", "$$a", "$$DBCluster", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581", "$$Pro", "$$mote", "$$Read", "$$Re", "$$plic", "$$a", "$$DBCluster", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Pro", "$$mote", "$$Read", "$$Re", "$$plic", "$$a", "$$DBCluster", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$B", "$$Cluster", "\u2581pro", "$$mote", "$$Read", "$$Re", "$$plic", "$$a", "$$DBCluster", "$$(", "$$Pro", "$$mote", "$$Read", "$$Re", "$$plic", "$$a", "$$DBCluster", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Pro", "$$mote", "$$Read", "$$Re", "$$plic", "$$a", "$$DBCluster", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeCapacityReservationsResponse DescribeCapacityReservations(DescribeCapacityReservationsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeCapacityReservationsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeCapacityReservationsResponseUnmarshaller.Instance;\n    return Invoke<DescribeCapacityReservationsResponse>(request, options);\n}\n", "java": "public DescribeCapacityReservationsResult describeCapacityReservations(DescribeCapacityReservationsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeCapacityReservations(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Capacity", "$$Reserv", "$$ation", "$$sResponse", "\u2581Describe", "$$Capacity", "$$Reserv", "$$ation", "$$s(Describe", "$$Capacity", "$$Reserv", "$$ation", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Capacity", "$$Reserv", "$$ation", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Capacity", "$$Reserv", "$$ation", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Capacity", "$$Reserv", "$$ation", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Capacity", "$$Reserv", "$$ation", "$$sResult", "\u2581describe", "$$Capacity", "$$Reserv", "$$ation", "$$s(Describe", "$$Capacity", "$$Reserv", "$$ation", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Capacity", "$$Reserv", "$$ation", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return \"IndexSearcher(\" + reader + \"; executor=\" + executor + \")\";\n}\n", "java": "public String toString() {\n    return \"IndexSearcher(\" + reader + \"; executor=\" + executor + \"; sliceExecutionControlPlane \" + sliceExecutor + \")\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$Index", "$$Se", "$$archer", "$$(\"", "\u2581+", "\u2581read", "$$er", "\u2581+", "\u2581\"", "$$;", "\u2581ex", "$$ecutor", "$$=\"", "\u2581+", "\u2581ex", "$$ecutor", "\u2581+", "\u2581\")", "$$\"", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$Index", "$$Se", "$$archer", "$$(\"", "\u2581+", "\u2581read", "$$er", "\u2581+", "\u2581\"", "$$;", "\u2581ex", "$$ecutor", "$$=\"", "\u2581+", "\u2581ex", "$$ecutor", "\u2581+", "\u2581\"", "$$;", "\u2581slice", "$$Execution", "$$Cont", "$$ro", "$$l", "$$Plan", "$$e", "\u2581\"", "\u2581+", "\u2581slice", "$$Ex", "$$ecutor", "\u2581+", "\u2581\")", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public override bool IncrementToken() {\n    return false;\n}\n", "java": "public final boolean incrementToken() {\n    return false;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581In", "$$crement", "$$Token", "$$()", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581boolean", "\u2581in", "$$crement", "$$Token", "$$()", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]]}, {"cs": "public void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort(main + 1);\n    out1.WriteShort(subFrom);\n    out1.WriteShort(subTo);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort(main + 1);\n    out.writeShort(subFrom);\n    out.writeShort(subTo);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$main", "\u2581+", "\u25811)", "$$;"], ["\u2581out1.WriteShort(", "$$sub", "$$From", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$sub", "$$To", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(", "$$main", "\u2581+", "\u25811)", "$$;"], ["\u2581out.writeShort(", "$$sub", "$$From", "$$)", "$$;"], ["\u2581out.writeShort(", "$$sub", "$$To", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n    if (bitsPerValue > 32) {\n        throw new System.NotSupportedException(\"Cannot decode \" + bitsPerValue + \"-bits values into an int[]\");\n    }\n    for (int i = 0; i < iterations; ++i) {\n        long block = ReadInt64(blocks, blocksOffset);\n        blocksOffset += 8;\n        valuesOffset = Decode(block, values, valuesOffset);\n    }\n}\n", "java": "public void decode(byte[] blocks, int blocksOffset, int[] values,int valuesOffset, int iterations) {\n    if (bitsPerValue > 32) {\n        throw new UnsupportedOperationException(\"Cannot decode \" + bitsPerValue + \"-bits values into an int[]\");\n    }\n    for (int i = 0; i < iterations; ++i) {\n        final long block = readLong(blocks, blocksOffset);\n        blocksOffset += 8;\n        valuesOffset = decode(block, values, valuesOffset);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581D", "$$ecode", "$$(byte[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581int[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581if", "\u2581(b", "$$itsPerValue", "\u2581>", "\u2581", "$$32", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.Not", "$$Supported", "$$Exception(\"", "$$C", "$$annot", "\u2581decode", "\u2581\"", "\u2581+", "\u2581bitsPerValue", "\u2581+", "\u2581\"", "$$-", "$$b", "$$its", "\u2581values", "\u2581int", "$$o", "\u2581an", "\u2581int[]", "$$\")", "$$;"], ["\u2581}"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581iterations;", "\u2581++i)", "\u2581{"], ["\u2581long", "\u2581block", "\u2581=", "\u2581Read", "$$Int", "$$64", "$$(block", "$$s,", "\u2581blocks", "$$Offset", "$$)", "$$;"], ["\u2581blocks", "$$Offset", "\u2581+=", "\u25818", "$$;"], ["\u2581values", "$$Offset", "\u2581=", "\u2581D", "$$ecode", "$$(block", "$$,", "\u2581values,", "\u2581values", "$$Offset", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581decode", "$$(byte[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581int[]", "\u2581values,", "$$int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581if", "\u2581(b", "$$itsPerValue", "\u2581>", "\u2581", "$$32", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Un", "$$supported", "$$Operation", "$$Exception(\"", "$$C", "$$annot", "\u2581decode", "\u2581\"", "\u2581+", "\u2581bitsPerValue", "\u2581+", "\u2581\"", "$$-", "$$b", "$$its", "\u2581values", "\u2581int", "$$o", "\u2581an", "\u2581int[]", "$$\")", "$$;"], ["\u2581}"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581iterations;", "\u2581++i)", "\u2581{"], ["\u2581final", "\u2581long", "\u2581block", "\u2581=", "\u2581read", "$$Long", "$$(block", "$$s,", "\u2581blocks", "$$Offset", "$$)", "$$;"], ["\u2581blocks", "$$Offset", "\u2581+=", "\u25818", "$$;"], ["\u2581values", "$$Offset", "\u2581=", "\u2581decode", "$$(block", "$$,", "\u2581values,", "\u2581values", "$$Offset", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual bool IsExpectedToken(int symbol) {\n    ATN atn = Interpreter.atn;\n    ParserRuleContext ctx = _ctx;\n    ATNState s = atn.states[State];\n    IntervalSet following = atn.NextTokens(s);\n    if (following.Contains(symbol)) {\n        return true;\n    }\n    if (!following.Contains(TokenConstants.EPSILON)) {\n        return false;\n    }\n    while (ctx != null && ctx.invokingState >= 0 && following.Contains(TokenConstants.EPSILON)) {\n        ATNState invokingState = atn.states[ctx.invokingState];\n        RuleTransition rt = (RuleTransition)invokingState.Transition(0);\n        following = atn.NextTokens(rt.followState);\n        if (following.Contains(symbol)) {\n            return true;\n        }\n        ctx = (ParserRuleContext)ctx.Parent;\n    }\n    if (following.Contains(TokenConstants.EPSILON) && symbol == TokenConstants.EOF) {\n        return true;\n    }\n    return false;\n}\n", "java": "public boolean isExpectedToken(int symbol) {\n    ATN atn = getInterpreter().atn;\n    ParserRuleContext ctx = _ctx;\n    ATNState s = atn.states.get(getState());\n    IntervalSet following = atn.nextTokens(s);\n    if (following.contains(symbol)) {\n        return true;\n    }\n    if ( !following.contains(Token.EPSILON) ) return false;\n    while ( ctx!=null && ctx.invokingState>=0 && following.contains(Token.EPSILON) ) {\n        ATNState invokingState = atn.states.get(ctx.invokingState);\n        RuleTransition rt = (RuleTransition)invokingState.transition(0);\n        following = atn.nextTokens(rt.followState);\n        if (following.contains(symbol)) {\n            return true;\n        }\n        ctx = (ParserRuleContext)ctx.parent;\n    }\n    if ( following.contains(Token.EPSILON) && symbol == Token.EOF ) {\n        return true;\n    }\n    return false;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581Is", "$$Exp", "$$ected", "$$Token", "$$(int", "\u2581s", "$$ymbol", "$$)", "\u2581{"], ["\u2581ATN", "\u2581at", "$$n", "\u2581=", "\u2581Inter", "$$pre", "$$ter", "$$.", "$$at", "$$n", "$$;"], ["\u2581Par", "$$ser", "$$RuleContext", "\u2581ctx", "\u2581=", "\u2581_", "$$ctx", "$$;"], ["\u2581ATN", "$$State", "\u2581s", "\u2581=", "\u2581at", "$$n", "$$.", "$$st", "$$ates", "$$[", "$$State", "$$]", "$$;"], ["\u2581IntervalSet", "\u2581f", "$$ollow", "$$ing", "\u2581=", "\u2581at", "$$n", "$$.N", "$$ext", "$$Token", "$$s(", "$$s)", "$$;"], ["\u2581if", "\u2581(f", "$$ollow", "$$ing", "$$.", "$$Contain", "$$s(", "$$s", "$$ymbol", "$$))", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(!", "$$f", "$$ollow", "$$ing", "$$.", "$$Contain", "$$s(", "$$Token", "$$Constants.", "$$E", "$$P", "$$SI", "$$L", "$$ON", "$$))", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581while", "\u2581(", "$$ctx", "\u2581!=", "\u2581null", "\u2581&&", "\u2581ctx", "$$.", "$$in", "$$vok", "$$ing", "$$State", "\u2581>=", "\u25810", "\u2581&&", "\u2581f", "$$ollow", "$$ing", "$$.", "$$Contain", "$$s(", "$$Token", "$$Constants.", "$$E", "$$P", "$$SI", "$$L", "$$ON", "$$))", "\u2581{"], ["\u2581ATN", "$$State", "\u2581in", "$$vok", "$$ing", "$$State", "\u2581=", "\u2581at", "$$n", "$$.", "$$st", "$$ates", "$$[", "$$ctx", "$$.", "$$in", "$$vok", "$$ing", "$$State", "$$]", "$$;"], ["\u2581", "$$Rule", "$$Transition", "\u2581r", "$$t", "\u2581=", "\u2581(", "$$Rule", "$$Transition", "$$)", "$$in", "$$vok", "$$ing", "$$State", "$$.", "$$Transition", "$$(", "$$0)", "$$;"], ["\u2581f", "$$ollow", "$$ing", "\u2581=", "\u2581at", "$$n", "$$.N", "$$ext", "$$Token", "$$s(", "$$rt", "$$.f", "$$ollow", "$$State", "$$)", "$$;"], ["\u2581if", "\u2581(f", "$$ollow", "$$ing", "$$.", "$$Contain", "$$s(", "$$s", "$$ymbol", "$$))", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581ctx", "\u2581=", "\u2581(", "$$Parser", "$$RuleContext", "$$)", "$$ctx", "$$.", "$$Parent", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(f", "$$ollow", "$$ing", "$$.", "$$Contain", "$$s(", "$$Token", "$$Constants.", "$$E", "$$P", "$$SI", "$$L", "$$ON", "$$)", "\u2581&&", "\u2581s", "$$ymbol", "\u2581==", "\u2581Token", "$$Constants.", "$$E", "$$OF", "$$)", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$Exp", "$$ected", "$$Token", "$$(int", "\u2581s", "$$ymbol", "$$)", "\u2581{"], ["\u2581ATN", "\u2581at", "$$n", "\u2581=", "\u2581get", "$$Inter", "$$pre", "$$ter", "$$().", "$$at", "$$n", "$$;"], ["\u2581Par", "$$ser", "$$RuleContext", "\u2581ctx", "\u2581=", "\u2581_", "$$ctx", "$$;"], ["\u2581ATN", "$$State", "\u2581s", "\u2581=", "\u2581at", "$$n", "$$.", "$$st", "$$ates", "$$.get", "$$(get", "$$State", "$$())", "$$;"], ["\u2581IntervalSet", "\u2581f", "$$ollow", "$$ing", "\u2581=", "\u2581at", "$$n", "$$.next", "$$Token", "$$s(", "$$s)", "$$;"], ["\u2581if", "\u2581(f", "$$ollow", "$$ing", "$$.contain", "$$s(", "$$s", "$$ymbol", "$$))", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "\u2581!", "$$f", "$$ollow", "$$ing", "$$.contain", "$$s(", "$$Token", "$$.E", "$$P", "$$SI", "$$L", "$$ON", "$$)", "\u2581)", "\u2581return", "\u2581false", "$$;"], ["\u2581while", "\u2581(", "\u2581ctx", "$$!", "$$=", "$$null", "\u2581&&", "\u2581ctx", "$$.", "$$in", "$$vok", "$$ing", "$$State", "$$>", "$$=0", "\u2581&&", "\u2581f", "$$ollow", "$$ing", "$$.contain", "$$s(", "$$Token", "$$.E", "$$P", "$$SI", "$$L", "$$ON", "$$)", "\u2581)", "\u2581{"], ["\u2581ATN", "$$State", "\u2581in", "$$vok", "$$ing", "$$State", "\u2581=", "\u2581at", "$$n", "$$.", "$$st", "$$ates", "$$.get(", "$$ctx", "$$.", "$$in", "$$vok", "$$ing", "$$State", "$$)", "$$;"], ["\u2581", "$$Rule", "$$Transition", "\u2581r", "$$t", "\u2581=", "\u2581(", "$$Rule", "$$Transition", "$$)", "$$in", "$$vok", "$$ing", "$$State", "$$.", "$$t", "$$ran", "$$sition", "$$(", "$$0)", "$$;"], ["\u2581f", "$$ollow", "$$ing", "\u2581=", "\u2581at", "$$n", "$$.next", "$$Token", "$$s(", "$$rt", "$$.f", "$$ollow", "$$State", "$$)", "$$;"], ["\u2581if", "\u2581(f", "$$ollow", "$$ing", "$$.contain", "$$s(", "$$s", "$$ymbol", "$$))", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581ctx", "\u2581=", "\u2581(", "$$Parser", "$$RuleContext", "$$)", "$$ctx", "$$.", "$$parent", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "\u2581f", "$$ollow", "$$ing", "$$.contain", "$$s(", "$$Token", "$$.E", "$$P", "$$SI", "$$L", "$$ON", "$$)", "\u2581&&", "\u2581s", "$$ymbol", "\u2581==", "\u2581Token", "$$.E", "$$OF", "\u2581)", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateStreamResponse UpdateStream(UpdateStreamRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateStreamRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateStreamResponseUnmarshaller.Instance;\n    return Invoke<UpdateStreamResponse>(request, options);\n}\n", "java": "public UpdateStreamResult updateStream(UpdateStreamRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateStream(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$Stream", "$$Response", "\u2581Update", "$$Stream", "$$(Update", "$$Stream", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$Stream", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$Stream", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$Stream", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$Stream", "$$Result", "\u2581update", "$$Stream", "$$(Update", "$$Stream", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$Stream", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {\n    try {\n        OperandResolver.GetSingleValue(arg0, srcRowIndex, srcColumnIndex);\n        return ErrorEval.NA;\n    }\n    catch (EvaluationException e) {\n        int result = TranslateErrorCodeToErrorTypeValue(e.GetErrorEval().ErrorCode);\n        return new NumberEval(result);\n    }\n}\n", "java": "public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {\n    try {\n        OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);\n        return ErrorEval.NA;\n    }\n    catch (EvaluationException e) {\n        int result = translateErrorCodeToErrorTypeValue(e.getErrorEval().getErrorCode());\n        return new NumberEval(result);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581ValueEval", "\u2581Evaluate(int", "\u2581srcRowIndex,", "\u2581int", "\u2581srcColumnIndex,", "\u2581ValueEval", "\u2581arg", "$$0)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581OperandResolver", "$$.Get", "$$Single", "$$Value", "$$(arg", "$$0,", "\u2581srcRowIndex,", "\u2581srcColumn", "$$Index)", "$$;"], ["\u2581return", "\u2581Error", "$$Eval", "$$.N", "$$A", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(EvaluationException", "\u2581e)", "\u2581{"], ["\u2581int", "\u2581result", "\u2581=", "\u2581", "$$Trans", "$$l", "$$ate", "$$Error", "$$Code", "$$To", "$$Error", "$$Type", "$$Value(", "$$e", "$$.Get", "$$ErrorEval", "$$().", "$$Error", "$$Code", "$$)", "$$;"], ["\u2581return", "\u2581new", "\u2581NumberEval", "$$(result", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ValueEval", "\u2581evaluate(int", "\u2581srcRowIndex,", "\u2581int", "\u2581srcColumnIndex,", "\u2581ValueEval", "\u2581arg", "$$0)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581OperandResolver", "$$.get", "$$Single", "$$Value", "$$(arg", "$$0,", "\u2581srcRowIndex,", "\u2581srcColumn", "$$Index)", "$$;"], ["\u2581return", "\u2581Error", "$$Eval", "$$.N", "$$A", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(EvaluationException", "\u2581e)", "\u2581{"], ["\u2581int", "\u2581result", "\u2581=", "\u2581t", "$$ran", "$$s", "$$l", "$$ate", "$$Error", "$$Code", "$$To", "$$Error", "$$Type", "$$Value(", "$$e", "$$.get", "$$ErrorEval", "$$().get", "$$Error", "$$Code", "$$())", "$$;"], ["\u2581return", "\u2581new", "\u2581NumberEval", "$$(result", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder sb = new StringBuilder(64);\n    sb.Append(GetType().Name).Append(\" [\");\n    sb.Append(_index).Append(\" \").Append(_name);\n    sb.Append(\"]\");\n    return sb.ToString();\n}\n", "java": "public String toString() {\n    return getClass().getName() + \" [\" + _index + \" \" + _name + \"]\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder(", "$$64", "$$)", "$$;"], ["\u2581sb.Append(", "$$Get", "$$Type().", "$$Name)", "$$.Append(\"", "\u2581[", "$$\")", "$$;"], ["\u2581sb.Append(", "$$_index", "$$)", "$$.Append(\"", "\u2581\").Append(", "$$_", "$$name", "$$)", "$$;"], ["\u2581sb.Append(\"", "$$]", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581get", "$$Class().get", "$$Name()", "\u2581+", "\u2581\"", "\u2581[", "$$\"", "\u2581+", "\u2581_", "$$index", "\u2581+", "\u2581\"", "\u2581\"", "\u2581+", "\u2581_", "$$name", "\u2581+", "\u2581\"]", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListAssignmentsForHITResponse ListAssignmentsForHIT(ListAssignmentsForHITRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListAssignmentsForHITRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListAssignmentsForHITResponseUnmarshaller.Instance;\n    return Invoke<ListAssignmentsForHITResponse>(request, options);\n}\n", "java": "public ListAssignmentsForHITResult listAssignmentsForHIT(ListAssignmentsForHITRequest request) {\n    request = beforeClientExecution(request);\n    return executeListAssignmentsForHIT(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Assignment", "$$sFor", "$$HIT", "$$Response", "\u2581List", "$$Assignment", "$$sFor", "$$HIT", "$$(List", "$$Assignment", "$$sFor", "$$HIT", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Assignment", "$$sFor", "$$HIT", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Assignment", "$$sFor", "$$HIT", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Assignment", "$$sFor", "$$HIT", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Assignment", "$$sFor", "$$HIT", "$$Result", "\u2581list", "$$Assignment", "$$sFor", "$$HIT", "$$(List", "$$Assignment", "$$sFor", "$$HIT", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Assignment", "$$sFor", "$$HIT", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteAccessControlRuleResponse DeleteAccessControlRule(DeleteAccessControlRuleRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteAccessControlRuleRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteAccessControlRuleResponseUnmarshaller.Instance;\n    return Invoke<DeleteAccessControlRuleResponse>(request, options);\n}\n", "java": "public DeleteAccessControlRuleResult deleteAccessControlRule(DeleteAccessControlRuleRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteAccessControlRule(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Access", "$$Cont", "$$ro", "$$l", "$$Rule", "$$Response", "\u2581Delete", "$$Access", "$$Cont", "$$ro", "$$l", "$$Rule", "$$(Delete", "$$Access", "$$Cont", "$$ro", "$$l", "$$Rule", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Access", "$$Cont", "$$ro", "$$l", "$$Rule", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Access", "$$Cont", "$$ro", "$$l", "$$Rule", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Access", "$$Cont", "$$ro", "$$l", "$$Rule", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Access", "$$Cont", "$$ro", "$$l", "$$Rule", "$$Result", "\u2581delete", "$$Access", "$$Cont", "$$ro", "$$l", "$$Rule", "$$(Delete", "$$Access", "$$Cont", "$$ro", "$$l", "$$Rule", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Access", "$$Cont", "$$ro", "$$l", "$$Rule", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public FST.Arc<long?> GetFirstArc(FST.Arc<long?> arc) {\n    return fst.GetFirstArc(arc);\n}\n", "java": "public Arc<Long> getFirstArc(FST.Arc<Long> arc) {\n    return fst.getFirstArc(arc);\n}\n", "cs_t": [["\u2581public", "\u2581F", "$$ST", "$$.A", "$$rc", "$$<", "$$long", "$$?", "$$>", "\u2581Get", "$$First", "$$Ar", "$$c", "$$(", "$$F", "$$ST", "$$.A", "$$rc", "$$<", "$$long", "$$?", "$$>", "\u2581ar", "$$c", "$$)", "\u2581{"], ["\u2581return", "\u2581f", "$$st", "$$.Get", "$$First", "$$Ar", "$$c", "$$(", "$$ar", "$$c", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Ar", "$$c", "$$<", "$$Long", "$$>", "\u2581get", "$$First", "$$Ar", "$$c", "$$(", "$$F", "$$ST", "$$.A", "$$rc", "$$<", "$$Long", "$$>", "\u2581ar", "$$c", "$$)", "\u2581{"], ["\u2581return", "\u2581f", "$$st", "$$.get", "$$First", "$$Ar", "$$c", "$$(", "$$ar", "$$c", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n    for (int i = 0; i < iterations; ++i) {\n        long block = blocks[blocksOffset++];\n        for (int shift = 48; shift >= 0; shift -= 16) {\n            values[valuesOffset++] = (int)(((long)((ulong)block >> shift)) & 65535);\n        }\n    }\n}\n", "java": "public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n    for (int i = 0; i < iterations; ++i) {\n        final long block = blocks[blocksOffset++];\n        for (int shift = 48; shift >= 0; shift -= 16) {\n            values[valuesOffset++] = (int) ((block >>> shift) & 65535);\n        }\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581D", "$$ecode", "$$(long[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581int[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581iterations;", "\u2581++i)", "\u2581{"], ["\u2581long", "\u2581block", "\u2581=", "\u2581blocks[blocksOffset++]", "$$;"], ["\u2581for", "\u2581(int", "\u2581shift", "\u2581=", "\u25814", "$$8", "$$;", "\u2581shift", "\u2581>=", "\u25810;", "\u2581shift", "\u2581-=", "\u258116", "$$)", "\u2581{"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(int", "$$)((", "$$(long", "$$)((", "$$ul", "$$ong", "$$)", "$$block", "\u2581>>", "\u2581shift", "$$))", "\u2581&", "\u25816", "$$5", "$$5", "$$3", "$$5", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581decode", "$$(long[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581int[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581iterations;", "\u2581++i)", "\u2581{"], ["\u2581final", "\u2581long", "\u2581block", "\u2581=", "\u2581blocks[blocksOffset++]", "$$;"], ["\u2581for", "\u2581(int", "\u2581shift", "\u2581=", "\u25814", "$$8", "$$;", "\u2581shift", "\u2581>=", "\u25810;", "\u2581shift", "\u2581-=", "\u258116", "$$)", "\u2581{"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(int)", "\u2581(", "$$(block", "\u2581>>>", "\u2581shift", "$$)", "\u2581&", "\u25816", "$$5", "$$5", "$$3", "$$5", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override long skip(long charCount) {\n    if (charCount < 0) {\n        throw new System.ArgumentException(\"charCount < 0: \" + charCount);\n    }\n    lock (@lock) {\n        checkNotClosed();\n        if (charCount == 0) {\n            return 0;\n        }\n        long inSkipped;\n        int availableFromBuffer = buf.Length - pos;\n        if (availableFromBuffer > 0) {\n            long requiredFromIn = charCount - availableFromBuffer;\n            if (requiredFromIn <= 0) {\n                pos += (int)(charCount);\n                return charCount;\n            }\n            pos += availableFromBuffer;\n            inSkipped = @in.skip(requiredFromIn);\n        }\n        else {\n            inSkipped = @in.skip(charCount);\n        }\n        return inSkipped + availableFromBuffer;\n    }\n}\n", "java": "public long skip(long charCount) throws IOException {\n    if (charCount < 0) {\n        throw new IllegalArgumentException(\"charCount < 0: \" + charCount);\n    }\n    synchronized (lock) {\n        checkNotClosed();\n        if (charCount == 0) {\n            return 0;\n        }\n        long inSkipped;\n        int availableFromBuffer = buf.length - pos;\n        if (availableFromBuffer > 0) {\n            long requiredFromIn = charCount - availableFromBuffer;\n            if (requiredFromIn <= 0) {\n                pos += charCount;\n                return charCount;\n            }\n            pos += availableFromBuffer;\n            inSkipped = in.skip(requiredFromIn);\n        }\n        else {\n            inSkipped = in.skip(charCount);\n        }\n        return inSkipped + availableFromBuffer;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581long", "\u2581skip", "$$(long", "\u2581char", "$$Count)", "\u2581{"], ["\u2581if", "\u2581(char", "$$Count", "\u2581<", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"", "$$char", "$$Count", "\u2581<", "\u25810", "$$:", "\u2581\"", "\u2581+", "\u2581char", "$$Count)", "$$;"], ["\u2581}"], ["\u2581lock", "\u2581(@", "$$lock", "$$)", "\u2581{"], ["\u2581check", "$$Not", "$$C", "$$lo", "$$sed", "$$()", "$$;"], ["\u2581if", "\u2581(char", "$$Count", "\u2581==", "\u25810)", "\u2581{"], ["\u2581return", "\u25810;"], ["\u2581}"], ["\u2581long", "\u2581in", "$$Skip", "$$p", "$$ed", "$$;"], ["\u2581int", "\u2581avail", "$$able", "$$From", "$$Buffer", "\u2581=", "\u2581buf", "$$.Length", "\u2581-", "\u2581pos", "$$;"], ["\u2581if", "\u2581(", "$$avail", "$$able", "$$From", "$$Buffer", "\u2581>", "\u25810)", "\u2581{"], ["\u2581long", "\u2581re", "$$qu", "$$ired", "$$From", "$$In", "\u2581=", "\u2581char", "$$Count", "\u2581-", "\u2581avail", "$$able", "$$From", "$$Buffer", "$$;"], ["\u2581if", "\u2581(re", "$$qu", "$$ired", "$$From", "$$In", "\u2581<=", "\u25810)", "\u2581{"], ["\u2581pos", "\u2581+=", "\u2581(int)", "$$(char", "$$Count)", "$$;"], ["\u2581return", "\u2581char", "$$Count", "$$;"], ["\u2581}"], ["\u2581pos", "\u2581+=", "\u2581avail", "$$able", "$$From", "$$Buffer", "$$;"], ["\u2581in", "$$Skip", "$$p", "$$ed", "\u2581=", "\u2581@in", "$$.", "$$skip", "$$(re", "$$qu", "$$ired", "$$From", "$$In", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581in", "$$Skip", "$$p", "$$ed", "\u2581=", "\u2581@in", "$$.", "$$skip", "$$(char", "$$Count)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581in", "$$Skip", "$$p", "$$ed", "\u2581+", "\u2581avail", "$$able", "$$From", "$$Buffer", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581long", "\u2581skip", "$$(long", "\u2581char", "$$Count)", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581if", "\u2581(char", "$$Count", "\u2581<", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$char", "$$Count", "\u2581<", "\u25810", "$$:", "\u2581\"", "\u2581+", "\u2581char", "$$Count)", "$$;"], ["\u2581}"], ["\u2581synchronized", "\u2581(", "$$lock", "$$)", "\u2581{"], ["\u2581check", "$$Not", "$$C", "$$lo", "$$sed", "$$()", "$$;"], ["\u2581if", "\u2581(char", "$$Count", "\u2581==", "\u25810)", "\u2581{"], ["\u2581return", "\u25810;"], ["\u2581}"], ["\u2581long", "\u2581in", "$$Skip", "$$p", "$$ed", "$$;"], ["\u2581int", "\u2581avail", "$$able", "$$From", "$$Buffer", "\u2581=", "\u2581buf", "$$.length", "\u2581-", "\u2581pos", "$$;"], ["\u2581if", "\u2581(", "$$avail", "$$able", "$$From", "$$Buffer", "\u2581>", "\u25810)", "\u2581{"], ["\u2581long", "\u2581re", "$$qu", "$$ired", "$$From", "$$In", "\u2581=", "\u2581char", "$$Count", "\u2581-", "\u2581avail", "$$able", "$$From", "$$Buffer", "$$;"], ["\u2581if", "\u2581(re", "$$qu", "$$ired", "$$From", "$$In", "\u2581<=", "\u25810)", "\u2581{"], ["\u2581pos", "\u2581+=", "\u2581char", "$$Count", "$$;"], ["\u2581return", "\u2581char", "$$Count", "$$;"], ["\u2581}"], ["\u2581pos", "\u2581+=", "\u2581avail", "$$able", "$$From", "$$Buffer", "$$;"], ["\u2581in", "$$Skip", "$$p", "$$ed", "\u2581=", "\u2581in", "$$.", "$$skip", "$$(re", "$$qu", "$$ired", "$$From", "$$In", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581in", "$$Skip", "$$p", "$$ed", "\u2581=", "\u2581in", "$$.", "$$skip", "$$(char", "$$Count)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581in", "$$Skip", "$$p", "$$ed", "\u2581+", "\u2581avail", "$$able", "$$From", "$$Buffer", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual IDictionary<string, Ref> GetRefsMap() {\n    return advertisedRefs;\n}\n", "java": "public Map<String, Ref> getRefsMap() {\n    return advertisedRefs;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581I", "$$D", "$$ictionary<string,", "\u2581Ref", "$$>", "\u2581Get", "$$Ref", "$$s", "$$Map", "$$()", "\u2581{"], ["\u2581return", "\u2581", "$$ad", "$$ver", "$$ti", "$$sed", "$$Ref", "$$s;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581M", "$$ap", "$$<", "$$String,", "\u2581Ref", "$$>", "\u2581get", "$$Ref", "$$s", "$$Map", "$$()", "\u2581{"], ["\u2581return", "\u2581", "$$ad", "$$ver", "$$ti", "$$sed", "$$Ref", "$$s;"], ["\u2581}"]]}, {"cs": "public virtual UpdateApiKeyResponse UpdateApiKey(UpdateApiKeyRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateApiKeyRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateApiKeyResponseUnmarshaller.Instance;\n    return Invoke<UpdateApiKeyResponse>(request, options);\n}\n", "java": "public UpdateApiKeyResult updateApiKey(UpdateApiKeyRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateApiKey(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$Api", "$$Key", "$$Response", "\u2581Update", "$$Api", "$$Key", "$$(Update", "$$Api", "$$Key", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$Api", "$$Key", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$Api", "$$Key", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$Api", "$$Key", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$Api", "$$Key", "$$Result", "\u2581update", "$$Api", "$$Key", "$$(Update", "$$Api", "$$Key", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$Api", "$$Key", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override ObjectStream OpenStream() {\n    WindowCursor wc = new WindowCursor(db);\n    InputStream @in;\n    try {\n        @in = new PackInputStream(pack, objectOffset + headerLength, wc);\n    }\n    catch (IOException) {\n        return wc.Open(GetObjectId(), type).OpenStream();\n    }\n    @in = new BufferedInputStream(new InflaterInputStream(@in, wc.Inflater(), 8192),8192);\n    return new ObjectStream.Filter(type, size, @in);\n}\n", "java": "public ObjectStream openStream() throws MissingObjectException, IOException {\n    PackInputStream packIn;\n    @SuppressWarnings(\"resource\")DfsReader ctx = db.newReader();\n    try {\n        try {\n            packIn = new PackInputStream(pack, objectOffset + headerLength, ctx);\n            ctx = null;\n        }\n        catch (IOException packGone) {\n            ObjectId obj = pack.getReverseIdx(ctx).findObject(objectOffset);\n            return ctx.open(obj, type).openStream();\n        }\n    }\n    finally {\n        if (ctx != null) {\n            ctx.close();\n        }\n    }\n    int bufsz = 8192;\n    InputStream in = new BufferedInputStream(new InflaterInputStream(packIn, packIn.ctx.inflater(), bufsz),bufsz);\n    return new ObjectStream.Filter(type, size, in);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581Object", "$$Stream", "\u2581", "$$Open", "$$Stream", "$$()", "\u2581{"], ["\u2581W", "$$indow", "$$C", "$$ursor", "\u2581w", "$$c", "\u2581=", "\u2581new", "\u2581W", "$$indow", "$$C", "$$ursor", "$$(d", "$$b", "$$)", "$$;"], ["\u2581In", "$$put", "$$Stream", "\u2581@in", "$$;"], ["\u2581try", "\u2581{"], ["\u2581@in", "\u2581=", "\u2581new", "\u2581P", "$$ack", "$$InputStream", "$$(p", "$$ack", "$$,", "\u2581object", "$$Offset", "\u2581+", "\u2581head", "$$er", "$$Length", "$$,", "\u2581w", "$$c", "$$)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(IOException", "$$)", "\u2581{"], ["\u2581return", "\u2581w", "$$c.", "$$Open", "$$(Get", "$$ObjectId", "$$(),", "\u2581type", "$$).", "$$Open", "$$Stream", "$$()", "$$;"], ["\u2581}"], ["\u2581@in", "\u2581=", "\u2581new", "\u2581", "$$Bu", "$$ff", "$$e", "$$red", "$$InputStream", "$$(new", "\u2581In", "$$f", "$$l", "$$at", "$$er", "$$InputStream", "$$(@", "$$in", "$$,", "\u2581w", "$$c.", "$$In", "$$f", "$$l", "$$at", "$$er", "$$(),", "\u25818", "$$19", "$$2", "$$),", "$$8", "$$19", "$$2)", "$$;"], ["\u2581return", "\u2581new", "\u2581Object", "$$Stream", "$$.", "$$Filter", "$$(t", "$$ype", "$$,", "\u2581size", "$$,", "\u2581@in", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Object", "$$Stream", "\u2581o", "$$pen", "$$Stream", "$$()", "\u2581throws", "\u2581M", "$$issing", "$$Object", "$$Exception", "$$,", "\u2581IOException", "\u2581{"], ["\u2581P", "$$ack", "$$InputStream", "\u2581p", "$$ack", "$$In", "$$;"], ["\u2581@", "$$Supp", "$$ress", "$$W", "$$arn", "$$ing", "$$s(", "$$\"", "$$res", "$$ource", "$$\")", "$$D", "$$f", "$$s", "$$Reader", "\u2581ctx", "\u2581=", "\u2581db", "$$.", "$$new", "$$Reader", "$$()", "$$;"], ["\u2581try", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581p", "$$ack", "$$In", "\u2581=", "\u2581new", "\u2581P", "$$ack", "$$InputStream", "$$(p", "$$ack", "$$,", "\u2581object", "$$Offset", "\u2581+", "\u2581head", "$$er", "$$Length", "$$,", "\u2581ctx", "$$)", "$$;"], ["\u2581ctx", "\u2581=", "\u2581null", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(IOException", "\u2581p", "$$ack", "$$G", "$$one", "$$)", "\u2581{"], ["\u2581ObjectId", "\u2581obj", "\u2581=", "\u2581p", "$$ack", "$$.get", "$$Re", "$$verse", "$$Idx", "$$(", "$$ctx", "$$).", "$$f", "$$ind", "$$Object", "$$(object", "$$Offset", "$$)", "$$;"], ["\u2581return", "\u2581ctx", "$$.", "$$open", "$$(o", "$$bj", "$$,", "\u2581type", "$$).", "$$open", "$$Stream", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581finally", "\u2581{"], ["\u2581if", "\u2581(", "$$ctx", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581ctx", "$$.c", "$$lose", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581int", "\u2581buf", "$$s", "$$z", "\u2581=", "\u25818", "$$19", "$$2", "$$;"], ["\u2581In", "$$put", "$$Stream", "\u2581in", "\u2581=", "\u2581new", "\u2581", "$$Bu", "$$ff", "$$e", "$$red", "$$InputStream", "$$(new", "\u2581In", "$$f", "$$l", "$$at", "$$er", "$$InputStream", "$$(p", "$$ack", "$$In", "$$,", "\u2581p", "$$ack", "$$In", "$$.", "$$ctx", "$$.", "$$in", "$$f", "$$l", "$$at", "$$er", "$$(),", "\u2581buf", "$$s", "$$z", "$$),", "$$buf", "$$s", "$$z", "$$)", "$$;"], ["\u2581return", "\u2581new", "\u2581Object", "$$Stream", "$$.", "$$Filter", "$$(t", "$$ype", "$$,", "\u2581size", "$$,", "\u2581in)", "$$;"], ["\u2581}"]]}, {"cs": "public ArrayList() {\n    array = libcore.util.EmptyArray.OBJECT;\n}\n", "java": "public ArrayList() {\n    array = EmptyArray.OBJECT;\n}\n", "cs_t": [["\u2581public", "\u2581Array", "$$List", "$$()", "\u2581{"], ["\u2581array", "\u2581=", "\u2581libcore.", "$$util.", "$$Empty", "$$Array", "$$.", "$$OBJEC", "$$T", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Array", "$$List", "$$()", "\u2581{"], ["\u2581array", "\u2581=", "\u2581E", "$$mpty", "$$Array", "$$.", "$$OBJEC", "$$T", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateDetectorVersionResponse UpdateDetectorVersion(UpdateDetectorVersionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateDetectorVersionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateDetectorVersionResponseUnmarshaller.Instance;\n    return Invoke<UpdateDetectorVersionResponse>(request, options);\n}\n", "java": "public UpdateDetectorVersionResult updateDetectorVersion(UpdateDetectorVersionRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateDetectorVersion(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$Detector", "$$Version", "$$Response", "\u2581Update", "$$Detector", "$$Version", "$$(Update", "$$Detector", "$$Version", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$Detector", "$$Version", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$Detector", "$$Version", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$Detector", "$$Version", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$Detector", "$$Version", "$$Result", "\u2581update", "$$Detector", "$$Version", "$$(Update", "$$Detector", "$$Version", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$Detector", "$$Version", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void Resize() {\n    Resize(Double.MaxValue);\n}\n", "java": "public void resize() {\n    resize(Double.MAX_VALUE);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581", "$$Res", "$$ize", "$$()", "\u2581{"], ["\u2581", "$$Res", "$$ize", "$$(", "$$Double", "$$.", "$$Max", "$$Value)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581res", "$$ize", "$$()", "\u2581{"], ["\u2581res", "$$ize", "$$(", "$$Double", "$$.M", "$$AX_", "$$VALU", "$$E", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public RevFlagSet(ICollection<RevFlag> s) : this() {\n    Sharpen.Collections.AddAll(this, s);\n}\n", "java": "public RevFlagSet(Collection<RevFlag> s) {\n    this();\n    addAll(s);\n}\n", "cs_t": [["\u2581public", "\u2581Rev", "$$Flag", "$$Set", "$$(I", "$$Collection<", "$$Rev", "$$Flag", "$$>", "\u2581s)", "\u2581:", "\u2581this", "$$()", "\u2581{"], ["\u2581Sharpen.", "$$Collection", "$$s", "$$.Add", "$$All", "$$(this,", "\u2581s)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Rev", "$$Flag", "$$Set(", "$$Collection<", "$$Rev", "$$Flag", "$$>", "\u2581s)", "\u2581{"], ["\u2581this", "$$()", "$$;"], ["\u2581add", "$$All", "$$(", "$$s)", "$$;"], ["\u2581}"]]}, {"cs": "public override int size() {\n    return this._enclosing.size();\n}\n", "java": "public int size() {\n    return size;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int", "\u2581size()", "\u2581{"], ["\u2581return", "\u2581this._enclosing", "$$.size()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581size()", "\u2581{"], ["\u2581return", "\u2581size", "$$;"], ["\u2581}"]]}, {"cs": "public sealed override long getLong() {\n    int newPosition = _position + libcore.io.SizeOf.LONG;\n    if (newPosition > _limit) {\n        throw new java.nio.BufferUnderflowException();\n    }\n    long result = libcore.io.Memory.peekLong(backingArray, offset + _position, _order);\n    _position = newPosition;\n    return result;\n}\n", "java": "public final long getLong() {\n    int newPosition = position + SizeOf.LONG;\n    if (newPosition > limit) {\n        throw new BufferUnderflowException();\n    }\n    long result = Memory.peekLong(backingArray, offset + position, order);\n    position = newPosition;\n    return result;\n}\n", "cs_t": [["\u2581public", "\u2581sealed", "\u2581override", "\u2581long", "\u2581get", "$$Long", "$$()", "\u2581{"], ["\u2581int", "\u2581new", "$$Position", "\u2581=", "\u2581_position", "\u2581+", "\u2581libcore.io.SizeOf", "$$.", "$$L", "$$ON", "$$G", "$$;"], ["\u2581if", "\u2581(new", "$$Position", "\u2581>", "\u2581_limit", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581java.nio.Buffer", "$$Under", "$$flow", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581long", "\u2581result", "\u2581=", "\u2581libcore.io.", "$$Mem", "$$ory", "$$.p", "$$eek", "$$Long", "$$(b", "$$ackingArray,", "\u2581offset", "\u2581+", "\u2581_position", "$$,", "\u2581_", "$$order", "$$)", "$$;"], ["\u2581_position", "\u2581=", "\u2581new", "$$Position", "$$;"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581long", "\u2581get", "$$Long", "$$()", "\u2581{"], ["\u2581int", "\u2581new", "$$Position", "\u2581=", "\u2581position", "\u2581+", "\u2581SizeOf", "$$.", "$$L", "$$ON", "$$G", "$$;"], ["\u2581if", "\u2581(new", "$$Position", "\u2581>", "\u2581limit", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Buffer", "$$Under", "$$flow", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581long", "\u2581result", "\u2581=", "\u2581M", "$$em", "$$ory", "$$.p", "$$eek", "$$Long", "$$(b", "$$ackingArray,", "\u2581offset", "\u2581+", "\u2581position", "$$,", "\u2581", "$$order", "$$)", "$$;"], ["\u2581position", "\u2581=", "\u2581new", "$$Position", "$$;"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]]}, {"cs": "public java.lang.StringBuilder insert(int offset, long l) {\n    insert0(offset, System.Convert.ToString(l));\n    return this;\n}\n", "java": "public StringBuilder insert(int offset, long l) {\n    insert0(offset, Long.toString(l));\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581java.lang.String", "$$Builder", "\u2581insert", "$$(int", "\u2581offset,", "\u2581long", "\u2581l", "$$)", "\u2581{"], ["\u2581insert", "$$0", "$$(offset", "$$,", "\u2581System.", "$$Con", "$$vert", "$$.To", "$$String(", "$$l", "$$))", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581StringBuilder", "\u2581insert", "$$(int", "\u2581offset,", "\u2581long", "\u2581l", "$$)", "\u2581{"], ["\u2581insert", "$$0", "$$(offset", "$$,", "\u2581Long", "$$.to", "$$String(", "$$l", "$$))", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public TurkishLowerCaseFilter(TokenStream @in): base(@in) {\n    termAtt = AddAttribute<ICharTermAttribute>();\n}\n", "java": "public TurkishLowerCaseFilter(TokenStream in) {\n    super(in);\n}\n", "cs_t": [["\u2581public", "\u2581T", "$$ur", "$$k", "$$ish", "$$Lower", "$$Case", "$$Filter(TokenStream", "\u2581@in", "$$):", "\u2581base", "$$(@", "$$in", "$$)", "\u2581{"], ["\u2581term", "$$Att", "\u2581=", "\u2581Add", "$$Attribute", "$$<", "$$I", "$$Char", "$$Term", "$$Attribute", "$$>", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581T", "$$ur", "$$k", "$$ish", "$$Lower", "$$Case", "$$Filter(TokenStream", "\u2581in)", "\u2581{"], ["\u2581super(", "$$in", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ParseTreeMatch Match(IParseTree tree, ParseTreePattern pattern) {\n    MultiMap<string, IParseTree> labels = new MultiMap<string, IParseTree>();\n    IParseTree mismatchedNode = MatchImpl(tree, pattern.PatternTree, labels);\n    return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);\n}\n", "java": "public ParseTreeMatch match(ParseTree tree, ParseTreePattern pattern) {\n    MultiMap<String, ParseTree> labels = new MultiMap<String, ParseTree>();\n    ParseTree mismatchedNode = matchImpl(tree, pattern.getPatternTree(), labels);\n    return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Parse", "$$Tree", "$$Match", "\u2581Match", "$$(I", "$$ParseTree", "\u2581t", "$$ree", "$$,", "\u2581Parse", "$$Tree", "$$Pattern", "\u2581pattern", "$$)", "\u2581{"], ["\u2581M", "$$ulti", "$$Map", "$$<string,", "\u2581I", "$$ParseTree", "$$>", "\u2581label", "$$s", "\u2581=", "\u2581new", "\u2581M", "$$ulti", "$$Map", "$$<string,", "\u2581I", "$$ParseTree", "$$>", "$$()", "$$;"], ["\u2581I", "$$ParseTree", "\u2581m", "$$is", "$$match", "$$ed", "$$Node", "\u2581=", "\u2581Match", "$$Impl", "$$(t", "$$ree", "$$,", "\u2581pattern", "$$.", "$$Pattern", "$$Tree", "$$,", "\u2581label", "$$s)", "$$;"], ["\u2581return", "\u2581new", "\u2581Parse", "$$Tree", "$$Match", "$$(t", "$$ree", "$$,", "\u2581pattern", "$$,", "\u2581label", "$$s,", "\u2581m", "$$is", "$$match", "$$ed", "$$Node", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Parse", "$$Tree", "$$Match", "\u2581match", "$$(", "$$ParseTree", "\u2581t", "$$ree", "$$,", "\u2581Parse", "$$Tree", "$$Pattern", "\u2581pattern", "$$)", "\u2581{"], ["\u2581M", "$$ulti", "$$Map<String,", "\u2581Parse", "$$Tree", "$$>", "\u2581label", "$$s", "\u2581=", "\u2581new", "\u2581M", "$$ulti", "$$Map<String,", "\u2581Parse", "$$Tree", "$$>", "$$()", "$$;"], ["\u2581Parse", "$$Tree", "\u2581m", "$$is", "$$match", "$$ed", "$$Node", "\u2581=", "\u2581match", "$$Impl", "$$(t", "$$ree", "$$,", "\u2581pattern", "$$.get", "$$Pattern", "$$Tree", "$$(),", "\u2581label", "$$s)", "$$;"], ["\u2581return", "\u2581new", "\u2581Parse", "$$Tree", "$$Match", "$$(t", "$$ree", "$$,", "\u2581pattern", "$$,", "\u2581label", "$$s,", "\u2581m", "$$is", "$$match", "$$ed", "$$Node", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void AddIfNoOverlap(WeightedPhraseInfo wpi) {\n    foreach (WeightedPhraseInfo existWpi in PhraseList) {\n        if (existWpi.IsOffsetOverlap(wpi)) {\n            existWpi.TermsInfos.AddRange(wpi.TermsInfos);\n            return;\n        }\n    }\n    PhraseList.Add(wpi);\n}\n", "java": "public void addIfNoOverlap( WeightedPhraseInfo wpi ) {\n    for( WeightedPhraseInfo existWpi : getPhraseList() ) {\n        if( existWpi.isOffsetOverlap( wpi ) ) {\n            existWpi.getTermsInfos().addAll( wpi.getTermsInfos() );\n            return;\n        }\n    }\n    getPhraseList().add( wpi );\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Add", "$$If", "$$No", "$$Over", "$$l", "$$ap", "$$(", "$$W", "$$eighted", "$$Phrase", "$$Info", "\u2581w", "$$p", "$$i)", "\u2581{"], ["\u2581foreach", "\u2581(", "$$W", "$$eighted", "$$Phrase", "$$Info", "\u2581ex", "$$ist", "$$W", "$$p", "$$i", "\u2581in", "\u2581P", "$$h", "$$rase", "$$List", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$ex", "$$ist", "$$W", "$$p", "$$i", "$$.Is", "$$Offset", "$$Over", "$$l", "$$ap", "$$(w", "$$p", "$$i", "$$))", "\u2581{"], ["\u2581ex", "$$ist", "$$W", "$$p", "$$i.", "$$Terms", "$$Info", "$$s", "$$.Add", "$$Range", "$$(w", "$$p", "$$i.", "$$Terms", "$$Info", "$$s)", "$$;"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581P", "$$h", "$$rase", "$$List", "$$.Add(", "$$w", "$$p", "$$i)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581add", "$$If", "$$No", "$$Over", "$$l", "$$ap", "$$(", "\u2581W", "$$eighted", "$$Phrase", "$$Info", "\u2581w", "$$p", "$$i", "\u2581)", "\u2581{"], ["\u2581for", "$$(", "\u2581W", "$$eighted", "$$Phrase", "$$Info", "\u2581ex", "$$ist", "$$W", "$$p", "$$i", "\u2581:", "\u2581get", "$$Phrase", "$$List", "$$()", "\u2581)", "\u2581{"], ["\u2581if(", "\u2581ex", "$$ist", "$$W", "$$p", "$$i.", "$$is", "$$Offset", "$$Over", "$$l", "$$ap", "$$(", "\u2581w", "$$p", "$$i", "\u2581)", "\u2581)", "\u2581{"], ["\u2581ex", "$$ist", "$$W", "$$p", "$$i", "$$.get", "$$Terms", "$$Info", "$$s", "$$().", "$$add", "$$All", "$$(", "\u2581w", "$$p", "$$i", "$$.get", "$$Terms", "$$Info", "$$s()", "\u2581)", "$$;"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581get", "$$Phrase", "$$List", "$$().", "$$add(", "\u2581w", "$$p", "$$i", "\u2581)", "$$;"], ["\u2581}"]]}, {"cs": "public override Merger NewMerger(Repository db) {\n    return new StrategySimpleTwoWayInCore.InCoreMerger(db);\n}\n", "java": "public ThreeWayMerger newMerger(Repository db) {\n    return new InCoreMerger(db);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581M", "$$er", "$$ger", "\u2581N", "$$ew", "$$M", "$$er", "$$g", "$$er(", "$$Repository", "\u2581db", "$$)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581St", "$$r", "$$ategy", "$$Simple", "$$T", "$$wo", "$$W", "$$ay", "$$In", "$$Co", "$$re", "$$.", "$$In", "$$Co", "$$re", "$$M", "$$er", "$$ger", "$$(d", "$$b", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Th", "$$ree", "$$W", "$$ay", "$$M", "$$er", "$$ger", "\u2581new", "$$M", "$$er", "$$g", "$$er(", "$$Repository", "\u2581db", "$$)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581In", "$$Co", "$$re", "$$M", "$$er", "$$ger", "$$(d", "$$b", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override float DocScore(int docId, string field, int numPayloadsSeen, float payloadScore) {\n    return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;\n}\n", "java": "public float docScore(int docId, String field, int numPayloadsSeen, float payloadScore) {\n    return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581float", "\u2581Doc", "$$Score", "$$(int", "\u2581doc", "$$Id,", "\u2581string", "\u2581field", "$$,", "\u2581int", "\u2581num", "$$Payload", "$$s", "$$Se", "$$en", "$$,", "\u2581float", "\u2581payload", "$$Score", "$$)", "\u2581{"], ["\u2581return", "\u2581num", "$$Payload", "$$s", "$$Se", "$$en", "\u2581>", "\u25810", "\u2581?", "\u2581(p", "$$ayload", "$$Score", "\u2581/", "\u2581num", "$$Payload", "$$s", "$$Se", "$$en", "$$)", "\u2581:", "\u25811", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581float", "\u2581doc", "$$Score", "$$(int", "\u2581doc", "$$Id,", "\u2581String", "\u2581field", "$$,", "\u2581int", "\u2581num", "$$Payload", "$$s", "$$Se", "$$en", "$$,", "\u2581float", "\u2581payload", "$$Score", "$$)", "\u2581{"], ["\u2581return", "\u2581num", "$$Payload", "$$s", "$$Se", "$$en", "\u2581>", "\u25810", "\u2581?", "\u2581(p", "$$ayload", "$$Score", "\u2581/", "\u2581num", "$$Payload", "$$s", "$$Se", "$$en", "$$)", "\u2581:", "\u25811", "$$;"], ["\u2581}"]]}, {"cs": "public override ICollection<IParseTree> Evaluate(IParseTree t) {\n    return Trees.FindAllRuleNodes(t, ruleIndex);\n}\n", "java": "public Collection<ParseTree> evaluate(ParseTree t) {\n    return Trees.findAllRuleNodes(t, ruleIndex);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581I", "$$Collection<", "$$I", "$$ParseTree", "$$>", "\u2581Evaluate", "$$(I", "$$ParseTree", "\u2581t", "$$)", "\u2581{"], ["\u2581return", "\u2581T", "$$re", "$$es", "$$.", "$$Find", "$$All", "$$Rule", "$$Nodes", "$$(t", "$$,", "\u2581rule", "$$Index)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Collection<", "$$ParseTree", "$$>", "\u2581evaluate", "$$(", "$$ParseTree", "\u2581t", "$$)", "\u2581{"], ["\u2581return", "\u2581T", "$$re", "$$es", "$$.f", "$$ind", "$$All", "$$Rule", "$$Nodes", "$$(t", "$$,", "\u2581rule", "$$Index)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[CFRULE]\\n\");\n    buffer.Append(\"    .condition_type   =\").Append(field_1_condition_type).Append(\"\\n\");\n    buffer.Append(\"    OPTION FLAGS=0x\").Append(string.Format(\"{0:X}\",Options)).Append(\"\\n\");\n    if (ContainsFontFormattingBlock) {\n        buffer.Append(_fontFormatting.ToString()).Append(\"\\n\");\n    }\n    if (ContainsBorderFormattingBlock) {\n        buffer.Append(_borderFormatting.ToString()).Append(\"\\n\");\n    }\n    if (ContainsPatternFormattingBlock) {\n        buffer.Append(_patternFormatting.ToString()).Append(\"\\n\");\n    }\n    buffer.Append(\"    Formula 1 =\").Append(Arrays.ToString(field_17_formula1.Tokens)).Append(\"\\n\");\n    buffer.Append(\"    Formula 2 =\").Append(Arrays.ToString(field_18_formula2.Tokens)).Append(\"\\n\");\n    buffer.Append(\"[/CFRULE]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"[CFRULE]\\n\");\n    buffer.append(\"    .condition_type   =\").append(getConditionType()).append(\"\\n\");\n    buffer.append(\"    OPTION FLAGS=0x\").append(Integer.toHexString(getOptions())).append(\"\\n\");\n    if (containsFontFormattingBlock()) {\n        buffer.append(_fontFormatting).append(\"\\n\");\n    }\n    if (containsBorderFormattingBlock()) {\n        buffer.append(_borderFormatting).append(\"\\n\");\n    }\n    if (containsPatternFormattingBlock()) {\n        buffer.append(_patternFormatting).append(\"\\n\");\n    }\n    buffer.append(\"    Formula 1 =\").append(Arrays.toString(getFormula1().getTokens())).append(\"\\n\");\n    buffer.append(\"    Formula 2 =\").append(Arrays.toString(getFormula2().getTokens())).append(\"\\n\");\n    buffer.append(\"[/CFRULE]\\n\");\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$C", "$$F", "$$R", "$$U", "$$LE", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$.con", "$$d", "$$ition", "$$_", "$$type", "\u2581", "\u2581", "\u2581=", "$$\").Append(", "$$field_1_", "$$cond", "$$ition", "$$_", "$$type", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$O", "$$P", "$$T", "$$ION", "\u2581F", "$$LA", "$$G", "$$S", "$$=", "$$0x", "$$\").Append(", "$$string", "$$.Format", "$$(\"", "$${", "$$0", "$$:", "$$X", "$$}", "$$\",", "$$Options", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581if", "\u2581(", "$$Contain", "$$s", "$$Font", "$$Formatting", "$$Block", "$$)", "\u2581{"], ["\u2581buffer.Append(", "$$_", "$$font", "$$Formatting", "$$.ToString()", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$Contain", "$$s", "$$B", "$$order", "$$Formatting", "$$Block", "$$)", "\u2581{"], ["\u2581buffer.Append(", "$$_", "$$b", "$$order", "$$Formatting", "$$.ToString()", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$Contain", "$$s", "$$Pattern", "$$Formatting", "$$Block", "$$)", "\u2581{"], ["\u2581buffer.Append(", "$$_", "$$pattern", "$$Formatting", "$$.ToString()", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581Formula", "\u25811", "\u2581=", "$$\").Append(", "$$Array", "$$s.", "$$To", "$$String(", "$$field_", "$$1", "$$7_", "$$form", "$$ula", "$$1.", "$$Token", "$$s", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581Formula", "\u25812", "\u2581=", "$$\").Append(", "$$Array", "$$s.", "$$To", "$$String(", "$$field_", "$$1", "$$8", "$$_", "$$form", "$$ula", "$$2.", "$$Token", "$$s", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"[/", "$$C", "$$F", "$$R", "$$U", "$$LE", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(\"[", "$$C", "$$F", "$$R", "$$U", "$$LE", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$.con", "$$d", "$$ition", "$$_", "$$type", "\u2581", "\u2581", "\u2581=", "$$\").append(", "$$get", "$$Con", "$$d", "$$ition", "$$Type", "$$())", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$O", "$$P", "$$T", "$$ION", "\u2581F", "$$LA", "$$G", "$$S", "$$=", "$$0x", "$$\").append(", "$$Integ", "$$er.", "$$to", "$$HexString(", "$$get", "$$Options", "$$()))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581if", "\u2581(", "$$con", "$$tain", "$$s", "$$Font", "$$Formatting", "$$Block", "$$())", "\u2581{"], ["\u2581buffer.append(", "$$_", "$$font", "$$Formatting", "$$)", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$con", "$$tain", "$$s", "$$B", "$$order", "$$Formatting", "$$Block", "$$())", "\u2581{"], ["\u2581buffer.append(", "$$_", "$$b", "$$order", "$$Formatting", "$$)", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$con", "$$tain", "$$s", "$$Pattern", "$$Formatting", "$$Block", "$$())", "\u2581{"], ["\u2581buffer.append(", "$$_", "$$pattern", "$$Formatting", "$$)", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581Formula", "\u25811", "\u2581=", "$$\").append(", "$$Array", "$$s.", "$$to", "$$String(", "$$get", "$$Formula", "$$1", "$$().get", "$$Token", "$$s()", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581Formula", "\u25812", "\u2581=", "$$\").append(", "$$Array", "$$s.", "$$to", "$$String(", "$$get", "$$Formula", "$$2", "$$().get", "$$Token", "$$s()", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"[/", "$$C", "$$F", "$$R", "$$U", "$$LE", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeServiceUpdatesResponse DescribeServiceUpdates(DescribeServiceUpdatesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeServiceUpdatesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeServiceUpdatesResponseUnmarshaller.Instance;\n    return Invoke<DescribeServiceUpdatesResponse>(request, options);\n}\n", "java": "public DescribeServiceUpdatesResult describeServiceUpdates(DescribeServiceUpdatesRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeServiceUpdates(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Service", "$$Up", "$$d", "$$ates", "$$Response", "\u2581Describe", "$$Service", "$$Up", "$$d", "$$ates", "$$(Describe", "$$Service", "$$Up", "$$d", "$$ates", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Service", "$$Up", "$$d", "$$ates", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Service", "$$Up", "$$d", "$$ates", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Service", "$$Up", "$$d", "$$ates", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Service", "$$Up", "$$d", "$$ates", "$$Result", "\u2581describe", "$$Service", "$$Up", "$$d", "$$ates", "$$(Describe", "$$Service", "$$Up", "$$d", "$$ates", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Service", "$$Up", "$$d", "$$ates", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public String GetNameName(int index) {\n    String result = GetNameAt(index).NameName;\n    return result;\n}\n", "java": "public String getNameName(int index) {\n    return getNameAt(index).getNameName();\n}\n", "cs_t": [["\u2581public", "\u2581String", "\u2581Get", "$$Name", "$$Name", "$$(int", "\u2581index)", "\u2581{"], ["\u2581String", "\u2581result", "\u2581=", "\u2581Get", "$$Name", "$$At", "$$(index", "$$).", "$$Name", "$$Name", "$$;"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Name", "$$Name", "$$(int", "\u2581index)", "\u2581{"], ["\u2581return", "\u2581get", "$$Name", "$$At", "$$(index", "$$)", "$$.get", "$$Name", "$$Name()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeLocationsResponse DescribeLocations() {\n    return DescribeLocations(new DescribeLocationsRequest());\n}\n", "java": "public DescribeLocationsResult describeLocations() {\n    return describeLocations(new DescribeLocationsRequest());\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Loc", "$$ation", "$$sResponse", "\u2581Describe", "$$Loc", "$$ation", "$$s()", "\u2581{"], ["\u2581return", "\u2581Describe", "$$Loc", "$$ation", "$$s(new", "\u2581Describe", "$$Loc", "$$ation", "$$sRequest", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Loc", "$$ation", "$$sResult", "\u2581describe", "$$Loc", "$$ation", "$$s()", "\u2581{"], ["\u2581return", "\u2581describe", "$$Loc", "$$ation", "$$s(new", "\u2581Describe", "$$Loc", "$$ation", "$$sRequest", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return \"<phraseslop value='\" + GetValueString() + \"'>\" + \"\\n\"+ GetChild().ToString() + \"\\n</phraseslop>\";\n}\n", "java": "public String toString() {\n    return \"<phraseslop value='\" + getValueString() + \"'>\" + \"\\n\"+ getChild().toString() + \"\\n</phraseslop>\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581\"<", "$$ph", "$$ra", "$$ses", "$$lo", "$$p", "\u2581value", "$$='", "$$\"", "\u2581+", "\u2581Get", "$$Value", "$$String()", "\u2581+", "\u2581\"'", "$$>", "$$\"", "\u2581+", "\u2581\"", "$$\\n", "$$\"+", "\u2581Get", "$$Child", "$$()", "$$.ToString()", "\u2581+", "\u2581\"", "$$\\n", "$$<", "$$/", "$$ph", "$$ra", "$$ses", "$$lo", "$$p", "$$>", "$$\"", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581\"<", "$$ph", "$$ra", "$$ses", "$$lo", "$$p", "\u2581value", "$$='", "$$\"", "\u2581+", "\u2581get", "$$Value", "$$String()", "\u2581+", "\u2581\"'", "$$>", "$$\"", "\u2581+", "\u2581\"", "$$\\n", "$$\"+", "\u2581get", "$$Child", "$$()", "$$.toString()", "\u2581+", "\u2581\"", "$$\\n", "$$<", "$$/", "$$ph", "$$ra", "$$ses", "$$lo", "$$p", "$$>", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DirCacheEntry GetDirCacheEntry() {\n    return currentSubtree == null ? currentEntry : null;\n}\n", "java": "public DirCacheEntry getDirCacheEntry() {\n    return currentSubtree == null ? currentEntry : null;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581D", "$$ir", "$$Cache", "$$Entry", "\u2581Get", "$$Dir", "$$Cache", "$$Entry", "$$()", "\u2581{"], ["\u2581return", "\u2581current", "$$Sub", "$$t", "$$ree", "\u2581==", "\u2581null", "\u2581?", "\u2581current", "$$Entry", "\u2581:", "\u2581null", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$ir", "$$Cache", "$$Entry", "\u2581get", "$$Dir", "$$Cache", "$$Entry", "$$()", "\u2581{"], ["\u2581return", "\u2581current", "$$Sub", "$$t", "$$ree", "\u2581==", "\u2581null", "\u2581?", "\u2581current", "$$Entry", "\u2581:", "\u2581null", "$$;"], ["\u2581}"]]}, {"cs": "public virtual java.nio.IntBuffer put(int[] src, int srcOffset, int intCount) {\n    java.util.Arrays.checkOffsetAndCount(src.Length, srcOffset, intCount);\n    if (intCount > remaining()) {\n        throw new java.nio.BufferOverflowException();\n    }{\n        for (int i = srcOffset; i < srcOffset + intCount; ++i) {\n            put(src[i]);\n        }\n    }\n    return this;\n}\n", "java": "public IntBuffer put(int[] src, int srcOffset, int intCount) {\n    Arrays.checkOffsetAndCount(src.length, srcOffset, intCount);\n    if (intCount > remaining()) {\n        throw new BufferOverflowException();\n    }\n    for (int i = srcOffset; i < srcOffset + intCount; ++i) {\n        put(src[i]);\n    }\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581java.nio.", "$$Int", "$$Buffer", "\u2581put", "$$(int[]", "\u2581src", "$$,", "\u2581int", "\u2581srcOffset,", "\u2581int", "\u2581int", "$$Count)", "\u2581{"], ["\u2581java.", "$$u", "$$til", "$$.Ar", "$$ray", "$$s.", "$$check", "$$Offset", "$$And", "$$Count", "$$(src", "$$.Length", "$$,", "\u2581srcOffset,", "\u2581int", "$$Count)", "$$;"], ["\u2581if", "\u2581(int", "$$Count", "\u2581>", "\u2581remaining", "$$())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581java.nio.Buffer", "$$Over", "$$flow", "$$Exception", "$$()", "$$;"], ["\u2581}", "$${"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u2581src", "$$Offset", "$$;", "\u2581i", "\u2581<", "\u2581src", "$$Offset", "\u2581+", "\u2581int", "$$Count", "$$;", "\u2581++i)", "\u2581{"], ["\u2581put", "$$(src", "$$[i]", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Int", "$$Buffer", "\u2581put", "$$(int[]", "\u2581src", "$$,", "\u2581int", "\u2581srcOffset,", "\u2581int", "\u2581int", "$$Count)", "\u2581{"], ["\u2581Arrays.", "$$check", "$$Offset", "$$And", "$$Count", "$$(src", "$$.length,", "\u2581srcOffset,", "\u2581int", "$$Count)", "$$;"], ["\u2581if", "\u2581(int", "$$Count", "\u2581>", "\u2581remaining", "$$())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Buffer", "$$Over", "$$flow", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u2581src", "$$Offset", "$$;", "\u2581i", "\u2581<", "\u2581src", "$$Offset", "\u2581+", "\u2581int", "$$Count", "$$;", "\u2581++i)", "\u2581{"], ["\u2581put", "$$(src", "$$[i]", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void trimToSize() {\n    int s = _size;\n    if (s == array.Length) {\n        return;\n    }\n    if (s == 0) {\n        array = libcore.util.EmptyArray.OBJECT;\n    }\n    else {\n        object[] newArray = new object[s];\n        System.Array.Copy(array, 0, newArray, 0, s);\n        array = newArray;\n    }\n    modCount++;\n}\n", "java": "public void trimToSize() {\n    int s = size;\n    if (s == array.length) {\n        return;\n    }\n    if (s == 0) {\n        array = EmptyArray.OBJECT;\n    }\n    else {\n        Object[] newArray = new Object[s];\n        System.arraycopy(array, 0, newArray, 0, s);\n        array = newArray;\n    }\n    modCount++;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581t", "$$ri", "$$m", "$$To", "$$Size()", "\u2581{"], ["\u2581int", "\u2581s", "\u2581=", "\u2581_", "$$size", "$$;"], ["\u2581if", "\u2581(s", "\u2581==", "\u2581array", "$$.Length)", "\u2581{"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(s", "\u2581==", "\u25810)", "\u2581{"], ["\u2581array", "\u2581=", "\u2581libcore.", "$$util.", "$$Empty", "$$Array", "$$.", "$$OBJEC", "$$T", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581object", "$$[]", "\u2581newArray", "\u2581=", "\u2581new", "\u2581object", "$$[", "$$s", "$$]", "$$;"], ["\u2581System.Array.Copy", "$$(array,", "\u25810,", "\u2581newArray", "$$,", "\u25810,", "\u2581s)", "$$;"], ["\u2581array", "\u2581=", "\u2581newArray", "$$;"], ["\u2581}"], ["\u2581mod", "$$Count", "$$++", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581t", "$$ri", "$$m", "$$To", "$$Size()", "\u2581{"], ["\u2581int", "\u2581s", "\u2581=", "\u2581size", "$$;"], ["\u2581if", "\u2581(s", "\u2581==", "\u2581array", "$$.length)", "\u2581{"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(s", "\u2581==", "\u25810)", "\u2581{"], ["\u2581array", "\u2581=", "\u2581E", "$$mpty", "$$Array", "$$.", "$$OBJEC", "$$T", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581Object", "$$[]", "\u2581newArray", "\u2581=", "\u2581new", "\u2581Object", "$$[", "$$s", "$$]", "$$;"], ["\u2581System.arraycopy", "$$(array,", "\u25810,", "\u2581newArray", "$$,", "\u25810,", "\u2581s)", "$$;"], ["\u2581array", "\u2581=", "\u2581newArray", "$$;"], ["\u2581}"], ["\u2581mod", "$$Count", "$$++", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeLocalGatewayVirtualInterfacesResponse DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeLocalGatewayVirtualInterfacesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller.Instance;\n    return Invoke<DescribeLocalGatewayVirtualInterfacesResponse>(request, options);\n}\n", "java": "public DescribeLocalGatewayVirtualInterfacesResult describeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeLocalGatewayVirtualInterfaces(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$LocalGateway", "$$Virtual", "$$Inter", "$$fa", "$$ces", "$$Response", "\u2581Describe", "$$LocalGateway", "$$Virtual", "$$Inter", "$$fa", "$$ces", "$$(Describe", "$$LocalGateway", "$$Virtual", "$$Inter", "$$fa", "$$ces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$LocalGateway", "$$Virtual", "$$Inter", "$$fa", "$$ces", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$LocalGateway", "$$Virtual", "$$Inter", "$$fa", "$$ces", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$LocalGateway", "$$Virtual", "$$Inter", "$$fa", "$$ces", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$LocalGateway", "$$Virtual", "$$Inter", "$$fa", "$$ces", "$$Result", "\u2581describe", "$$LocalGateway", "$$Virtual", "$$Inter", "$$fa", "$$ces", "$$(Describe", "$$LocalGateway", "$$Virtual", "$$Inter", "$$fa", "$$ces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$LocalGateway", "$$Virtual", "$$Inter", "$$fa", "$$ces", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override TokenStream Create(TokenStream input) {\n    return new RussianLightStemFilter(input);\n}\n", "java": "public TokenStream create(TokenStream input) {\n    return new RussianLightStemFilter(input);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581TokenStream", "\u2581Create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581R", "$$us", "$$si", "$$an", "$$L", "$$ight", "$$Stem", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581TokenStream", "\u2581create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581R", "$$us", "$$si", "$$an", "$$L", "$$ight", "$$Stem", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public int[] ToArray(int[] a) {\n    int[] rval;\n    if (a.Length == _limit) {\n        Array.Copy(_array, 0, a, 0, _limit);\n        rval = a;\n    }\n    else {\n        rval = ToArray();\n    }\n    return rval;\n}\n", "java": "public int [] toArray(final int [] a) {\n    int[] rval;\n    if (a.length == _limit) {\n        System.arraycopy(_array, 0, a, 0, _limit);\n        rval = a;\n    }\n    else {\n        rval = toArray();\n    }\n    return rval;\n}\n", "cs_t": [["\u2581public", "\u2581int[]", "\u2581To", "$$Array", "$$(int[]", "\u2581a", "$$)", "\u2581{"], ["\u2581int[]", "\u2581rval", "$$;"], ["\u2581if", "\u2581(a", "$$.Length", "\u2581==", "\u2581_limit", "$$)", "\u2581{"], ["\u2581Array.Copy", "$$(_", "$$array", "$$,", "\u25810,", "\u2581a", "$$,", "\u25810,", "\u2581_limit", "$$)", "$$;"], ["\u2581rval", "\u2581=", "\u2581a", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581rval", "\u2581=", "\u2581To", "$$Array", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581rval", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581", "$$[]", "\u2581to", "$$Array", "$$(f", "$$inal", "\u2581int", "\u2581", "$$[]", "\u2581a", "$$)", "\u2581{"], ["\u2581int[]", "\u2581rval", "$$;"], ["\u2581if", "\u2581(a", "$$.length", "\u2581==", "\u2581_limit", "$$)", "\u2581{"], ["\u2581System.arraycopy", "$$(_", "$$array", "$$,", "\u25810,", "\u2581a", "$$,", "\u25810,", "\u2581_limit", "$$)", "$$;"], ["\u2581rval", "\u2581=", "\u2581a", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581rval", "\u2581=", "\u2581to", "$$Array", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581rval", "$$;"], ["\u2581}"]]}, {"cs": "public BasicSessionCredentials(string accessKeyId, string accessKeySecret,string sessionToken, long roleSessionDurationSeconds = 0) {\n    if (accessKeyId == null) {\n        throw new ArgumentOutOfRangeException(\"Access key ID cannot be null.\");\n    }\n    if (accessKeySecret == null) {\n        throw new ArgumentOutOfRangeException(\"Access key secret cannot be null.\");\n    }\n    this.accessKeyId = accessKeyId;\n    this.accessKeySecret = accessKeySecret;\n    this.sessionToken = sessionToken;\n    this.roleSessionDurationSeconds = roleSessionDurationSeconds;\n    sessionStartedTimeInMilliSeconds = DateTime.UtcNow.currentTimeMillis();\n}\n", "java": "public BasicSessionCredentials(String accessKeyId, String accessKeySecret, String sessionToken,long roleSessionDurationSeconds) {\n    if (accessKeyId == null) {\n        throw new IllegalArgumentException(\"Access key ID cannot be null.\");\n    }\n    if (accessKeySecret == null) {\n        throw new IllegalArgumentException(\"Access key secret cannot be null.\");\n    }\n    this.accessKeyId = accessKeyId;\n    this.accessKeySecret = accessKeySecret;\n    this.sessionToken = sessionToken;\n    this.roleSessionDurationSeconds = roleSessionDurationSeconds;\n    this.sessionStartedTimeInMilliSeconds = System.currentTimeMillis();\n}\n", "cs_t": [["\u2581public", "\u2581B", "$$asic", "$$Session", "$$Credential", "$$s(", "$$string", "\u2581ac", "$$cess", "$$Key", "$$Id,", "\u2581string", "\u2581ac", "$$cess", "$$Key", "$$Sec", "$$re", "$$t", "$$,", "$$string", "\u2581s", "$$ession", "$$Token", "$$,", "\u2581long", "\u2581", "$$ro", "$$le", "$$Session", "$$D", "$$uration", "$$Second", "$$s", "\u2581=", "\u25810)", "\u2581{"], ["\u2581if", "\u2581(", "$$ac", "$$cess", "$$Key", "$$Id", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$Ar", "$$gument", "$$OutOf", "$$Range", "$$Exception(\"", "$$Access", "\u2581key", "\u2581I", "$$D", "\u2581c", "$$annot", "\u2581be", "\u2581null", "$$.", "$$\")", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$ac", "$$cess", "$$Key", "$$Sec", "$$re", "$$t", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$Ar", "$$gument", "$$OutOf", "$$Range", "$$Exception(\"", "$$Access", "\u2581key", "\u2581se", "$$cre", "$$t", "\u2581c", "$$annot", "\u2581be", "\u2581null", "$$.", "$$\")", "$$;"], ["\u2581}"], ["\u2581this.", "$$ac", "$$cess", "$$Key", "$$Id", "\u2581=", "\u2581ac", "$$cess", "$$Key", "$$Id", "$$;"], ["\u2581this.", "$$ac", "$$cess", "$$Key", "$$Sec", "$$re", "$$t", "\u2581=", "\u2581ac", "$$cess", "$$Key", "$$Sec", "$$re", "$$t", "$$;"], ["\u2581this.", "$$s", "$$ession", "$$Token", "\u2581=", "\u2581s", "$$ession", "$$Token", "$$;"], ["\u2581this.", "$$ro", "$$le", "$$Session", "$$D", "$$uration", "$$Second", "$$s", "\u2581=", "\u2581", "$$ro", "$$le", "$$Session", "$$D", "$$uration", "$$Second", "$$s;"], ["\u2581s", "$$ession", "$$St", "$$ar", "$$ted", "$$Time", "$$In", "$$M", "$$illi", "$$Second", "$$s", "\u2581=", "\u2581Date", "$$Time", "$$.", "$$U", "$$t", "$$c", "$$N", "$$ow", "$$.c", "$$urrent", "$$Time", "$$M", "$$illi", "$$s()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581B", "$$asic", "$$Session", "$$Credential", "$$s(", "$$String", "\u2581ac", "$$cess", "$$Key", "$$Id,", "\u2581String", "\u2581ac", "$$cess", "$$Key", "$$Sec", "$$re", "$$t", "$$,", "\u2581String", "\u2581s", "$$ession", "$$Token", "$$,", "$$long", "\u2581", "$$ro", "$$le", "$$Session", "$$D", "$$uration", "$$Second", "$$s)", "\u2581{"], ["\u2581if", "\u2581(", "$$ac", "$$cess", "$$Key", "$$Id", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$Access", "\u2581key", "\u2581I", "$$D", "\u2581c", "$$annot", "\u2581be", "\u2581null", "$$.", "$$\")", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$ac", "$$cess", "$$Key", "$$Sec", "$$re", "$$t", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$Access", "\u2581key", "\u2581se", "$$cre", "$$t", "\u2581c", "$$annot", "\u2581be", "\u2581null", "$$.", "$$\")", "$$;"], ["\u2581}"], ["\u2581this.", "$$ac", "$$cess", "$$Key", "$$Id", "\u2581=", "\u2581ac", "$$cess", "$$Key", "$$Id", "$$;"], ["\u2581this.", "$$ac", "$$cess", "$$Key", "$$Sec", "$$re", "$$t", "\u2581=", "\u2581ac", "$$cess", "$$Key", "$$Sec", "$$re", "$$t", "$$;"], ["\u2581this.", "$$s", "$$ession", "$$Token", "\u2581=", "\u2581s", "$$ession", "$$Token", "$$;"], ["\u2581this.", "$$ro", "$$le", "$$Session", "$$D", "$$uration", "$$Second", "$$s", "\u2581=", "\u2581", "$$ro", "$$le", "$$Session", "$$D", "$$uration", "$$Second", "$$s;"], ["\u2581this.", "$$s", "$$ession", "$$St", "$$ar", "$$ted", "$$Time", "$$In", "$$M", "$$illi", "$$Second", "$$s", "\u2581=", "\u2581System", "$$.c", "$$urrent", "$$Time", "$$M", "$$illi", "$$s()", "$$;"], ["\u2581}"]]}, {"cs": "public sealed override java.nio.ShortBuffer get(short[] dst, int dstOffset, int shortCount) {\n    if (shortCount > remaining()) {\n        throw new java.nio.BufferUnderflowException();\n    }\n    System.Array.Copy(backingArray, offset + _position, dst, dstOffset, shortCount);\n    _position += shortCount;\n    return this;\n}\n", "java": "public final ShortBuffer get(short[] dst, int dstOffset, int shortCount) {\n    if (shortCount > remaining()) {\n        throw new BufferUnderflowException();\n    }\n    System.arraycopy(backingArray, offset + position, dst, dstOffset, shortCount);\n    position += shortCount;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581sealed", "\u2581override", "\u2581java.nio.", "$$Short", "$$Buffer", "\u2581get", "$$(short", "$$[]", "\u2581dst", "$$,", "\u2581int", "\u2581dstOffset,", "\u2581int", "\u2581short", "$$Count)", "\u2581{"], ["\u2581if", "\u2581(", "$$short", "$$Count", "\u2581>", "\u2581remaining", "$$())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581java.nio.Buffer", "$$Under", "$$flow", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581System.Array.Copy", "$$(b", "$$ackingArray,", "\u2581offset", "\u2581+", "\u2581_position", "$$,", "\u2581dst", "$$,", "\u2581dstOffset,", "\u2581short", "$$Count)", "$$;"], ["\u2581_position", "\u2581+=", "\u2581short", "$$Count", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581Sh", "$$ort", "$$Buffer", "\u2581get", "$$(short", "$$[]", "\u2581dst", "$$,", "\u2581int", "\u2581dstOffset,", "\u2581int", "\u2581short", "$$Count)", "\u2581{"], ["\u2581if", "\u2581(", "$$short", "$$Count", "\u2581>", "\u2581remaining", "$$())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Buffer", "$$Under", "$$flow", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581System.arraycopy", "$$(b", "$$ackingArray,", "\u2581offset", "\u2581+", "\u2581position", "$$,", "\u2581dst", "$$,", "\u2581dstOffset,", "\u2581short", "$$Count)", "$$;"], ["\u2581position", "\u2581+=", "\u2581short", "$$Count", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ActivateEventSourceResponse ActivateEventSource(ActivateEventSourceRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ActivateEventSourceRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ActivateEventSourceResponseUnmarshaller.Instance;\n    return Invoke<ActivateEventSourceResponse>(request, options);\n}\n", "java": "public ActivateEventSourceResult activateEventSource(ActivateEventSourceRequest request) {\n    request = beforeClientExecution(request);\n    return executeActivateEventSource(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Ac", "$$ti", "$$vate", "$$Event", "$$Source", "$$Response", "\u2581Ac", "$$ti", "$$vate", "$$Event", "$$Source", "$$(", "$$Acti", "$$vate", "$$Event", "$$Source", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Ac", "$$ti", "$$vate", "$$Event", "$$Source", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Ac", "$$ti", "$$vate", "$$Event", "$$Source", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Acti", "$$vate", "$$Event", "$$Source", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Ac", "$$ti", "$$vate", "$$Event", "$$Source", "$$Result", "\u2581ac", "$$ti", "$$vate", "$$Event", "$$Source", "$$(", "$$Acti", "$$vate", "$$Event", "$$Source", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Acti", "$$vate", "$$Event", "$$Source", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeReceiptRuleSetResponse DescribeReceiptRuleSet(DescribeReceiptRuleSetRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeReceiptRuleSetRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeReceiptRuleSetResponseUnmarshaller.Instance;\n    return Invoke<DescribeReceiptRuleSetResponse>(request, options);\n}\n", "java": "public DescribeReceiptRuleSetResult describeReceiptRuleSet(DescribeReceiptRuleSetRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeReceiptRuleSet(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$ReceiptRuleSet", "$$Response", "\u2581Describe", "$$ReceiptRuleSet", "$$(Describe", "$$ReceiptRuleSet", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$ReceiptRuleSet", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$ReceiptRuleSet", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$ReceiptRuleSet", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$ReceiptRuleSet", "$$Result", "\u2581describe", "$$ReceiptRuleSet", "$$(Describe", "$$ReceiptRuleSet", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$ReceiptRuleSet", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public Filter(string name) {\n    _name = name;\n}\n", "java": "public Filter(String name) {\n    setName(name);\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Filter", "$$(string", "\u2581name)", "\u2581{"], ["\u2581_", "$$name", "\u2581=", "\u2581name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Filter", "$$(String", "\u2581name)", "\u2581{"], ["\u2581set", "$$Name", "$$(name", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.DoubleBuffer put(double c) {\n    throw new java.nio.ReadOnlyBufferException();\n}\n", "java": "public DoubleBuffer put(double c) {\n    throw new ReadOnlyBufferException();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$Double", "$$Buffer", "\u2581put", "$$(double", "\u2581c)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581java.nio.Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Double", "$$Buffer", "\u2581put", "$$(double", "\u2581c)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateTrafficPolicyInstanceResponse CreateTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateTrafficPolicyInstanceRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateTrafficPolicyInstanceResponseUnmarshaller.Instance;\n    return Invoke<CreateTrafficPolicyInstanceResponse>(request, options);\n}\n", "java": "public CreateTrafficPolicyInstanceResult createTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateTrafficPolicyInstance(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$TrafficPolicy", "$$Instance", "$$Response", "\u2581Create", "$$TrafficPolicy", "$$Instance", "$$(Create", "$$TrafficPolicy", "$$InstanceRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$TrafficPolicy", "$$Instance", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$TrafficPolicy", "$$Instance", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$TrafficPolicy", "$$Instance", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$TrafficPolicy", "$$Instance", "$$Result", "\u2581create", "$$TrafficPolicy", "$$Instance", "$$(Create", "$$TrafficPolicy", "$$InstanceRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$TrafficPolicy", "$$Instance", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public JapaneseIterationMarkCharFilter(TextReader input, bool normalizeKanji, bool normalizeKana): base(input) {\n    this.normalizeKanji = normalizeKanji;\n    this.normalizeKana = normalizeKana;\n    buffer.Reset(input);\n}\n", "java": "public JapaneseIterationMarkCharFilter(Reader input, boolean normalizeKanji, boolean normalizeKana) {\n    super(input);\n    this.normalizeKanji = normalizeKanji;\n    this.normalizeKana = normalizeKana;\n    buffer.reset(input);\n}\n", "cs_t": [["\u2581public", "\u2581J", "$$ap", "$$an", "$$es", "$$e", "$$I", "$$ter", "$$ation", "$$Mark", "$$Char", "$$Filter", "$$(", "$$Text", "$$Reader", "\u2581input,", "\u2581bool", "\u2581normal", "$$ize", "$$K", "$$an", "$$j", "$$i", "$$,", "\u2581bool", "\u2581normal", "$$ize", "$$K", "$$an", "$$a", "$$):", "\u2581base", "$$(input", "$$)", "\u2581{"], ["\u2581this.", "$$n", "$$ormal", "$$ize", "$$K", "$$an", "$$j", "$$i", "\u2581=", "\u2581normal", "$$ize", "$$K", "$$an", "$$j", "$$i", "$$;"], ["\u2581this.", "$$n", "$$ormal", "$$ize", "$$K", "$$an", "$$a", "\u2581=", "\u2581normal", "$$ize", "$$K", "$$an", "$$a", "$$;"], ["\u2581buffer", "$$.", "$$Reset", "$$(input", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581J", "$$ap", "$$an", "$$es", "$$e", "$$I", "$$ter", "$$ation", "$$Mark", "$$Char", "$$Filter", "$$(", "$$Reader", "\u2581input,", "\u2581boolean", "\u2581normal", "$$ize", "$$K", "$$an", "$$j", "$$i", "$$,", "\u2581boolean", "\u2581normal", "$$ize", "$$K", "$$an", "$$a", "$$)", "\u2581{"], ["\u2581super(", "$$input", "$$)", "$$;"], ["\u2581this.", "$$n", "$$ormal", "$$ize", "$$K", "$$an", "$$j", "$$i", "\u2581=", "\u2581normal", "$$ize", "$$K", "$$an", "$$j", "$$i", "$$;"], ["\u2581this.", "$$n", "$$ormal", "$$ize", "$$K", "$$an", "$$a", "\u2581=", "\u2581normal", "$$ize", "$$K", "$$an", "$$a", "$$;"], ["\u2581buffer", "$$.", "$$reset", "$$(input", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void WriteLong(long v) {\n    WriteInt((int)(v >> 0));\n    WriteInt((int)(v >> 32));\n}\n", "java": "public void writeLong(long v) {\n    writeInt((int)(v >>  0));\n    writeInt((int)(v >> 32));\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Write", "$$Long", "$$(long", "\u2581v)", "\u2581{"], ["\u2581Write", "$$Int(", "$$(int)", "$$(", "$$v", "\u2581>>", "\u25810", "$$))", "$$;"], ["\u2581Write", "$$Int(", "$$(int)", "$$(", "$$v", "\u2581>>", "\u2581", "$$32", "$$))", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581write", "$$Long", "$$(long", "\u2581v)", "\u2581{"], ["\u2581write", "$$Int(", "$$(int)", "$$(", "$$v", "\u2581>>", "\u2581", "\u25810", "$$))", "$$;"], ["\u2581write", "$$Int(", "$$(int)", "$$(", "$$v", "\u2581>>", "\u2581", "$$32", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public FileResolver() {\n    exports = new ConcurrentHashMap<string, Repository>();\n    exportBase = new CopyOnWriteArrayList<FilePath>();\n}\n", "java": "public FileResolver() {\n    exports = new ConcurrentHashMap<>();\n    exportBase = new CopyOnWriteArrayList<>();\n}\n", "cs_t": [["\u2581public", "\u2581File", "$$Resolver", "$$()", "\u2581{"], ["\u2581ex", "$$port", "$$s", "\u2581=", "\u2581new", "\u2581Con", "$$current", "$$Hash", "$$Map", "$$<string,", "\u2581Re", "$$pository", "$$>", "$$()", "$$;"], ["\u2581ex", "$$port", "$$Base", "\u2581=", "\u2581new", "\u2581Copy", "$$On", "$$Write", "$$Array", "$$List<", "$$File", "$$Path", "$$>", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581File", "$$Resolver", "$$()", "\u2581{"], ["\u2581ex", "$$port", "$$s", "\u2581=", "\u2581new", "\u2581Con", "$$current", "$$Hash", "$$Map<", "$$>", "$$()", "$$;"], ["\u2581ex", "$$port", "$$Base", "\u2581=", "\u2581new", "\u2581Copy", "$$On", "$$Write", "$$Array", "$$List<", "$$>", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public ValueEval GetRef3DEval(Ref3DPtg rptg) {\n    SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(rptg.ExternSheetIndex);\n    return new LazyRefEval(rptg.Row, rptg.Column, sre);\n}\n", "java": "public ValueEval getRef3DEval(Ref3DPxg rptg) {\n    SheetRangeEvaluator sre = createExternSheetRefEvaluator(rptg.getSheetName(), rptg.getLastSheetName(), rptg.getExternalWorkbookNumber());\n    return new LazyRefEval(rptg.getRow(), rptg.getColumn(), sre);\n}\n", "cs_t": [["\u2581public", "\u2581ValueEval", "\u2581Get", "$$Ref", "$$3D", "$$Eval", "$$(", "$$Ref", "$$3D", "$$Ptg", "\u2581r", "$$ptg", "$$)", "\u2581{"], ["\u2581Sheet", "$$Range", "$$Evaluator", "\u2581s", "$$re", "\u2581=", "\u2581Create", "$$ExternSheet", "$$Ref", "$$Evaluator", "$$(r", "$$pt", "$$g.", "$$ExternSheet", "$$Index)", "$$;"], ["\u2581return", "\u2581new", "\u2581L", "$$a", "$$z", "$$y", "$$Ref", "$$Eval", "$$(r", "$$pt", "$$g.", "$$Row,", "\u2581r", "$$pt", "$$g.", "$$Column", "$$,", "\u2581s", "$$re", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ValueEval", "\u2581get", "$$Ref", "$$3D", "$$Eval", "$$(", "$$Ref", "$$3D", "$$P", "$$x", "$$g", "\u2581r", "$$ptg", "$$)", "\u2581{"], ["\u2581Sheet", "$$Range", "$$Evaluator", "\u2581s", "$$re", "\u2581=", "\u2581create", "$$ExternSheet", "$$Ref", "$$Evaluator", "$$(r", "$$ptg", "$$.get", "$$SheetName", "$$(),", "\u2581r", "$$ptg", "$$.get", "$$Last", "$$SheetName", "$$(),", "\u2581r", "$$ptg", "$$.get", "$$External", "$$Workbook", "$$Number", "$$())", "$$;"], ["\u2581return", "\u2581new", "\u2581L", "$$a", "$$z", "$$y", "$$Ref", "$$Eval", "$$(r", "$$ptg", "$$.get", "$$Row", "$$(),", "\u2581r", "$$ptg", "$$.get", "$$Column", "$$(),", "\u2581s", "$$re", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteDatasetResponse DeleteDataset(DeleteDatasetRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteDatasetRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteDatasetResponseUnmarshaller.Instance;\n    return Invoke<DeleteDatasetResponse>(request, options);\n}\n", "java": "public DeleteDatasetResult deleteDataset(DeleteDatasetRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteDataset(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Dataset", "$$Response", "\u2581Delete", "$$Dataset", "$$(Delete", "$$Dataset", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Dataset", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Dataset", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Dataset", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Dataset", "$$Result", "\u2581delete", "$$Dataset", "$$(Delete", "$$Dataset", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Dataset", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StartRelationalDatabaseResponse StartRelationalDatabase(StartRelationalDatabaseRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = StartRelationalDatabaseRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = StartRelationalDatabaseResponseUnmarshaller.Instance;\n    return Invoke<StartRelationalDatabaseResponse>(request, options);\n}\n", "java": "public StartRelationalDatabaseResult startRelationalDatabase(StartRelationalDatabaseRequest request) {\n    request = beforeClientExecution(request);\n    return executeStartRelationalDatabase(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Start", "$$RelationalDatabase", "$$Response", "\u2581Start", "$$RelationalDatabase", "$$(Start", "$$RelationalDatabase", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Start", "$$RelationalDatabase", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Start", "$$RelationalDatabase", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Start", "$$RelationalDatabase", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Start", "$$RelationalDatabase", "$$Result", "\u2581start", "$$RelationalDatabase", "$$(Start", "$$RelationalDatabase", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Start", "$$RelationalDatabase", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeReservedCacheNodesOfferingsResponse DescribeReservedCacheNodesOfferings() {\n    return DescribeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());\n}\n", "java": "public DescribeReservedCacheNodesOfferingsResult describeReservedCacheNodesOfferings() {\n    return describeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581DescribeReserved", "$$Cache", "$$Nodes", "$$Offering", "$$sResponse", "\u2581DescribeReserved", "$$Cache", "$$Nodes", "$$Offering", "$$s()", "\u2581{"], ["\u2581return", "\u2581DescribeReserved", "$$Cache", "$$Nodes", "$$Offering", "$$s(new", "\u2581DescribeReserved", "$$Cache", "$$Nodes", "$$Offering", "$$sRequest", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581DescribeReserved", "$$Cache", "$$Nodes", "$$Offering", "$$sResult", "\u2581describe", "$$Reserved", "$$Cache", "$$Nodes", "$$Offering", "$$s()", "\u2581{"], ["\u2581return", "\u2581describe", "$$Reserved", "$$Cache", "$$Nodes", "$$Offering", "$$s(new", "\u2581DescribeReserved", "$$Cache", "$$Nodes", "$$Offering", "$$sRequest", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "static public double PMT(double r, int nper, double pv, double fv, int type) {\n    double pmt = -r * (pv * Math.Pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.Pow(1 + r, nper) - 1));\n    return pmt;\n}\n", "java": "static public double pmt(double r, int nper, double pv, double fv, int type) {\n    return -r * (pv * Math.pow(1 + r, nper) + fv) / ((1 + r*type) * (Math.pow(1 + r, nper) - 1));\n}\n", "cs_t": [["\u2581static", "\u2581public", "\u2581double", "\u2581P", "$$M", "$$T", "$$(double", "\u2581r", "$$,", "\u2581int", "\u2581n", "$$per", "$$,", "\u2581double", "\u2581p", "$$v", "$$,", "\u2581double", "\u2581f", "$$v", "$$,", "\u2581int", "\u2581type", "$$)", "\u2581{"], ["\u2581double", "\u2581p", "$$mt", "\u2581=", "\u2581-", "$$r", "\u2581*", "\u2581(p", "$$v", "\u2581*", "\u2581Math.", "$$Po", "$$w", "$$(", "$$1", "\u2581+", "\u2581r", "$$,", "\u2581n", "$$per", "$$)", "\u2581+", "\u2581f", "$$v", "$$)", "\u2581/", "\u2581((", "$$1", "\u2581+", "\u2581r", "\u2581*", "\u2581type", "$$)", "\u2581*", "\u2581(", "$$Math.", "$$Po", "$$w", "$$(", "$$1", "\u2581+", "\u2581r", "$$,", "\u2581n", "$$per", "$$)", "\u2581-", "\u25811", "$$))", "$$;"], ["\u2581return", "\u2581p", "$$mt", "$$;"], ["\u2581}"]], "java_t": [["\u2581static", "\u2581public", "\u2581double", "\u2581p", "$$mt", "$$(double", "\u2581r", "$$,", "\u2581int", "\u2581n", "$$per", "$$,", "\u2581double", "\u2581p", "$$v", "$$,", "\u2581double", "\u2581f", "$$v", "$$,", "\u2581int", "\u2581type", "$$)", "\u2581{"], ["\u2581return", "\u2581-", "$$r", "\u2581*", "\u2581(p", "$$v", "\u2581*", "\u2581Math.", "$$po", "$$w", "$$(", "$$1", "\u2581+", "\u2581r", "$$,", "\u2581n", "$$per", "$$)", "\u2581+", "\u2581f", "$$v", "$$)", "\u2581/", "\u2581((", "$$1", "\u2581+", "\u2581r", "$$*", "$$type", "$$)", "\u2581*", "\u2581(", "$$Math.", "$$po", "$$w", "$$(", "$$1", "\u2581+", "\u2581r", "$$,", "\u2581n", "$$per", "$$)", "\u2581-", "\u25811", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeDocumentVersionsResponse DescribeDocumentVersions(DescribeDocumentVersionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeDocumentVersionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeDocumentVersionsResponseUnmarshaller.Instance;\n    return Invoke<DescribeDocumentVersionsResponse>(request, options);\n}\n", "java": "public DescribeDocumentVersionsResult describeDocumentVersions(DescribeDocumentVersionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeDocumentVersions(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Document", "$$Version", "$$sResponse", "\u2581Describe", "$$Document", "$$Version", "$$s(Describe", "$$Document", "$$Version", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Document", "$$Version", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Document", "$$Version", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Document", "$$Version", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Document", "$$Version", "$$sResult", "\u2581describe", "$$Document", "$$Version", "$$s(Describe", "$$Document", "$$Version", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Document", "$$Version", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListPublishingDestinationsResponse ListPublishingDestinations(ListPublishingDestinationsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListPublishingDestinationsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListPublishingDestinationsResponseUnmarshaller.Instance;\n    return Invoke<ListPublishingDestinationsResponse>(request, options);\n}\n", "java": "public ListPublishingDestinationsResult listPublishingDestinations(ListPublishingDestinationsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListPublishingDestinations(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Publish", "$$ing", "$$Destination", "$$sResponse", "\u2581List", "$$Publish", "$$ing", "$$Destination", "$$s(List", "$$Publish", "$$ing", "$$Destination", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Publish", "$$ing", "$$Destination", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Publish", "$$ing", "$$Destination", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Publish", "$$ing", "$$Destination", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Publish", "$$ing", "$$Destination", "$$sResult", "\u2581list", "$$Publish", "$$ing", "$$Destination", "$$s(List", "$$Publish", "$$ing", "$$Destination", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Publish", "$$ing", "$$Destination", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public DeleteAccountAliasRequest(string accountAlias) {\n    _accountAlias = accountAlias;\n}\n", "java": "public DeleteAccountAliasRequest(String accountAlias) {\n    setAccountAlias(accountAlias);\n}\n", "cs_t": [["\u2581public", "\u2581Delete", "$$Account", "$$Alias", "$$Request(string", "\u2581ac", "$$count", "$$Alias", "$$)", "\u2581{"], ["\u2581_", "$$ac", "$$count", "$$Alias", "\u2581=", "\u2581ac", "$$count", "$$Alias", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Account", "$$Alias", "$$Request(String", "\u2581ac", "$$count", "$$Alias", "$$)", "\u2581{"], ["\u2581set", "$$Account", "$$Ali", "$$a", "$$s(", "$$ac", "$$count", "$$Alias", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static float[] Grow(float[] array) {\n    return Grow(array, 1 + array.Length);\n}\n", "java": "public static long[] grow(long[] array) {\n    return grow(array, 1 + array.length);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581float", "$$[]", "\u2581Grow", "$$(float", "$$[]", "\u2581array", "$$)", "\u2581{"], ["\u2581return", "\u2581Grow", "$$(array,", "\u25811", "\u2581+", "\u2581array", "$$.Length)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581long[]", "\u2581grow", "$$(long[]", "\u2581array", "$$)", "\u2581{"], ["\u2581return", "\u2581grow", "$$(array,", "\u25811", "\u2581+", "\u2581array", "$$.length)", "$$;"], ["\u2581}"]]}, {"cs": "public override string OutputToString(object output) {\n    if (!(output is IList)) {\n        return outputs.OutputToString((T)output);\n    }\n    else {\n        IList outputList = (IList)output;\n        StringBuilder b = new StringBuilder();\n        b.Append('[');\n        for (int i = 0; i < outputList.Count; i++) {\n            if (i > 0) {\n                b.Append(\", \");\n            }\n            b.Append(outputs.OutputToString((T)outputList[i]));\n        }\n        b.Append(']');\n        return b.ToString();\n    }\n}\n", "java": "public String outputToString(Object output) {\n    if (!(output instanceof List)) {\n        return outputs.outputToString((T) output);\n    }\n    else {\n        List<T> outputList = (List<T>) output;\n        StringBuilder b = new StringBuilder();\n        b.append('[');\n        for(int i=0; i<outputList.size(); i++) {\n            if (i > 0) {\n                b.append(\", \");\n            }\n            b.append(outputs.outputToString(outputList.get(i)));\n        }\n        b.append(']');\n        return b.toString();\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581", "$$Output", "$$To", "$$String", "$$(object", "\u2581output", "$$)", "\u2581{"], ["\u2581if", "\u2581(!", "$$(out", "$$put", "\u2581is", "\u2581I", "$$List", "$$))", "\u2581{"], ["\u2581return", "\u2581output", "$$s.", "$$Output", "$$To", "$$String(", "$$(", "$$T", "$$)", "$$output", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581I", "$$List", "\u2581output", "$$List", "\u2581=", "\u2581(I", "$$List", "$$)", "$$output", "$$;"], ["\u2581StringBuilder", "\u2581b", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581b", "$$.Append('", "$$[", "$$')", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581output", "$$List", "$$.Count", "$$;", "\u2581i++)", "\u2581{"], ["\u2581if", "\u2581(i", "\u2581>", "\u25810)", "\u2581{"], ["\u2581b", "$$.Append(\"", "$$,", "\u2581\")", "$$;"], ["\u2581}"], ["\u2581b", "$$.Append(", "$$output", "$$s.", "$$Output", "$$To", "$$String(", "$$(", "$$T", "$$)", "$$output", "$$List", "$$[i]", "$$))", "$$;"], ["\u2581}"], ["\u2581b", "$$.Append('", "$$]", "$$')", "$$;"], ["\u2581return", "\u2581b", "$$.ToString()", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581output", "$$To", "$$String(", "$$Object", "\u2581output", "$$)", "\u2581{"], ["\u2581if", "\u2581(!", "$$(out", "$$put", "\u2581instanceof", "\u2581List", "$$))", "\u2581{"], ["\u2581return", "\u2581output", "$$s.", "$$output", "$$To", "$$String(", "$$(", "$$T", "$$)", "\u2581output", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581List<", "$$T>", "\u2581output", "$$List", "\u2581=", "\u2581(", "$$List<", "$$T>", "$$)", "\u2581output", "$$;"], ["\u2581StringBuilder", "\u2581b", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581b", "$$.append('", "$$[", "$$')", "$$;"], ["\u2581for", "$$(int", "\u2581i", "$$=0", "$$;", "\u2581i", "$$<", "$$output", "$$List", "$$.size()", "$$;", "\u2581i++)", "\u2581{"], ["\u2581if", "\u2581(i", "\u2581>", "\u25810)", "\u2581{"], ["\u2581b", "$$.append(\"", "$$,", "\u2581\")", "$$;"], ["\u2581}"], ["\u2581b", "$$.append(", "$$output", "$$s.", "$$output", "$$To", "$$String", "$$(out", "$$put", "$$List", "$$.get", "$$(i", "$$))", "$$)", "$$;"], ["\u2581}"], ["\u2581b", "$$.append('", "$$]", "$$')", "$$;"], ["\u2581return", "\u2581b", "$$.toString()", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public void NotifyDeleteCell(ICell cell) {\n    _bookEvaluator.NotifyDeleteCell(new HSSFEvaluationCell(cell));\n}\n", "java": "public void notifyDeleteCell(Cell cell) {\n    _bookEvaluator.notifyDeleteCell(new HSSFEvaluationCell((HSSFCell)cell));\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581N", "$$o", "$$ti", "$$fy", "$$Delete", "$$Cell", "$$(I", "$$Cell", "\u2581cell", "$$)", "\u2581{"], ["\u2581_", "$$book", "$$Evaluator", "$$.", "$$Noti", "$$fy", "$$Delete", "$$Cell", "$$(new", "\u2581HSSF", "$$Evaluation", "$$Cell(", "$$cell", "$$))", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581n", "$$o", "$$ti", "$$fy", "$$Delete", "$$Cell(", "$$Cell", "\u2581cell", "$$)", "\u2581{"], ["\u2581_", "$$book", "$$Evaluator", "$$.", "$$n", "$$o", "$$ti", "$$fy", "$$Delete", "$$Cell", "$$(new", "\u2581HSSF", "$$Evaluation", "$$Cell", "$$((", "$$HSSF", "$$Cell", "$$)", "$$cell", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public java.lang.StringBuilder replace(int start, int end, string str) {\n    replace0(start, end, str);\n    return this;\n}\n", "java": "public StringBuilder replace(int start, int end, String str) {\n    replace0(start, end, str);\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581java.lang.String", "$$Builder", "\u2581re", "$$place", "$$(int", "\u2581start,", "\u2581int", "\u2581end,", "\u2581string", "\u2581str", "$$)", "\u2581{"], ["\u2581re", "$$place", "$$0", "$$(start", "$$,", "\u2581end,", "\u2581str", "$$)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581StringBuilder", "\u2581re", "$$place", "$$(int", "\u2581start,", "\u2581int", "\u2581end,", "\u2581String", "\u2581str", "$$)", "\u2581{"], ["\u2581re", "$$place", "$$0", "$$(start", "$$,", "\u2581end,", "\u2581str", "$$)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual SetIdentityPoolConfigurationResponse SetIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = SetIdentityPoolConfigurationRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = SetIdentityPoolConfigurationResponseUnmarshaller.Instance;\n    return Invoke<SetIdentityPoolConfigurationResponse>(request, options);\n}\n", "java": "public SetIdentityPoolConfigurationResult setIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request) {\n    request = beforeClientExecution(request);\n    return executeSetIdentityPoolConfiguration(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Set", "$$IdentityPool", "$$Configuration", "$$Response", "\u2581Set", "$$IdentityPool", "$$Configuration", "$$(", "$$Set", "$$IdentityPool", "$$ConfigurationRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Set", "$$IdentityPool", "$$Configuration", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Set", "$$IdentityPool", "$$Configuration", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Set", "$$IdentityPool", "$$Configuration", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Set", "$$IdentityPool", "$$Configuration", "$$Result", "\u2581set", "$$IdentityPool", "$$Configuration", "$$(", "$$Set", "$$IdentityPool", "$$ConfigurationRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Set", "$$IdentityPool", "$$Configuration", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static double kthSmallest(double[] v, int k) {\n    double r = double.NaN;\n    k--;\n    if (v != null && v.Length > k && k >= 0) {\n        Array.Sort(v);\n        r = v[k];\n    }\n    return r;\n}\n", "java": "public static double kthSmallest(double[] v, int k) {\n    double r = Double.NaN;\n    int index = k-1;\n    if (v!=null && v.length > index && index >= 0) {\n        Arrays.sort(v);\n        r = v[index];\n    }\n    return r;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581k", "$$th", "$$Sm", "$$all", "$$est", "$$(double", "$$[]", "\u2581v", "$$,", "\u2581int", "\u2581k", "$$)", "\u2581{"], ["\u2581double", "\u2581r", "\u2581=", "\u2581double", "$$.N", "$$a", "$$N", "$$;"], ["\u2581k", "$$--", "$$;"], ["\u2581if", "\u2581(v", "\u2581!=", "\u2581null", "\u2581&&", "\u2581v", "$$.Length", "\u2581>", "\u2581k", "\u2581&&", "\u2581k", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581Array", "$$.S", "$$ort", "$$(", "$$v", "$$)", "$$;"], ["\u2581r", "\u2581=", "\u2581v", "$$[", "$$k", "$$]", "$$;"], ["\u2581}"], ["\u2581return", "\u2581r", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581k", "$$th", "$$Sm", "$$all", "$$est", "$$(double", "$$[]", "\u2581v", "$$,", "\u2581int", "\u2581k", "$$)", "\u2581{"], ["\u2581double", "\u2581r", "\u2581=", "\u2581Double", "$$.N", "$$a", "$$N", "$$;"], ["\u2581int", "\u2581index", "\u2581=", "\u2581k", "$$-1", "$$;"], ["\u2581if", "\u2581(v", "$$!", "$$=", "$$null", "\u2581&&", "\u2581v", "$$.length", "\u2581>", "\u2581index", "\u2581&&", "\u2581index", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581Arrays.", "$$s", "$$ort", "$$(", "$$v", "$$)", "$$;"], ["\u2581r", "\u2581=", "\u2581v", "$$[index", "$$]", "$$;"], ["\u2581}"], ["\u2581return", "\u2581r", "$$;"], ["\u2581}"]]}, {"cs": "public override void Set(int index, long value) {\n    int o = (int)((uint)index >> 5);\n    int b = index & 31;\n    int shift = b << 1;\n    blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);\n}\n", "java": "public void set(int index, long value) {\n    final int o = index >>> 5;\n    final int b = index & 31;\n    final int shift = b << 1;\n    blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Set", "$$(int", "\u2581index,", "\u2581long", "\u2581value)", "\u2581{"], ["\u2581int", "\u2581o", "\u2581=", "\u2581(int", "$$)((", "$$uint)", "$$index", "\u2581>>", "\u25815", "$$)", "$$;"], ["\u2581int", "\u2581b", "\u2581=", "\u2581index", "\u2581&", "\u25813", "$$1", "$$;"], ["\u2581int", "\u2581shift", "\u2581=", "\u2581b", "\u2581<<", "\u25811", "$$;"], ["\u2581blocks[", "$$o]", "\u2581=", "\u2581(block", "$$s[", "$$o]", "\u2581&", "\u2581", "$$~", "$$(", "$$3", "$$L", "\u2581<<", "\u2581shift", "$$))", "\u2581|", "\u2581(value", "\u2581<<", "\u2581shift", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$(int", "\u2581index,", "\u2581long", "\u2581value)", "\u2581{"], ["\u2581final", "\u2581int", "\u2581o", "\u2581=", "\u2581index", "\u2581>>>", "\u25815", "$$;"], ["\u2581final", "\u2581int", "\u2581b", "\u2581=", "\u2581index", "\u2581&", "\u25813", "$$1", "$$;"], ["\u2581final", "\u2581int", "\u2581shift", "\u2581=", "\u2581b", "\u2581<<", "\u25811", "$$;"], ["\u2581blocks[", "$$o]", "\u2581=", "\u2581(block", "$$s[", "$$o]", "\u2581&", "\u2581", "$$~", "$$(", "$$3", "$$L", "\u2581<<", "\u2581shift", "$$))", "\u2581|", "\u2581(value", "\u2581<<", "\u2581shift", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    var children = GetChildren();\n    if (children == null || children.Count == 0)return \"<boolean operation='and'/>\";\n    StringBuilder sb = new StringBuilder();\n    sb.Append(\"<boolean operation='and'>\");\n    foreach (IQueryNode child in children) {\n        sb.Append(\"\\n\");\n        sb.Append(child.ToString());\n    }\n    sb.Append(\"\\n</boolean>\");\n    return sb.ToString();\n}\n", "java": "public String toString() {\n    if (getChildren() == null || getChildren().size() == 0)return \"<boolean operation='and'/>\";\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"<boolean operation='and'>\");\n    for (QueryNode child : getChildren()) {\n        sb.append(\"\\n\");\n        sb.append(child.toString());\n    }\n    sb.append(\"\\n</boolean>\");\n    return sb.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581var", "\u2581child", "$$ren", "\u2581=", "\u2581Get", "$$Children", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$child", "$$ren", "\u2581==", "\u2581null", "\u2581||", "\u2581child", "$$ren", "$$.Count", "\u2581==", "\u25810)return", "\u2581\"<", "$$boolean", "\u2581o", "$$per", "$$ation", "$$='", "$$and", "$$'", "$$/", "$$>", "$$\"", "$$;"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581sb.Append(\"", "$$<", "$$boolean", "\u2581o", "$$per", "$$ation", "$$='", "$$and", "$$'", "$$>", "$$\")", "$$;"], ["\u2581foreach", "\u2581(I", "$$QueryNode", "\u2581child", "\u2581in", "\u2581child", "$$ren", "$$)", "\u2581{"], ["\u2581sb.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581sb.Append(", "$$child", "$$.ToString()", "$$)", "$$;"], ["\u2581}"], ["\u2581sb.Append(\"", "$$\\n", "$$<", "$$/", "$$boolean", "$$>", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581if", "\u2581(get", "$$Children", "$$()", "\u2581==", "\u2581null", "\u2581||", "\u2581get", "$$Children", "$$().", "$$size()", "\u2581==", "\u25810)return", "\u2581\"<", "$$boolean", "\u2581o", "$$per", "$$ation", "$$='", "$$and", "$$'", "$$/", "$$>", "$$\"", "$$;"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581sb.append(\"", "$$<", "$$boolean", "\u2581o", "$$per", "$$ation", "$$='", "$$and", "$$'", "$$>", "$$\")", "$$;"], ["\u2581for", "\u2581(", "$$QueryNode", "\u2581child", "\u2581:", "\u2581get", "$$Children", "$$())", "\u2581{"], ["\u2581sb.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581sb.append(", "$$child", "$$.toString()", "$$)", "$$;"], ["\u2581}"], ["\u2581sb.append(\"", "$$\\n", "$$<", "$$/", "$$boolean", "$$>", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public int SumTokenSizes(int fromIx, int toIx) {\n    int result = 0;\n    for (int i = fromIx; i < toIx; i++) {\n        result += _ptgs[i].Size;\n    }\n    return result;\n}\n", "java": "public int sumTokenSizes(int fromIx, int toIx) {\n    int result = 0;\n    for (int i=fromIx; i<toIx; i++) {\n        result += _ptgs[i].getSize();\n    }\n    return result;\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581S", "$$um", "$$Token", "$$S", "$$iz", "$$es", "$$(int", "\u2581from", "$$Ix,", "\u2581int", "\u2581to", "$$Ix", "$$)", "\u2581{"], ["\u2581int", "\u2581result", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u2581from", "$$Ix", "$$;", "\u2581i", "\u2581<", "\u2581to", "$$Ix", "$$;", "\u2581i++)", "\u2581{"], ["\u2581result", "\u2581+=", "\u2581_", "$$ptg", "$$s[i].", "$$Size", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581s", "$$um", "$$Token", "$$S", "$$iz", "$$es", "$$(int", "\u2581from", "$$Ix,", "\u2581int", "\u2581to", "$$Ix", "$$)", "\u2581{"], ["\u2581int", "\u2581result", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(int", "\u2581i", "$$=", "$$f", "$$rom", "$$Ix", "$$;", "\u2581i", "$$<", "$$to", "$$Ix", "$$;", "\u2581i++)", "\u2581{"], ["\u2581result", "\u2581+=", "\u2581_", "$$ptg", "$$s[i]", "$$.get", "$$Size()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetReadonly(bool @readonly) {\n    if (this.@readonly && !@readonly) {\n        throw new InvalidOperationException(\"can't alter readonly IntervalSet\");\n    }\n    this.@readonly = @readonly;\n}\n", "java": "public void setReadonly(boolean readonly) {\n    if ( this.readonly && !readonly ) throw new IllegalStateException(\"can't alter readonly IntervalSet\");\n    this.readonly = readonly;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Read", "$$on", "$$ly", "$$(bool", "\u2581@", "$$read", "$$on", "$$ly", "$$)", "\u2581{"], ["\u2581if", "\u2581(this", "$$.", "$$@", "$$read", "$$on", "$$ly", "\u2581&&", "\u2581!", "$$@", "$$read", "$$on", "$$ly", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581InvalidOperationException(\"", "$$c", "$$an", "$$'", "$$t", "\u2581", "$$al", "$$ter", "\u2581read", "$$on", "$$ly", "\u2581IntervalSet", "$$\")", "$$;"], ["\u2581}"], ["\u2581this.", "$$@", "$$read", "$$on", "$$ly", "\u2581=", "\u2581@", "$$read", "$$on", "$$ly", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Read", "$$on", "$$ly", "$$(boolean", "\u2581read", "$$on", "$$ly", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "\u2581this.", "$$read", "$$on", "$$ly", "\u2581&&", "\u2581!", "$$read", "$$on", "$$ly", "\u2581)", "\u2581throw", "\u2581new", "\u2581IllegalStateException(\"", "$$c", "$$an", "$$'", "$$t", "\u2581", "$$al", "$$ter", "\u2581read", "$$on", "$$ly", "\u2581IntervalSet", "$$\")", "$$;"], ["\u2581this.", "$$read", "$$on", "$$ly", "\u2581=", "\u2581read", "$$on", "$$ly", "$$;"], ["\u2581}"]]}, {"cs": "public void ClearConsumingCell(FormulaCellCacheEntry cce) {\n    if (!_consumingCells.Remove(cce)) {\n        throw new InvalidOperationException(\"Specified formula cell is not consumed by this cell\");\n    }\n}\n", "java": "public final void clearConsumingCell(FormulaCellCacheEntry cce) {\n    if(!_consumingCells.remove(cce)) {\n        throw new IllegalStateException(\"Specified formula cell is not consumed by this cell\");\n    }\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581C", "$$lear", "$$Consum", "$$ing", "$$Cell(", "$$Formula", "$$Cell", "$$Cache", "$$Entry", "\u2581c", "$$ce", "$$)", "\u2581{"], ["\u2581if", "\u2581(!", "$$_", "$$con", "$$sum", "$$ing", "$$Cell", "$$s.", "$$Remove", "$$(c", "$$ce", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581InvalidOperationException(\"", "$$Spec", "$$ified", "\u2581formula", "\u2581cell", "\u2581is", "\u2581not", "\u2581con", "$$sum", "$$ed", "\u2581b", "$$y", "\u2581this", "\u2581cell", "$$\")", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581void", "\u2581c", "$$lear", "$$Consum", "$$ing", "$$Cell(", "$$Formula", "$$Cell", "$$Cache", "$$Entry", "\u2581c", "$$ce", "$$)", "\u2581{"], ["\u2581if(", "$$!", "$$_", "$$con", "$$sum", "$$ing", "$$Cell", "$$s.", "$$re", "$$move", "$$(c", "$$ce", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalStateException(\"", "$$Spec", "$$ified", "\u2581formula", "\u2581cell", "\u2581is", "\u2581not", "\u2581con", "$$sum", "$$ed", "\u2581b", "$$y", "\u2581this", "\u2581cell", "$$\")", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override java.util.List<E> subList(int start, int end) {\n    lock (mutex) {\n        return new java.util.Collections.SynchronizedRandomAccessList<E>(list.subList(start, end), mutex);\n    }\n}\n", "java": "@Override public List<E> subList(int start, int end) {\n    synchronized (mutex) {\n        return new SynchronizedRandomAccessList<E>(list.subList(start, end), mutex);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.util.", "$$List<", "$$E>", "\u2581sub", "$$List", "$$(int", "\u2581start,", "\u2581int", "\u2581end)", "\u2581{"], ["\u2581lock", "\u2581(m", "$$u", "$$tex", "$$)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581java.util.", "$$Collections.", "$$Syn", "$$chronized", "$$R", "$$and", "$$om", "$$Access", "$$List<", "$$E>", "$$(", "$$list", "$$.sub", "$$List", "$$(start", "$$,", "\u2581end", "$$),", "\u2581m", "$$u", "$$tex", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581@Override", "\u2581public", "\u2581List<", "$$E>", "\u2581sub", "$$List", "$$(int", "\u2581start,", "\u2581int", "\u2581end)", "\u2581{"], ["\u2581synchronized", "\u2581(m", "$$u", "$$tex", "$$)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581S", "$$yn", "$$chronized", "$$R", "$$and", "$$om", "$$Access", "$$List<", "$$E>", "$$(", "$$list", "$$.sub", "$$List", "$$(start", "$$,", "\u2581end", "$$),", "\u2581m", "$$u", "$$tex", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual FileHeader GetFileHeader() {\n    return file;\n}\n", "java": "public FileHeader getFileHeader() {\n    return file;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581File", "$$Header", "\u2581Get", "$$File", "$$Header", "$$()", "\u2581{"], ["\u2581return", "\u2581file", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581File", "$$Header", "\u2581get", "$$File", "$$Header", "$$()", "\u2581{"], ["\u2581return", "\u2581file", "$$;"], ["\u2581}"]]}, {"cs": "public virtual AttachLoadBalancersResponse AttachLoadBalancers(AttachLoadBalancersRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = AttachLoadBalancersRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = AttachLoadBalancersResponseUnmarshaller.Instance;\n    return Invoke<AttachLoadBalancersResponse>(request, options);\n}\n", "java": "public AttachLoadBalancersResult attachLoadBalancers(AttachLoadBalancersRequest request) {\n    request = beforeClientExecution(request);\n    return executeAttachLoadBalancers(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Attach", "$$LoadBalancer", "$$sResponse", "\u2581Attach", "$$LoadBalancer", "$$s(", "$$Attach", "$$LoadBalancer", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Attach", "$$LoadBalancer", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Attach", "$$LoadBalancer", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Attach", "$$LoadBalancer", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Attach", "$$LoadBalancer", "$$sResult", "\u2581at", "$$tach", "$$LoadBalancer", "$$s(", "$$Attach", "$$LoadBalancer", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Attach", "$$LoadBalancer", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public InitiateJobRequest(string accountId, string vaultName, JobParameters jobParameters) {\n    _accountId = accountId;\n    _vaultName = vaultName;\n    _jobParameters = jobParameters;\n}\n", "java": "public InitiateJobRequest(String accountId, String vaultName, JobParameters jobParameters) {\n    setAccountId(accountId);\n    setVaultName(vaultName);\n    setJobParameters(jobParameters);\n}\n", "cs_t": [["\u2581public", "\u2581In", "$$iti", "$$ate", "$$Job", "$$Request(string", "\u2581ac", "$$count", "$$Id,", "\u2581string", "\u2581vault", "$$Name,", "\u2581", "$$Job", "$$Parameter", "$$s", "\u2581j", "$$o", "$$b", "$$Parameter", "$$s)", "\u2581{"], ["\u2581_", "$$ac", "$$count", "$$Id", "\u2581=", "\u2581ac", "$$count", "$$Id", "$$;"], ["\u2581_", "$$vault", "$$Name", "\u2581=", "\u2581vault", "$$Name", "$$;"], ["\u2581_", "$$j", "$$o", "$$b", "$$Parameter", "$$s", "\u2581=", "\u2581j", "$$o", "$$b", "$$Parameter", "$$s;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581In", "$$iti", "$$ate", "$$Job", "$$Request(String", "\u2581ac", "$$count", "$$Id,", "\u2581String", "\u2581vault", "$$Name,", "\u2581", "$$Job", "$$Parameter", "$$s", "\u2581j", "$$o", "$$b", "$$Parameter", "$$s)", "\u2581{"], ["\u2581set", "$$Account", "$$Id(", "$$ac", "$$count", "$$Id)", "$$;"], ["\u2581set", "$$Vault", "$$Name(", "$$vault", "$$Name)", "$$;"], ["\u2581set", "$$Job", "$$Parameter", "$$s(", "$$j", "$$o", "$$b", "$$Parameter", "$$s)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return \"SPL\";\n}\n", "java": "public String toString() {\n    return \"SPL\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$S", "$$P", "$$L", "$$\"", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$S", "$$P", "$$L", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public ReplaceableAttribute(string name, string value, bool replace) {\n    _name = name;\n    _value = value;\n    _replace = replace;\n}\n", "java": "public ReplaceableAttribute(String name, String value, Boolean replace) {\n    setName(name);\n    setValue(value);\n    setReplace(replace);\n}\n", "cs_t": [["\u2581public", "\u2581Re", "$$place", "$$able", "$$Attribute", "$$(string", "\u2581name,", "\u2581string", "\u2581value", "$$,", "\u2581bool", "\u2581re", "$$place", "$$)", "\u2581{"], ["\u2581_", "$$name", "\u2581=", "\u2581name", "$$;"], ["\u2581_", "$$value", "\u2581=", "\u2581value", "$$;"], ["\u2581_re", "$$place", "\u2581=", "\u2581re", "$$place", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Re", "$$place", "$$able", "$$Attribute", "$$(String", "\u2581name,", "\u2581String", "\u2581value", "$$,", "\u2581Boolean", "\u2581re", "$$place", "$$)", "\u2581{"], ["\u2581set", "$$Name", "$$(name", "$$)", "$$;"], ["\u2581set", "$$Value(", "$$value", "$$)", "$$;"], ["\u2581set", "$$Re", "$$place", "$$(re", "$$place", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void Add(IIndexableField field) {\n    fields.Add(field);\n}\n", "java": "public final void add(IndexableField field) {\n    fields.add(field);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Add(", "$$I", "$$Index", "$$able", "$$Field", "\u2581field)", "\u2581{"], ["\u2581field", "$$s.Add(", "$$field", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581void", "\u2581add(", "$$Index", "$$able", "$$Field", "\u2581field)", "\u2581{"], ["\u2581field", "$$s.add(", "$$field", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteStackSetResponse DeleteStackSet(DeleteStackSetRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteStackSetRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteStackSetResponseUnmarshaller.Instance;\n    return Invoke<DeleteStackSetResponse>(request, options);\n}\n", "java": "public DeleteStackSetResult deleteStackSet(DeleteStackSetRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteStackSet(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$StackSet", "$$Response", "\u2581Delete", "$$StackSet", "$$(Delete", "$$StackSet", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$StackSet", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$StackSet", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$StackSet", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$StackSet", "$$Result", "\u2581delete", "$$StackSet", "$$(Delete", "$$StackSet", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$StackSet", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public GetRepoBuildRuleListRequest(): base(\"cr\", \"2016-06-07\", \"GetRepoBuildRuleList\", \"cr\", \"openAPI\") {\n    UriPattern = \"/repos/[RepoNamespace]/[RepoName]/rules\";\n    Method = MethodType.GET;\n}\n", "java": "public GetRepoBuildRuleListRequest() {\n    super(\"cr\", \"2016-06-07\", \"GetRepoBuildRuleList\", \"cr\");\n    setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/rules\");\n    setMethod(MethodType.GET);\n}\n", "cs_t": [["\u2581public", "\u2581Get", "$$Repo", "$$Build", "$$Rule", "$$List", "$$Request():", "\u2581base(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"Get", "$$Repo", "$$Build", "$$Rule", "$$List", "$$\",", "\u2581\"", "$$cr\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581", "$$UriPattern", "\u2581=", "\u2581\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]/", "$$r", "$$ules", "$$\"", "$$;"], ["\u2581Method", "\u2581=", "\u2581Method", "$$Type.", "$$GE", "$$T", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Repo", "$$Build", "$$Rule", "$$List", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"Get", "$$Repo", "$$Build", "$$Rule", "$$List", "$$\",", "\u2581\"", "$$cr", "$$\")", "$$;"], ["\u2581set", "$$UriPattern", "$$(\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]/", "$$r", "$$ules", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.", "$$GE", "$$T", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public SparseArray(int initialCapacity) {\n    initialCapacity = android.util.@internal.ArrayUtils.idealIntArraySize(initialCapacity);\n    mKeys = new int[initialCapacity];\n    mValues = new object[initialCapacity];\n    mSize = 0;\n}\n", "java": "public SparseArray(int initialCapacity) {\n    initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);\n    mKeys = new int[initialCapacity];\n    mValues = new Object[initialCapacity];\n    mSize = 0;\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$parse", "$$Array", "$$(int", "\u2581in", "$$itial", "$$Capacity", "$$)", "\u2581{"], ["\u2581in", "$$itial", "$$Capacity", "\u2581=", "\u2581and", "$$ro", "$$id", "$$.", "$$util.", "$$@", "$$int", "$$er", "$$n", "$$al", "$$.Ar", "$$ray", "$$Utils.", "$$ide", "$$al", "$$Int", "$$Array", "$$Size", "$$(in", "$$itial", "$$Capacity", "$$)", "$$;"], ["\u2581m", "$$Key", "$$s", "\u2581=", "\u2581new", "\u2581int[", "$$in", "$$itial", "$$Capacity", "$$]", "$$;"], ["\u2581m", "$$Values", "\u2581=", "\u2581new", "\u2581object", "$$[", "$$in", "$$itial", "$$Capacity", "$$]", "$$;"], ["\u2581m", "$$Size", "\u2581=", "\u25810;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$parse", "$$Array", "$$(int", "\u2581in", "$$itial", "$$Capacity", "$$)", "\u2581{"], ["\u2581in", "$$itial", "$$Capacity", "\u2581=", "\u2581Array", "$$Utils.", "$$ide", "$$al", "$$Int", "$$Array", "$$Size", "$$(in", "$$itial", "$$Capacity", "$$)", "$$;"], ["\u2581m", "$$Key", "$$s", "\u2581=", "\u2581new", "\u2581int[", "$$in", "$$itial", "$$Capacity", "$$]", "$$;"], ["\u2581m", "$$Values", "\u2581=", "\u2581new", "\u2581Object", "$$[", "$$in", "$$itial", "$$Capacity", "$$]", "$$;"], ["\u2581m", "$$Size", "\u2581=", "\u25810;"], ["\u2581}"]]}, {"cs": "public InvokeServiceRequest(): base(\"industry-brain\", \"2018-07-12\", \"InvokeService\") {\n    Method = MethodType.POST;\n}\n", "java": "public InvokeServiceRequest() {\n    super(\"industry-brain\", \"2018-07-12\", \"InvokeService\");\n    setMethod(MethodType.POST);\n}\n", "cs_t": [["\u2581public", "\u2581Invoke", "$$Service", "$$Request():", "\u2581base(\"", "$$ind", "$$ust", "$$ry", "$$-", "$$b", "$$ra", "$$in", "$$\",", "\u2581\"2018", "$$-07", "$$-1", "$$2", "$$\",", "\u2581\"", "$$In", "$$voke", "$$Service", "$$\")", "\u2581{"], ["\u2581Method", "\u2581=", "\u2581MethodType.POST", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Invoke", "$$Service", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$ind", "$$ust", "$$ry", "$$-", "$$b", "$$ra", "$$in", "$$\",", "\u2581\"2018", "$$-07", "$$-1", "$$2", "$$\",", "\u2581\"", "$$In", "$$voke", "$$Service", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.POST", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ListAlbumPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"ListAlbumPhotos\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public ListAlbumPhotosRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"ListAlbumPhotos\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581List", "$$Al", "$$b", "$$um", "$$Photo", "$$sRequest", "$$():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$List", "$$Al", "$$b", "$$um", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Al", "$$b", "$$um", "$$Photo", "$$sRequest", "$$()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$List", "$$Al", "$$b", "$$um", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public bool hasPrevious() {\n    return link != list.voidLink;\n}\n", "java": "public boolean hasPrevious() {\n    return link != list.voidLink;\n}\n", "cs_t": [["\u2581public", "\u2581bool", "\u2581has", "$$Pre", "$$vio", "$$u", "$$s()", "\u2581{"], ["\u2581return", "\u2581link", "\u2581!=", "\u2581list", "$$.", "$$v", "$$oid", "$$Link", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581has", "$$Pre", "$$vio", "$$u", "$$s()", "\u2581{"], ["\u2581return", "\u2581link", "\u2581!=", "\u2581list", "$$.", "$$v", "$$oid", "$$Link", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteHsmConfigurationResponse DeleteHsmConfiguration(DeleteHsmConfigurationRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteHsmConfigurationRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteHsmConfigurationResponseUnmarshaller.Instance;\n    return Invoke<DeleteHsmConfigurationResponse>(request, options);\n}\n", "java": "public DeleteHsmConfigurationResult deleteHsmConfiguration(DeleteHsmConfigurationRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteHsmConfiguration(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Hsm", "$$Configuration", "$$Response", "\u2581Delete", "$$Hsm", "$$Configuration", "$$(Delete", "$$Hsm", "$$ConfigurationRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Hsm", "$$Configuration", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Hsm", "$$Configuration", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Hsm", "$$Configuration", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Hsm", "$$Configuration", "$$Result", "\u2581delete", "$$Hsm", "$$Configuration", "$$(Delete", "$$Hsm", "$$ConfigurationRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Hsm", "$$Configuration", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public CreateLoadBalancerRequest(string loadBalancerName) {\n    _loadBalancerName = loadBalancerName;\n}\n", "java": "public CreateLoadBalancerRequest(String loadBalancerName) {\n    setLoadBalancerName(loadBalancerName);\n}\n", "cs_t": [["\u2581public", "\u2581Create", "$$LoadBalancer", "$$Request(string", "\u2581load", "$$Balancer", "$$Name)", "\u2581{"], ["\u2581_", "$$load", "$$Balancer", "$$Name", "\u2581=", "\u2581load", "$$Balancer", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$LoadBalancer", "$$Request(String", "\u2581load", "$$Balancer", "$$Name)", "\u2581{"], ["\u2581set", "$$LoadBalancer", "$$Name(", "$$load", "$$Balancer", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public string getUserInfo() {\n    return decode(userInfo);\n}\n", "java": "public String getUserInfo() {\n    return decode(userInfo);\n}\n", "cs_t": [["\u2581public", "\u2581string", "\u2581get", "$$User", "$$Info", "$$()", "\u2581{"], ["\u2581return", "\u2581decode", "$$(", "$$user", "$$Info", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$User", "$$Info", "$$()", "\u2581{"], ["\u2581return", "\u2581decode", "$$(", "$$user", "$$Info", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual TagAttendeeResponse TagAttendee(TagAttendeeRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = TagAttendeeRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = TagAttendeeResponseUnmarshaller.Instance;\n    return Invoke<TagAttendeeResponse>(request, options);\n}\n", "java": "public TagAttendeeResult tagAttendee(TagAttendeeRequest request) {\n    request = beforeClientExecution(request);\n    return executeTagAttendee(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Tag", "$$Atten", "$$dee", "$$Response", "\u2581", "$$Tag", "$$Atten", "$$dee", "$$(", "$$Tag", "$$Atten", "$$dee", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581", "$$Tag", "$$Atten", "$$dee", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581", "$$Tag", "$$Atten", "$$dee", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Tag", "$$Atten", "$$dee", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Tag", "$$Atten", "$$dee", "$$Result", "\u2581tag", "$$Atten", "$$dee", "$$(", "$$Tag", "$$Atten", "$$dee", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Tag", "$$Atten", "$$dee", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string GetRefName() {\n    return name;\n}\n", "java": "public String getRefName() {\n    return name;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581Get", "$$Ref", "$$Name()", "\u2581{"], ["\u2581return", "\u2581name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Ref", "$$Name()", "\u2581{"], ["\u2581return", "\u2581name", "$$;"], ["\u2581}"]]}, {"cs": "public override WAH8DocIdSet Build() {\n    if (this.wordNum != -1) {\n        AddWord(wordNum, (byte)word);\n    }\n    return base.Build();\n}\n", "java": "public SpanNearQuery build() {\n    return new SpanNearQuery(clauses.toArray(new SpanQuery[clauses.size()]), slop, ordered);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581W", "$$A", "$$H", "$$8", "$$Doc", "$$Id", "$$Set", "\u2581", "$$Build", "$$()", "\u2581{"], ["\u2581if", "\u2581(this", "$$.w", "$$ord", "$$Num", "\u2581!=", "\u2581-1)", "\u2581{"], ["\u2581Add", "$$W", "$$ord(", "$$word", "$$Num", "$$,", "\u2581(byte)", "$$word", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581base", "$$.", "$$Build", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Span", "$$N", "$$e", "$$ar", "$$Query", "\u2581build", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581Span", "$$N", "$$e", "$$ar", "$$Query", "$$(c", "$$lauses", "$$.to", "$$Array", "$$(new", "\u2581Span", "$$Query", "$$[", "$$c", "$$lauses", "$$.size()", "$$]", "$$),", "\u2581s", "$$lo", "$$p", "$$,", "\u2581or", "$$de", "$$red", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool IsSubTotal(int rowIndex, int columnIndex) {\n    return false;\n}\n", "java": "public boolean isSubTotal(int rowIndex, int columnIndex) {\n    return false;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581Is", "$$Sub", "$$To", "$$tal", "$$(int", "\u2581row", "$$Index,", "\u2581int", "\u2581column", "$$Index)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$Sub", "$$To", "$$tal", "$$(int", "\u2581row", "$$Index,", "\u2581int", "\u2581column", "$$Index)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeDBProxiesResponse DescribeDBProxies(DescribeDBProxiesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeDBProxiesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeDBProxiesResponseUnmarshaller.Instance;\n    return Invoke<DescribeDBProxiesResponse>(request, options);\n}\n", "java": "public DescribeDBProxiesResult describeDBProxies(DescribeDBProxiesRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeDBProxies(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581DescribeDB", "$$Prox", "$$ies", "$$Response", "\u2581DescribeDB", "$$Prox", "$$ies", "$$(Describe", "$$DB", "$$Prox", "$$ies", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581DescribeDB", "$$Prox", "$$ies", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581DescribeDB", "$$Prox", "$$ies", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$DB", "$$Prox", "$$ies", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581DescribeDB", "$$Prox", "$$ies", "$$Result", "\u2581describe", "$$DB", "$$Prox", "$$ies", "$$(Describe", "$$DB", "$$Prox", "$$ies", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$DB", "$$Prox", "$$ies", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetVoiceConnectorProxyResponse GetVoiceConnectorProxy(GetVoiceConnectorProxyRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetVoiceConnectorProxyRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetVoiceConnectorProxyResponseUnmarshaller.Instance;\n    return Invoke<GetVoiceConnectorProxyResponse>(request, options);\n}\n", "java": "public GetVoiceConnectorProxyResult getVoiceConnectorProxy(GetVoiceConnectorProxyRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetVoiceConnectorProxy(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$VoiceConnector", "$$Proxy", "$$Response", "\u2581Get", "$$VoiceConnector", "$$Proxy", "$$(Get", "$$VoiceConnector", "$$Proxy", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$VoiceConnector", "$$Proxy", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$VoiceConnector", "$$Proxy", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$VoiceConnector", "$$Proxy", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$VoiceConnector", "$$Proxy", "$$Result", "\u2581get", "$$VoiceConnector", "$$Proxy", "$$(Get", "$$VoiceConnector", "$$Proxy", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$VoiceConnector", "$$Proxy", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void FromConfig(Config rc) {\n    SetPackedGitOpenFiles(rc.GetInt(\"core\", null, \"packedgitopenfiles\", GetPackedGitOpenFiles()));\n    SetPackedGitLimit(rc.GetLong(\"core\", null, \"packedgitlimit\", GetPackedGitLimit()));\n    SetPackedGitWindowSize(rc.GetInt(\"core\", null, \"packedgitwindowsize\", GetPackedGitWindowSize()));\n    SetPackedGitMMAP(rc.GetBoolean(\"core\", null, \"packedgitmmap\", IsPackedGitMMAP()));\n    SetDeltaBaseCacheLimit(rc.GetInt(\"core\", null, \"deltabasecachelimit\", GetDeltaBaseCacheLimit()));\n    long maxMem = Runtime.GetRuntime().MaxMemory();\n    long sft = rc.GetLong(\"core\", null, \"streamfilethreshold\", GetStreamFileThreshold());\n    sft = Math.Min(sft, maxMem / 4);\n    sft = Math.Min(sft, int.MaxValue);\n    SetStreamFileThreshold((int)sft);\n}\n", "java": "public WindowCacheConfig fromConfig(Config rc) {\n    setPackedGitUseStrongRefs(rc.getBoolean(CONFIG_CORE_SECTION,CONFIG_KEY_PACKED_GIT_USE_STRONGREFS,isPackedGitUseStrongRefs()));\n    setPackedGitOpenFiles(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_OPENFILES, getPackedGitOpenFiles()));\n    setPackedGitLimit(rc.getLong(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_LIMIT, getPackedGitLimit()));\n    setPackedGitWindowSize(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_WINDOWSIZE, getPackedGitWindowSize()));\n    setPackedGitMMAP(rc.getBoolean(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_MMAP, isPackedGitMMAP()));\n    setDeltaBaseCacheLimit(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_DELTA_BASE_CACHE_LIMIT, getDeltaBaseCacheLimit()));\n    long maxMem = Runtime.getRuntime().maxMemory();\n    long sft = rc.getLong(CONFIG_CORE_SECTION, null,CONFIG_KEY_STREAM_FILE_TRESHOLD, getStreamFileThreshold());\n    sft = Math.min(sft, maxMem / 4);\n    sft = Math.min(sft, Integer.MAX_VALUE);\n    setStreamFileThreshold((int) sft);\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581", "$$From", "$$Config", "$$(", "$$Config", "\u2581r", "$$c", "$$)", "\u2581{"], ["\u2581Set", "$$Pack", "$$ed", "$$Git", "$$Open", "$$Files", "$$(", "$$rc", "$$.Get", "$$Int", "$$(\"", "$$core", "$$\",", "\u2581null", "$$,", "\u2581\"", "$$p", "$$acked", "$$g", "$$it", "$$open", "$$fi", "$$les", "$$\",", "\u2581Get", "$$Pack", "$$ed", "$$Git", "$$Open", "$$Files", "$$()))", "$$;"], ["\u2581Set", "$$Pack", "$$ed", "$$Git", "$$Limit", "$$(", "$$rc", "$$.Get", "$$Long", "$$(\"", "$$core", "$$\",", "\u2581null", "$$,", "\u2581\"", "$$p", "$$acked", "$$g", "$$it", "$$limit", "$$\",", "\u2581Get", "$$Pack", "$$ed", "$$Git", "$$Limit", "$$()))", "$$;"], ["\u2581Set", "$$Pack", "$$ed", "$$Git", "$$W", "$$indow", "$$Size", "$$(", "$$rc", "$$.Get", "$$Int", "$$(\"", "$$core", "$$\",", "\u2581null", "$$,", "\u2581\"", "$$p", "$$acked", "$$g", "$$it", "$$w", "$$indow", "$$size", "$$\",", "\u2581Get", "$$Pack", "$$ed", "$$Git", "$$W", "$$indow", "$$Size", "$$()))", "$$;"], ["\u2581Set", "$$Pack", "$$ed", "$$Git", "$$M", "$$M", "$$AP", "$$(", "$$rc", "$$.Get", "$$Boolean", "$$(\"", "$$core", "$$\",", "\u2581null", "$$,", "\u2581\"", "$$p", "$$acked", "$$g", "$$it", "$$m", "$$map", "$$\",", "\u2581Is", "$$Pack", "$$ed", "$$Git", "$$M", "$$M", "$$AP", "$$()))", "$$;"], ["\u2581Set", "$$Delta", "$$Base", "$$Cache", "$$Limit", "$$(", "$$rc", "$$.Get", "$$Int", "$$(\"", "$$core", "$$\",", "\u2581null", "$$,", "\u2581\"", "$$d", "$$el", "$$t", "$$ab", "$$ase", "$$c", "$$ache", "$$limit", "$$\",", "\u2581Get", "$$Delta", "$$Base", "$$Cache", "$$Limit", "$$()))", "$$;"], ["\u2581long", "\u2581max", "$$Mem", "\u2581=", "\u2581Runtime", "$$.Get", "$$Runtime", "$$().", "$$Max", "$$Mem", "$$ory", "$$()", "$$;"], ["\u2581long", "\u2581s", "$$ft", "\u2581=", "\u2581r", "$$c", "$$.Get", "$$Long", "$$(\"", "$$core", "$$\",", "\u2581null", "$$,", "\u2581\"", "$$stream", "$$fi", "$$l", "$$et", "$$h", "$$resh", "$$old", "$$\",", "\u2581Get", "$$Stream", "$$File", "$$Th", "$$resh", "$$old", "$$())", "$$;"], ["\u2581s", "$$ft", "\u2581=", "\u2581Math.", "$$Min", "$$(s", "$$ft", "$$,", "\u2581max", "$$Mem", "\u2581/", "\u25814)", "$$;"], ["\u2581s", "$$ft", "\u2581=", "\u2581Math.", "$$Min", "$$(s", "$$ft", "$$,", "\u2581int", "$$.", "$$Max", "$$Value)", "$$;"], ["\u2581Set", "$$Stream", "$$File", "$$Th", "$$resh", "$$ol", "$$d(", "$$(int)", "$$s", "$$ft", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581W", "$$indow", "$$Cache", "$$Config", "\u2581from", "$$Config", "$$(", "$$Config", "\u2581r", "$$c", "$$)", "\u2581{"], ["\u2581set", "$$Pack", "$$ed", "$$Git", "$$U", "$$se", "$$Str", "$$ong", "$$Ref", "$$s(", "$$rc", "$$.get", "$$Boolean", "$$(", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$CO", "$$RE", "$$_", "$$SE", "$$CTION", "$$,", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$K", "$$E", "$$Y", "$$_P", "$$A", "$$CK", "$$E", "$$D_", "$$G", "$$I", "$$T_", "$$U", "$$S", "$$E_", "$$ST", "$$R", "$$ON", "$$G", "$$REF", "$$S", "$$,", "$$is", "$$Pack", "$$ed", "$$Git", "$$U", "$$se", "$$Str", "$$ong", "$$Ref", "$$s()", "$$))", "$$;"], ["\u2581set", "$$Pack", "$$ed", "$$Git", "$$Open", "$$Files", "$$(", "$$rc", "$$.get", "$$Int(", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$CO", "$$RE", "$$_", "$$SE", "$$CTION", "$$,", "\u2581null", "$$,", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$K", "$$E", "$$Y", "$$_P", "$$A", "$$CK", "$$E", "$$D_", "$$G", "$$I", "$$T_", "$$O", "$$P", "$$EN", "$$FI", "$$LE", "$$S", "$$,", "\u2581get", "$$Pack", "$$ed", "$$Git", "$$Open", "$$Files", "$$()))", "$$;"], ["\u2581set", "$$Pack", "$$ed", "$$Git", "$$Limit", "$$(", "$$rc", "$$.get", "$$Long", "$$(", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$CO", "$$RE", "$$_", "$$SE", "$$CTION", "$$,", "\u2581null", "$$,", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$K", "$$E", "$$Y", "$$_P", "$$A", "$$CK", "$$E", "$$D_", "$$G", "$$I", "$$T_", "$$L", "$$IM", "$$IT", "$$,", "\u2581get", "$$Pack", "$$ed", "$$Git", "$$Limit", "$$()))", "$$;"], ["\u2581set", "$$Pack", "$$ed", "$$Git", "$$W", "$$indow", "$$Size", "$$(", "$$rc", "$$.get", "$$Int(", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$CO", "$$RE", "$$_", "$$SE", "$$CTION", "$$,", "\u2581null", "$$,", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$K", "$$E", "$$Y", "$$_P", "$$A", "$$CK", "$$E", "$$D_", "$$G", "$$I", "$$T_", "$$W", "$$IN", "$$D", "$$O", "$$W", "$$SIZE", "$$,", "\u2581get", "$$Pack", "$$ed", "$$Git", "$$W", "$$indow", "$$Size", "$$()))", "$$;"], ["\u2581set", "$$Pack", "$$ed", "$$Git", "$$M", "$$M", "$$AP", "$$(", "$$rc", "$$.get", "$$Boolean", "$$(", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$CO", "$$RE", "$$_", "$$SE", "$$CTION", "$$,", "\u2581null", "$$,", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$K", "$$E", "$$Y", "$$_P", "$$A", "$$CK", "$$E", "$$D_", "$$G", "$$I", "$$T_", "$$M", "$$M", "$$AP", "$$,", "\u2581is", "$$Pack", "$$ed", "$$Git", "$$M", "$$M", "$$AP", "$$()))", "$$;"], ["\u2581set", "$$Delta", "$$Base", "$$Cache", "$$Limit", "$$(", "$$rc", "$$.get", "$$Int(", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$CO", "$$RE", "$$_", "$$SE", "$$CTION", "$$,", "\u2581null", "$$,", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$K", "$$E", "$$Y_", "$$DE", "$$L", "$$TA", "$$_B", "$$AS", "$$E_", "$$C", "$$A", "$$CH", "$$E_", "$$L", "$$IM", "$$IT", "$$,", "\u2581get", "$$Delta", "$$Base", "$$Cache", "$$Limit", "$$()))", "$$;"], ["\u2581long", "\u2581max", "$$Mem", "\u2581=", "\u2581Runtime", "$$.get", "$$Runtime", "$$().", "$$max", "$$Mem", "$$ory", "$$()", "$$;"], ["\u2581long", "\u2581s", "$$ft", "\u2581=", "\u2581r", "$$c", "$$.get", "$$Long", "$$(", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$CO", "$$RE", "$$_", "$$SE", "$$CTION", "$$,", "\u2581null", "$$,", "$$C", "$$ON", "$$FI", "$$G", "$$_", "$$K", "$$E", "$$Y_", "$$ST", "$$RE", "$$AM", "$$_", "$$FI", "$$LE", "$$_", "$$T", "$$RE", "$$SH", "$$O", "$$LD", "$$,", "\u2581get", "$$Stream", "$$File", "$$Th", "$$resh", "$$old", "$$())", "$$;"], ["\u2581s", "$$ft", "\u2581=", "\u2581Math.", "$$min", "$$(s", "$$ft", "$$,", "\u2581max", "$$Mem", "\u2581/", "\u25814)", "$$;"], ["\u2581s", "$$ft", "\u2581=", "\u2581Math.", "$$min", "$$(s", "$$ft", "$$,", "\u2581Integ", "$$er.", "$$M", "$$AX_", "$$VALU", "$$E", "$$)", "$$;"], ["\u2581set", "$$Stream", "$$File", "$$Th", "$$resh", "$$ol", "$$d(", "$$(int)", "\u2581s", "$$ft", "$$)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public static DateTime GetJavaDate(double date) {\n    return GetJavaDate(date, false);\n}\n", "java": "public static Date getJavaDate(double date) {\n    return getJavaDate(date, false, null, false);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581Date", "$$Time", "\u2581Get", "$$J", "$$ava", "$$Date", "$$(double", "\u2581date", "$$)", "\u2581{"], ["\u2581return", "\u2581Get", "$$J", "$$ava", "$$Date", "$$(", "$$date", "$$,", "\u2581false", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581Date", "\u2581get", "$$J", "$$ava", "$$Date", "$$(double", "\u2581date", "$$)", "\u2581{"], ["\u2581return", "\u2581get", "$$J", "$$ava", "$$Date", "$$(", "$$date", "$$,", "\u2581false", "$$,", "\u2581null", "$$,", "\u2581false", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StartPersonTrackingResponse StartPersonTracking(StartPersonTrackingRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = StartPersonTrackingRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = StartPersonTrackingResponseUnmarshaller.Instance;\n    return Invoke<StartPersonTrackingResponse>(request, options);\n}\n", "java": "public StartPersonTrackingResult startPersonTracking(StartPersonTrackingRequest request) {\n    request = beforeClientExecution(request);\n    return executeStartPersonTracking(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Start", "$$Per", "$$son", "$$Tracking", "$$Response", "\u2581Start", "$$Per", "$$son", "$$Tracking", "$$(Start", "$$Per", "$$son", "$$Tracking", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Start", "$$Per", "$$son", "$$Tracking", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Start", "$$Per", "$$son", "$$Tracking", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Start", "$$Per", "$$son", "$$Tracking", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Start", "$$Per", "$$son", "$$Tracking", "$$Result", "\u2581start", "$$Per", "$$son", "$$Tracking", "$$(Start", "$$Per", "$$son", "$$Tracking", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Start", "$$Per", "$$son", "$$Tracking", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override int size() {\n    return this._enclosing.size();\n}\n", "java": "@Override public int size() {\n    return totalSize;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int", "\u2581size()", "\u2581{"], ["\u2581return", "\u2581this._enclosing", "$$.size()", "$$;"], ["\u2581}"]], "java_t": [["\u2581@Override", "\u2581public", "\u2581int", "\u2581size()", "\u2581{"], ["\u2581return", "\u2581total", "$$Size", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetRouteResponse GetRoute(GetRouteRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetRouteRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetRouteResponseUnmarshaller.Instance;\n    return Invoke<GetRouteResponse>(request, options);\n}\n", "java": "public GetRouteResult getRoute(GetRouteRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetRoute(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Route", "$$Response", "\u2581Get", "$$Route", "$$(Get", "$$Route", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Route", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Route", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Route", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Route", "$$Result", "\u2581get", "$$Route", "$$(Get", "$$Route", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Route", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteClusterResponse DeleteCluster(DeleteClusterRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteClusterRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteClusterResponseUnmarshaller.Instance;\n    return Invoke<DeleteClusterResponse>(request, options);\n}\n", "java": "public DeleteClusterResult deleteCluster(DeleteClusterRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteCluster(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Cluster", "$$Response", "\u2581Delete", "$$Cluster", "$$(Delete", "$$Cluster", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Cluster", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Cluster", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Cluster", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Cluster", "$$Result", "\u2581delete", "$$Cluster", "$$(Delete", "$$Cluster", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Cluster", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[MMS]\\n\");\n    buffer.Append(\"    .addMenu        = \").Append(StringUtil.ToHexString(AddMenuCount)).Append(\"\\n\");\n    buffer.Append(\"    .delMenu        = \").Append(StringUtil.ToHexString(DelMenuCount)).Append(\"\\n\");\n    buffer.Append(\"[/MMS]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"[MMS]\\n\");\n    buffer.append(\"    .addMenu        = \").append(Integer.toHexString(getAddMenuCount())).append(\"\\n\");\n    buffer.append(\"    .delMenu        = \").append(Integer.toHexString(getDelMenuCount())).append(\"\\n\");\n    buffer.append(\"[/MMS]\\n\");\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$M", "$$M", "$$S", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$add", "$$M", "$$en", "$$u", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$String", "$$Util", "$$.To", "$$HexString(", "$$Add", "$$M", "$$en", "$$u", "$$Count", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$d", "$$el", "$$M", "$$en", "$$u", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$String", "$$Util", "$$.To", "$$HexString(", "$$D", "$$el", "$$M", "$$en", "$$u", "$$Count", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"[/", "$$M", "$$M", "$$S", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(\"[", "$$M", "$$M", "$$S", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$add", "$$M", "$$en", "$$u", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$Integ", "$$er.", "$$to", "$$HexString(", "$$get", "$$Add", "$$M", "$$en", "$$u", "$$Count", "$$()))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$d", "$$el", "$$M", "$$en", "$$u", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$Integ", "$$er.", "$$to", "$$HexString(", "$$get", "$$D", "$$el", "$$M", "$$en", "$$u", "$$Count", "$$()))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"[/", "$$M", "$$M", "$$S", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public FileBasedConfig(Config @base, FilePath cfgLocation, FS fs) : base(@base) {\n    configFile = cfgLocation;\n    this.fs = fs;\n    this.snapshot = FileSnapshot.DIRTY;\n    this.hash = ObjectId.ZeroId;\n}\n", "java": "public FileBasedConfig(Config base, File cfgLocation, FS fs) {\n    super(base);\n    configFile = cfgLocation;\n    this.fs = fs;\n    this.snapshot = FileSnapshot.DIRTY;\n    this.hash = ObjectId.zeroId();\n}\n", "cs_t": [["\u2581public", "\u2581File", "$$Base", "$$d", "$$Config", "$$(", "$$Config", "\u2581@", "$$base", "$$,", "\u2581File", "$$Path", "\u2581c", "$$f", "$$g", "$$Loc", "$$ation", "$$,", "\u2581F", "$$S", "\u2581f", "$$s)", "\u2581:", "\u2581base", "$$(@", "$$base", "$$)", "\u2581{"], ["\u2581config", "$$File", "\u2581=", "\u2581c", "$$f", "$$g", "$$Loc", "$$ation", "$$;"], ["\u2581this.f", "$$s", "\u2581=", "\u2581f", "$$s;"], ["\u2581this.", "$$s", "$$napshot", "\u2581=", "\u2581File", "$$Snapshot", "$$.D", "$$I", "$$R", "$$TY", "$$;"], ["\u2581this.", "$$hash", "\u2581=", "\u2581ObjectId", "$$.", "$$Z", "$$er", "$$o", "$$Id", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581File", "$$Base", "$$d", "$$Config", "$$(", "$$Config", "\u2581base", "$$,", "\u2581File", "\u2581c", "$$f", "$$g", "$$Loc", "$$ation", "$$,", "\u2581F", "$$S", "\u2581f", "$$s)", "\u2581{"], ["\u2581super", "$$(b", "$$ase", "$$)", "$$;"], ["\u2581config", "$$File", "\u2581=", "\u2581c", "$$f", "$$g", "$$Loc", "$$ation", "$$;"], ["\u2581this.f", "$$s", "\u2581=", "\u2581f", "$$s;"], ["\u2581this.", "$$s", "$$napshot", "\u2581=", "\u2581File", "$$Snapshot", "$$.D", "$$I", "$$R", "$$TY", "$$;"], ["\u2581this.", "$$hash", "\u2581=", "\u2581ObjectId", "$$.", "$$zero", "$$Id()", "$$;"], ["\u2581}"]]}, {"cs": "public override int Following(int pos) {\n    if (pos < text.BeginIndex || pos > text.EndIndex) {\n        throw new ArgumentException(\"offset out of bounds\");\n    }\n    else if (0 == sentenceStarts.Length) {\n        text.SetIndex(text.BeginIndex);\n        return Done;\n    }\n    else if (pos >= sentenceStarts[sentenceStarts.Length - 1]) {\n        text.SetIndex(text.EndIndex);\n        currentSentence = sentenceStarts.Length - 1;\n        return Done;\n    }\n    else {\n        currentSentence = (sentenceStarts.Length - 1) / 2;\n        MoveToSentenceAt(pos, 0, sentenceStarts.Length - 2);\n        text.SetIndex(sentenceStarts[++currentSentence]);\n        return Current;\n    }\n}\n", "java": "public int following(int pos) {\n    if (pos < text.getBeginIndex() || pos > text.getEndIndex()) {\n        throw new IllegalArgumentException(\"offset out of bounds\");\n    }\n    else if (0 == sentenceStarts.length) {\n        text.setIndex(text.getBeginIndex());\n        return DONE;\n    }\n    else if (pos >= sentenceStarts[sentenceStarts.length - 1]) {\n        text.setIndex(text.getEndIndex());\n        currentSentence = sentenceStarts.length - 1;\n        return DONE;\n    }\n    else {\n        currentSentence = (sentenceStarts.length - 1) / 2;\n        moveToSentenceAt(pos, 0, sentenceStarts.length - 2);\n        text.setIndex(sentenceStarts[++currentSentence]);\n        return current();\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int", "\u2581F", "$$ollow", "$$ing", "$$(int", "\u2581po", "$$s)", "\u2581{"], ["\u2581if", "\u2581(pos", "\u2581<", "\u2581text", "$$.", "$$Be", "$$gin", "$$Index", "\u2581||", "\u2581pos", "\u2581>", "\u2581text", "$$.", "$$End", "$$Index)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581ArgumentException(\"", "$$offset", "\u2581out", "\u2581of", "\u2581bo", "$$und", "$$s", "$$\")", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(", "$$0", "\u2581==", "\u2581s", "$$entence", "$$Start", "$$s.Length", "$$)", "\u2581{"], ["\u2581text", "$$.Set", "$$Index(", "$$text", "$$.", "$$Be", "$$gin", "$$Index)", "$$;"], ["\u2581return", "\u2581D", "$$one", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(pos", "\u2581>=", "\u2581s", "$$entence", "$$Start", "$$s[", "$$s", "$$entence", "$$Start", "$$s.Length", "\u2581-", "\u25811", "$$]", "$$)", "\u2581{"], ["\u2581text", "$$.Set", "$$Index(", "$$text", "$$.", "$$End", "$$Index)", "$$;"], ["\u2581current", "$$S", "$$entence", "\u2581=", "\u2581s", "$$entence", "$$Start", "$$s.Length", "\u2581-", "\u25811", "$$;"], ["\u2581return", "\u2581D", "$$one", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581current", "$$S", "$$entence", "\u2581=", "\u2581(s", "$$entence", "$$Start", "$$s.Length", "\u2581-", "\u25811)", "\u2581/", "\u25812", "$$;"], ["\u2581M", "$$o", "$$ve", "$$To", "$$S", "$$entence", "$$At(", "$$po", "$$s,", "\u25810,", "\u2581s", "$$entence", "$$Start", "$$s.Length", "\u2581-", "\u25812)", "$$;"], ["\u2581text", "$$.Set", "$$Index", "$$(s", "$$entence", "$$Start", "$$s[", "$$++", "$$current", "$$S", "$$entence", "$$]", "$$)", "$$;"], ["\u2581return", "\u2581C", "$$urrent", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581f", "$$ollow", "$$ing", "$$(int", "\u2581po", "$$s)", "\u2581{"], ["\u2581if", "\u2581(pos", "\u2581<", "\u2581text", "$$.get", "$$Be", "$$gin", "$$Index", "$$()", "\u2581||", "\u2581pos", "\u2581>", "\u2581text", "$$.get", "$$End", "$$Index", "$$())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$offset", "\u2581out", "\u2581of", "\u2581bo", "$$und", "$$s", "$$\")", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(", "$$0", "\u2581==", "\u2581s", "$$entence", "$$Start", "$$s.length", "$$)", "\u2581{"], ["\u2581text", "$$.set", "$$Index(", "$$text", "$$.get", "$$Be", "$$gin", "$$Index", "$$())", "$$;"], ["\u2581return", "\u2581D", "$$ONE", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(pos", "\u2581>=", "\u2581s", "$$entence", "$$Start", "$$s[", "$$s", "$$entence", "$$Start", "$$s.length", "\u2581-", "\u25811", "$$]", "$$)", "\u2581{"], ["\u2581text", "$$.set", "$$Index(", "$$text", "$$.get", "$$End", "$$Index", "$$())", "$$;"], ["\u2581current", "$$S", "$$entence", "\u2581=", "\u2581s", "$$entence", "$$Start", "$$s.length", "\u2581-", "\u25811", "$$;"], ["\u2581return", "\u2581D", "$$ONE", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581current", "$$S", "$$entence", "\u2581=", "\u2581(s", "$$entence", "$$Start", "$$s.length", "\u2581-", "\u25811)", "\u2581/", "\u25812", "$$;"], ["\u2581m", "$$o", "$$ve", "$$To", "$$S", "$$entence", "$$At(", "$$po", "$$s,", "\u25810,", "\u2581s", "$$entence", "$$Start", "$$s.length", "\u2581-", "\u25812)", "$$;"], ["\u2581text", "$$.set", "$$Index", "$$(s", "$$entence", "$$Start", "$$s[", "$$++", "$$current", "$$S", "$$entence", "$$]", "$$)", "$$;"], ["\u2581return", "\u2581current", "$$()", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual UpdateParameterGroupResponse UpdateParameterGroup(UpdateParameterGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateParameterGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateParameterGroupResponseUnmarshaller.Instance;\n    return Invoke<UpdateParameterGroupResponse>(request, options);\n}\n", "java": "public UpdateParameterGroupResult updateParameterGroup(UpdateParameterGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateParameterGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$ParameterGroup", "$$Response", "\u2581Update", "$$ParameterGroup", "$$(Update", "$$ParameterGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$ParameterGroup", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$ParameterGroup", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$ParameterGroup", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$ParameterGroup", "$$Result", "\u2581update", "$$ParameterGroup", "$$(Update", "$$ParameterGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$ParameterGroup", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override Object Clone() {\n    SeriesChartGroupIndexRecord rec = new SeriesChartGroupIndexRecord();\n    rec.field_1_chartGroupIndex = field_1_chartGroupIndex;\n    return rec;\n}\n", "java": "public SeriesChartGroupIndexRecord clone() {\n    return copy();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581Object", "\u2581Clone()", "\u2581{"], ["\u2581S", "$$eries", "$$Ch", "$$art", "$$Group", "$$Index", "$$Record", "\u2581rec", "\u2581=", "\u2581new", "\u2581S", "$$eries", "$$Ch", "$$art", "$$Group", "$$Index", "$$Record", "$$()", "$$;"], ["\u2581rec", "$$.", "$$field_1_", "$$ch", "$$art", "$$Group", "$$Index", "\u2581=", "\u2581field_1_", "$$ch", "$$art", "$$Group", "$$Index", "$$;"], ["\u2581return", "\u2581rec", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$eries", "$$Ch", "$$art", "$$Group", "$$Index", "$$Record", "\u2581clone()", "\u2581{"], ["\u2581return", "\u2581copy", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public static double CalcDistanceFromErrPct(IShape shape, double distErrPct, SpatialContext ctx) {\n    if (distErrPct < 0 || distErrPct > 0.5) {\n        throw new ArgumentException(\"distErrPct \" + distErrPct + \" must be between [0 to 0.5]\", \"distErrPct\");\n    }\n    if (distErrPct == 0 || shape is IPoint) {\n        return 0;\n    }\n    IRectangle bbox = shape.BoundingBox;\n    IPoint ctr = bbox.Center;\n    double y = (ctr.Y >= 0 ? bbox.MaxY : bbox.MinY);\n    double diagonalDist = ctx.DistCalc.Distance(ctr, bbox.MaxX, y);\n    return diagonalDist * distErrPct;\n}\n", "java": "public static double calcDistanceFromErrPct(Shape shape, double distErrPct, SpatialContext ctx) {\n    if (distErrPct < 0 || distErrPct > 0.5) {\n        throw new IllegalArgumentException(\"distErrPct \" + distErrPct + \" must be between [0 to 0.5]\");\n    }\n    if (distErrPct == 0 || shape instanceof Point) {\n        return 0;\n    }\n    Rectangle bbox = shape.getBoundingBox();\n    Point ctr = bbox.getCenter();\n    double y = (ctr.getY() >= 0 ? bbox.getMaxY() : bbox.getMinY());\n    double diagonalDist = ctx.getDistCalc().distance(ctr, bbox.getMaxX(), y);\n    return diagonalDist * distErrPct;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581C", "$$al", "$$c", "$$Distance", "$$From", "$$E", "$$rr", "$$P", "$$ct", "$$(I", "$$Shape", "\u2581shape", "$$,", "\u2581double", "\u2581d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "$$,", "\u2581Sp", "$$ati", "$$al", "$$Context", "\u2581ctx", "$$)", "\u2581{"], ["\u2581if", "\u2581(d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "\u2581<", "\u25810", "\u2581||", "\u2581d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "\u2581>", "\u25810", "$$.", "$$5", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581ArgumentException(\"", "$$d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "\u2581\"", "\u2581+", "\u2581d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "\u2581+", "\u2581\"", "\u2581must", "\u2581be", "\u2581b", "$$et", "$$w", "$$e", "$$en", "\u2581[", "$$0", "\u2581to", "\u25810", "$$.", "$$5", "$$]", "$$\",", "\u2581\"", "$$d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "$$\")", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "\u2581==", "\u25810", "\u2581||", "\u2581shape", "\u2581is", "\u2581I", "$$Point", "$$)", "\u2581{"], ["\u2581return", "\u25810;"], ["\u2581}"], ["\u2581I", "$$Rect", "$$ang", "$$le", "\u2581b", "$$box", "\u2581=", "\u2581shape", "$$.", "$$Bound", "$$ing", "$$Bo", "$$x", "$$;"], ["\u2581I", "$$Point", "\u2581c", "$$tr", "\u2581=", "\u2581b", "$$box", "$$.C", "$$ent", "$$er", "$$;"], ["\u2581double", "\u2581y", "\u2581=", "\u2581(", "$$ct", "$$r", "$$.", "$$Y", "\u2581>=", "\u25810", "\u2581?", "\u2581b", "$$box", "$$.", "$$Max", "$$Y", "\u2581:", "\u2581b", "$$box", "$$.", "$$Min", "$$Y", "$$)", "$$;"], ["\u2581double", "\u2581d", "$$i", "$$ag", "$$on", "$$al", "$$D", "$$ist", "\u2581=", "\u2581ctx", "$$.D", "$$ist", "$$Cal", "$$c", "$$.D", "$$istance", "$$(", "$$ct", "$$r", "$$,", "\u2581b", "$$box", "$$.", "$$Max", "$$X", "$$,", "\u2581y", "$$)", "$$;"], ["\u2581return", "\u2581d", "$$i", "$$ag", "$$on", "$$al", "$$D", "$$ist", "\u2581*", "\u2581d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581c", "$$al", "$$c", "$$Distance", "$$From", "$$E", "$$rr", "$$P", "$$ct", "$$(", "$$Shape", "\u2581shape", "$$,", "\u2581double", "\u2581d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "$$,", "\u2581Sp", "$$ati", "$$al", "$$Context", "\u2581ctx", "$$)", "\u2581{"], ["\u2581if", "\u2581(d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "\u2581<", "\u25810", "\u2581||", "\u2581d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "\u2581>", "\u25810", "$$.", "$$5", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "\u2581\"", "\u2581+", "\u2581d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "\u2581+", "\u2581\"", "\u2581must", "\u2581be", "\u2581b", "$$et", "$$w", "$$e", "$$en", "\u2581[", "$$0", "\u2581to", "\u25810", "$$.", "$$5", "$$]", "$$\")", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "\u2581==", "\u25810", "\u2581||", "\u2581shape", "\u2581instanceof", "\u2581", "$$Point", "$$)", "\u2581{"], ["\u2581return", "\u25810;"], ["\u2581}"], ["\u2581", "$$Rect", "$$ang", "$$le", "\u2581b", "$$box", "\u2581=", "\u2581shape", "$$.get", "$$Bound", "$$ing", "$$Bo", "$$x", "$$()", "$$;"], ["\u2581", "$$Point", "\u2581c", "$$tr", "\u2581=", "\u2581b", "$$box", "$$.get", "$$C", "$$ent", "$$er", "$$()", "$$;"], ["\u2581double", "\u2581y", "\u2581=", "\u2581(", "$$ct", "$$r", "$$.get", "$$Y", "$$()", "\u2581>=", "\u25810", "\u2581?", "\u2581b", "$$box", "$$.get", "$$Max", "$$Y", "$$()", "\u2581:", "\u2581b", "$$box", "$$.get", "$$Min", "$$Y", "$$())", "$$;"], ["\u2581double", "\u2581d", "$$i", "$$ag", "$$on", "$$al", "$$D", "$$ist", "\u2581=", "\u2581ctx", "$$.get", "$$D", "$$ist", "$$Cal", "$$c", "$$().", "$$d", "$$istance", "$$(", "$$ct", "$$r", "$$,", "\u2581b", "$$box", "$$.get", "$$Max", "$$X", "$$(),", "\u2581y", "$$)", "$$;"], ["\u2581return", "\u2581d", "$$i", "$$ag", "$$on", "$$al", "$$D", "$$ist", "\u2581*", "\u2581d", "$$ist", "$$E", "$$rr", "$$P", "$$ct", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int codePointAt(int index) {\n    if (index < 0 || index >= count) {\n        throw indexAndLength(index);\n    }\n    return Sharpen.CharHelper.CodePointAt(value, index, count);\n}\n", "java": "public int codePointAt(int index) {\n    if (index < 0 || index >= count) {\n        throw indexAndLength(index);\n    }\n    return Character.codePointAt(value, index, count);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581code", "$$Point", "$$At", "$$(int", "\u2581index)", "\u2581{"], ["\u2581if", "\u2581(index", "\u2581<", "\u25810", "\u2581||", "\u2581index", "\u2581>=", "\u2581count)", "\u2581{"], ["\u2581throw", "\u2581index", "$$And", "$$Length", "$$(index", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581Sharpen.", "$$Char", "$$H", "$$el", "$$per", "$$.", "$$Code", "$$Point", "$$At", "$$(value", "$$,", "\u2581index,", "\u2581count)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581code", "$$Point", "$$At", "$$(int", "\u2581index)", "\u2581{"], ["\u2581if", "\u2581(index", "\u2581<", "\u25810", "\u2581||", "\u2581index", "\u2581>=", "\u2581count)", "\u2581{"], ["\u2581throw", "\u2581index", "$$And", "$$Length", "$$(index", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581Character", "$$.", "$$code", "$$Point", "$$At", "$$(value", "$$,", "\u2581index,", "\u2581count)", "$$;"], ["\u2581}"]]}, {"cs": "public void SetPasswordVerifier(int passwordVerifier) {\n    this.passwordVerifier = passwordVerifier;\n}\n", "java": "public void setPasswordVerifier(int passwordVerifier) {\n    this.passwordVerifier = passwordVerifier;\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Set", "$$Password", "$$Veri", "$$fier", "$$(int", "\u2581p", "$$assword", "$$Veri", "$$fier", "$$)", "\u2581{"], ["\u2581this.p", "$$assword", "$$Veri", "$$fier", "\u2581=", "\u2581p", "$$assword", "$$Veri", "$$fier", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Password", "$$Veri", "$$fier", "$$(int", "\u2581p", "$$assword", "$$Veri", "$$fier", "$$)", "\u2581{"], ["\u2581this.p", "$$assword", "$$Veri", "$$fier", "\u2581=", "\u2581p", "$$assword", "$$Veri", "$$fier", "$$;"], ["\u2581}"]]}, {"cs": "public ListVaultsRequest(string accountId) {\n    _accountId = accountId;\n}\n", "java": "public ListVaultsRequest(String accountId) {\n    setAccountId(accountId);\n}\n", "cs_t": [["\u2581public", "\u2581List", "$$Vault", "$$sRequest", "$$(string", "\u2581ac", "$$count", "$$Id)", "\u2581{"], ["\u2581_", "$$ac", "$$count", "$$Id", "\u2581=", "\u2581ac", "$$count", "$$Id", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Vault", "$$sRequest", "$$(String", "\u2581ac", "$$count", "$$Id)", "\u2581{"], ["\u2581set", "$$Account", "$$Id(", "$$ac", "$$count", "$$Id)", "$$;"], ["\u2581}"]]}, {"cs": "public SquashMessageFormatter() {\n    dateFormatter = new GitDateFormatter(GitDateFormatter.Format.DEFAULT);\n}\n", "java": "public SquashMessageFormatter() {\n    dateFormatter = new GitDateFormatter(Format.DEFAULT);\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$qu", "$$ash", "$$MessageFormat", "$$ter", "$$()", "\u2581{"], ["\u2581date", "$$Format", "$$ter", "\u2581=", "\u2581new", "\u2581", "$$Git", "$$Date", "$$Format", "$$ter", "$$(", "$$Git", "$$Date", "$$Format", "$$ter", "$$.Format", "$$.", "$$DE", "$$FAUL", "$$T", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$qu", "$$ash", "$$MessageFormat", "$$ter", "$$()", "\u2581{"], ["\u2581date", "$$Format", "$$ter", "\u2581=", "\u2581new", "\u2581", "$$Git", "$$Date", "$$Format", "$$ter", "$$(", "$$Format", "$$.", "$$DE", "$$FAUL", "$$T", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public GetVideoCoverRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"GetVideoCover\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public GetVideoCoverRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"GetVideoCover\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581Get", "$$V", "$$ide", "$$o", "$$Co", "$$ver", "$$Request():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"Get", "$$V", "$$ide", "$$o", "$$Co", "$$ver", "$$\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$V", "$$ide", "$$o", "$$Co", "$$ver", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"Get", "$$V", "$$ide", "$$o", "$$Co", "$$ver", "$$\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override int lastIndexOf(object @object) {\n    int pos = _size;\n    java.util.LinkedList.Link<E> link = voidLink.previous;\n    if (@object != null) {\n        while (link != voidLink) {\n            pos--;\n            if (@object.Equals(link.data)) {\n                return pos;\n            }\n            link = link.previous;\n        }\n    }\n    else {\n        while (link != voidLink) {\n            pos--;\n            if ((object)link.data == null) {\n                return pos;\n            }\n            link = link.previous;\n        }\n    }\n    return -1;\n}\n", "java": "public int lastIndexOf(Object object) {\n    int pos = size;\n    Link<E> link = voidLink.previous;\n    if (object != null) {\n        while (link != voidLink) {\n            pos--;\n            if (object.equals(link.data)) {\n                return pos;\n            }\n            link = link.previous;\n        }\n    }\n    else {\n        while (link != voidLink) {\n            pos--;\n            if (link.data == null) {\n                return pos;\n            }\n            link = link.previous;\n        }\n    }\n    return -1;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int", "\u2581last", "$$Index", "$$Of", "$$(object", "\u2581@object)", "\u2581{"], ["\u2581int", "\u2581pos", "\u2581=", "\u2581_", "$$size", "$$;"], ["\u2581java.util.", "$$Link", "$$ed", "$$List", "$$.", "$$Link", "$$<E>", "\u2581link", "\u2581=", "\u2581void", "$$Link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581if", "\u2581(@", "$$object", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581while", "\u2581(", "$$link", "\u2581!=", "\u2581void", "$$Link", "$$)", "\u2581{"], ["\u2581pos", "$$--", "$$;"], ["\u2581if", "\u2581(@", "$$object", "$$.Equals(", "$$link", "$$.d", "$$ata", "$$))", "\u2581{"], ["\u2581return", "\u2581pos", "$$;"], ["\u2581}"], ["\u2581link", "\u2581=", "\u2581link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581while", "\u2581(", "$$link", "\u2581!=", "\u2581void", "$$Link", "$$)", "\u2581{"], ["\u2581pos", "$$--", "$$;"], ["\u2581if", "\u2581(", "$$(object", "$$)", "$$link", "$$.d", "$$ata", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581pos", "$$;"], ["\u2581}"], ["\u2581link", "\u2581=", "\u2581link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581last", "$$Index", "$$Of(", "$$Object", "\u2581object)", "\u2581{"], ["\u2581int", "\u2581pos", "\u2581=", "\u2581size", "$$;"], ["\u2581L", "$$ink", "$$<E>", "\u2581link", "\u2581=", "\u2581void", "$$Link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581if", "\u2581(", "$$object", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581while", "\u2581(", "$$link", "\u2581!=", "\u2581void", "$$Link", "$$)", "\u2581{"], ["\u2581pos", "$$--", "$$;"], ["\u2581if", "\u2581(", "$$object", "$$.equals(", "$$link", "$$.d", "$$ata", "$$))", "\u2581{"], ["\u2581return", "\u2581pos", "$$;"], ["\u2581}"], ["\u2581link", "\u2581=", "\u2581link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581while", "\u2581(", "$$link", "\u2581!=", "\u2581void", "$$Link", "$$)", "\u2581{"], ["\u2581pos", "$$--", "$$;"], ["\u2581if", "\u2581(", "$$link", "$$.d", "$$ata", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581pos", "$$;"], ["\u2581}"], ["\u2581link", "\u2581=", "\u2581link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeSpotFleetRequestsResponse DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeSpotFleetRequestsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeSpotFleetRequestsResponseUnmarshaller.Instance;\n    return Invoke<DescribeSpotFleetRequestsResponse>(request, options);\n}\n", "java": "public DescribeSpotFleetRequestsResult describeSpotFleetRequests(DescribeSpotFleetRequestsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeSpotFleetRequests(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Spot", "$$Fleet", "$$Request", "$$sResponse", "\u2581Describe", "$$Spot", "$$Fleet", "$$Request", "$$s(Describe", "$$Spot", "$$Fleet", "$$Request", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Spot", "$$Fleet", "$$Request", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Spot", "$$Fleet", "$$Request", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Spot", "$$Fleet", "$$Request", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Spot", "$$Fleet", "$$Request", "$$sResult", "\u2581describe", "$$Spot", "$$Fleet", "$$Request", "$$s(Describe", "$$Spot", "$$Fleet", "$$Request", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Spot", "$$Fleet", "$$Request", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual IndexFacesResponse IndexFaces(IndexFacesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = IndexFacesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = IndexFacesResponseUnmarshaller.Instance;\n    return Invoke<IndexFacesResponse>(request, options);\n}\n", "java": "public IndexFacesResult indexFaces(IndexFacesRequest request) {\n    request = beforeClientExecution(request);\n    return executeIndexFaces(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Index", "$$Faces", "$$Response", "\u2581Index", "$$Faces", "$$(", "$$Index", "$$Faces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Index", "$$Faces", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Index", "$$Faces", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Index", "$$Faces", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Index", "$$Faces", "$$Result", "\u2581index", "$$Faces", "$$(", "$$Index", "$$Faces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Index", "$$Faces", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override BreakIterator GetBreakIterator(int script) {\n    switch (script) {\n    case UScript.Japanese:\n        return (BreakIterator)cjkBreakIterator.Clone();\n    case UScript.Myanmar:\n        if (myanmarAsWords) {\n            return (BreakIterator)defaultBreakIterator.Clone();\n        }\n        else {\n            return (BreakIterator)myanmarSyllableIterator.Clone();\n        }\n    default:\n        return (BreakIterator)defaultBreakIterator.Clone();\n    }\n}\n", "java": "public RuleBasedBreakIterator getBreakIterator(int script) {\n    switch(script) {\n    case UScript.JAPANESE:\n        return (RuleBasedBreakIterator)cjkBreakIterator.clone();\n    case UScript.MYANMAR:\n        if (myanmarAsWords) {\n            return (RuleBasedBreakIterator)defaultBreakIterator.clone();\n        }\n        else {\n            return (RuleBasedBreakIterator)myanmarSyllableIterator.clone();\n        }\n    default:\n        return (RuleBasedBreakIterator)defaultBreakIterator.clone();\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581B", "$$reak", "$$Iterator", "\u2581Get", "$$Break", "$$Iterator", "$$(int", "\u2581s", "$$c", "$$ript", "$$)", "\u2581{"], ["\u2581switch", "\u2581(", "$$sc", "$$ript", "$$)", "\u2581{"], ["\u2581case", "\u2581", "$$U", "$$Script", "$$.", "$$J", "$$ap", "$$an", "$$es", "$$e", "$$:"], ["\u2581return", "\u2581(", "$$Break", "$$Iterator", "$$)", "$$c", "$$j", "$$k", "$$Break", "$$Iterator", "$$.", "$$Clone", "$$()", "$$;"], ["\u2581case", "\u2581", "$$U", "$$Script", "$$.M", "$$y", "$$an", "$$m", "$$ar", "$$:"], ["\u2581if", "\u2581(m", "$$y", "$$an", "$$m", "$$ar", "$$As", "$$Word", "$$s)", "\u2581{"], ["\u2581return", "\u2581(", "$$Break", "$$Iterator", "$$)", "$$de", "$$fault", "$$Break", "$$Iterator", "$$.", "$$Clone", "$$()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581(", "$$Break", "$$Iterator", "$$)", "$$m", "$$y", "$$an", "$$m", "$$ar", "$$S", "$$y", "$$ll", "$$able", "$$Iterator", "$$.", "$$Clone", "$$()", "$$;"], ["\u2581}"], ["\u2581default", "$$:"], ["\u2581return", "\u2581(", "$$Break", "$$Iterator", "$$)", "$$de", "$$fault", "$$Break", "$$Iterator", "$$.", "$$Clone", "$$()", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Rule", "$$Base", "$$d", "$$Break", "$$Iterator", "\u2581get", "$$Break", "$$Iterator", "$$(int", "\u2581s", "$$c", "$$ript", "$$)", "\u2581{"], ["\u2581switch", "$$(", "$$sc", "$$ript", "$$)", "\u2581{"], ["\u2581case", "\u2581", "$$U", "$$Script", "$$.", "$$J", "$$AP", "$$AN", "$$E", "$$SE", "$$:"], ["\u2581return", "\u2581(", "$$Rule", "$$Base", "$$d", "$$Break", "$$Iterator", "$$)", "$$c", "$$j", "$$k", "$$Break", "$$Iterator", "$$.c", "$$lone()", "$$;"], ["\u2581case", "\u2581", "$$U", "$$Script", "$$.M", "$$Y", "$$AN", "$$M", "$$AR", "$$:"], ["\u2581if", "\u2581(m", "$$y", "$$an", "$$m", "$$ar", "$$As", "$$Word", "$$s)", "\u2581{"], ["\u2581return", "\u2581(", "$$Rule", "$$Base", "$$d", "$$Break", "$$Iterator", "$$)", "$$de", "$$fault", "$$Break", "$$Iterator", "$$.c", "$$lone()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581(", "$$Rule", "$$Base", "$$d", "$$Break", "$$Iterator", "$$)", "$$m", "$$y", "$$an", "$$m", "$$ar", "$$S", "$$y", "$$ll", "$$able", "$$Iterator", "$$.c", "$$lone()", "$$;"], ["\u2581}"], ["\u2581default", "$$:"], ["\u2581return", "\u2581(", "$$Rule", "$$Base", "$$d", "$$Break", "$$Iterator", "$$)", "$$de", "$$fault", "$$Break", "$$Iterator", "$$.c", "$$lone()", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder b = new StringBuilder();\n    b.Append(\"[DCONREF]\\n\");\n    b.Append(\"    .ref\\n\");\n    b.Append(\"        .firstrow   = \").Append(firstRow).Append(\"\\n\");\n    b.Append(\"        .lastrow    = \").Append(lastRow).Append(\"\\n\");\n    b.Append(\"        .firstcol   = \").Append(firstCol).Append(\"\\n\");\n    b.Append(\"        .lastcol    = \").Append(lastCol).Append(\"\\n\");\n    b.Append(\"    .cch            = \").Append(charCount).Append(\"\\n\");\n    b.Append(\"    .stFile\\n\");\n    b.Append(\"        .h          = \").Append(charType).Append(\"\\n\");\n    b.Append(\"        .rgb        = \").Append(ReadablePath).Append(\"\\n\");\n    b.Append(\"[/DCONREF]\\n\");\n    return b.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder b = new StringBuilder();\n    b.append(\"[DCONREF]\\n\");\n    b.append(\"    .ref\\n\");\n    b.append(\"        .firstrow   = \").append(firstRow).append(\"\\n\");\n    b.append(\"        .lastrow    = \").append(lastRow).append(\"\\n\");\n    b.append(\"        .firstcol   = \").append(firstCol).append(\"\\n\");\n    b.append(\"        .lastcol    = \").append(lastCol).append(\"\\n\");\n    b.append(\"    .cch            = \").append(charCount).append(\"\\n\");\n    b.append(\"    .stFile\\n\");\n    b.append(\"        .h          = \").append(charType).append(\"\\n\");\n    b.append(\"        .rgb        = \").append(getReadablePath()).append(\"\\n\");\n    b.append(\"[/DCONREF]\\n\");\n    return b.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581b", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581b", "$$.Append(\"", "$$[", "$$D", "$$C", "$$ON", "$$REF", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$.re", "$$f", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$first", "$$row", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$first", "$$Row", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$last", "$$row", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$last", "$$Row", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$first", "$$col", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$first", "$$Col", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$last", "$$col", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$last", "$$Col", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$.c", "$$ch", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$char", "$$Count)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$st", "$$File", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$h", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$char", "$$Type", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$r", "$$g", "$$b", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$Read", "$$able", "$$Path", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.Append(\"", "$$[/", "$$D", "$$C", "$$ON", "$$REF", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581b", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581b", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581b", "$$.append(\"", "$$[", "$$D", "$$C", "$$ON", "$$REF", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$.re", "$$f", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$first", "$$row", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$first", "$$Row", "$$)", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$last", "$$row", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$last", "$$Row", "$$)", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$first", "$$col", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$first", "$$Col", "$$)", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$last", "$$col", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$last", "$$Col", "$$)", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$.c", "$$ch", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$char", "$$Count)", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$st", "$$File", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$h", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$char", "$$Type", "$$)", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581.", "$$r", "$$g", "$$b", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$get", "$$Read", "$$able", "$$Path", "$$())", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581b", "$$.append(\"", "$$[/", "$$D", "$$C", "$$ON", "$$REF", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581b", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int GetPackedGitOpenFiles() {\n    return packedGitOpenFiles;\n}\n", "java": "public int getPackedGitOpenFiles() {\n    return packedGitOpenFiles;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581Get", "$$Pack", "$$ed", "$$Git", "$$Open", "$$Files", "$$()", "\u2581{"], ["\u2581return", "\u2581p", "$$acked", "$$Git", "$$Open", "$$Files", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$Pack", "$$ed", "$$Git", "$$Open", "$$Files", "$$()", "\u2581{"], ["\u2581return", "\u2581p", "$$acked", "$$Git", "$$Open", "$$Files", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[FEATURE HEADER]\\n\");\n    buffer.Append(\"[/FEATURE HEADER]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"[FEATURE HEADER]\\n\");\n    buffer.append(\"[/FEATURE HEADER]\\n\");\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$F", "$$E", "$$AT", "$$U", "$$RE", "\u2581H", "$$EAD", "$$ER", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"[/", "$$F", "$$E", "$$AT", "$$U", "$$RE", "\u2581H", "$$EAD", "$$ER", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(\"[", "$$F", "$$E", "$$AT", "$$U", "$$RE", "\u2581H", "$$EAD", "$$ER", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"[/", "$$F", "$$E", "$$AT", "$$U", "$$RE", "\u2581H", "$$EAD", "$$ER", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public static byte[] GetToUnicodeLE(String string1) {\n    return UTF16LE.GetBytes(string1);\n}\n", "java": "public static byte[] getToUnicodeLE(String string) {\n    return string.getBytes(UTF16LE);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581byte[]", "\u2581Get", "$$To", "$$Unicode", "$$LE", "$$(String", "\u2581string", "$$1)", "\u2581{"], ["\u2581return", "\u2581", "$$UTF", "$$16", "$$LE", "$$.Get", "$$Bytes", "$$(string", "$$1)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581byte[]", "\u2581get", "$$To", "$$Unicode", "$$LE", "$$(String", "\u2581string", "$$)", "\u2581{"], ["\u2581return", "\u2581string", "$$.get", "$$Bytes", "$$(", "$$UTF", "$$16", "$$LE", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public IList<string> GetFooterLines(string keyName) {\n    return GetFooterLines(new FooterKey(keyName));\n}\n", "java": "public final List<String> getFooterLines(String keyName) {\n    return getFooterLines(new FooterKey(keyName));\n}\n", "cs_t": [["\u2581public", "\u2581IList<", "$$string>", "\u2581Get", "$$Footer", "$$L", "$$ines", "$$(string", "\u2581key", "$$Name)", "\u2581{"], ["\u2581return", "\u2581Get", "$$Footer", "$$L", "$$ines", "$$(new", "\u2581F", "$$ooter", "$$Key", "$$(key", "$$Name", "$$))", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581List<", "$$String>", "\u2581get", "$$Footer", "$$L", "$$ines", "$$(String", "\u2581key", "$$Name)", "\u2581{"], ["\u2581return", "\u2581get", "$$Footer", "$$L", "$$ines", "$$(new", "\u2581F", "$$ooter", "$$Key", "$$(key", "$$Name", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public override void Refresh() {\n    base.Refresh();\n    Rescan();\n}\n", "java": "public void refresh() {\n    super.refresh();\n    clearReferences();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Ref", "$$resh", "$$()", "\u2581{"], ["\u2581base", "$$.", "$$Ref", "$$resh", "$$()", "$$;"], ["\u2581", "$$Res", "$$c", "$$an", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581ref", "$$resh", "$$()", "\u2581{"], ["\u2581super.", "$$ref", "$$resh", "$$()", "$$;"], ["\u2581c", "$$lear", "$$Ref", "$$eren", "$$ces", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public override float get(int index) {\n    checkIndex(index);\n    return byteBuffer.getFloat(index * libcore.io.SizeOf.FLOAT);\n}\n", "java": "public float get(int index) {\n    checkIndex(index);\n    return byteBuffer.getFloat(index * SizeOf.FLOAT);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581float", "\u2581get(int", "\u2581index)", "\u2581{"], ["\u2581check", "$$Index(index", "$$)", "$$;"], ["\u2581return", "\u2581byteBuffer", "$$.get", "$$Float", "$$(index", "\u2581*", "\u2581libcore.io.SizeOf", "$$.", "$$F", "$$LO", "$$AT", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581float", "\u2581get(int", "\u2581index)", "\u2581{"], ["\u2581check", "$$Index(index", "$$)", "$$;"], ["\u2581return", "\u2581byteBuffer", "$$.get", "$$Float", "$$(index", "\u2581*", "\u2581SizeOf", "$$.", "$$F", "$$LO", "$$AT", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteDetectorResponse DeleteDetector(DeleteDetectorRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteDetectorRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteDetectorResponseUnmarshaller.Instance;\n    return Invoke<DeleteDetectorResponse>(request, options);\n}\n", "java": "public DeleteDetectorResult deleteDetector(DeleteDetectorRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteDetector(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Detector", "$$Response", "\u2581Delete", "$$Detector", "$$(Delete", "$$Detector", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Detector", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Detector", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Detector", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Detector", "$$Result", "\u2581delete", "$$Detector", "$$(Delete", "$$Detector", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Detector", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override int[] Grow() {\n    Debug.Assert(bytesStart != null);\n    return bytesStart = ArrayUtil.Grow(bytesStart, bytesStart.Length + 1);\n}\n", "java": "public int[] grow() {\n    assert bytesStart != null;\n    return bytesStart = ArrayUtil.grow(bytesStart, bytesStart.length + 1);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int[]", "\u2581Grow", "$$()", "\u2581{"], ["\u2581Debug.Assert", "$$(bytes", "$$Start", "\u2581!=", "\u2581null)", "$$;"], ["\u2581return", "\u2581bytes", "$$Start", "\u2581=", "\u2581Array", "$$Util.", "$$G", "$$row", "$$(bytes", "$$Start", "$$,", "\u2581bytes", "$$Start", "$$.Length", "\u2581+", "\u25811)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int[]", "\u2581grow", "$$()", "\u2581{"], ["\u2581assert", "\u2581bytes", "$$Start", "\u2581!=", "\u2581null", "$$;"], ["\u2581return", "\u2581bytes", "$$Start", "\u2581=", "\u2581Array", "$$Util.", "$$g", "$$row", "$$(bytes", "$$Start", "$$,", "\u2581bytes", "$$Start", "$$.length", "\u2581+", "\u25811)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListExclusionsResponse ListExclusions(ListExclusionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListExclusionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListExclusionsResponseUnmarshaller.Instance;\n    return Invoke<ListExclusionsResponse>(request, options);\n}\n", "java": "public ListExclusionsResult listExclusions(ListExclusionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListExclusions(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Ex", "$$clu", "$$sion", "$$sResponse", "\u2581List", "$$Ex", "$$clu", "$$sion", "$$s(List", "$$Ex", "$$clu", "$$sion", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Ex", "$$clu", "$$sion", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Ex", "$$clu", "$$sion", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Ex", "$$clu", "$$sion", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Ex", "$$clu", "$$sion", "$$sResult", "\u2581list", "$$Ex", "$$clu", "$$sion", "$$s(List", "$$Ex", "$$clu", "$$sion", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Ex", "$$clu", "$$sion", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static SpatialStrategy GetSpatialStrategy(int roundNumber) {\n    SpatialStrategy result;\n    if (!spatialStrategyCache.TryGetValue(roundNumber, out result) || result == null) {\n        throw new InvalidOperationException(\"Strategy should have been init'ed by SpatialDocMaker by now\");\n    }\n    return result;\n}\n", "java": "public static SpatialStrategy getSpatialStrategy(int roundNumber) {\n    SpatialStrategy result = spatialStrategyCache.get(roundNumber);\n    if (result == null) {\n        throw new IllegalStateException(\"Strategy should have been init'ed by SpatialDocMaker by now\");\n    }\n    return result;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581Sp", "$$ati", "$$al", "$$Strategy", "\u2581Get", "$$Sp", "$$ati", "$$al", "$$Strategy", "$$(int", "\u2581", "$$round", "$$Number", "$$)", "\u2581{"], ["\u2581Sp", "$$ati", "$$al", "$$Strategy", "\u2581result", "$$;"], ["\u2581if", "\u2581(!", "$$sp", "$$ati", "$$al", "$$Strategy", "$$Cache", "$$.", "$$TryGet", "$$Value(", "$$round", "$$Number", "$$,", "\u2581out", "\u2581result", "$$)", "\u2581||", "\u2581result", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581InvalidOperationException(\"", "$$Strategy", "\u2581sh", "$$ould", "\u2581h", "$$a", "$$ve", "\u2581be", "$$en", "\u2581in", "$$it", "$$'", "$$ed", "\u2581b", "$$y", "\u2581Sp", "$$ati", "$$al", "$$Doc", "$$Ma", "$$ker", "\u2581b", "$$y", "\u2581n", "$$ow", "$$\")", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581Sp", "$$ati", "$$al", "$$Strategy", "\u2581get", "$$Sp", "$$ati", "$$al", "$$Strategy", "$$(int", "\u2581", "$$round", "$$Number", "$$)", "\u2581{"], ["\u2581Sp", "$$ati", "$$al", "$$Strategy", "\u2581result", "\u2581=", "\u2581sp", "$$ati", "$$al", "$$Strategy", "$$Cache", "$$.get(", "$$round", "$$Number", "$$)", "$$;"], ["\u2581if", "\u2581(result", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalStateException(\"", "$$Strategy", "\u2581sh", "$$ould", "\u2581h", "$$a", "$$ve", "\u2581be", "$$en", "\u2581in", "$$it", "$$'", "$$ed", "\u2581b", "$$y", "\u2581Sp", "$$ati", "$$al", "$$Doc", "$$Ma", "$$ker", "\u2581b", "$$y", "\u2581n", "$$ow", "$$\")", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]]}, {"cs": "public virtual RestoreDBClusterToPointInTimeResponse RestoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = RestoreDBClusterToPointInTimeRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = RestoreDBClusterToPointInTimeResponseUnmarshaller.Instance;\n    return Invoke<RestoreDBClusterToPointInTimeResponse>(request, options);\n}\n", "java": "public DBCluster restoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request) {\n    request = beforeClientExecution(request);\n    return executeRestoreDBClusterToPointInTime(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581R", "$$estore", "$$DBCluster", "$$To", "$$Point", "$$In", "$$Time", "$$Response", "\u2581R", "$$estore", "$$DBCluster", "$$To", "$$Point", "$$In", "$$Time", "$$(", "$$Rest", "$$ore", "$$DBCluster", "$$To", "$$Point", "$$In", "$$Time", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581R", "$$estore", "$$DBCluster", "$$To", "$$Point", "$$In", "$$Time", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581R", "$$estore", "$$DBCluster", "$$To", "$$Point", "$$In", "$$Time", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Rest", "$$ore", "$$DBCluster", "$$To", "$$Point", "$$In", "$$Time", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$B", "$$Cluster", "\u2581r", "$$estore", "$$DBCluster", "$$To", "$$Point", "$$In", "$$Time", "$$(", "$$Rest", "$$ore", "$$DBCluster", "$$To", "$$Point", "$$In", "$$Time", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Rest", "$$ore", "$$DBCluster", "$$To", "$$Point", "$$In", "$$Time", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort(field_1_categoryDataType);\n    out1.WriteShort(field_2_valuesDataType);\n    out1.WriteShort(field_3_numCategories);\n    out1.WriteShort(field_4_numValues);\n    out1.WriteShort(field_5_bubbleSeriesType);\n    out1.WriteShort(field_6_numBubbleValues);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort(field_1_categoryDataType);\n    out.writeShort(field_2_valuesDataType);\n    out.writeShort(field_3_numCategories);\n    out.writeShort(field_4_numValues);\n    out.writeShort(field_5_bubbleSeriesType);\n    out.writeShort(field_6_numBubbleValues);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$field_1_", "$$c", "$$ateg", "$$ory", "$$Data", "$$Type", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$field_2_", "$$values", "$$Data", "$$Type", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$field_3_", "$$num", "$$Categ", "$$or", "$$ies", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$field_4_", "$$num", "$$Values", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$field_", "$$5_", "$$b", "$$ub", "$$b", "$$le", "$$S", "$$eries", "$$Type", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$field_", "$$6_", "$$num", "$$B", "$$ub", "$$b", "$$le", "$$Values", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(", "$$field_1_", "$$c", "$$ateg", "$$ory", "$$Data", "$$Type", "$$)", "$$;"], ["\u2581out.writeShort(", "$$field_2_", "$$values", "$$Data", "$$Type", "$$)", "$$;"], ["\u2581out.writeShort(", "$$field_3_", "$$num", "$$Categ", "$$or", "$$ies", "$$)", "$$;"], ["\u2581out.writeShort(", "$$field_4_", "$$num", "$$Values", "$$)", "$$;"], ["\u2581out.writeShort(", "$$field_", "$$5_", "$$b", "$$ub", "$$b", "$$le", "$$S", "$$eries", "$$Type", "$$)", "$$;"], ["\u2581out.writeShort(", "$$field_", "$$6_", "$$num", "$$B", "$$ub", "$$b", "$$le", "$$Values", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual PostAgentProfileResponse PostAgentProfile(PostAgentProfileRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = PostAgentProfileRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = PostAgentProfileResponseUnmarshaller.Instance;\n    return Invoke<PostAgentProfileResponse>(request, options);\n}\n", "java": "public PostAgentProfileResult postAgentProfile(PostAgentProfileRequest request) {\n    request = beforeClientExecution(request);\n    return executePostAgentProfile(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Po", "$$st", "$$A", "$$g", "$$ent", "$$Profile", "$$Response", "\u2581", "$$Po", "$$st", "$$A", "$$g", "$$ent", "$$Profile", "$$(", "$$Po", "$$st", "$$A", "$$g", "$$ent", "$$Profile", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581", "$$Po", "$$st", "$$A", "$$g", "$$ent", "$$Profile", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581", "$$Po", "$$st", "$$A", "$$g", "$$ent", "$$Profile", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Po", "$$st", "$$A", "$$g", "$$ent", "$$Profile", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Po", "$$st", "$$A", "$$g", "$$ent", "$$Profile", "$$Result", "\u2581po", "$$st", "$$A", "$$g", "$$ent", "$$Profile", "$$(", "$$Po", "$$st", "$$A", "$$g", "$$ent", "$$Profile", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Po", "$$st", "$$A", "$$g", "$$ent", "$$Profile", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ParseTreePattern CompileParseTreePattern(string pattern, int patternRuleIndex) {\n    if (((ITokenStream)InputStream) != null) {\n        ITokenSource tokenSource = ((ITokenStream)InputStream).TokenSource;\n        if (tokenSource is Lexer) {\n            Lexer lexer = (Lexer)tokenSource;\n            return CompileParseTreePattern(pattern, patternRuleIndex, lexer);\n        }\n    }\n    throw new NotSupportedException(\"Parser can't discover a lexer to use\");\n}\n", "java": "public ParseTreePattern compileParseTreePattern(String pattern, int patternRuleIndex) {\n    if ( getTokenStream()!=null ) {\n        TokenSource tokenSource = getTokenStream().getTokenSource();\n        if ( tokenSource instanceof Lexer ) {\n            Lexer lexer = (Lexer)tokenSource;\n            return compileParseTreePattern(pattern, patternRuleIndex, lexer);\n        }\n    }\n    throw new UnsupportedOperationException(\"Parser can't discover a lexer to use\");\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Parse", "$$Tree", "$$Pattern", "\u2581Comp", "$$ile", "$$ParseTree", "$$Pattern", "$$(string", "\u2581pattern", "$$,", "\u2581int", "\u2581pattern", "$$Rule", "$$Index)", "\u2581{"], ["\u2581if", "\u2581((", "$$(I", "$$TokenStream", "$$)", "$$InputStream", "$$)", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581I", "$$Token", "$$Source", "\u2581token", "$$Source", "\u2581=", "\u2581((", "$$I", "$$TokenStream", "$$)", "$$InputStream", "$$).", "$$Token", "$$Source", "$$;"], ["\u2581if", "\u2581(", "$$token", "$$Source", "\u2581is", "\u2581Lex", "$$er)", "\u2581{"], ["\u2581Lex", "$$er", "\u2581lex", "$$er", "\u2581=", "\u2581(", "$$Lex", "$$er)", "$$token", "$$Source", "$$;"], ["\u2581return", "\u2581Comp", "$$ile", "$$ParseTree", "$$Pattern", "$$(p", "$$attern", "$$,", "\u2581pattern", "$$Rule", "$$Index,", "\u2581lex", "$$er)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581Not", "$$Supported", "$$Exception(\"", "$$Parser", "\u2581c", "$$an", "$$'", "$$t", "\u2581dis", "$$co", "$$ver", "\u2581a", "\u2581lex", "$$er", "\u2581to", "\u2581use", "$$\")", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Parse", "$$Tree", "$$Pattern", "\u2581comp", "$$ile", "$$ParseTree", "$$Pattern", "$$(String", "\u2581pattern", "$$,", "\u2581int", "\u2581pattern", "$$Rule", "$$Index)", "\u2581{"], ["\u2581if", "\u2581(", "\u2581get", "$$TokenStream", "$$()", "$$!", "$$=", "$$null", "\u2581)", "\u2581{"], ["\u2581Token", "$$Source", "\u2581token", "$$Source", "\u2581=", "\u2581get", "$$TokenStream", "$$().get", "$$Token", "$$Source", "$$()", "$$;"], ["\u2581if", "\u2581(", "\u2581token", "$$Source", "\u2581instanceof", "\u2581Lex", "$$er", "\u2581)", "\u2581{"], ["\u2581Lex", "$$er", "\u2581lex", "$$er", "\u2581=", "\u2581(", "$$Lex", "$$er)", "$$token", "$$Source", "$$;"], ["\u2581return", "\u2581comp", "$$ile", "$$ParseTree", "$$Pattern", "$$(p", "$$attern", "$$,", "\u2581pattern", "$$Rule", "$$Index,", "\u2581lex", "$$er)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581Un", "$$supported", "$$Operation", "$$Exception(\"", "$$Parser", "\u2581c", "$$an", "$$'", "$$t", "\u2581dis", "$$co", "$$ver", "\u2581a", "\u2581lex", "$$er", "\u2581to", "\u2581use", "$$\")", "$$;"], ["\u2581}"]]}, {"cs": "public virtual BacktrackDBClusterResponse BacktrackDBCluster(BacktrackDBClusterRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = BacktrackDBClusterRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = BacktrackDBClusterResponseUnmarshaller.Instance;\n    return Invoke<BacktrackDBClusterResponse>(request, options);\n}\n", "java": "public BacktrackDBClusterResult backtrackDBCluster(BacktrackDBClusterRequest request) {\n    request = beforeClientExecution(request);\n    return executeBacktrackDBCluster(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581B", "$$ack", "$$tra", "$$ck", "$$DBCluster", "$$Response", "\u2581B", "$$ack", "$$tra", "$$ck", "$$DBCluster", "$$(", "$$Back", "$$tra", "$$ck", "$$DBCluster", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581B", "$$ack", "$$tra", "$$ck", "$$DBCluster", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581B", "$$ack", "$$tra", "$$ck", "$$DBCluster", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Back", "$$tra", "$$ck", "$$DBCluster", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581B", "$$ack", "$$tra", "$$ck", "$$DBCluster", "$$Result", "\u2581b", "$$ack", "$$tra", "$$ck", "$$DBCluster", "$$(", "$$Back", "$$tra", "$$ck", "$$DBCluster", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Back", "$$tra", "$$ck", "$$DBCluster", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string GetName() {\n    return strategyName;\n}\n", "java": "public String getName() {\n    return strategyName;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581Get", "$$Name()", "\u2581{"], ["\u2581return", "\u2581str", "$$ategy", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Name()", "\u2581{"], ["\u2581return", "\u2581str", "$$ategy", "$$Name", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void CopyTo(byte[] b, int o) {\n    FormatHexByte(b, o + 0, w1);\n    FormatHexByte(b, o + 8, w2);\n    FormatHexByte(b, o + 16, w3);\n    FormatHexByte(b, o + 24, w4);\n    FormatHexByte(b, o + 32, w5);\n}\n", "java": "public void copyTo(byte[] b, int o) {\n    formatHexByte(b, o + 0, w1);\n    formatHexByte(b, o + 8, w2);\n    formatHexByte(b, o + 16, w3);\n    formatHexByte(b, o + 24, w4);\n    formatHexByte(b, o + 32, w5);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Copy", "$$To", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581o)", "\u2581{"], ["\u2581Format", "$$Hex", "$$Byte", "$$(b,", "\u2581o", "\u2581+", "\u25810,", "\u2581w", "$$1)", "$$;"], ["\u2581Format", "$$Hex", "$$Byte", "$$(b,", "\u2581o", "\u2581+", "\u25818", "$$,", "\u2581w", "$$2)", "$$;"], ["\u2581Format", "$$Hex", "$$Byte", "$$(b,", "\u2581o", "\u2581+", "\u258116", "$$,", "\u2581w", "$$3", "$$)", "$$;"], ["\u2581Format", "$$Hex", "$$Byte", "$$(b,", "\u2581o", "\u2581+", "\u25812", "$$4", "$$,", "\u2581w", "$$4", "$$)", "$$;"], ["\u2581Format", "$$Hex", "$$Byte", "$$(b,", "\u2581o", "\u2581+", "\u2581", "$$32", "$$,", "\u2581w", "$$5", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581copy", "$$To", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581o)", "\u2581{"], ["\u2581format", "$$Hex", "$$Byte", "$$(b,", "\u2581o", "\u2581+", "\u25810,", "\u2581w", "$$1)", "$$;"], ["\u2581format", "$$Hex", "$$Byte", "$$(b,", "\u2581o", "\u2581+", "\u25818", "$$,", "\u2581w", "$$2)", "$$;"], ["\u2581format", "$$Hex", "$$Byte", "$$(b,", "\u2581o", "\u2581+", "\u258116", "$$,", "\u2581w", "$$3", "$$)", "$$;"], ["\u2581format", "$$Hex", "$$Byte", "$$(b,", "\u2581o", "\u2581+", "\u25812", "$$4", "$$,", "\u2581w", "$$4", "$$)", "$$;"], ["\u2581format", "$$Hex", "$$Byte", "$$(b,", "\u2581o", "\u2581+", "\u2581", "$$32", "$$,", "\u2581w", "$$5", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static IntList LineMap(byte[] buf, int ptr, int end) {\n    IntList map = new IntList((end - ptr) / 36);\n    map.FillTo(1, int.MinValue);\n    for (; ptr < end; ptr = NextLF(buf, ptr)) {\n        map.Add(ptr);\n    }\n    map.Add(end);\n    return map;\n}\n", "java": "public static final IntList lineMap(byte[] buf, int ptr, int end) {\n    IntList map = new IntList((end - ptr) / 36);\n    map.fillTo(1, Integer.MIN_VALUE);\n    for (; ptr < end; ptr = nextLF(buf, ptr)) {\n        map.add(ptr);\n    }\n    map.add(end);\n    return map;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581Int", "$$List", "\u2581L", "$$ine", "$$Map", "$$(byte[]", "\u2581buf", "$$,", "\u2581int", "\u2581ptr", "$$,", "\u2581int", "\u2581end)", "\u2581{"], ["\u2581Int", "$$List", "\u2581map", "\u2581=", "\u2581new", "\u2581Int", "$$List", "$$((", "$$end", "\u2581-", "\u2581ptr", "$$)", "\u2581/", "\u25813", "$$6", "$$)", "$$;"], ["\u2581map", "$$.", "$$Fill", "$$To(", "$$1,", "\u2581int", "$$.", "$$Min", "$$Value)", "$$;"], ["\u2581for", "\u2581(", "$$;", "\u2581ptr", "\u2581<", "\u2581end", "$$;", "\u2581ptr", "\u2581=", "\u2581Next", "$$L", "$$F", "$$(b", "$$uf", "$$,", "\u2581ptr", "$$))", "\u2581{"], ["\u2581map", "$$.Add(", "$$ptr", "$$)", "$$;"], ["\u2581}"], ["\u2581map", "$$.Add(", "$$end", "$$)", "$$;"], ["\u2581return", "\u2581map", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581final", "\u2581Int", "$$List", "\u2581line", "$$Map", "$$(byte[]", "\u2581buf", "$$,", "\u2581int", "\u2581ptr", "$$,", "\u2581int", "\u2581end)", "\u2581{"], ["\u2581Int", "$$List", "\u2581map", "\u2581=", "\u2581new", "\u2581Int", "$$List", "$$((", "$$end", "\u2581-", "\u2581ptr", "$$)", "\u2581/", "\u25813", "$$6", "$$)", "$$;"], ["\u2581map", "$$.", "$$fill", "$$To(", "$$1,", "\u2581Integ", "$$er.", "$$M", "$$IN", "$$_", "$$VALU", "$$E", "$$)", "$$;"], ["\u2581for", "\u2581(", "$$;", "\u2581ptr", "\u2581<", "\u2581end", "$$;", "\u2581ptr", "\u2581=", "\u2581next", "$$L", "$$F", "$$(b", "$$uf", "$$,", "\u2581ptr", "$$))", "\u2581{"], ["\u2581map", "$$.add(", "$$ptr", "$$)", "$$;"], ["\u2581}"], ["\u2581map", "$$.add(", "$$end", "$$)", "$$;"], ["\u2581return", "\u2581map", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ICollection<ObjectId> GetAdditionalHaves() {\n    return Sharpen.Collections.EmptySet<ObjectId>();\n}\n", "java": "public Set<ObjectId> getAdditionalHaves() {\n    return Collections.emptySet();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581I", "$$Collection<", "$$ObjectId", "$$>", "\u2581Get", "$$Add", "$$itional", "$$H", "$$a", "$$v", "$$es", "$$()", "\u2581{"], ["\u2581return", "\u2581Sharpen.", "$$Collections.", "$$Empty", "$$Set<", "$$ObjectId", "$$>", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Set", "$$<", "$$ObjectId", "$$>", "\u2581get", "$$Add", "$$itional", "$$H", "$$a", "$$v", "$$es", "$$()", "\u2581{"], ["\u2581return", "\u2581", "$$Collections.", "$$e", "$$mpty", "$$Set", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public override long RamBytesUsed() {\n    return _termsCache.Values.Sum(simpleTextTerms => (simpleTextTerms != null) ? simpleTextTerms.RamBytesUsed() : 0);\n}\n", "java": "public synchronized long ramBytesUsed() {\n    long sizeInBytes = BASE_RAM_BYTES_USED + fields.size() * 2 * RamUsageEstimator.NUM_BYTES_OBJECT_REF;\n    for(SimpleTextTerms simpleTextTerms : termsCache.values()) {\n        sizeInBytes += (simpleTextTerms!=null) ? simpleTextTerms.ramBytesUsed() : 0;\n    }\n    return sizeInBytes;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581long", "\u2581Ram", "$$BytesUsed()", "\u2581{"], ["\u2581return", "\u2581_", "$$term", "$$s", "$$Cache", "$$.", "$$Values", "$$.S", "$$um", "$$(", "$$si", "$$mple", "$$Text", "$$Terms", "\u2581=", "$$>", "\u2581(", "$$si", "$$mple", "$$Text", "$$Terms", "\u2581!=", "\u2581null)", "\u2581?", "\u2581s", "$$imple", "$$Text", "$$Term", "$$s.", "$$R", "$$am", "$$BytesUsed()", "\u2581:", "\u25810)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581synchronized", "\u2581long", "\u2581ram", "$$BytesUsed()", "\u2581{"], ["\u2581long", "\u2581sizeInBytes", "\u2581=", "\u2581B", "$$AS", "$$E_", "$$R", "$$AM", "$$_BYTES_", "$$U", "$$SE", "$$D", "\u2581+", "\u2581field", "$$s.size()", "\u2581*", "\u25812", "\u2581*", "\u2581RamUsageEstimator.NUM_BYTES_", "$$OBJECT_", "$$REF", "$$;"], ["\u2581for", "$$(", "$$Simple", "$$Text", "$$Terms", "\u2581s", "$$imple", "$$Text", "$$Terms", "\u2581:", "\u2581term", "$$s", "$$Cache", "$$.", "$$values", "$$())", "\u2581{"], ["\u2581sizeInBytes", "\u2581+=", "\u2581(", "$$si", "$$mple", "$$Text", "$$Terms", "$$!", "$$=", "$$null", "$$)", "\u2581?", "\u2581s", "$$imple", "$$Text", "$$Term", "$$s.", "$$ram", "$$BytesUsed()", "\u2581:", "\u25810;"], ["\u2581}"], ["\u2581return", "\u2581sizeInBytes", "$$;"], ["\u2581}"]]}, {"cs": "public String ToXml(String tab) {\n    StringBuilder builder = new StringBuilder();\n    builder.Append(tab).Append(\"<\").Append(RecordName).Append(\">\\n\");\n    for (IEnumerator iterator = EscherRecords.GetEnumerator(); iterator.MoveNext(); ) {\n        EscherRecord escherRecord = (EscherRecord)iterator.Current;\n        builder.Append(escherRecord.ToXml(tab + \"\\t\"));\n    }\n    builder.Append(tab).Append(\"</\").Append(RecordName).Append(\">\\n\");\n    return builder.ToString();\n}\n", "java": "public String toXml(String tab) {\n    StringBuilder builder = new StringBuilder();\n    builder.append(tab).append(\"<\").append(getRecordName()).append(\">\\n\");\n    for (EscherRecord escherRecord : getEscherRecords()) {\n        builder.append(escherRecord.toXml(tab + \"\\t\"));\n    }\n    builder.append(tab).append(\"</\").append(getRecordName()).append(\">\\n\");\n    return builder.toString();\n}\n", "cs_t": [["\u2581public", "\u2581String", "\u2581To", "$$X", "$$m", "$$l", "$$(String", "\u2581tab", "$$)", "\u2581{"], ["\u2581StringBuilder", "\u2581build", "$$er", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581build", "$$er", "$$.Append(", "$$t", "$$ab", "$$)", "$$.Append(\"", "$$<", "$$\").Append(", "$$Record", "$$Name)", "$$.Append(\"", "$$>", "$$\\n", "$$\")", "$$;"], ["\u2581for", "\u2581(I", "$$Enumerator", "\u2581iterator", "\u2581=", "\u2581Escher", "$$Record", "$$s.Get", "$$Enumerator", "$$()", "$$;", "\u2581iterator", "$$.", "$$Mo", "$$ve", "$$Next()", "$$;", "\u2581)", "\u2581{"], ["\u2581Escher", "$$Record", "\u2581escher", "$$Record", "\u2581=", "\u2581(", "$$Escher", "$$Record)", "$$iterator", "$$.C", "$$urrent", "$$;"], ["\u2581build", "$$er", "$$.Append(", "$$escher", "$$Record", "$$.To", "$$X", "$$m", "$$l", "$$(t", "$$ab", "\u2581+", "\u2581\"", "$$\\", "$$t", "$$\"", "$$))", "$$;"], ["\u2581}"], ["\u2581build", "$$er", "$$.Append(", "$$t", "$$ab", "$$)", "$$.Append(\"", "$$<", "$$/", "$$\").Append(", "$$Record", "$$Name)", "$$.Append(\"", "$$>", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581build", "$$er.", "$$To", "$$String()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581to", "$$X", "$$m", "$$l", "$$(String", "\u2581tab", "$$)", "\u2581{"], ["\u2581StringBuilder", "\u2581build", "$$er", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581build", "$$er", "$$.append(", "$$t", "$$ab", "$$)", "$$.append(\"", "$$<", "$$\").append(", "$$get", "$$Record", "$$Name", "$$())", "$$.append(\"", "$$>", "$$\\n", "$$\")", "$$;"], ["\u2581for", "\u2581(", "$$Escher", "$$Record", "\u2581escher", "$$Record", "\u2581:", "\u2581get", "$$Escher", "$$Records", "$$())", "\u2581{"], ["\u2581build", "$$er", "$$.append(", "$$escher", "$$Record", "$$.to", "$$X", "$$m", "$$l", "$$(t", "$$ab", "\u2581+", "\u2581\"", "$$\\", "$$t", "$$\"", "$$))", "$$;"], ["\u2581}"], ["\u2581build", "$$er", "$$.append(", "$$t", "$$ab", "$$)", "$$.append(\"", "$$<", "$$/", "$$\").append(", "$$get", "$$Record", "$$Name", "$$())", "$$.append(\"", "$$>", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581build", "$$er.", "$$to", "$$String()", "$$;"], ["\u2581}"]]}, {"cs": "public override TokenStream Create(TokenStream input) {\n    return new GalicianMinimalStemFilter(input);\n}\n", "java": "public TokenStream create(TokenStream input) {\n    return new GalicianMinimalStemFilter(input);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581TokenStream", "\u2581Create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581G", "$$al", "$$ic", "$$ian", "$$Min", "$$imal", "$$Stem", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581TokenStream", "\u2581create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581G", "$$al", "$$ic", "$$ian", "$$Min", "$$imal", "$$Stem", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    StringBuilder r = new StringBuilder();\n    r.Append(\"Commit\");\n    r.Append(\"={\\n\");\n    r.Append(\"tree \");\n    r.Append(treeId != null ? treeId.Name : \"NOT_SET\");\n    r.Append(\"\\n\");\n    foreach (ObjectId p in parentIds) {\n        r.Append(\"parent \");\n        r.Append(p.Name);\n        r.Append(\"\\n\");\n    }\n    r.Append(\"author \");\n    r.Append(author != null ? author.ToString() : \"NOT_SET\");\n    r.Append(\"\\n\");\n    r.Append(\"committer \");\n    r.Append(committer != null ? committer.ToString() : \"NOT_SET\");\n    r.Append(\"\\n\");\n    if (encoding != null && encoding != Constants.CHARSET) {\n        r.Append(\"encoding \");\n        r.Append(encoding.Name());\n        r.Append(\"\\n\");\n    }\n    r.Append(\"\\n\");\n    r.Append(message != null ? message : string.Empty);\n    r.Append(\"}\");\n    return r.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder r = new StringBuilder();\n    r.append(\"Commit\");\n    r.append(\"={\\n\");\n    r.append(\"tree \");\n    r.append(treeId != null ? treeId.name() : \"NOT_SET\");\n    r.append(\"\\n\");\n    for (ObjectId p : parentIds) {\n        r.append(\"parent \");\n        r.append(p.name());\n        r.append(\"\\n\");\n    }\n    r.append(\"author \");\n    r.append(author != null ? author.toString() : \"NOT_SET\");\n    r.append(\"\\n\");\n    r.append(\"committer \");\n    r.append(committer != null ? committer.toString() : \"NOT_SET\");\n    r.append(\"\\n\");\n    r.append(\"gpgSignature \");\n    r.append(gpgSignature != null ? gpgSignature.toString() : \"NOT_SET\");\n    r.append(\"\\n\");\n    if (encoding != null && !References.isSameObject(encoding, UTF_8)) {\n        r.append(\"encoding \");\n        r.append(encoding.name());\n        r.append(\"\\n\");\n    }\n    r.append(\"\\n\");\n    r.append(message != null ? message : \"\");\n    r.append(\"}\");\n    return r.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581r", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581r", "$$.Append(\"", "$$Commit", "$$\")", "$$;"], ["\u2581r", "$$.Append(\"", "$$=", "$${", "$$\\n", "$$\")", "$$;"], ["\u2581r", "$$.Append(\"", "$$t", "$$ree", "\u2581\")", "$$;"], ["\u2581r", "$$.Append(", "$$t", "$$ree", "$$Id", "\u2581!=", "\u2581null", "\u2581?", "\u2581t", "$$ree", "$$Id", "$$.", "$$Name", "\u2581:", "\u2581\"", "$$NO", "$$T_", "$$SE", "$$T", "$$\")", "$$;"], ["\u2581r", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581foreach", "\u2581(", "$$ObjectId", "\u2581p", "\u2581in", "\u2581parent", "$$Id", "$$s)", "\u2581{"], ["\u2581r", "$$.Append(\"", "$$parent", "\u2581\")", "$$;"], ["\u2581r", "$$.Append(", "$$p", "$$.", "$$Name)", "$$;"], ["\u2581r", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581r", "$$.Append(\"", "$$a", "$$uthor", "\u2581\")", "$$;"], ["\u2581r", "$$.Append(", "$$a", "$$uthor", "\u2581!=", "\u2581null", "\u2581?", "\u2581a", "$$uthor", "$$.ToString()", "\u2581:", "\u2581\"", "$$NO", "$$T_", "$$SE", "$$T", "$$\")", "$$;"], ["\u2581r", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581r", "$$.Append(\"", "$$com", "$$mit", "$$ter", "\u2581\")", "$$;"], ["\u2581r", "$$.Append(", "$$com", "$$mit", "$$ter", "\u2581!=", "\u2581null", "\u2581?", "\u2581commit", "$$ter", "$$.ToString()", "\u2581:", "\u2581\"", "$$NO", "$$T_", "$$SE", "$$T", "$$\")", "$$;"], ["\u2581r", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581if", "\u2581(", "$$enc", "$$od", "$$ing", "\u2581!=", "\u2581null", "\u2581&&", "\u2581", "$$enc", "$$od", "$$ing", "\u2581!=", "\u2581Constants.", "$$CHAR", "$$SE", "$$T", "$$)", "\u2581{"], ["\u2581r", "$$.Append(\"", "$$enc", "$$od", "$$ing", "\u2581\")", "$$;"], ["\u2581r", "$$.Append(", "$$enc", "$$od", "$$ing", "$$.", "$$Name", "$$())", "$$;"], ["\u2581r", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581r", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581r", "$$.Append(", "$$m", "$$essage", "\u2581!=", "\u2581null", "\u2581?", "\u2581message", "\u2581:", "\u2581string", "$$.", "$$Empty", "$$)", "$$;"], ["\u2581r", "$$.Append(\"", "$$}", "$$\")", "$$;"], ["\u2581return", "\u2581r", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581r", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581r", "$$.append(\"", "$$Commit", "$$\")", "$$;"], ["\u2581r", "$$.append(\"", "$$=", "$${", "$$\\n", "$$\")", "$$;"], ["\u2581r", "$$.append(\"", "$$t", "$$ree", "\u2581\")", "$$;"], ["\u2581r", "$$.append(", "$$t", "$$ree", "$$Id", "\u2581!=", "\u2581null", "\u2581?", "\u2581t", "$$ree", "$$Id", "$$.", "$$name", "$$()", "\u2581:", "\u2581\"", "$$NO", "$$T_", "$$SE", "$$T", "$$\")", "$$;"], ["\u2581r", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581for", "\u2581(", "$$ObjectId", "\u2581p", "\u2581:", "\u2581parent", "$$Id", "$$s)", "\u2581{"], ["\u2581r", "$$.append(\"", "$$parent", "\u2581\")", "$$;"], ["\u2581r", "$$.append(", "$$p", "$$.", "$$name", "$$())", "$$;"], ["\u2581r", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581r", "$$.append(\"", "$$a", "$$uthor", "\u2581\")", "$$;"], ["\u2581r", "$$.append(", "$$a", "$$uthor", "\u2581!=", "\u2581null", "\u2581?", "\u2581a", "$$uthor", "$$.toString()", "\u2581:", "\u2581\"", "$$NO", "$$T_", "$$SE", "$$T", "$$\")", "$$;"], ["\u2581r", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581r", "$$.append(\"", "$$com", "$$mit", "$$ter", "\u2581\")", "$$;"], ["\u2581r", "$$.append(", "$$com", "$$mit", "$$ter", "\u2581!=", "\u2581null", "\u2581?", "\u2581commit", "$$ter", "$$.toString()", "\u2581:", "\u2581\"", "$$NO", "$$T_", "$$SE", "$$T", "$$\")", "$$;"], ["\u2581r", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581r", "$$.append(\"", "$$g", "$$pg", "$$Sign", "$$atu", "$$re", "\u2581\")", "$$;"], ["\u2581r", "$$.append(", "$$g", "$$pg", "$$Sign", "$$atu", "$$re", "\u2581!=", "\u2581null", "\u2581?", "\u2581g", "$$pg", "$$Sign", "$$atu", "$$re", "$$.toString()", "\u2581:", "\u2581\"", "$$NO", "$$T_", "$$SE", "$$T", "$$\")", "$$;"], ["\u2581r", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581if", "\u2581(", "$$enc", "$$od", "$$ing", "\u2581!=", "\u2581null", "\u2581&&", "\u2581!", "$$Ref", "$$eren", "$$ces", "$$.is", "$$S", "$$ame", "$$Object", "$$(", "$$enc", "$$od", "$$ing", "$$,", "\u2581", "$$UTF", "$$_", "$$8", "$$))", "\u2581{"], ["\u2581r", "$$.append(\"", "$$enc", "$$od", "$$ing", "\u2581\")", "$$;"], ["\u2581r", "$$.append(", "$$enc", "$$od", "$$ing", "$$.", "$$name", "$$())", "$$;"], ["\u2581r", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581}"], ["\u2581r", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581r", "$$.append(", "$$m", "$$essage", "\u2581!=", "\u2581null", "\u2581?", "\u2581message", "\u2581:", "\u2581\"", "$$\")", "$$;"], ["\u2581r", "$$.append(\"", "$$}", "$$\")", "$$;"], ["\u2581return", "\u2581r", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public IndicNormalizationFilterFactory(IDictionary<string, string> args) : base(args) {\n    if (args.Count > 0) {\n        throw new System.ArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "java": "public IndicNormalizationFilterFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n        throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581In", "$$dic", "$$Normal", "$$ization", "$$FilterFactory(IDictionary<string,", "\u2581string>", "\u2581args)", "\u2581:", "\u2581base(args)", "\u2581{"], ["\u2581if", "\u2581(args.Count", "\u2581>", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581In", "$$dic", "$$Normal", "$$ization", "$$FilterFactory(Map<String,String>", "\u2581args)", "\u2581{"], ["\u2581super(", "$$arg", "$$s)", "$$;"], ["\u2581if", "\u2581(!args.isEmpty())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual CreateOptionGroupResponse CreateOptionGroup(CreateOptionGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateOptionGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateOptionGroupResponseUnmarshaller.Instance;\n    return Invoke<CreateOptionGroupResponse>(request, options);\n}\n", "java": "public OptionGroup createOptionGroup(CreateOptionGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateOptionGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Option", "$$Group", "$$Response", "\u2581Create", "$$Option", "$$Group", "$$(Create", "$$Option", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Option", "$$Group", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Option", "$$Group", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Option", "$$Group", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Option", "$$Group", "\u2581create", "$$Option", "$$Group", "$$(Create", "$$Option", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Option", "$$Group", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual AssociateMemberAccountResponse AssociateMemberAccount(AssociateMemberAccountRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = AssociateMemberAccountRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = AssociateMemberAccountResponseUnmarshaller.Instance;\n    return Invoke<AssociateMemberAccountResponse>(request, options);\n}\n", "java": "public AssociateMemberAccountResult associateMemberAccount(AssociateMemberAccountRequest request) {\n    request = beforeClientExecution(request);\n    return executeAssociateMemberAccount(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Associate", "$$Member", "$$Account", "$$Response", "\u2581Associate", "$$Member", "$$Account", "$$(", "$$Associate", "$$Member", "$$Account", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Associate", "$$Member", "$$Account", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Associate", "$$Member", "$$Account", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Associate", "$$Member", "$$Account", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Associate", "$$Member", "$$Account", "$$Result", "\u2581", "$$associate", "$$Member", "$$Account", "$$(", "$$Associate", "$$Member", "$$Account", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Associate", "$$Member", "$$Account", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void run() {\n    this._enclosing.doRefreshProgress(this.mId, this.mProgress, this.mFromUser, true);\n    this._enclosing.mRefreshProgressRunnable = this;\n}\n", "java": "public void run() {\n    doRefreshProgress(mId, mProgress, mFromUser, true);\n    mRefreshProgressRunnable = this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581r", "$$un", "$$()", "\u2581{"], ["\u2581this._enclosing", "$$.d", "$$o", "$$Ref", "$$resh", "$$Pro", "$$gres", "$$s(", "$$this.", "$$m", "$$Id,", "\u2581this.", "$$m", "$$Pro", "$$gres", "$$s,", "\u2581this.", "$$m", "$$From", "$$User", "$$,", "\u2581true", "$$)", "$$;"], ["\u2581this._enclosing", "$$.", "$$m", "$$Ref", "$$resh", "$$Progress", "$$Run", "$$n", "$$able", "\u2581=", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581r", "$$un", "$$()", "\u2581{"], ["\u2581do", "$$Ref", "$$resh", "$$Pro", "$$gres", "$$s(", "$$m", "$$Id,", "\u2581m", "$$Pro", "$$gres", "$$s,", "\u2581m", "$$From", "$$User", "$$,", "\u2581true", "$$)", "$$;"], ["\u2581m", "$$Ref", "$$resh", "$$Progress", "$$Run", "$$n", "$$able", "\u2581=", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual SetTerminationProtectionResponse SetTerminationProtection(SetTerminationProtectionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = SetTerminationProtectionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = SetTerminationProtectionResponseUnmarshaller.Instance;\n    return Invoke<SetTerminationProtectionResponse>(request, options);\n}\n", "java": "public SetTerminationProtectionResult setTerminationProtection(SetTerminationProtectionRequest request) {\n    request = beforeClientExecution(request);\n    return executeSetTerminationProtection(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Set", "$$Termination", "$$Pro", "$$te", "$$ction", "$$Response", "\u2581Set", "$$Termination", "$$Pro", "$$te", "$$ction", "$$(", "$$Set", "$$Termination", "$$Pro", "$$te", "$$ction", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Set", "$$Termination", "$$Pro", "$$te", "$$ction", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Set", "$$Termination", "$$Pro", "$$te", "$$ction", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Set", "$$Termination", "$$Pro", "$$te", "$$ction", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Set", "$$Termination", "$$Pro", "$$te", "$$ction", "$$Result", "\u2581set", "$$Termination", "$$Pro", "$$te", "$$ction", "$$(", "$$Set", "$$Termination", "$$Pro", "$$te", "$$ction", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Set", "$$Termination", "$$Pro", "$$te", "$$ction", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string GetErrorHeader(RecognitionException e) {\n    int line = e.OffendingToken.Line;\n    int charPositionInLine = e.OffendingToken.Column;\n    return \"line \" + line + \":\" + charPositionInLine;\n}\n", "java": "public String getErrorHeader(RecognitionException e) {\n    int line = e.getOffendingToken().getLine();\n    int charPositionInLine = e.getOffendingToken().getCharPositionInLine();\n    return \"line \"+line+\":\"+charPositionInLine;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581Get", "$$Error", "$$Head", "$$er(", "$$Recogn", "$$ition", "$$Exception", "\u2581e)", "\u2581{"], ["\u2581int", "\u2581line", "\u2581=", "\u2581e", "$$.", "$$O", "$$ff", "$$ending", "$$Token", "$$.", "$$Line", "$$;"], ["\u2581int", "\u2581char", "$$Position", "$$In", "$$Line", "\u2581=", "\u2581e", "$$.", "$$O", "$$ff", "$$ending", "$$Token", "$$.", "$$Column", "$$;"], ["\u2581return", "\u2581\"", "$$line", "\u2581\"", "\u2581+", "\u2581line", "\u2581+", "\u2581\":", "$$\"", "\u2581+", "\u2581char", "$$Position", "$$In", "$$Line", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Error", "$$Head", "$$er(", "$$Recogn", "$$ition", "$$Exception", "\u2581e)", "\u2581{"], ["\u2581int", "\u2581line", "\u2581=", "\u2581e.get", "$$O", "$$ff", "$$ending", "$$Token", "$$().get", "$$Line", "$$()", "$$;"], ["\u2581int", "\u2581char", "$$Position", "$$In", "$$Line", "\u2581=", "\u2581e.get", "$$O", "$$ff", "$$ending", "$$Token", "$$().get", "$$Char", "$$Position", "$$In", "$$Line", "$$()", "$$;"], ["\u2581return", "\u2581\"", "$$line", "\u2581\"+", "$$line", "$$+\"", "$$:", "$$\"+", "$$char", "$$Position", "$$In", "$$Line", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.CharBuffer asReadOnlyBuffer() {\n    java.nio.CharToByteBufferAdapter buf = new java.nio.CharToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());\n    buf._limit = _limit;\n    buf._position = _position;\n    buf._mark = _mark;\n    buf.byteBuffer._order = byteBuffer._order;\n    return buf;\n}\n", "java": "public CharBuffer asReadOnlyBuffer() {\n    CharToByteBufferAdapter buf = new CharToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());\n    buf.limit = limit;\n    buf.position = position;\n    buf.mark = mark;\n    buf.byteBuffer.order = byteBuffer.order;\n    return buf;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$CharBuffer", "\u2581as", "$$Read", "$$OnlyBuffer", "$$()", "\u2581{"], ["\u2581java.nio.", "$$Char", "$$To", "$$ByteBuffer", "$$Adapter", "\u2581buf", "\u2581=", "\u2581new", "\u2581java.nio.", "$$Char", "$$To", "$$ByteBuffer", "$$Adapter", "$$(byte", "$$Buffer.", "$$as", "$$Read", "$$OnlyBuffer", "$$())", "$$;"], ["\u2581buf", "$$._", "$$limit", "\u2581=", "\u2581_limit", "$$;"], ["\u2581buf", "$$._", "$$position", "\u2581=", "\u2581_position", "$$;"], ["\u2581buf", "$$._", "$$mark", "\u2581=", "\u2581_", "$$mark", "$$;"], ["\u2581buf", "$$.", "$$byte", "$$Buffer.", "$$_", "$$order", "\u2581=", "\u2581byteBuffer.", "$$_", "$$order", "$$;"], ["\u2581return", "\u2581buf", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Char", "$$Buffer", "\u2581as", "$$Read", "$$OnlyBuffer", "$$()", "\u2581{"], ["\u2581Char", "$$To", "$$ByteBuffer", "$$Adapter", "\u2581buf", "\u2581=", "\u2581new", "\u2581Char", "$$To", "$$ByteBuffer", "$$Adapter", "$$(byte", "$$Buffer.", "$$as", "$$Read", "$$OnlyBuffer", "$$())", "$$;"], ["\u2581buf", "$$.", "$$limit", "\u2581=", "\u2581limit", "$$;"], ["\u2581buf", "$$.", "$$position", "\u2581=", "\u2581position", "$$;"], ["\u2581buf", "$$.", "$$mark", "\u2581=", "\u2581mark", "$$;"], ["\u2581buf", "$$.", "$$byte", "$$Buffer.", "$$order", "\u2581=", "\u2581byteBuffer.", "$$order", "$$;"], ["\u2581return", "\u2581buf", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StopSentimentDetectionJobResponse StopSentimentDetectionJob(StopSentimentDetectionJobRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = StopSentimentDetectionJobRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = StopSentimentDetectionJobResponseUnmarshaller.Instance;\n    return Invoke<StopSentimentDetectionJobResponse>(request, options);\n}\n", "java": "public StopSentimentDetectionJobResult stopSentimentDetectionJob(StopSentimentDetectionJobRequest request) {\n    request = beforeClientExecution(request);\n    return executeStopSentimentDetectionJob(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Stop", "$$S", "$$enti", "$$ment", "$$DetectionJob", "$$Response", "\u2581Stop", "$$S", "$$enti", "$$ment", "$$DetectionJob", "$$(", "$$Stop", "$$S", "$$enti", "$$ment", "$$DetectionJob", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Stop", "$$S", "$$enti", "$$ment", "$$DetectionJob", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Stop", "$$S", "$$enti", "$$ment", "$$DetectionJob", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Stop", "$$S", "$$enti", "$$ment", "$$DetectionJob", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Stop", "$$S", "$$enti", "$$ment", "$$DetectionJob", "$$Result", "\u2581stop", "$$S", "$$enti", "$$ment", "$$DetectionJob", "$$(", "$$Stop", "$$S", "$$enti", "$$ment", "$$DetectionJob", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Stop", "$$S", "$$enti", "$$ment", "$$DetectionJob", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ObjectIdSubclassMap<ObjectId> GetNewObjectIds() {\n    if (newObjectIds != null) {\n        return newObjectIds;\n    }\n    return new ObjectIdSubclassMap<ObjectId>();\n}\n", "java": "public ObjectIdSubclassMap<ObjectId> getNewObjectIds() {\n    if (newObjectIds != null)return newObjectIds;\n    return new ObjectIdSubclassMap<>();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581ObjectId", "$$Sub", "$$c", "$$lass", "$$Map<", "$$ObjectId", "$$>", "\u2581Get", "$$New", "$$ObjectId", "$$s()", "\u2581{"], ["\u2581if", "\u2581(new", "$$ObjectId", "$$s", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581new", "$$ObjectId", "$$s;"], ["\u2581}"], ["\u2581return", "\u2581new", "\u2581ObjectId", "$$Sub", "$$c", "$$lass", "$$Map<", "$$ObjectId", "$$>", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ObjectId", "$$Sub", "$$c", "$$lass", "$$Map<", "$$ObjectId", "$$>", "\u2581get", "$$New", "$$ObjectId", "$$s()", "\u2581{"], ["\u2581if", "\u2581(new", "$$ObjectId", "$$s", "\u2581!=", "\u2581null)", "$$return", "\u2581new", "$$ObjectId", "$$s;"], ["\u2581return", "\u2581new", "\u2581ObjectId", "$$Sub", "$$c", "$$lass", "$$Map<", "$$>", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "protected internal override void Clear() {\n    hash = Hash(new byte[0]);\n    base.Clear();\n}\n", "java": "public void clear() {\n    hash = hash(new byte[0]);\n    super.clear();\n}\n", "cs_t": [["\u2581pro", "$$te", "$$c", "$$ted", "\u2581inter", "$$n", "$$al", "\u2581override", "\u2581void", "\u2581C", "$$lear()", "\u2581{"], ["\u2581hash", "\u2581=", "\u2581Hash", "$$(new", "\u2581byte[", "$$0]", "$$)", "$$;"], ["\u2581base", "$$.C", "$$lear()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581clear()", "\u2581{"], ["\u2581hash", "\u2581=", "\u2581hash", "$$(new", "\u2581byte[", "$$0]", "$$)", "$$;"], ["\u2581super.", "$$c", "$$lear()", "$$;"], ["\u2581}"]]}, {"cs": "public override void reset() {\n    lock (@lock) {\n        checkNotClosed();\n        if (_mark == -1) {\n            throw new System.IO.IOException(\"Invalid mark\");\n        }\n        pos = _mark;\n    }\n}\n", "java": "public void reset() throws IOException {\n    synchronized (lock) {\n        checkNotClosed();\n        if (mark == -1) {\n            throw new IOException(\"Invalid mark\");\n        }\n        pos = mark;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581reset", "$$()", "\u2581{"], ["\u2581lock", "\u2581(@", "$$lock", "$$)", "\u2581{"], ["\u2581check", "$$Not", "$$C", "$$lo", "$$sed", "$$()", "$$;"], ["\u2581if", "\u2581(_", "$$mark", "\u2581==", "\u2581-1)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.", "$$IO", "$$.", "$$IO", "$$Exception(\"", "$$Invalid", "\u2581mark", "$$\")", "$$;"], ["\u2581}"], ["\u2581pos", "\u2581=", "\u2581_", "$$mark", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581reset", "$$()", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581synchronized", "\u2581(", "$$lock", "$$)", "\u2581{"], ["\u2581check", "$$Not", "$$C", "$$lo", "$$sed", "$$()", "$$;"], ["\u2581if", "\u2581(m", "$$ark", "\u2581==", "\u2581-1)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IO", "$$Exception(\"", "$$Invalid", "\u2581mark", "$$\")", "$$;"], ["\u2581}"], ["\u2581pos", "\u2581=", "\u2581mark", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public RefErrorPtg(ILittleEndianInput in1) {\n    field_1_reserved = in1.ReadInt();\n}\n", "java": "public RefErrorPtg(LittleEndianInput in)  {\n    field_1_reserved = in.readInt();\n}\n", "cs_t": [["\u2581public", "\u2581Ref", "$$Error", "$$Ptg", "$$(I", "$$LittleEndian", "$$Input", "\u2581in1)", "\u2581{"], ["\u2581field_1_", "$$reserved", "\u2581=", "\u2581in1.Read", "$$Int", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Ref", "$$Error", "$$Ptg", "$$(", "$$LittleEndian", "$$Input", "\u2581in)", "\u2581", "\u2581{"], ["\u2581field_1_", "$$reserved", "\u2581=", "\u2581in.read", "$$Int", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual SuspendGameServerGroupResponse SuspendGameServerGroup(SuspendGameServerGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = SuspendGameServerGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = SuspendGameServerGroupResponseUnmarshaller.Instance;\n    return Invoke<SuspendGameServerGroupResponse>(request, options);\n}\n", "java": "public SuspendGameServerGroupResult suspendGameServerGroup(SuspendGameServerGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeSuspendGameServerGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581S", "$$us", "$$pend", "$$GameServer", "$$Group", "$$Response", "\u2581S", "$$us", "$$pend", "$$GameServer", "$$Group", "$$(", "$$S", "$$us", "$$pend", "$$GameServer", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581S", "$$us", "$$pend", "$$GameServer", "$$Group", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581S", "$$us", "$$pend", "$$GameServer", "$$Group", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$S", "$$us", "$$pend", "$$GameServer", "$$Group", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$us", "$$pend", "$$GameServer", "$$Group", "$$Result", "\u2581s", "$$us", "$$pend", "$$GameServer", "$$Group", "$$(", "$$S", "$$us", "$$pend", "$$GameServer", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$S", "$$us", "$$pend", "$$GameServer", "$$Group", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ValueEval Evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {\n    if (args.Length != 3) {\n        return ErrorEval.VALUE_INVALID;\n    }\n    return Evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);\n}\n", "java": "public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {\n    if (args.length != 3) {\n        return ErrorEval.VALUE_INVALID;\n    }\n    return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);\n}\n", "cs_t": [["\u2581public", "\u2581ValueEval", "\u2581Evaluate", "$$(ValueEval", "$$[]", "\u2581args,", "\u2581int", "\u2581srcRowIndex,", "\u2581int", "\u2581srcColumn", "$$Index)", "\u2581{"], ["\u2581if", "\u2581(arg", "$$s.Length", "\u2581!=", "\u25813", "$$)", "\u2581{"], ["\u2581return", "\u2581ErrorEval.VALUE_INVALID", "$$;"], ["\u2581}"], ["\u2581return", "\u2581Evaluate", "$$(src", "$$RowIndex,", "\u2581srcColumnIndex,", "\u2581args[", "$$0]", "$$,", "\u2581args[", "$$1", "$$],", "\u2581args[", "$$2", "$$]", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581ValueEval", "\u2581evaluate", "$$(ValueEval", "$$[]", "\u2581args,", "\u2581int", "\u2581srcRowIndex,", "\u2581int", "\u2581srcColumn", "$$Index)", "\u2581{"], ["\u2581if", "\u2581(arg", "$$s.length", "\u2581!=", "\u25813", "$$)", "\u2581{"], ["\u2581return", "\u2581ErrorEval.VALUE_INVALID", "$$;"], ["\u2581}"], ["\u2581return", "\u2581evaluate", "$$(src", "$$RowIndex,", "\u2581srcColumnIndex,", "\u2581args[", "$$0]", "$$,", "\u2581args[", "$$1", "$$],", "\u2581args[", "$$2", "$$]", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public GetRepoRequest(): base(\"cr\", \"2016-06-07\", \"GetRepo\", \"cr\", \"openAPI\") {\n    UriPattern = \"/repos/[RepoNamespace]/[RepoName]\";\n    Method = MethodType.GET;\n}\n", "java": "public GetRepoRequest() {\n    super(\"cr\", \"2016-06-07\", \"GetRepo\", \"cr\");\n    setUriPattern(\"/repos/[RepoNamespace]/[RepoName]\");\n    setMethod(MethodType.GET);\n}\n", "cs_t": [["\u2581public", "\u2581Get", "$$Repo", "$$Request():", "\u2581base(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"Get", "$$Repo", "$$\",", "\u2581\"", "$$cr\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581", "$$UriPattern", "\u2581=", "\u2581\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]", "$$\"", "$$;"], ["\u2581Method", "\u2581=", "\u2581Method", "$$Type.", "$$GE", "$$T", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Repo", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"Get", "$$Repo", "$$\",", "\u2581\"", "$$cr", "$$\")", "$$;"], ["\u2581set", "$$UriPattern", "$$(\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.", "$$GE", "$$T", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetDate(DateTime? date) {\n    if (date.HasValue) {\n        SetDate(DateTools.DateToString(date.Value, DateTools.Resolution.SECOND));\n    }\n    else {\n        this.date = null;\n    }\n}\n", "java": "public void setDate(Date date) {\n    if (date != null) {\n        setDate(DateTools.dateToString(date, DateTools.Resolution.SECOND));\n    }\n    else {\n        this.date = null;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Date", "$$(", "$$Date", "$$Time", "$$?", "\u2581date", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$date", "$$.", "$$Has", "$$Value)", "\u2581{"], ["\u2581Set", "$$Date", "$$(", "$$Date", "$$To", "$$ol", "$$s.", "$$Date", "$$To", "$$String(", "$$date", "$$.", "$$Value", "$$,", "\u2581Date", "$$To", "$$ol", "$$s.", "$$Resol", "$$ution", "$$.", "$$SE", "$$C", "$$ON", "$$D", "$$))", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581this.", "$$date", "\u2581=", "\u2581null", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Date", "$$(", "$$Date", "\u2581date", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$date", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581set", "$$Date", "$$(", "$$Date", "$$To", "$$ol", "$$s.", "$$date", "$$To", "$$String(", "$$date", "$$,", "\u2581Date", "$$To", "$$ol", "$$s.", "$$Resol", "$$ution", "$$.", "$$SE", "$$C", "$$ON", "$$D", "$$))", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581this.", "$$date", "\u2581=", "\u2581null", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override TokenStream Create(TokenStream input) {\n    return new GermanMinimalStemFilter(input);\n}\n", "java": "public TokenStream create(TokenStream input) {\n    return new GermanMinimalStemFilter(input);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581TokenStream", "\u2581Create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581G", "$$erm", "$$an", "$$Min", "$$imal", "$$Stem", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581TokenStream", "\u2581create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581G", "$$erm", "$$an", "$$Min", "$$imal", "$$Stem", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override object[] toArray() {\n    return (object[])a.Clone();\n}\n", "java": "public Object[] toArray() {\n    return a.clone();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581object", "$$[]", "\u2581to", "$$Array", "$$()", "\u2581{"], ["\u2581return", "\u2581(", "$$object", "$$[]", "$$)", "$$a", "$$.", "$$Clone", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Object", "$$[]", "\u2581to", "$$Array", "$$()", "\u2581{"], ["\u2581return", "\u2581a", "$$.c", "$$lone()", "$$;"], ["\u2581}"]]}, {"cs": "public override void write(char[] buffer, int offset, int len) {\n    java.util.Arrays.checkOffsetAndCount(buffer.Length, offset, len);\n    lock (@lock) {\n        expand(len);\n        System.Array.Copy(buffer, offset, this.buf, this.count, len);\n        this.count += len;\n    }\n}\n", "java": "public void write(char[] buffer, int offset, int len) {\n    Arrays.checkOffsetAndCount(buffer.length, offset, len);\n    synchronized (lock) {\n        expand(len);\n        System.arraycopy(buffer, offset, this.buf, this.count, len);\n        this.count += len;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581write", "$$(char[]", "\u2581buffer,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581java.", "$$u", "$$til", "$$.Ar", "$$ray", "$$s.", "$$check", "$$Offset", "$$And", "$$Count", "$$(buffer", "$$.Length", "$$,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581lock", "\u2581(@", "$$lock", "$$)", "\u2581{"], ["\u2581exp", "$$an", "$$d(", "$$len", "$$)", "$$;"], ["\u2581System.Array.Copy", "$$(buffer", "$$,", "\u2581offset,", "\u2581this.", "$$buf", "$$,", "\u2581this.", "$$count", "$$,", "\u2581len)", "$$;"], ["\u2581this.", "$$count", "\u2581+=", "\u2581len", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581write", "$$(char[]", "\u2581buffer,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581Arrays.", "$$check", "$$Offset", "$$And", "$$Count", "$$(buffer", "$$.length,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581synchronized", "\u2581(", "$$lock", "$$)", "\u2581{"], ["\u2581exp", "$$an", "$$d(", "$$len", "$$)", "$$;"], ["\u2581System.arraycopy", "$$(buffer", "$$,", "\u2581offset,", "\u2581this.", "$$buf", "$$,", "\u2581this.", "$$count", "$$,", "\u2581len)", "$$;"], ["\u2581this.", "$$count", "\u2581+=", "\u2581len", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public static RevFilter After(long ts) {\n    return new CommitTimeRevFilterAfter(ts);\n}\n", "java": "public static final RevFilter after(Date ts) {\n    return after(ts.getTime());\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581RevFilter", "\u2581A", "$$fter", "$$(long", "\u2581t", "$$s)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581", "$$Commit", "$$Time", "$$RevFilter", "$$A", "$$fter", "$$(t", "$$s)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581final", "\u2581RevFilter", "\u2581a", "$$fter", "$$(", "$$Date", "\u2581t", "$$s)", "\u2581{"], ["\u2581return", "\u2581a", "$$fter", "$$(t", "$$s.get", "$$Time", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public DeleteGroupPolicyRequest(string groupName, string policyName) {\n    _groupName = groupName;\n    _policyName = policyName;\n}\n", "java": "public DeleteGroupPolicyRequest(String groupName, String policyName) {\n    setGroupName(groupName);\n    setPolicyName(policyName);\n}\n", "cs_t": [["\u2581public", "\u2581Delete", "$$Group", "$$Policy", "$$Request(string", "\u2581group", "$$Name,", "\u2581string", "\u2581po", "$$licy", "$$Name)", "\u2581{"], ["\u2581_", "$$group", "$$Name", "\u2581=", "\u2581group", "$$Name", "$$;"], ["\u2581_", "$$po", "$$licy", "$$Name", "\u2581=", "\u2581po", "$$licy", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Group", "$$Policy", "$$Request(String", "\u2581group", "$$Name,", "\u2581String", "\u2581po", "$$licy", "$$Name)", "\u2581{"], ["\u2581set", "$$Group", "$$Name(", "$$group", "$$Name)", "$$;"], ["\u2581set", "$$Policy", "$$Name(", "$$po", "$$licy", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeregisterTransitGatewayMulticastGroupMembersResponse DeregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;\n    return Invoke<DeregisterTransitGatewayMulticastGroupMembersResponse>(request, options);\n}\n", "java": "public DeregisterTransitGatewayMulticastGroupMembersResult deregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeregisterTransitGatewayMulticastGroupMembers(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Deregister", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$sResponse", "\u2581Deregister", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$s(", "$$De", "$$register", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Deregister", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Deregister", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$De", "$$register", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Deregister", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$sResult", "\u2581de", "$$register", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$s(", "$$De", "$$register", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$De", "$$register", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual BatchDeleteScheduledActionResponse BatchDeleteScheduledAction(BatchDeleteScheduledActionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = BatchDeleteScheduledActionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = BatchDeleteScheduledActionResponseUnmarshaller.Instance;\n    return Invoke<BatchDeleteScheduledActionResponse>(request, options);\n}\n", "java": "public BatchDeleteScheduledActionResult batchDeleteScheduledAction(BatchDeleteScheduledActionRequest request) {\n    request = beforeClientExecution(request);\n    return executeBatchDeleteScheduledAction(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Batch", "$$Delete", "$$Scheduled", "$$Action", "$$Response", "\u2581Batch", "$$Delete", "$$Scheduled", "$$Action", "$$(", "$$Batch", "$$Delete", "$$Scheduled", "$$Action", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Batch", "$$Delete", "$$Scheduled", "$$Action", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Batch", "$$Delete", "$$Scheduled", "$$Action", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Batch", "$$Delete", "$$Scheduled", "$$Action", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Batch", "$$Delete", "$$Scheduled", "$$Action", "$$Result", "\u2581b", "$$atch", "$$Delete", "$$Scheduled", "$$Action", "$$(", "$$Batch", "$$Delete", "$$Scheduled", "$$Action", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Batch", "$$Delete", "$$Scheduled", "$$Action", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateAlgorithmResponse CreateAlgorithm(CreateAlgorithmRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateAlgorithmRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateAlgorithmResponseUnmarshaller.Instance;\n    return Invoke<CreateAlgorithmResponse>(request, options);\n}\n", "java": "public CreateAlgorithmResult createAlgorithm(CreateAlgorithmRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateAlgorithm(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Algorithm", "$$Response", "\u2581Create", "$$Algorithm", "$$(Create", "$$Algorithm", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Algorithm", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Algorithm", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Algorithm", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Algorithm", "$$Result", "\u2581create", "$$Algorithm", "$$(Create", "$$Algorithm", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Algorithm", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public int ReadUByte() {\n    CheckPosition(1);\n    return _buf[_ReadIndex++] & 0xFF;\n}\n", "java": "public int readUByte() {\n    return readByte() & 0x00FF;\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581Read", "$$U", "$$Byte", "$$()", "\u2581{"], ["\u2581Check", "$$Position", "$$(", "$$1)", "$$;"], ["\u2581return", "\u2581_", "$$buf", "$$[", "$$_", "$$Read", "$$Index", "$$++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581read", "$$U", "$$Byte", "$$()", "\u2581{"], ["\u2581return", "\u2581read", "$$Byte", "$$()", "\u2581&", "\u25810x00", "$$FF", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetLength(int sz) {\n    NB.EncodeInt32(info, infoOffset + P_SIZE, sz);\n}\n", "java": "public void setLength(int sz) {\n    NB.encodeInt32(info, infoOffset + P_SIZE, sz);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Length", "$$(int", "\u2581sz", "$$)", "\u2581{"], ["\u2581NB", "$$.", "$$Encode", "$$Int32", "$$(in", "$$fo", "$$,", "\u2581info", "$$Offset", "\u2581+", "\u2581P", "$$_SIZE", "$$,", "\u2581sz", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Length", "$$(int", "\u2581sz", "$$)", "\u2581{"], ["\u2581NB", "$$.", "$$en", "$$code", "$$Int32", "$$(in", "$$fo", "$$,", "\u2581info", "$$Offset", "\u2581+", "\u2581P", "$$_SIZE", "$$,", "\u2581sz", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeScalingProcessTypesResponse DescribeScalingProcessTypes() {\n    return DescribeScalingProcessTypes(new DescribeScalingProcessTypesRequest());\n}\n", "java": "public DescribeScalingProcessTypesResult describeScalingProcessTypes() {\n    return describeScalingProcessTypes(new DescribeScalingProcessTypesRequest());\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Scaling", "$$Process", "$$Types", "$$Response", "\u2581Describe", "$$Scaling", "$$Process", "$$Types", "$$()", "\u2581{"], ["\u2581return", "\u2581Describe", "$$Scaling", "$$Process", "$$Types", "$$(new", "\u2581Describe", "$$Scaling", "$$Process", "$$Types", "$$Request", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Scaling", "$$Process", "$$Types", "$$Result", "\u2581describe", "$$Scaling", "$$Process", "$$Types", "$$()", "\u2581{"], ["\u2581return", "\u2581describe", "$$Scaling", "$$Process", "$$Types", "$$(new", "\u2581Describe", "$$Scaling", "$$Process", "$$Types", "$$Request", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListResourceRecordSetsResponse ListResourceRecordSets(ListResourceRecordSetsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListResourceRecordSetsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListResourceRecordSetsResponseUnmarshaller.Instance;\n    return Invoke<ListResourceRecordSetsResponse>(request, options);\n}\n", "java": "public ListResourceRecordSetsResult listResourceRecordSets(ListResourceRecordSetsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListResourceRecordSets(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Resource", "$$Record", "$$Set", "$$sResponse", "\u2581List", "$$Resource", "$$Record", "$$Set", "$$s(List", "$$Resource", "$$Record", "$$Set", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Resource", "$$Record", "$$Set", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Resource", "$$Record", "$$Set", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Resource", "$$Record", "$$Set", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Resource", "$$Record", "$$Set", "$$sResult", "\u2581list", "$$Resource", "$$Record", "$$Set", "$$s(List", "$$Resource", "$$Record", "$$Set", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Resource", "$$Record", "$$Set", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override IToken RecoverInline(Parser recognizer) {\n    InputMismatchException e = new InputMismatchException(recognizer);\n    for (ParserRuleContext context = recognizer.Context; context != null; context = ((ParserRuleContext)context.Parent)) {\n        context.exception = e;\n    }\n    throw new ParseCanceledException(e);\n}\n", "java": "public Token recoverInline(Parser recognizer)throws RecognitionException {\n    InputMismatchException e = new InputMismatchException(recognizer);\n    for (ParserRuleContext context = recognizer.getContext(); context != null; context = context.getParent()) {\n        context.exception = e;\n    }\n    throw new ParseCancellationException(e);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581I", "$$Token", "\u2581", "$$Reco", "$$ver", "$$In", "$$line", "$$(", "$$Parser", "\u2581re", "$$cognizer", "$$)", "\u2581{"], ["\u2581In", "$$put", "$$M", "$$is", "$$match", "$$Exception", "\u2581e", "\u2581=", "\u2581new", "\u2581In", "$$put", "$$M", "$$is", "$$match", "$$Exception", "$$(re", "$$cognizer", "$$)", "$$;"], ["\u2581for", "\u2581(", "$$Parser", "$$RuleContext", "\u2581context", "\u2581=", "\u2581re", "$$co", "$$gn", "$$iz", "$$er.", "$$Context", "$$;", "\u2581context", "\u2581!=", "\u2581null", "$$;", "\u2581context", "\u2581=", "\u2581((", "$$Parser", "$$RuleContext", "$$)", "$$con", "$$text", "$$.", "$$Parent", "$$))", "\u2581{"], ["\u2581context", "$$.", "$$ex", "$$ception", "\u2581=", "\u2581e", "$$;"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581Parse", "$$C", "$$ance", "$$led", "$$Exception(e", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Token", "\u2581re", "$$co", "$$ver", "$$In", "$$line", "$$(", "$$Parser", "\u2581re", "$$cognizer", "$$)", "$$throw", "$$s", "\u2581", "$$Recogn", "$$ition", "$$Exception", "\u2581{"], ["\u2581In", "$$put", "$$M", "$$is", "$$match", "$$Exception", "\u2581e", "\u2581=", "\u2581new", "\u2581In", "$$put", "$$M", "$$is", "$$match", "$$Exception", "$$(re", "$$cognizer", "$$)", "$$;"], ["\u2581for", "\u2581(", "$$Parser", "$$RuleContext", "\u2581context", "\u2581=", "\u2581re", "$$cognizer", "$$.get", "$$Context", "$$()", "$$;", "\u2581context", "\u2581!=", "\u2581null", "$$;", "\u2581context", "\u2581=", "\u2581context", "$$.get", "$$Parent", "$$())", "\u2581{"], ["\u2581context", "$$.", "$$ex", "$$ception", "\u2581=", "\u2581e", "$$;"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581Parse", "$$C", "$$an", "$$cell", "$$ation", "$$Exception(e", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual SetTagsForResourceResponse SetTagsForResource(SetTagsForResourceRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = SetTagsForResourceRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = SetTagsForResourceResponseUnmarshaller.Instance;\n    return Invoke<SetTagsForResourceResponse>(request, options);\n}\n", "java": "public SetTagsForResourceResult setTagsForResource(SetTagsForResourceRequest request) {\n    request = beforeClientExecution(request);\n    return executeSetTagsForResource(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Set", "$$TagsFor", "$$Resource", "$$Response", "\u2581Set", "$$TagsFor", "$$Resource", "$$(", "$$Set", "$$TagsFor", "$$Resource", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Set", "$$TagsFor", "$$Resource", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Set", "$$TagsFor", "$$Resource", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Set", "$$TagsFor", "$$Resource", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Set", "$$TagsFor", "$$Resource", "$$Result", "\u2581set", "$$TagsFor", "$$Resource", "$$(", "$$Set", "$$TagsFor", "$$Resource", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Set", "$$TagsFor", "$$Resource", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ModifyStrategyRequest(): base(\"aegis\", \"2016-11-11\", \"ModifyStrategy\", \"vipaegis\", \"openAPI\") {\n    Method = MethodType.POST;\n}\n", "java": "public ModifyStrategyRequest() {\n    super(\"CloudCallCenter\", \"2017-07-05\", \"ModifyStrategy\", \"CloudCallCenter\", \"innerAPI\");\n}\n", "cs_t": [["\u2581public", "\u2581Modify", "$$Strategy", "$$Request():", "\u2581base(\"", "$$a", "$$eg", "$$is", "$$\",", "\u2581\"201", "$$6", "$$-1", "$$1", "$$-11\",", "\u2581\"", "$$Modify", "$$Strategy", "$$\",", "\u2581\"", "$$vi", "$$pa", "$$eg", "$$is", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Method", "\u2581=", "\u2581MethodType.POST", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Modify", "$$Strategy", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$Cloud", "$$Call", "$$C", "$$ent", "$$er", "$$\",", "\u2581\"2017-07", "$$-0", "$$5", "$$\",", "\u2581\"", "$$Modify", "$$Strategy", "$$\",", "\u2581\"", "$$Cloud", "$$Call", "$$C", "$$ent", "$$er", "$$\",", "\u2581\"", "$$in", "$$ner", "$$API\")", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeVpcEndpointServicesResponse DescribeVpcEndpointServices(DescribeVpcEndpointServicesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeVpcEndpointServicesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeVpcEndpointServicesResponseUnmarshaller.Instance;\n    return Invoke<DescribeVpcEndpointServicesResponse>(request, options);\n}\n", "java": "public DescribeVpcEndpointServicesResult describeVpcEndpointServices(DescribeVpcEndpointServicesRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeVpcEndpointServices(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$VpcEndpoint", "$$Serv", "$$i", "$$ces", "$$Response", "\u2581Describe", "$$VpcEndpoint", "$$Serv", "$$i", "$$ces", "$$(Describe", "$$VpcEndpoint", "$$Serv", "$$i", "$$ces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$VpcEndpoint", "$$Serv", "$$i", "$$ces", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$VpcEndpoint", "$$Serv", "$$i", "$$ces", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$VpcEndpoint", "$$Serv", "$$i", "$$ces", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$VpcEndpoint", "$$Serv", "$$i", "$$ces", "$$Result", "\u2581describe", "$$VpcEndpoint", "$$Serv", "$$i", "$$ces", "$$(Describe", "$$VpcEndpoint", "$$Serv", "$$i", "$$ces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$VpcEndpoint", "$$Serv", "$$i", "$$ces", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual EnableLoggingResponse EnableLogging(EnableLoggingRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = EnableLoggingRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = EnableLoggingResponseUnmarshaller.Instance;\n    return Invoke<EnableLoggingResponse>(request, options);\n}\n", "java": "public EnableLoggingResult enableLogging(EnableLoggingRequest request) {\n    request = beforeClientExecution(request);\n    return executeEnableLogging(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Enable", "$$Logging", "$$Response", "\u2581Enable", "$$Logging", "$$(", "$$Enable", "$$Logging", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Enable", "$$Logging", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Enable", "$$Logging", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Enable", "$$Logging", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Enable", "$$Logging", "$$Result", "\u2581en", "$$able", "$$Logging", "$$(", "$$Enable", "$$Logging", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Enable", "$$Logging", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool contains(object o) {\n    return this._enclosing.containsValue(o);\n}\n", "java": "public boolean contains(Object o) {\n    return ConcurrentHashMap.this.containsValue(o);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581contains(", "$$object", "\u2581o)", "\u2581{"], ["\u2581return", "\u2581this._enclosing", "$$.contain", "$$s", "$$Value", "$$(o", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581contains(", "$$Object", "\u2581o)", "\u2581{"], ["\u2581return", "\u2581Con", "$$current", "$$Hash", "$$Map.", "$$this", "$$.contain", "$$s", "$$Value", "$$(o", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public SheetRangeIdentifier(String bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier): base(bookName, firstSheetIdentifier) {\n    _lastSheetIdentifier = lastSheetIdentifier;\n}\n", "java": "public SheetRangeIdentifier(String bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier) {\n    super(bookName, firstSheetIdentifier);\n    _lastSheetIdentifier = lastSheetIdentifier;\n}\n", "cs_t": [["\u2581public", "\u2581Sheet", "$$Range", "$$Identifier", "$$(String", "\u2581bo", "$$ok", "$$Name,", "\u2581", "$$Name", "$$Identifier", "\u2581first", "$$Sheet", "$$Identifier", "$$,", "\u2581", "$$Name", "$$Identifier", "\u2581last", "$$Sheet", "$$Identifier", "$$):", "\u2581base", "$$(bo", "$$ok", "$$Name,", "\u2581first", "$$Sheet", "$$Identifier", "$$)", "\u2581{"], ["\u2581_last", "$$Sheet", "$$Identifier", "\u2581=", "\u2581last", "$$Sheet", "$$Identifier", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Sheet", "$$Range", "$$Identifier", "$$(String", "\u2581bo", "$$ok", "$$Name,", "\u2581", "$$Name", "$$Identifier", "\u2581first", "$$Sheet", "$$Identifier", "$$,", "\u2581", "$$Name", "$$Identifier", "\u2581last", "$$Sheet", "$$Identifier", "$$)", "\u2581{"], ["\u2581super", "$$(bo", "$$ok", "$$Name,", "\u2581first", "$$Sheet", "$$Identifier", "$$)", "$$;"], ["\u2581_last", "$$Sheet", "$$Identifier", "\u2581=", "\u2581last", "$$Sheet", "$$Identifier", "$$;"], ["\u2581}"]]}, {"cs": "public DomainMetadataRequest(string domainName) {\n    _domainName = domainName;\n}\n", "java": "public DomainMetadataRequest(String domainName) {\n    setDomainName(domainName);\n}\n", "cs_t": [["\u2581public", "\u2581D", "$$omain", "$$Metadata", "$$Request(string", "\u2581d", "$$omain", "$$Name)", "\u2581{"], ["\u2581_d", "$$omain", "$$Name", "\u2581=", "\u2581d", "$$omain", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$omain", "$$Metadata", "$$Request(String", "\u2581d", "$$omain", "$$Name)", "\u2581{"], ["\u2581set", "$$Domain", "$$Name", "$$(d", "$$omain", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public ParseException(Token currentToken,int[][] expectedTokenSequences,string[] tokenImage): base(Initialize(currentToken, expectedTokenSequences, tokenImage)) {\n    this.CurrentToken = currentToken;\n    this.ExpectedTokenSequences = expectedTokenSequences;\n    this.TokenImage = tokenImage;\n}\n", "java": "public ParseException(Token currentTokenVal,int[][] expectedTokenSequencesVal, String[] tokenImageVal) {\n    super(new MessageImpl(QueryParserMessages.INVALID_SYNTAX, initialise(currentTokenVal, expectedTokenSequencesVal, tokenImageVal)));\n    this.currentToken = currentTokenVal;\n    this.expectedTokenSequences = expectedTokenSequencesVal;\n    this.tokenImage = tokenImageVal;\n}\n", "cs_t": [["\u2581public", "\u2581Parse", "$$Exception(", "$$Token", "\u2581current", "$$Token", "$$,", "$$int", "$$[]", "$$[]", "\u2581expected", "$$Token", "$$Sequ", "$$en", "$$ces", "$$,", "$$string", "$$[]", "\u2581token", "$$Image", "$$):", "\u2581base", "$$(", "$$In", "$$itial", "$$ize", "$$(c", "$$urrent", "$$Token", "$$,", "\u2581expected", "$$Token", "$$Sequ", "$$en", "$$ces", "$$,", "\u2581token", "$$Image", "$$))", "\u2581{"], ["\u2581this.", "$$Current", "$$Token", "\u2581=", "\u2581current", "$$Token", "$$;"], ["\u2581this.", "$$Exp", "$$ected", "$$Token", "$$Sequ", "$$en", "$$ces", "\u2581=", "\u2581expected", "$$Token", "$$Sequ", "$$en", "$$ces", "$$;"], ["\u2581this.", "$$Token", "$$Image", "\u2581=", "\u2581token", "$$Image", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Parse", "$$Exception(", "$$Token", "\u2581current", "$$Token", "$$Val", "$$,", "$$int", "$$[]", "$$[]", "\u2581expected", "$$Token", "$$Sequ", "$$en", "$$ces", "$$Val", "$$,", "\u2581String[]", "\u2581token", "$$Image", "$$Val", "$$)", "\u2581{"], ["\u2581super", "$$(new", "\u2581M", "$$essage", "$$Impl", "$$(", "$$Query", "$$Parser", "$$M", "$$ess", "$$ages", "$$.", "$$INVALID", "$$_", "$$S", "$$Y", "$$N", "$$T", "$$AX", "$$,", "\u2581in", "$$itial", "$$i", "$$se", "$$(c", "$$urrent", "$$Token", "$$Val", "$$,", "\u2581expected", "$$Token", "$$Sequ", "$$en", "$$ces", "$$Val", "$$,", "\u2581token", "$$Image", "$$Val", "$$))", "$$)", "$$;"], ["\u2581this.", "$$current", "$$Token", "\u2581=", "\u2581current", "$$Token", "$$Val", "$$;"], ["\u2581this.", "$$expected", "$$Token", "$$Sequ", "$$en", "$$ces", "\u2581=", "\u2581expected", "$$Token", "$$Sequ", "$$en", "$$ces", "$$Val", "$$;"], ["\u2581this.", "$$token", "$$Image", "\u2581=", "\u2581token", "$$Image", "$$Val", "$$;"], ["\u2581}"]]}, {"cs": "public FetchPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"FetchPhotos\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public FetchPhotosRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"FetchPhotos\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581F", "$$etch", "$$Photo", "$$sRequest", "$$():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$F", "$$etch", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581F", "$$etch", "$$Photo", "$$sRequest", "$$()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$F", "$$etch", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public java.io.PrintWriter writer() {\n    return _writer;\n}\n", "java": "public PrintWriter writer() {\n    return writer;\n}\n", "cs_t": [["\u2581public", "\u2581java.", "$$io.", "$$P", "$$rint", "$$Writer", "\u2581w", "$$riter", "$$()", "\u2581{"], ["\u2581return", "\u2581_", "$$w", "$$riter", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$rint", "$$Writer", "\u2581w", "$$riter", "$$()", "\u2581{"], ["\u2581return", "\u2581w", "$$riter", "$$;"], ["\u2581}"]]}, {"cs": "public NGramTokenizerFactory(IDictionary<string, string> args): base(args) {\n    minGramSize = GetInt32(args, \"minGramSize\", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);\n    maxGramSize = GetInt32(args, \"maxGramSize\", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);\n    if (args.Count > 0) {\n        throw new System.ArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "java": "public NGramTokenizerFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);\n    if (!args.isEmpty()) {\n        throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581N", "$$G", "$$ram", "$$Token", "$$izer", "$$Factory(", "$$IDictionary<string,", "\u2581string>", "\u2581args):", "\u2581base(args)", "\u2581{"], ["\u2581min", "$$G", "$$ram", "$$Size", "\u2581=", "\u2581Get", "$$Int32", "$$(args,", "\u2581\"", "$$min", "$$G", "$$ram", "$$Size", "$$\",", "\u2581N", "$$G", "$$ram", "$$Token", "$$iz", "$$er.", "$$DEFAULT_", "$$M", "$$IN", "$$_", "$$NG", "$$R", "$$AM", "$$_SIZE", "$$)", "$$;"], ["\u2581max", "$$G", "$$ram", "$$Size", "\u2581=", "\u2581Get", "$$Int32", "$$(args,", "\u2581\"", "$$max", "$$G", "$$ram", "$$Size", "$$\",", "\u2581N", "$$G", "$$ram", "$$Token", "$$iz", "$$er.", "$$DEFAULT_", "$$M", "$$AX_", "$$NG", "$$R", "$$AM", "$$_SIZE", "$$)", "$$;"], ["\u2581if", "\u2581(args.Count", "\u2581>", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581N", "$$G", "$$ram", "$$Token", "$$izer", "$$Factory(", "$$Map<String,", "\u2581String", "$$>", "\u2581args)", "\u2581{"], ["\u2581super(", "$$arg", "$$s)", "$$;"], ["\u2581min", "$$G", "$$ram", "$$Size", "\u2581=", "\u2581get", "$$Int", "$$(args,", "\u2581\"", "$$min", "$$G", "$$ram", "$$Size", "$$\",", "\u2581N", "$$G", "$$ram", "$$Token", "$$iz", "$$er.", "$$DEFAULT_", "$$M", "$$IN", "$$_", "$$NG", "$$R", "$$AM", "$$_SIZE", "$$)", "$$;"], ["\u2581max", "$$G", "$$ram", "$$Size", "\u2581=", "\u2581get", "$$Int", "$$(args,", "\u2581\"", "$$max", "$$G", "$$ram", "$$Size", "$$\",", "\u2581N", "$$G", "$$ram", "$$Token", "$$iz", "$$er.", "$$DEFAULT_", "$$M", "$$AX_", "$$NG", "$$R", "$$AM", "$$_SIZE", "$$)", "$$;"], ["\u2581if", "\u2581(!args.isEmpty())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual bool IsDirectoryFileConflict() {\n    return dfConflict != null;\n}\n", "java": "public boolean isDirectoryFileConflict() {\n    return dfConflict != null;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581Is", "$$Directory", "$$File", "$$Con", "$$f", "$$lic", "$$t", "$$()", "\u2581{"], ["\u2581return", "\u2581d", "$$f", "$$Con", "$$f", "$$lic", "$$t", "\u2581!=", "\u2581null", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$Directory", "$$File", "$$Con", "$$f", "$$lic", "$$t", "$$()", "\u2581{"], ["\u2581return", "\u2581d", "$$f", "$$Con", "$$f", "$$lic", "$$t", "\u2581!=", "\u2581null", "$$;"], ["\u2581}"]]}, {"cs": "public IndonesianStemFilter(TokenStream input, bool stemDerivational): base(input) {\n    this.stemDerivational = stemDerivational;\n    termAtt = AddAttribute<ICharTermAttribute>();\n    keywordAtt = AddAttribute<IKeywordAttribute>();\n}\n", "java": "public IndonesianStemFilter(TokenStream input, boolean stemDerivational) {\n    super(input);\n    this.stemDerivational = stemDerivational;\n}\n", "cs_t": [["\u2581public", "\u2581In", "$$d", "$$ones", "$$ian", "$$Stem", "$$Filter(TokenStream", "\u2581input,", "\u2581bool", "\u2581s", "$$tem", "$$D", "$$eri", "$$v", "$$ation", "$$al", "$$):", "\u2581base", "$$(input", "$$)", "\u2581{"], ["\u2581this.", "$$s", "$$tem", "$$D", "$$eri", "$$v", "$$ation", "$$al", "\u2581=", "\u2581s", "$$tem", "$$D", "$$eri", "$$v", "$$ation", "$$al", "$$;"], ["\u2581term", "$$Att", "\u2581=", "\u2581Add", "$$Attribute", "$$<", "$$I", "$$Char", "$$Term", "$$Attribute", "$$>", "$$()", "$$;"], ["\u2581key", "$$word", "$$Att", "\u2581=", "\u2581Add", "$$Attribute", "$$<", "$$I", "$$Key", "$$word", "$$Attribute", "$$>", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581In", "$$d", "$$ones", "$$ian", "$$Stem", "$$Filter(TokenStream", "\u2581input,", "\u2581boolean", "\u2581s", "$$tem", "$$D", "$$eri", "$$v", "$$ation", "$$al", "$$)", "\u2581{"], ["\u2581super(", "$$input", "$$)", "$$;"], ["\u2581this.", "$$s", "$$tem", "$$D", "$$eri", "$$v", "$$ation", "$$al", "\u2581=", "\u2581s", "$$tem", "$$D", "$$eri", "$$v", "$$ation", "$$al", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateTrafficPolicyResponse CreateTrafficPolicy(CreateTrafficPolicyRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateTrafficPolicyRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateTrafficPolicyResponseUnmarshaller.Instance;\n    return Invoke<CreateTrafficPolicyResponse>(request, options);\n}\n", "java": "public CreateTrafficPolicyResult createTrafficPolicy(CreateTrafficPolicyRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateTrafficPolicy(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$TrafficPolicy", "$$Response", "\u2581Create", "$$TrafficPolicy", "$$(Create", "$$TrafficPolicy", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$TrafficPolicy", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$TrafficPolicy", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$TrafficPolicy", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$TrafficPolicy", "$$Result", "\u2581create", "$$TrafficPolicy", "$$(Create", "$$TrafficPolicy", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$TrafficPolicy", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void Serialize(ILittleEndianOutput out1) {\n    out1.WriteInt(fSD);\n    out1.WriteInt(passwordVerifier);\n    StringUtil.WriteUnicodeString(out1, title);\n    out1.Write(securityDescriptor);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeInt(fSD);\n    out.writeInt(passwordVerifier);\n    StringUtil.writeUnicodeString(out, title);\n    out.write(securityDescriptor);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.Write", "$$Int", "$$(f", "$$S", "$$D", "$$)", "$$;"], ["\u2581out1.Write", "$$Int", "$$(p", "$$assword", "$$Veri", "$$fier", "$$)", "$$;"], ["\u2581StringUtil.", "$$Write", "$$Unicode", "$$String", "$$(out", "$$1,", "\u2581", "$$ti", "$$tle", "$$)", "$$;"], ["\u2581out1.Write", "$$(", "$$se", "$$c", "$$u", "$$rity", "$$D", "$$esc", "$$ript", "$$or", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.write", "$$Int", "$$(f", "$$S", "$$D", "$$)", "$$;"], ["\u2581out.write", "$$Int", "$$(p", "$$assword", "$$Veri", "$$fier", "$$)", "$$;"], ["\u2581StringUtil.", "$$write", "$$Unicode", "$$String", "$$(out", "$$,", "\u2581", "$$ti", "$$tle", "$$)", "$$;"], ["\u2581out.write", "$$(", "$$se", "$$c", "$$u", "$$rity", "$$D", "$$esc", "$$ript", "$$or", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static double Floor(double n, double s) {\n    double f;\n    if ((n < 0 && s > 0) || (n > 0 && s < 0) || (s == 0 && n != 0)) {\n        f = double.NaN;\n    }\n    else {\n        f = (n == 0 || s == 0) ? 0 : Math.Floor(n / s) * s;\n    }\n    return f;\n}\n", "java": "public static double floor(double n, double s) {\n    if (s==0 && n!=0) {\n        return Double.NaN;\n    }\n    else {\n        return (n==0 || s==0) ? 0 : Math.floor(n/s) * s;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581F", "$$lo", "$$or", "$$(double", "\u2581n", "$$,", "\u2581double", "\u2581s)", "\u2581{"], ["\u2581double", "\u2581f", "$$;"], ["\u2581if", "\u2581(", "$$(n", "\u2581<", "\u25810", "\u2581&&", "\u2581s", "\u2581>", "\u25810)", "\u2581||", "\u2581(n", "\u2581>", "\u25810", "\u2581&&", "\u2581s", "\u2581<", "\u25810)", "\u2581||", "\u2581(s", "\u2581==", "\u25810", "\u2581&&", "\u2581n", "\u2581!=", "\u25810", "$$))", "\u2581{"], ["\u2581f", "\u2581=", "\u2581double", "$$.N", "$$a", "$$N", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581f", "\u2581=", "\u2581(n", "\u2581==", "\u25810", "\u2581||", "\u2581s", "\u2581==", "\u25810)", "\u2581?", "\u25810", "\u2581:", "\u2581Math.", "$$F", "$$lo", "$$or", "$$(n", "\u2581/", "\u2581s)", "\u2581*", "\u2581s", "$$;"], ["\u2581}"], ["\u2581return", "\u2581f", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581f", "$$lo", "$$or", "$$(double", "\u2581n", "$$,", "\u2581double", "\u2581s)", "\u2581{"], ["\u2581if", "\u2581(s", "$$==", "$$0", "\u2581&&", "\u2581n", "$$!", "$$=", "$$0)", "\u2581{"], ["\u2581return", "\u2581Double", "$$.N", "$$a", "$$N", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581(n", "$$==", "$$0", "\u2581||", "\u2581s", "$$==", "$$0)", "\u2581?", "\u25810", "\u2581:", "\u2581Math.", "$$f", "$$lo", "$$or", "$$(n", "$$/", "$$s)", "\u2581*", "\u2581s", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public ByteArrayDataOutput(byte[] bytes, int offset, int len) {\n    Reset(bytes, offset, len);\n}\n", "java": "public ByteArrayDataOutput(byte[] bytes, int offset, int len) {\n    reset(bytes, offset, len);\n}\n", "cs_t": [["\u2581public", "\u2581Byte", "$$Array", "$$Data", "$$Output", "$$(byte[]", "\u2581bytes", "$$,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581Reset", "$$(bytes", "$$,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Byte", "$$Array", "$$Data", "$$Output", "$$(byte[]", "\u2581bytes", "$$,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581reset", "$$(bytes", "$$,", "\u2581offset,", "\u2581len)", "$$;"], ["\u2581}"]]}, {"cs": "public static IList<ITree> GetChildren(ITree t) {\n    IList<ITree> kids = new List<ITree>();\n    for (int i = 0; i < t.ChildCount; i++) {\n        kids.Add(t.GetChild(i));\n    }\n    return kids;\n}\n", "java": "public static List<Tree> getChildren(Tree t) {\n    List<Tree> kids = new ArrayList<Tree>();\n    for (int i=0; i<t.getChildCount(); i++) {\n        kids.add(t.getChild(i));\n    }\n    return kids;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581IList<", "$$I", "$$Tree", "$$>", "\u2581Get", "$$Children", "$$(I", "$$Tree", "\u2581t", "$$)", "\u2581{"], ["\u2581IList<", "$$I", "$$Tree", "$$>", "\u2581k", "$$id", "$$s", "\u2581=", "\u2581new", "\u2581List<", "$$I", "$$Tree", "$$>", "$$()", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581t", "$$.", "$$Child", "$$Count", "$$;", "\u2581i++)", "\u2581{"], ["\u2581k", "$$id", "$$s.Add(", "$$t", "$$.Get", "$$Ch", "$$ild(", "$$i", "$$))", "$$;"], ["\u2581}"], ["\u2581return", "\u2581k", "$$id", "$$s;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581List<", "$$Tree", "$$>", "\u2581get", "$$Children", "$$(", "$$Tree", "\u2581t", "$$)", "\u2581{"], ["\u2581List<", "$$Tree", "$$>", "\u2581k", "$$id", "$$s", "\u2581=", "\u2581new", "\u2581ArrayList<", "$$Tree", "$$>", "$$()", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "$$=0", "$$;", "\u2581i", "$$<", "$$t", "$$.get", "$$Child", "$$Count", "$$()", "$$;", "\u2581i++)", "\u2581{"], ["\u2581k", "$$id", "$$s.add(", "$$t", "$$.get", "$$Ch", "$$ild(", "$$i", "$$))", "$$;"], ["\u2581}"], ["\u2581return", "\u2581k", "$$id", "$$s;"], ["\u2581}"]]}, {"cs": "public override void clear() {\n    this._enclosing.clear();\n}\n", "java": "public void clear() {\n    Hashtable.this.clear();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581clear()", "\u2581{"], ["\u2581this._enclosing", "$$.c", "$$lear()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581clear()", "\u2581{"], ["\u2581Hash", "$$table", "$$.", "$$this", "$$.c", "$$lear()", "$$;"], ["\u2581}"]]}, {"cs": "public RefreshAllRecord(bool refreshAll): this(0) {\n    RefreshAll = (refreshAll);\n}\n", "java": "public RefreshAllRecord(boolean refreshAll) {\n    this(0);\n    setRefreshAll(refreshAll);\n}\n", "cs_t": [["\u2581public", "\u2581Ref", "$$resh", "$$All", "$$Record(", "$$bo", "$$ol", "\u2581ref", "$$resh", "$$All", "$$):", "\u2581this", "$$(", "$$0)", "\u2581{"], ["\u2581Ref", "$$resh", "$$All", "\u2581=", "\u2581(", "$$ref", "$$resh", "$$All", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Ref", "$$resh", "$$All", "$$Record(", "$$boolean", "\u2581ref", "$$resh", "$$All", "$$)", "\u2581{"], ["\u2581this", "$$(", "$$0)", "$$;"], ["\u2581set", "$$Ref", "$$resh", "$$All", "$$(re", "$$f", "$$resh", "$$All", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteNamedQueryResponse DeleteNamedQuery(DeleteNamedQueryRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteNamedQueryRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteNamedQueryResponseUnmarshaller.Instance;\n    return Invoke<DeleteNamedQueryResponse>(request, options);\n}\n", "java": "public DeleteNamedQueryResult deleteNamedQuery(DeleteNamedQueryRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteNamedQuery(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Name", "$$dQuery", "$$Response", "\u2581Delete", "$$Name", "$$dQuery", "$$(Delete", "$$Name", "$$dQuery", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Name", "$$dQuery", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Name", "$$dQuery", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Name", "$$dQuery", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Name", "$$dQuery", "$$Result", "\u2581delete", "$$Name", "$$dQuery", "$$(Delete", "$$Name", "$$dQuery", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Name", "$$dQuery", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public GraphvizFormatter(ConnectionCosts costs) {\n    this.costs = costs;\n    this.bestPathMap = new Dictionary<string, string>();\n    sb.Append(FormatHeader());\n    sb.Append(\"  init [style=invis]\\n\");\n    sb.Append(\"  init -> 0.0 [label=\\\"\" + BOS_LABEL + \"\\\"]\\n\");\n}\n", "java": "public GraphvizFormatter(ConnectionCosts costs) {\n    this.costs = costs;\n    this.bestPathMap = new HashMap<>();\n    sb.append(formatHeader());\n    sb.append(\"  init [style=invis]\\n\");\n    sb.append(\"  init -> 0.0 [label=\\\"\" + BOS_LABEL + \"\\\"]\\n\");\n}\n", "cs_t": [["\u2581public", "\u2581G", "$$raph", "$$v", "$$iz", "$$Format", "$$ter", "$$(", "$$Connection", "$$Co", "$$st", "$$s", "\u2581co", "$$st", "$$s)", "\u2581{"], ["\u2581this.", "$$co", "$$st", "$$s", "\u2581=", "\u2581co", "$$st", "$$s;"], ["\u2581this.", "$$b", "$$est", "$$Path", "$$Map", "\u2581=", "\u2581new", "\u2581D", "$$ictionary<string,", "\u2581string>", "$$()", "$$;"], ["\u2581sb.Append(", "$$Format", "$$Header", "$$())", "$$;"], ["\u2581sb.Append(\"", "\u2581", "\u2581in", "$$it", "\u2581[", "$$st", "$$yle", "$$=", "$$in", "$$v", "$$is", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581sb.Append(\"", "\u2581", "\u2581in", "$$it", "\u2581-", "$$>", "\u25810", "$$.0", "\u2581[", "$$l", "$$abel", "$$=", "$$\\\"", "$$\"", "\u2581+", "\u2581B", "$$O", "$$S_", "$$LA", "$$B", "$$E", "$$L", "\u2581+", "\u2581\"", "$$\\\"", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581G", "$$raph", "$$v", "$$iz", "$$Format", "$$ter", "$$(", "$$Connection", "$$Co", "$$st", "$$s", "\u2581co", "$$st", "$$s)", "\u2581{"], ["\u2581this.", "$$co", "$$st", "$$s", "\u2581=", "\u2581co", "$$st", "$$s;"], ["\u2581this.", "$$b", "$$est", "$$Path", "$$Map", "\u2581=", "\u2581new", "\u2581Hash", "$$Map<", "$$>", "$$()", "$$;"], ["\u2581sb.append(", "$$format", "$$Header", "$$())", "$$;"], ["\u2581sb.append(\"", "\u2581", "\u2581in", "$$it", "\u2581[", "$$st", "$$yle", "$$=", "$$in", "$$v", "$$is", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581sb.append(\"", "\u2581", "\u2581in", "$$it", "\u2581-", "$$>", "\u25810", "$$.0", "\u2581[", "$$l", "$$abel", "$$=", "$$\\\"", "$$\"", "\u2581+", "\u2581B", "$$O", "$$S_", "$$LA", "$$B", "$$E", "$$L", "\u2581+", "\u2581\"", "$$\\\"", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581}"]]}, {"cs": "public CheckMultiagentRequest(): base(\"visionai-poc\", \"2020-04-08\", \"CheckMultiagent\") {\n    Method = MethodType.POST;\n}\n", "java": "public CheckMultiagentRequest() {\n    super(\"visionai-poc\", \"2020-04-08\", \"CheckMultiagent\");\n    setMethod(MethodType.POST);\n}\n", "cs_t": [["\u2581public", "\u2581Check", "$$Multi", "$$ag", "$$ent", "$$Request():", "\u2581base(\"", "$$vision", "$$a", "$$i", "$$-", "$$p", "$$oc", "$$\",", "\u2581\"20", "$$20", "$$-0", "$$4", "$$-0", "$$8", "$$\",", "\u2581\"", "$$Check", "$$Multi", "$$ag", "$$ent", "$$\")", "\u2581{"], ["\u2581Method", "\u2581=", "\u2581MethodType.POST", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Check", "$$Multi", "$$ag", "$$ent", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$vision", "$$a", "$$i", "$$-", "$$p", "$$oc", "$$\",", "\u2581\"20", "$$20", "$$-0", "$$4", "$$-0", "$$8", "$$\",", "\u2581\"", "$$Check", "$$Multi", "$$ag", "$$ent", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.POST", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListUserProfilesResponse ListUserProfiles(ListUserProfilesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListUserProfilesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListUserProfilesResponseUnmarshaller.Instance;\n    return Invoke<ListUserProfilesResponse>(request, options);\n}\n", "java": "public ListUserProfilesResult listUserProfiles(ListUserProfilesRequest request) {\n    request = beforeClientExecution(request);\n    return executeListUserProfiles(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$User", "$$Profiles", "$$Response", "\u2581List", "$$User", "$$Profiles", "$$(List", "$$User", "$$Profiles", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$User", "$$Profiles", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$User", "$$Profiles", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$User", "$$Profiles", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$User", "$$Profiles", "$$Result", "\u2581list", "$$User", "$$Profiles", "$$(List", "$$User", "$$Profiles", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$User", "$$Profiles", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateRelationalDatabaseFromSnapshotResponse CreateRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateRelationalDatabaseFromSnapshotRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateRelationalDatabaseFromSnapshotResponseUnmarshaller.Instance;\n    return Invoke<CreateRelationalDatabaseFromSnapshotResponse>(request, options);\n}\n", "java": "public CreateRelationalDatabaseFromSnapshotResult createRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateRelationalDatabaseFromSnapshot(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$RelationalDatabase", "$$From", "$$Snapshot", "$$Response", "\u2581Create", "$$RelationalDatabase", "$$From", "$$Snapshot", "$$(Create", "$$RelationalDatabase", "$$From", "$$SnapshotRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$RelationalDatabase", "$$From", "$$Snapshot", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$RelationalDatabase", "$$From", "$$Snapshot", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$RelationalDatabase", "$$From", "$$Snapshot", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$RelationalDatabase", "$$From", "$$Snapshot", "$$Result", "\u2581create", "$$RelationalDatabase", "$$From", "$$Snapshot", "$$(Create", "$$RelationalDatabase", "$$From", "$$SnapshotRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$RelationalDatabase", "$$From", "$$Snapshot", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StartTaskResponse StartTask(StartTaskRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = StartTaskRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = StartTaskResponseUnmarshaller.Instance;\n    return Invoke<StartTaskResponse>(request, options);\n}\n", "java": "public StartTaskResult startTask(StartTaskRequest request) {\n    request = beforeClientExecution(request);\n    return executeStartTask(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Start", "$$Task", "$$Response", "\u2581Start", "$$Task", "$$(Start", "$$Task", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Start", "$$Task", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Start", "$$Task", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Start", "$$Task", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Start", "$$Task", "$$Result", "\u2581start", "$$Task", "$$(Start", "$$Task", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Start", "$$Task", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ICollection<string> GetIgnoredPaths() {\n    return ignoredPaths;\n}\n", "java": "public Set<String> getIgnoredPaths() {\n    return ignoredPaths;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581I", "$$Collection", "$$<string", "$$>", "\u2581Get", "$$I", "$$gn", "$$ore", "$$d", "$$Path", "$$s()", "\u2581{"], ["\u2581return", "\u2581i", "$$gn", "$$ore", "$$d", "$$Path", "$$s;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Set", "$$<", "$$String>", "\u2581get", "$$I", "$$gn", "$$ore", "$$d", "$$Path", "$$s()", "\u2581{"], ["\u2581return", "\u2581i", "$$gn", "$$ore", "$$d", "$$Path", "$$s;"], ["\u2581}"]]}, {"cs": "public FeatSmartTag(RecordInputStream in1) {\n    data = in1.ReadRemainder();\n}\n", "java": "public FeatSmartTag(RecordInputStream in) {\n    data = in.readRemainder();\n}\n", "cs_t": [["\u2581public", "\u2581F", "$$e", "$$at", "$$Sm", "$$art", "$$Tag", "$$(", "$$RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581data", "\u2581=", "\u2581in1.Read", "$$Re", "$$main", "$$der", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581F", "$$e", "$$at", "$$Sm", "$$art", "$$Tag", "$$(", "$$RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581data", "\u2581=", "\u2581in.read", "$$Re", "$$main", "$$der", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {\n    _action = action;\n    _resourceRecordSet = resourceRecordSet;\n}\n", "java": "public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {\n    setAction(action.toString());\n    setResourceRecordSet(resourceRecordSet);\n}\n", "cs_t": [["\u2581public", "\u2581Ch", "$$ange", "$$(", "$$Change", "$$Action", "\u2581a", "$$ction", "$$,", "\u2581", "$$Resource", "$$Record", "$$Set", "\u2581res", "$$ource", "$$Record", "$$Set", "$$)", "\u2581{"], ["\u2581_", "$$a", "$$ction", "\u2581=", "\u2581a", "$$ction", "$$;"], ["\u2581_", "$$res", "$$ource", "$$Record", "$$Set", "\u2581=", "\u2581res", "$$ource", "$$Record", "$$Set", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Ch", "$$ange", "$$(", "$$Change", "$$Action", "\u2581a", "$$ction", "$$,", "\u2581", "$$Resource", "$$Record", "$$Set", "\u2581res", "$$ource", "$$Record", "$$Set", "$$)", "\u2581{"], ["\u2581set", "$$Action", "$$(a", "$$ction", "$$.toString()", "$$)", "$$;"], ["\u2581set", "$$Resource", "$$Record", "$$Set(", "$$res", "$$ource", "$$Record", "$$Set", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteImageResponse DeleteImage(DeleteImageRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteImageRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteImageResponseUnmarshaller.Instance;\n    return Invoke<DeleteImageResponse>(request, options);\n}\n", "java": "public DeleteImageResult deleteImage(DeleteImageRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteImage(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Image", "$$Response", "\u2581Delete", "$$Image", "$$(Delete", "$$Image", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Image", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Image", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Image", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Image", "$$Result", "\u2581delete", "$$Image", "$$(Delete", "$$Image", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Image", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateConfigurationSetResponse CreateConfigurationSet(CreateConfigurationSetRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateConfigurationSetRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateConfigurationSetResponseUnmarshaller.Instance;\n    return Invoke<CreateConfigurationSetResponse>(request, options);\n}\n", "java": "public CreateConfigurationSetResult createConfigurationSet(CreateConfigurationSetRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateConfigurationSet(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$ConfigurationSet", "$$Response", "\u2581Create", "$$ConfigurationSet", "$$(Create", "$$ConfigurationSet", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$ConfigurationSet", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$ConfigurationSet", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$ConfigurationSet", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$ConfigurationSet", "$$Result", "\u2581create", "$$ConfigurationSet", "$$(Create", "$$ConfigurationSet", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$ConfigurationSet", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual java.util.Iterator<E> iterator() {\n    object[] snapshot = elements;\n    return new java.util.concurrent.CopyOnWriteArrayList.CowIterator<E>(snapshot, 0,snapshot.Length);\n}\n", "java": "public Iterator<E> iterator() {\n    Object[] snapshot = elements;\n    return new CowIterator<E>(snapshot, 0, snapshot.length);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581java.util.", "$$Iterator", "$$<E>", "\u2581iterator", "$$()", "\u2581{"], ["\u2581object", "$$[]", "\u2581snapshot", "\u2581=", "\u2581element", "$$s;"], ["\u2581return", "\u2581new", "\u2581java.util.", "$$con", "$$current", "$$.Copy", "$$On", "$$Write", "$$Array", "$$List", "$$.", "$$Co", "$$w", "$$Iterator", "$$<E>", "$$(s", "$$napshot", "$$,", "\u25810,", "$$s", "$$napshot", "$$.Length)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Iterator", "$$<E>", "\u2581iterator", "$$()", "\u2581{"], ["\u2581Object", "$$[]", "\u2581snapshot", "\u2581=", "\u2581element", "$$s;"], ["\u2581return", "\u2581new", "\u2581", "$$Co", "$$w", "$$Iterator", "$$<E>", "$$(s", "$$napshot", "$$,", "\u25810,", "\u2581snapshot", "$$.length)", "$$;"], ["\u2581}"]]}, {"cs": "public override void VisitContainedRecords(RecordVisitor rv) {\n    if (_recs.Count==0) {\n        return;\n    }\n    rv.VisitRecord(_bofRec);\n    for (int i = 0; i < _recs.Count; i++) {\n        RecordBase rb = _recs[i];\n        if (rb is RecordAggregate) {\n            ((RecordAggregate)rb).VisitContainedRecords(rv);\n        }\n        else {\n            rv.VisitRecord((Record)rb);\n        }\n    }\n    rv.VisitRecord(EOFRecord.instance);\n}\n", "java": "public void visitContainedRecords(RecordVisitor rv) {\n    if (_recs.isEmpty()) {\n        return;\n    }\n    rv.visitRecord(_bofRec);\n    for (int i = 0; i < _recs.size(); i++) {\n        RecordBase rb = _recs.get(i);\n        if (rb instanceof RecordAggregate) {\n            ((RecordAggregate) rb).visitContainedRecords(rv);\n        }\n        else {\n            rv.visitRecord((org.apache.poi.hssf.record.Record) rb);\n        }\n    }\n    rv.visitRecord(EOFRecord.instance);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581V", "$$is", "$$it", "$$Contain", "$$ed", "$$Record", "$$s(", "$$Record", "$$Vis", "$$itor", "\u2581rv", "$$)", "\u2581{"], ["\u2581if", "\u2581(_", "$$re", "$$c", "$$s.Count", "$$==", "$$0)", "\u2581{"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581rv", "$$.", "$$Vis", "$$it", "$$Record(", "$$_", "$$bo", "$$f", "$$Rec", "$$)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581_re", "$$c", "$$s.Count", "$$;", "\u2581i++)", "\u2581{"], ["\u2581Record", "$$Base", "\u2581r", "$$b", "\u2581=", "\u2581_re", "$$c", "$$s[i]", "$$;"], ["\u2581if", "\u2581(r", "$$b", "\u2581is", "\u2581Record", "$$Aggregate", "$$)", "\u2581{"], ["\u2581((", "$$Record", "$$Aggregate", "$$)", "$$r", "$$b", "$$).", "$$Vis", "$$it", "$$Contain", "$$ed", "$$Record", "$$s(", "$$r", "$$v", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581rv", "$$.", "$$Vis", "$$it", "$$Record(", "$$(", "$$Record)", "$$r", "$$b", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581rv", "$$.", "$$Vis", "$$it", "$$Record(", "$$E", "$$OF", "$$Record.", "$$in", "$$stance", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581v", "$$is", "$$it", "$$Contain", "$$ed", "$$Record", "$$s(", "$$Record", "$$Vis", "$$itor", "\u2581rv", "$$)", "\u2581{"], ["\u2581if", "\u2581(_", "$$re", "$$c", "$$s.", "$$isEmpty())", "\u2581{"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581rv", "$$.", "$$v", "$$is", "$$it", "$$Record(", "$$_", "$$bo", "$$f", "$$Rec", "$$)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581_re", "$$c", "$$s.size()", "$$;", "\u2581i++)", "\u2581{"], ["\u2581Record", "$$Base", "\u2581r", "$$b", "\u2581=", "\u2581_re", "$$c", "$$s.get", "$$(i", "$$)", "$$;"], ["\u2581if", "\u2581(r", "$$b", "\u2581instanceof", "\u2581Record", "$$Aggregate", "$$)", "\u2581{"], ["\u2581((", "$$Record", "$$Aggregate", "$$)", "\u2581r", "$$b", "$$).", "$$v", "$$is", "$$it", "$$Contain", "$$ed", "$$Record", "$$s(", "$$r", "$$v", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581rv", "$$.", "$$v", "$$is", "$$it", "$$Record(", "$$(", "$$or", "$$g", "$$.ap", "$$ache", "$$.", "$$po", "$$i.", "$$h", "$$ss", "$$f", "$$.re", "$$cord", "$$.", "$$Record)", "\u2581r", "$$b", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581rv", "$$.", "$$v", "$$is", "$$it", "$$Record(", "$$E", "$$OF", "$$Record.", "$$in", "$$stance", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[FtCbls ]\").Append(\"\\n\");\n    buffer.Append(\"  size     = \").Append(DataSize).Append(\"\\n\");\n    buffer.Append(\"  reserved = \").Append(HexDump.ToHex(reserved)).Append(\"\\n\");\n    buffer.Append(\"[/FtCbls ]\").Append(\"\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"[FtCbls ]\").append(\"\\n\");\n    buffer.append(\"  size     = \").append(getDataSize()).append(\"\\n\");\n    buffer.append(\"  reserved = \").append(HexDump.toHex(reserved)).append(\"\\n\");\n    buffer.append(\"[/FtCbls ]\").append(\"\\n\");\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$F", "$$t", "$$C", "$$b", "$$l", "$$s", "\u2581", "$$]", "$$\")", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581size", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$Data", "$$Size)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581res", "$$erved", "\u2581=", "\u2581\").Append(", "$$HexDump", "$$.To", "$$Hex", "$$(", "$$reserved", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"[/", "$$F", "$$t", "$$C", "$$b", "$$l", "$$s", "\u2581", "$$]", "$$\")", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(\"[", "$$F", "$$t", "$$C", "$$b", "$$l", "$$s", "\u2581", "$$]", "$$\")", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581size", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$get", "$$Data", "$$Size", "$$())", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581res", "$$erved", "\u2581=", "\u2581\").append(", "$$HexDump", "$$.to", "$$Hex", "$$(", "$$reserved", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"[/", "$$F", "$$t", "$$C", "$$b", "$$l", "$$s", "\u2581", "$$]", "$$\")", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public static BATBlock CreateEmptyBATBlock(POIFSBigBlockSize bigBlockSize, bool isXBAT) {\n    BATBlock block = new BATBlock(bigBlockSize);\n    if (isXBAT) {\n        block.SetXBATChain(bigBlockSize, POIFSConstants.END_OF_CHAIN);\n    }\n    return block;\n}\n", "java": "public static BATBlock createEmptyBATBlock(final POIFSBigBlockSize bigBlockSize, boolean isXBAT) {\n    BATBlock block = new BATBlock(bigBlockSize);\n    if(isXBAT) {\n        final int _entries_per_xbat_block = bigBlockSize.getXBATEntriesPerBlock();\n        block._values[ _entries_per_xbat_block ] = POIFSConstants.END_OF_CHAIN;\n    }\n    return block;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581B", "$$AT", "$$Block", "\u2581Create", "$$Empty", "$$B", "$$AT", "$$Block", "$$(", "$$POI", "$$F", "$$S", "$$B", "$$ig", "$$Block", "$$Size", "\u2581b", "$$ig", "$$Block", "$$Size,", "\u2581bool", "\u2581is", "$$X", "$$B", "$$AT", "$$)", "\u2581{"], ["\u2581B", "$$AT", "$$Block", "\u2581block", "\u2581=", "\u2581new", "\u2581B", "$$AT", "$$Block", "$$(b", "$$ig", "$$Block", "$$Size)", "$$;"], ["\u2581if", "\u2581(is", "$$X", "$$B", "$$AT", "$$)", "\u2581{"], ["\u2581block", "$$.Set", "$$X", "$$B", "$$AT", "$$Ch", "$$a", "$$in", "$$(b", "$$ig", "$$Block", "$$Size,", "\u2581P", "$$O", "$$I", "$$F", "$$S", "$$Constants.", "$$EN", "$$D_", "$$OF", "$$_", "$$CH", "$$A", "$$IN", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581block", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581B", "$$AT", "$$Block", "\u2581create", "$$Empty", "$$B", "$$AT", "$$Block", "$$(f", "$$inal", "\u2581P", "$$O", "$$I", "$$F", "$$S", "$$B", "$$ig", "$$Block", "$$Size", "\u2581b", "$$ig", "$$Block", "$$Size,", "\u2581boolean", "\u2581is", "$$X", "$$B", "$$AT", "$$)", "\u2581{"], ["\u2581B", "$$AT", "$$Block", "\u2581block", "\u2581=", "\u2581new", "\u2581B", "$$AT", "$$Block", "$$(b", "$$ig", "$$Block", "$$Size)", "$$;"], ["\u2581if(", "$$is", "$$X", "$$B", "$$AT", "$$)", "\u2581{"], ["\u2581final", "\u2581int", "\u2581_", "$$entries", "$$_", "$$per", "$$_", "$$x", "$$b", "$$at", "$$_", "$$block", "\u2581=", "\u2581b", "$$ig", "$$Block", "$$Size", "$$.get", "$$X", "$$B", "$$AT", "$$Ent", "$$ries", "$$Per", "$$Block", "$$()", "$$;"], ["\u2581block", "$$._", "$$values", "$$[", "\u2581_", "$$entries", "$$_", "$$per", "$$_", "$$x", "$$b", "$$at", "$$_", "$$block", "\u2581", "$$]", "\u2581=", "\u2581P", "$$O", "$$I", "$$F", "$$S", "$$Constants.", "$$EN", "$$D_", "$$OF", "$$_", "$$CH", "$$A", "$$IN", "$$;"], ["\u2581}"], ["\u2581return", "\u2581block", "$$;"], ["\u2581}"]]}, {"cs": "public virtual TagResourceResponse TagResource(TagResourceRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = TagResourceRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = TagResourceResponseUnmarshaller.Instance;\n    return Invoke<TagResourceResponse>(request, options);\n}\n", "java": "public TagResourceResult tagResource(TagResourceRequest request) {\n    request = beforeClientExecution(request);\n    return executeTagResource(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Tag", "$$Resource", "$$Response", "\u2581", "$$Tag", "$$Resource", "$$(", "$$Tag", "$$Resource", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581", "$$Tag", "$$Resource", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581", "$$Tag", "$$Resource", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Tag", "$$Resource", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Tag", "$$Resource", "$$Result", "\u2581tag", "$$Resource", "$$(", "$$Tag", "$$Resource", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Tag", "$$Resource", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteMailboxPermissionsResponse DeleteMailboxPermissions(DeleteMailboxPermissionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteMailboxPermissionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteMailboxPermissionsResponseUnmarshaller.Instance;\n    return Invoke<DeleteMailboxPermissionsResponse>(request, options);\n}\n", "java": "public DeleteMailboxPermissionsResult deleteMailboxPermissions(DeleteMailboxPermissionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteMailboxPermissions(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Mail", "$$box", "$$Permission", "$$sResponse", "\u2581Delete", "$$Mail", "$$box", "$$Permission", "$$s(", "$$Delete", "$$Mail", "$$box", "$$Permission", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Mail", "$$box", "$$Permission", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Mail", "$$box", "$$Permission", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Mail", "$$box", "$$Permission", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Mail", "$$box", "$$Permission", "$$sResult", "\u2581delete", "$$Mail", "$$box", "$$Permission", "$$s(", "$$Delete", "$$Mail", "$$box", "$$Permission", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Mail", "$$box", "$$Permission", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListDatasetGroupsResponse ListDatasetGroups(ListDatasetGroupsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListDatasetGroupsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListDatasetGroupsResponseUnmarshaller.Instance;\n    return Invoke<ListDatasetGroupsResponse>(request, options);\n}\n", "java": "public ListDatasetGroupsResult listDatasetGroups(ListDatasetGroupsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListDatasetGroups(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Dataset", "$$Group", "$$sResponse", "\u2581List", "$$Dataset", "$$Group", "$$s(List", "$$Dataset", "$$Group", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Dataset", "$$Group", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Dataset", "$$Group", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Dataset", "$$Group", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Dataset", "$$Group", "$$sResult", "\u2581list", "$$Dataset", "$$Group", "$$s(List", "$$Dataset", "$$Group", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Dataset", "$$Group", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ResumeProcessesResponse ResumeProcesses(ResumeProcessesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ResumeProcessesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ResumeProcessesResponseUnmarshaller.Instance;\n    return Invoke<ResumeProcessesResponse>(request, options);\n}\n", "java": "public ResumeProcessesResult resumeProcesses(ResumeProcessesRequest request) {\n    request = beforeClientExecution(request);\n    return executeResumeProcesses(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Res", "$$ume", "$$Process", "$$es", "$$Response", "\u2581", "$$Res", "$$ume", "$$Process", "$$es", "$$(", "$$Res", "$$ume", "$$Process", "$$es", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581", "$$Res", "$$ume", "$$Process", "$$es", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581", "$$Res", "$$ume", "$$Process", "$$es", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Res", "$$ume", "$$Process", "$$es", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Res", "$$ume", "$$Process", "$$es", "$$Result", "\u2581res", "$$ume", "$$Process", "$$es", "$$(", "$$Res", "$$ume", "$$Process", "$$es", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Res", "$$ume", "$$Process", "$$es", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetPersonTrackingResponse GetPersonTracking(GetPersonTrackingRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetPersonTrackingRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetPersonTrackingResponseUnmarshaller.Instance;\n    return Invoke<GetPersonTrackingResponse>(request, options);\n}\n", "java": "public GetPersonTrackingResult getPersonTracking(GetPersonTrackingRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetPersonTracking(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Per", "$$son", "$$Tracking", "$$Response", "\u2581Get", "$$Per", "$$son", "$$Tracking", "$$(Get", "$$Per", "$$son", "$$Tracking", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Per", "$$son", "$$Tracking", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Per", "$$son", "$$Tracking", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Per", "$$son", "$$Tracking", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Per", "$$son", "$$Tracking", "$$Result", "\u2581get", "$$Per", "$$son", "$$Tracking", "$$(Get", "$$Per", "$$son", "$$Tracking", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Per", "$$son", "$$Tracking", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public String ToFormulaString(String[] operands) {\n    if (space.IsSet(field_1_options)) {\n        return operands[0];\n    }\n    else if (optiIf.IsSet(field_1_options)) {\n        return ToFormulaString() + \"(\" + operands[0] + \")\";\n    }\n    else if (optiSkip.IsSet(field_1_options)) {\n        return ToFormulaString() + operands[0];\n    }\n    else {\n        return ToFormulaString() + \"(\" + operands[0] + \")\";\n    }\n}\n", "java": "public String toFormulaString(String[] operands) {\n    if(space.isSet(_options)) {\n        return operands[ 0 ];\n    }\n    else if (optiIf.isSet(_options)) {\n        return toFormulaString() + \"(\" + operands[0] + \")\";\n    }\n    else if (optiSkip.isSet(_options)) {\n        return toFormulaString() + operands[0];\n    }\n    else {\n        return toFormulaString() + \"(\" + operands[0] + \")\";\n    }\n}\n", "cs_t": [["\u2581public", "\u2581String", "\u2581To", "$$Formula", "$$String(String", "$$[]", "\u2581operand", "$$s)", "\u2581{"], ["\u2581if", "\u2581(s", "$$pace", "$$.Is", "$$Set(", "$$field_1_", "$$options", "$$))", "\u2581{"], ["\u2581return", "\u2581operand", "$$s[0]", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(", "$$op", "$$ti", "$$If", "$$.Is", "$$Set(", "$$field_1_", "$$options", "$$))", "\u2581{"], ["\u2581return", "\u2581To", "$$Formula", "$$String()", "\u2581+", "\u2581\"", "$$(\"", "\u2581+", "\u2581operand", "$$s[0]", "\u2581+", "\u2581\")", "$$\"", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(", "$$op", "$$ti", "$$Skip", "$$.Is", "$$Set(", "$$field_1_", "$$options", "$$))", "\u2581{"], ["\u2581return", "\u2581To", "$$Formula", "$$String()", "\u2581+", "\u2581operand", "$$s[0]", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581To", "$$Formula", "$$String()", "\u2581+", "\u2581\"", "$$(\"", "\u2581+", "\u2581operand", "$$s[0]", "\u2581+", "\u2581\")", "$$\"", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581to", "$$Formula", "$$String(String", "$$[]", "\u2581operand", "$$s)", "\u2581{"], ["\u2581if", "$$(s", "$$pace", "$$.is", "$$Set", "$$(_", "$$options", "$$))", "\u2581{"], ["\u2581return", "\u2581operand", "$$s[", "\u25810", "\u2581", "$$]", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(", "$$op", "$$ti", "$$If", "$$.is", "$$Set", "$$(_", "$$options", "$$))", "\u2581{"], ["\u2581return", "\u2581to", "$$Formula", "$$String()", "\u2581+", "\u2581\"", "$$(\"", "\u2581+", "\u2581operand", "$$s[0]", "\u2581+", "\u2581\")", "$$\"", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(", "$$op", "$$ti", "$$Skip", "$$.is", "$$Set", "$$(_", "$$options", "$$))", "\u2581{"], ["\u2581return", "\u2581to", "$$Formula", "$$String()", "\u2581+", "\u2581operand", "$$s[0]", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581to", "$$Formula", "$$String()", "\u2581+", "\u2581\"", "$$(\"", "\u2581+", "\u2581operand", "$$s[0]", "\u2581+", "\u2581\")", "$$\"", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual T Merge(T first, T second) {\n    throw new System.NotSupportedException();\n}\n", "java": "public T merge(T first, T second) {\n    throw new UnsupportedOperationException();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581T", "\u2581Merge", "$$(", "$$T", "\u2581first", "$$,", "\u2581T", "\u2581second", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.Not", "$$Supported", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581T", "\u2581m", "$$erge", "$$(", "$$T", "\u2581first", "$$,", "\u2581T", "\u2581second", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Un", "$$supported", "$$Operation", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return this.m_message.Key + \": \" + GetLocalizedMessage();\n}\n", "java": "public String toString() {\n    return this.message.getKey() + \": \" + getLocalizedMessage();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581this.m_", "$$m", "$$essage", "$$.", "$$Key", "\u2581+", "\u2581\":", "\u2581\"", "\u2581+", "\u2581Get", "$$Local", "$$ized", "$$Message", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581this.", "$$m", "$$essage", "$$.get", "$$Key", "$$()", "\u2581+", "\u2581\":", "\u2581\"", "\u2581+", "\u2581get", "$$Local", "$$ized", "$$Message", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public XPath(Parser parser, string path) {\n    this.parser = parser;\n    this.path = path;\n    elements = Split(path);\n}\n", "java": "public XPath(Parser parser, String path) {\n    this.parser = parser;\n    this.path = path;\n    elements = split(path);\n}\n", "cs_t": [["\u2581public", "\u2581", "$$X", "$$Path", "$$(", "$$Parser", "\u2581par", "$$ser", "$$,", "\u2581string", "\u2581path", "$$)", "\u2581{"], ["\u2581this.", "$$par", "$$ser", "\u2581=", "\u2581par", "$$ser", "$$;"], ["\u2581this.", "$$path", "\u2581=", "\u2581path", "$$;"], ["\u2581element", "$$s", "\u2581=", "\u2581Sp", "$$lit", "$$(path", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$X", "$$Path", "$$(", "$$Parser", "\u2581par", "$$ser", "$$,", "\u2581String", "\u2581path", "$$)", "\u2581{"], ["\u2581this.", "$$par", "$$ser", "\u2581=", "\u2581par", "$$ser", "$$;"], ["\u2581this.", "$$path", "\u2581=", "\u2581path", "$$;"], ["\u2581element", "$$s", "\u2581=", "\u2581sp", "$$lit", "$$(path", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public CreateAccountAliasRequest(string accountAlias) {\n    _accountAlias = accountAlias;\n}\n", "java": "public CreateAccountAliasRequest(String accountAlias) {\n    setAccountAlias(accountAlias);\n}\n", "cs_t": [["\u2581public", "\u2581Create", "$$Account", "$$Alias", "$$Request(string", "\u2581ac", "$$count", "$$Alias", "$$)", "\u2581{"], ["\u2581_", "$$ac", "$$count", "$$Alias", "\u2581=", "\u2581ac", "$$count", "$$Alias", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Account", "$$Alias", "$$Request(String", "\u2581ac", "$$count", "$$Alias", "$$)", "\u2581{"], ["\u2581set", "$$Account", "$$Ali", "$$a", "$$s(", "$$ac", "$$count", "$$Alias", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n    for (int j = 0; j < iterations; ++j) {\n        var block = blocks[blocksOffset++];\n        values[valuesOffset++] = ((int)((uint)block >> 7)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 6)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 5)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 4)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 3)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 2)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 1)) & 1;\n        values[valuesOffset++] = block & 1;\n    }\n}\n", "java": "public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n    for (int j = 0; j < iterations; ++j) {\n        final byte block = blocks[blocksOffset++];\n        values[valuesOffset++] = (block >>> 7) & 1;\n        values[valuesOffset++] = (block >>> 6) & 1;\n        values[valuesOffset++] = (block >>> 5) & 1;\n        values[valuesOffset++] = (block >>> 4) & 1;\n        values[valuesOffset++] = (block >>> 3) & 1;\n        values[valuesOffset++] = (block >>> 2) & 1;\n        values[valuesOffset++] = (block >>> 1) & 1;\n        values[valuesOffset++] = block & 1;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581D", "$$ecode", "$$(byte[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581int[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581j", "\u2581=", "\u25810;", "\u2581j", "\u2581<", "\u2581iterations;", "\u2581++", "$$j", "$$)", "\u2581{"], ["\u2581var", "\u2581block", "\u2581=", "\u2581blocks[blocksOffset++]", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25817", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25816", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25815", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25814", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25813", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25812", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25811", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581block", "\u2581&", "\u25811", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581decode", "$$(byte[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581long[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581j", "\u2581=", "\u25810;", "\u2581j", "\u2581<", "\u2581iterations;", "\u2581++", "$$j", "$$)", "\u2581{"], ["\u2581final", "\u2581byte", "\u2581block", "\u2581=", "\u2581blocks[blocksOffset++]", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25817", "$$)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25816", "$$)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25815", "$$)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25814)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25813", "$$)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25812)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25811)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581block", "\u2581&", "\u25811", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override PushConnection OpenPush() {\n    throw new NGit.Errors.NotSupportedException(JGitText.Get().pushIsNotSupportedForBundleTransport);\n}\n", "java": "public PushConnection openPush() throws TransportException {\n    return new TcpPushConnection();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581P", "$$ush", "$$Connection", "\u2581", "$$Open", "$$Push", "$$()", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581NGit.", "$$Error", "$$s.", "$$Not", "$$Supported", "$$Exception(", "$$JGitText", "$$.Get", "$$().", "$$p", "$$ush", "$$Is", "$$Not", "$$Supported", "$$For", "$$Bund", "$$le", "$$Transport", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$ush", "$$Connection", "\u2581o", "$$pen", "$$Push", "$$()", "\u2581throws", "\u2581", "$$Transport", "$$Exception", "\u2581{"], ["\u2581return", "\u2581new", "\u2581T", "$$c", "$$p", "$$Push", "$$Connection", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public static void StrCpy(char[] dst, int di, char[] src, int si) {\n    while (src[si] != 0) {\n        dst[di++] = src[si++];\n    }\n    dst[di] = (char)0;\n}\n", "java": "public static void strcpy(char[] dst, int di, char[] src, int si) {\n    while (src[si] != 0) {\n        dst[di++] = src[si++];\n    }\n    dst[di] = 0;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581St", "$$r", "$$C", "$$py", "$$(char[]", "\u2581dst", "$$,", "\u2581int", "\u2581d", "$$i", "$$,", "\u2581char[]", "\u2581src", "$$,", "\u2581int", "\u2581s", "$$i)", "\u2581{"], ["\u2581while", "\u2581(s", "$$rc", "$$[", "$$si", "$$]", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581dst", "$$[", "$$d", "$$i", "$$++]", "\u2581=", "\u2581src", "$$[", "$$si", "$$++]", "$$;"], ["\u2581}"], ["\u2581dst", "$$[", "$$d", "$$i]", "\u2581=", "\u2581(char", "$$)", "$$0", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581st", "$$rc", "$$py", "$$(char[]", "\u2581dst", "$$,", "\u2581int", "\u2581d", "$$i", "$$,", "\u2581char[]", "\u2581src", "$$,", "\u2581int", "\u2581s", "$$i)", "\u2581{"], ["\u2581while", "\u2581(s", "$$rc", "$$[", "$$si", "$$]", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581dst", "$$[", "$$d", "$$i", "$$++]", "\u2581=", "\u2581src", "$$[", "$$si", "$$++]", "$$;"], ["\u2581}"], ["\u2581dst", "$$[", "$$d", "$$i]", "\u2581=", "\u25810;"], ["\u2581}"]]}, {"cs": "public virtual K getKey() {\n    return mapEntry.getKey();\n}\n", "java": "@Override public K getKey() {\n    return mapEntry.getKey();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581K", "\u2581get", "$$Key", "$$()", "\u2581{"], ["\u2581return", "\u2581map", "$$Entry", "$$.get", "$$Key", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581@Override", "\u2581public", "\u2581K", "\u2581get", "$$Key", "$$()", "\u2581{"], ["\u2581return", "\u2581map", "$$Entry", "$$.get", "$$Key", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public static int NumNonnull(object[] data) {\n    int n = 0;\n    if (data == null) {\n        return n;\n    }\n    foreach (object o in data) {\n        if (o != null) {\n            n++;\n        }\n    }\n    return n;\n}\n", "java": "public static int numNonnull(Object[] data) {\n    int n = 0;\n    if ( data == null ) return n;\n    for (Object o : data) {\n        if ( o!=null ) n++;\n    }\n    return n;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581Num", "$$Non", "$$null", "$$(object", "$$[]", "\u2581data", "$$)", "\u2581{"], ["\u2581int", "\u2581n", "\u2581=", "\u25810;"], ["\u2581if", "\u2581(d", "$$ata", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581n", "$$;"], ["\u2581}"], ["\u2581foreach", "\u2581(", "$$object", "\u2581o", "\u2581in", "\u2581data", "$$)", "\u2581{"], ["\u2581if", "\u2581(o", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581n", "$$++", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581n", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581num", "$$Non", "$$null", "$$(Object", "$$[]", "\u2581data", "$$)", "\u2581{"], ["\u2581int", "\u2581n", "\u2581=", "\u25810;"], ["\u2581if", "\u2581(", "\u2581data", "\u2581==", "\u2581null", "\u2581)", "\u2581return", "\u2581n", "$$;"], ["\u2581for", "\u2581(", "$$Object", "\u2581o", "\u2581:", "\u2581data", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "\u2581o", "$$!", "$$=", "$$null", "\u2581)", "\u2581n", "$$++", "$$;"], ["\u2581}"], ["\u2581return", "\u2581n", "$$;"], ["\u2581}"]]}, {"cs": "public override void add(int location, E @object) {\n    if (location >= 0 && location <= _size) {\n        java.util.LinkedList.Link<E> link = voidLink;\n        if (location < (_size / 2)) {\n            {\n                for (int i = 0; i <= location; i++) {\n                    link = link.next;\n                }\n            }\n        }\n        else {\n            {\n                for (int i = _size; i > location; i--) {\n                    link = link.previous;\n                }\n            }\n        }\n        java.util.LinkedList.Link<E> previous = link.previous;\n        java.util.LinkedList.Link<E> newLink = new java.util.LinkedList.Link<E>(@object,previous, link);\n        previous.next = newLink;\n        link.previous = newLink;\n        _size++;\n        modCount++;\n    }\n    else {\n        throw new System.IndexOutOfRangeException();\n    }\n}\n", "java": "public void add(int location, E object) {\n    if (location >= 0 && location <= size) {\n        Link<E> link = voidLink;\n        if (location < (size / 2)) {\n            for (int i = 0; i <= location; i++) {\n                link = link.next;\n            }\n        }\n        else {\n            for (int i = size; i > location; i--) {\n                link = link.previous;\n            }\n        }\n        Link<E> previous = link.previous;\n        Link<E> newLink = new Link<E>(object, previous, link);\n        previous.next = newLink;\n        link.previous = newLink;\n        size++;\n        modCount++;\n    }\n    else {\n        throw new IndexOutOfBoundsException();\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581add(", "$$int", "\u2581location", "$$,", "\u2581E", "\u2581@object)", "\u2581{"], ["\u2581if", "\u2581(", "$$loc", "$$ation", "\u2581>=", "\u25810", "\u2581&&", "\u2581location", "\u2581<=", "\u2581_", "$$size", "$$)", "\u2581{"], ["\u2581java.util.", "$$Link", "$$ed", "$$List", "$$.", "$$Link", "$$<E>", "\u2581link", "\u2581=", "\u2581void", "$$Link", "$$;"], ["\u2581if", "\u2581(", "$$loc", "$$ation", "\u2581<", "\u2581(_", "$$size", "\u2581/", "\u25812", "$$))", "\u2581{"], ["\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<=", "\u2581location", "$$;", "\u2581i++)", "\u2581{"], ["\u2581link", "\u2581=", "\u2581link", "$$.next", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u2581_", "$$size", "$$;", "\u2581i", "\u2581>", "\u2581location", "$$;", "\u2581i", "$$--", "$$)", "\u2581{"], ["\u2581link", "\u2581=", "\u2581link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581java.util.", "$$Link", "$$ed", "$$List", "$$.", "$$Link", "$$<E>", "\u2581pre", "$$vious", "\u2581=", "\u2581link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581java.util.", "$$Link", "$$ed", "$$List", "$$.", "$$Link", "$$<E>", "\u2581new", "$$Link", "\u2581=", "\u2581new", "\u2581java.util.", "$$Link", "$$ed", "$$List", "$$.", "$$Link", "$$<E>", "$$(@", "$$object", "$$,", "$$pre", "$$vio", "$$u", "$$s,", "\u2581link", "$$)", "$$;"], ["\u2581pre", "$$vio", "$$u", "$$s.", "$$next", "\u2581=", "\u2581new", "$$Link", "$$;"], ["\u2581link", "$$.", "$$pre", "$$vious", "\u2581=", "\u2581new", "$$Link", "$$;"], ["\u2581_", "$$size", "$$++", "$$;"], ["\u2581mod", "$$Count", "$$++", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.", "$$IndexOutOf", "$$Range", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581add(", "$$int", "\u2581location", "$$,", "\u2581E", "\u2581object)", "\u2581{"], ["\u2581if", "\u2581(", "$$loc", "$$ation", "\u2581>=", "\u25810", "\u2581&&", "\u2581location", "\u2581<=", "\u2581size)", "\u2581{"], ["\u2581L", "$$ink", "$$<E>", "\u2581link", "\u2581=", "\u2581void", "$$Link", "$$;"], ["\u2581if", "\u2581(", "$$loc", "$$ation", "\u2581<", "\u2581(", "$$size", "\u2581/", "\u25812", "$$))", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<=", "\u2581location", "$$;", "\u2581i++)", "\u2581{"], ["\u2581link", "\u2581=", "\u2581link", "$$.next", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u2581size", "$$;", "\u2581i", "\u2581>", "\u2581location", "$$;", "\u2581i", "$$--", "$$)", "\u2581{"], ["\u2581link", "\u2581=", "\u2581link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581L", "$$ink", "$$<E>", "\u2581pre", "$$vious", "\u2581=", "\u2581link", "$$.", "$$pre", "$$vious", "$$;"], ["\u2581L", "$$ink", "$$<E>", "\u2581new", "$$Link", "\u2581=", "\u2581new", "\u2581L", "$$ink", "$$<E>", "$$(object", "$$,", "\u2581pre", "$$vio", "$$u", "$$s,", "\u2581link", "$$)", "$$;"], ["\u2581pre", "$$vio", "$$u", "$$s.", "$$next", "\u2581=", "\u2581new", "$$Link", "$$;"], ["\u2581link", "$$.", "$$pre", "$$vious", "\u2581=", "\u2581new", "$$Link", "$$;"], ["\u2581size", "$$++", "$$;"], ["\u2581mod", "$$Count", "$$++", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Index", "$$OutOf", "$$Bounds", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual DescribeDomainResponse DescribeDomain(DescribeDomainRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;\n    return Invoke<DescribeDomainResponse>(request, options);\n}\n", "java": "public DescribeDomainResult describeDomain(DescribeDomainRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeDomain(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Domain", "$$Response", "\u2581Describe", "$$Domain", "$$(Describe", "$$Domain", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Domain", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Domain", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Domain", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Domain", "$$Result", "\u2581describe", "$$Domain", "$$(Describe", "$$Domain", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Domain", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void flush() {\n    throw new System.NotImplementedException();\n}\n", "java": "public void flush() throws IOException {\n    super.flush();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581f", "$$lush", "$$()", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.NotImplemented", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581f", "$$lush", "$$()", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581super.", "$$f", "$$lush", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public PersianCharFilterFactory(IDictionary<string, string> args): base(args) {\n    if (args.Count > 0) {\n        throw new System.ArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "java": "public PersianCharFilterFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n        throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581P", "$$er", "$$si", "$$an", "$$Char", "$$FilterFactory(IDictionary<string,", "\u2581string>", "\u2581args):", "\u2581base(args)", "\u2581{"], ["\u2581if", "\u2581(args.Count", "\u2581>", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$er", "$$si", "$$an", "$$Char", "$$FilterFactory(Map<String,String>", "\u2581args)", "\u2581{"], ["\u2581super(", "$$arg", "$$s)", "$$;"], ["\u2581if", "\u2581(!args.isEmpty())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override bool IncrementToken() {\n    if (used) {\n        return false;\n    }\n    ClearAttributes();\n    termAttribute.Append(value);\n    offsetAttribute.SetOffset(0, value.Length);\n    used = true;\n    return true;\n}\n", "java": "public boolean incrementToken() {\n    if (used) {\n        return false;\n    }\n    clearAttributes();\n    termAttribute.append(value);\n    offsetAttribute.setOffset(0, length);\n    used = true;\n    return true;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581In", "$$crement", "$$Token", "$$()", "\u2581{"], ["\u2581if", "\u2581(", "$$used", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581C", "$$lear", "$$Attributes", "$$()", "$$;"], ["\u2581term", "$$Attribute", "$$.Append(", "$$value", "$$)", "$$;"], ["\u2581offset", "$$Attribute", "$$.Set", "$$Offset", "$$(", "$$0,", "\u2581value", "$$.Length)", "$$;"], ["\u2581u", "$$sed", "\u2581=", "\u2581true", "$$;"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581in", "$$crement", "$$Token", "$$()", "\u2581{"], ["\u2581if", "\u2581(", "$$used", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581c", "$$lear", "$$Attributes", "$$()", "$$;"], ["\u2581term", "$$Attribute", "$$.append(", "$$value", "$$)", "$$;"], ["\u2581offset", "$$Attribute", "$$.set", "$$Offset", "$$(", "$$0,", "\u2581length)", "$$;"], ["\u2581u", "$$sed", "\u2581=", "\u2581true", "$$;"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]]}, {"cs": "public static java.nio.FloatBuffer allocate(int capacity_1) {\n    if (capacity_1 < 0) {\n        throw new System.ArgumentException();\n    }\n    return new java.nio.ReadWriteFloatArrayBuffer(capacity_1);\n}\n", "java": "public static FloatBuffer allocate(int capacity) {\n    if (capacity < 0) {\n        throw new IllegalArgumentException();\n    }\n    return new ReadWriteFloatArrayBuffer(capacity);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581java.nio.", "$$Float", "$$Buffer", "\u2581all", "$$oc", "$$ate", "$$(int", "\u2581capacity", "$$_", "$$1)", "\u2581{"], ["\u2581if", "\u2581(c", "$$apacity", "$$_1", "\u2581<", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.Ar", "$$gumentException", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581new", "\u2581java.nio.Read", "$$Write", "$$Float", "$$Array", "$$Buffer", "$$(c", "$$apacity", "$$_", "$$1)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581F", "$$loat", "$$Buffer", "\u2581all", "$$oc", "$$ate", "$$(int", "\u2581capacity", "$$)", "\u2581{"], ["\u2581if", "\u2581(c", "$$apacity", "\u2581<", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581new", "\u2581Read", "$$Write", "$$Float", "$$Array", "$$Buffer", "$$(c", "$$apacity", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public NGit.Diff.Edit After(NGit.Diff.Edit cut) {\n    return new NGit.Diff.Edit(cut.endA, endA, cut.endB, endB);\n}\n", "java": "public final Edit after(Edit cut) {\n    return new Edit(cut.endA, endA, cut.endB, endB);\n}\n", "cs_t": [["\u2581public", "\u2581NGit", "$$.D", "$$iff", "$$.E", "$$d", "$$it", "\u2581A", "$$fter", "$$(", "$$N", "$$Git", "$$.D", "$$iff", "$$.E", "$$d", "$$it", "\u2581c", "$$ut", "$$)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581NGit", "$$.D", "$$iff", "$$.E", "$$d", "$$it", "$$(c", "$$ut", "$$.", "$$end", "$$A", "$$,", "\u2581end", "$$A", "$$,", "\u2581c", "$$ut", "$$.", "$$end", "$$B", "$$,", "\u2581end", "$$B", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581E", "$$d", "$$it", "\u2581a", "$$fter", "$$(", "$$Ed", "$$it", "\u2581c", "$$ut", "$$)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581E", "$$d", "$$it", "$$(c", "$$ut", "$$.", "$$end", "$$A", "$$,", "\u2581end", "$$A", "$$,", "\u2581c", "$$ut", "$$.", "$$end", "$$B", "$$,", "\u2581end", "$$B", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateRuleVersionResponse UpdateRuleVersion(UpdateRuleVersionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateRuleVersionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateRuleVersionResponseUnmarshaller.Instance;\n    return Invoke<UpdateRuleVersionResponse>(request, options);\n}\n", "java": "public UpdateRuleVersionResult updateRuleVersion(UpdateRuleVersionRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateRuleVersion(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$Rule", "$$Version", "$$Response", "\u2581Update", "$$Rule", "$$Version", "$$(Update", "$$Rule", "$$Version", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$Rule", "$$Version", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$Rule", "$$Version", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$Rule", "$$Version", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$Rule", "$$Version", "$$Result", "\u2581update", "$$Rule", "$$Version", "$$(Update", "$$Rule", "$$Version", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$Rule", "$$Version", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListVoiceConnectorTerminationCredentialsResponse ListVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListVoiceConnectorTerminationCredentialsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListVoiceConnectorTerminationCredentialsResponseUnmarshaller.Instance;\n    return Invoke<ListVoiceConnectorTerminationCredentialsResponse>(request, options);\n}\n", "java": "public ListVoiceConnectorTerminationCredentialsResult listVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListVoiceConnectorTerminationCredentials(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$VoiceConnectorTermination", "$$Credential", "$$sResponse", "\u2581List", "$$VoiceConnectorTermination", "$$Credential", "$$s(List", "$$VoiceConnectorTermination", "$$Credential", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$VoiceConnectorTermination", "$$Credentials", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$VoiceConnectorTermination", "$$Credentials", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$VoiceConnectorTermination", "$$Credential", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$VoiceConnectorTermination", "$$Credential", "$$sResult", "\u2581list", "$$VoiceConnectorTermination", "$$Credential", "$$s(List", "$$VoiceConnectorTermination", "$$Credential", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$VoiceConnectorTermination", "$$Credentials", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetDeploymentTargetResponse GetDeploymentTarget(GetDeploymentTargetRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetDeploymentTargetRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetDeploymentTargetResponseUnmarshaller.Instance;\n    return Invoke<GetDeploymentTargetResponse>(request, options);\n}\n", "java": "public GetDeploymentTargetResult getDeploymentTarget(GetDeploymentTargetRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetDeploymentTarget(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Deployment", "$$Target", "$$Response", "\u2581Get", "$$Deployment", "$$Target", "$$(Get", "$$Deployment", "$$Target", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Deployment", "$$Target", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Deployment", "$$Target", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Deployment", "$$Target", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Deployment", "$$Target", "$$Result", "\u2581get", "$$Deployment", "$$Target", "$$(Get", "$$Deployment", "$$Target", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Deployment", "$$Target", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetNoChildReport() {\n    letChildReport = false;\n    foreach (PerfTask task in tasks) {\n        if (task is TaskSequence) {\n            ((TaskSequence)task).SetNoChildReport();\n        }\n    }\n}\n", "java": "public void setNoChildReport() {\n    letChildReport  = false;\n    for (final PerfTask task : tasks) {\n        if (task instanceof TaskSequence) {\n            ((TaskSequence)task).setNoChildReport();\n        }\n    }\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$No", "$$Child", "$$Report", "$$()", "\u2581{"], ["\u2581l", "$$et", "$$Child", "$$Report", "\u2581=", "\u2581false", "$$;"], ["\u2581foreach", "\u2581(", "$$Per", "$$f", "$$Task", "\u2581t", "$$ask", "\u2581in", "\u2581t", "$$ask", "$$s)", "\u2581{"], ["\u2581if", "\u2581(t", "$$ask", "\u2581is", "\u2581", "$$Task", "$$Sequence", "$$)", "\u2581{"], ["\u2581((", "$$Task", "$$Sequence", "$$)", "$$t", "$$ask", "$$).", "$$Set", "$$No", "$$Child", "$$Report", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$No", "$$Child", "$$Report", "$$()", "\u2581{"], ["\u2581l", "$$et", "$$Child", "$$Report", "\u2581", "\u2581=", "\u2581false", "$$;"], ["\u2581for", "\u2581(f", "$$inal", "\u2581P", "$$er", "$$f", "$$Task", "\u2581t", "$$ask", "\u2581:", "\u2581t", "$$ask", "$$s)", "\u2581{"], ["\u2581if", "\u2581(t", "$$ask", "\u2581instanceof", "\u2581", "$$Task", "$$Sequence", "$$)", "\u2581{"], ["\u2581((", "$$Task", "$$Sequence", "$$)", "$$t", "$$ask", "$$)", "$$.set", "$$No", "$$Child", "$$Report", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override E get(int location) {\n    try {\n        return a[location];\n    }\n    catch (System.IndexOutOfRangeException) {\n        throw java.util.ArrayList<E>.throwIndexOutOfBoundsException(location, a.Length);\n    }\n}\n", "java": "public E get(int location) {\n    try {\n        return a[location];\n    }\n    catch (ArrayIndexOutOfBoundsException e) {\n        throw java.util.ArrayList.throwIndexOutOfBoundsException(location, a.length);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581E", "\u2581get(int", "\u2581location", "$$)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581return", "\u2581a", "$$[", "$$loc", "$$ation", "$$]", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$System", "$$.", "$$IndexOutOf", "$$Range", "$$Exception", "$$)", "\u2581{"], ["\u2581throw", "\u2581java.", "$$u", "$$til", "$$.Ar", "$$ray", "$$List<", "$$E>", "$$.", "$$throw", "$$IndexOutOf", "$$Bounds", "$$Exception(", "$$loc", "$$ation", "$$,", "\u2581a", "$$.Length)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581E", "\u2581get(int", "\u2581location", "$$)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581return", "\u2581a", "$$[", "$$loc", "$$ation", "$$]", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$Array", "$$IndexOutOf", "$$Bounds", "$$Exception", "\u2581e)", "\u2581{"], ["\u2581throw", "\u2581java.", "$$u", "$$til", "$$.Ar", "$$ray", "$$List", "$$.", "$$throw", "$$IndexOutOf", "$$Bounds", "$$Exception(", "$$loc", "$$ation", "$$,", "\u2581a", "$$.length)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual DescribeDataSetResponse DescribeDataSet(DescribeDataSetRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeDataSetRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeDataSetResponseUnmarshaller.Instance;\n    return Invoke<DescribeDataSetResponse>(request, options);\n}\n", "java": "public DescribeDataSetResult describeDataSet(DescribeDataSetRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeDataSet(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Data", "$$Set", "$$Response", "\u2581Describe", "$$Data", "$$Set", "$$(Describe", "$$Data", "$$Set", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Data", "$$Set", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Data", "$$Set", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Data", "$$Set", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Data", "$$Set", "$$Result", "\u2581describe", "$$Data", "$$Set", "$$(Describe", "$$Data", "$$Set", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Data", "$$Set", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public SkipWorkTreeFilter(int treeIdx) {\n    this.treeIdx = treeIdx;\n}\n", "java": "public SkipWorkTreeFilter(int treeIdx) {\n    this.treeIdx = treeIdx;\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$kip", "$$Work", "$$TreeFilter", "$$(int", "\u2581t", "$$ree", "$$Idx", "$$)", "\u2581{"], ["\u2581this.", "$$t", "$$ree", "$$Idx", "\u2581=", "\u2581t", "$$ree", "$$Idx", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$kip", "$$Work", "$$TreeFilter", "$$(int", "\u2581t", "$$ree", "$$Idx", "$$)", "\u2581{"], ["\u2581this.", "$$t", "$$ree", "$$Idx", "\u2581=", "\u2581t", "$$ree", "$$Idx", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces() {\n    return DescribeNetworkInterfaces(new DescribeNetworkInterfacesRequest());\n}\n", "java": "public DescribeNetworkInterfacesResult describeNetworkInterfaces() {\n    return describeNetworkInterfaces(new DescribeNetworkInterfacesRequest());\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$Response", "\u2581Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$()", "\u2581{"], ["\u2581return", "\u2581Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$(new", "\u2581Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$Request", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$Result", "\u2581describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$()", "\u2581{"], ["\u2581return", "\u2581describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$(new", "\u2581Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$Request", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public bool Contains(int row, int col) {\n    return _firstRow <= row && _lastRow >= row&& _firstColumn <= col && _lastColumn >= col;\n}\n", "java": "public final boolean contains(int row, int col) {\n    return _firstRow <= row && _lastRow >= row&& _firstColumn <= col && _lastColumn >= col;\n}\n", "cs_t": [["\u2581public", "\u2581bool", "\u2581", "$$Contain", "$$s(", "$$int", "\u2581row", "$$,", "\u2581int", "\u2581col", "$$)", "\u2581{"], ["\u2581return", "\u2581_first", "$$Row", "\u2581<=", "\u2581row", "\u2581&&", "\u2581_last", "$$Row", "\u2581>=", "\u2581row", "$$&&", "\u2581_first", "$$Column", "\u2581<=", "\u2581col", "\u2581&&", "\u2581_last", "$$Column", "\u2581>=", "\u2581col", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581boolean", "\u2581contains(", "$$int", "\u2581row", "$$,", "\u2581int", "\u2581col", "$$)", "\u2581{"], ["\u2581return", "\u2581_first", "$$Row", "\u2581<=", "\u2581row", "\u2581&&", "\u2581_last", "$$Row", "\u2581>=", "\u2581row", "$$&&", "\u2581_first", "$$Column", "\u2581<=", "\u2581col", "\u2581&&", "\u2581_last", "$$Column", "\u2581>=", "\u2581col", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return new string(this.chars);\n}\n", "java": "public String toString() {\n    return new String(this.chars);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581string", "$$(this", "$$.char", "$$s)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581String", "$$(this", "$$.char", "$$s)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual FileHeader.PatchType GetPatchType() {\n    return patchType;\n}\n", "java": "public PatchType getPatchType() {\n    return patchType;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581File", "$$Head", "$$er.", "$$P", "$$atch", "$$Type", "\u2581Get", "$$P", "$$atch", "$$Type()", "\u2581{"], ["\u2581return", "\u2581p", "$$atch", "$$Type", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$atch", "$$Type", "\u2581get", "$$P", "$$atch", "$$Type()", "\u2581{"], ["\u2581return", "\u2581p", "$$atch", "$$Type", "$$;"], ["\u2581}"]]}, {"cs": "public override java.util.Iterator<K> iterator() {\n    return new java.util.Hashtable<K, V>.KeyIterator(this._enclosing);\n}\n", "java": "public Iterator<K> iterator() {\n    return new KeyIterator();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.util.", "$$Iterator", "$$<", "$$K", "$$>", "\u2581iterator", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581java.util.", "$$Hashtable", "$$<", "$$K,", "\u2581V>", "$$.", "$$Key", "$$Iterator", "$$(this", "$$._", "$$enclosing", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Iterator<", "$$K", "$$>", "\u2581iterator", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581", "$$Key", "$$Iterator", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateScriptResponse CreateScript(CreateScriptRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateScriptRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateScriptResponseUnmarshaller.Instance;\n    return Invoke<CreateScriptResponse>(request, options);\n}\n", "java": "public CreateScriptResult createScript(CreateScriptRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateScript(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Script", "$$Response", "\u2581Create", "$$Script", "$$(Create", "$$Script", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Script", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Script", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Script", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Script", "$$Result", "\u2581create", "$$Script", "$$(Create", "$$Script", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Script", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override BytesRef Next() {\n    termUpto++;\n    if (termUpto >= info.terms.Count) {\n        return null;\n    }\n    else {\n        info.terms.Get(info.sortedTerms[termUpto], br);\n        return br;\n    }\n}\n", "java": "public BytesRef next() {\n    termUpto++;\n    if (termUpto >= info.terms.size()) {\n        return null;\n    }\n    else {\n        info.terms.get(info.sortedTerms[termUpto], br);\n        return br;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581BytesRef", "\u2581Next", "$$()", "\u2581{"], ["\u2581term", "$$Upto", "$$++", "$$;"], ["\u2581if", "\u2581(", "$$term", "$$Upto", "\u2581>=", "\u2581info", "$$.term", "$$s.", "$$Count)", "\u2581{"], ["\u2581return", "\u2581null", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581info", "$$.term", "$$s.Get", "$$(in", "$$fo", "$$.", "$$s", "$$orted", "$$Term", "$$s[", "$$term", "$$Upto", "$$],", "\u2581b", "$$r", "$$)", "$$;"], ["\u2581return", "\u2581b", "$$r", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581BytesRef", "\u2581next", "$$()", "\u2581{"], ["\u2581term", "$$Upto", "$$++", "$$;"], ["\u2581if", "\u2581(", "$$term", "$$Upto", "\u2581>=", "\u2581info", "$$.term", "$$s.", "$$size", "$$())", "\u2581{"], ["\u2581return", "\u2581null", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581info", "$$.term", "$$s.get", "$$(in", "$$fo", "$$.", "$$s", "$$orted", "$$Term", "$$s[", "$$term", "$$Upto", "$$],", "\u2581b", "$$r", "$$)", "$$;"], ["\u2581return", "\u2581b", "$$r", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override string OutputToString(CharsRef output) {\n    return output.ToString();\n}\n", "java": "public String outputToString(CharsRef output) {\n    return output.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581", "$$Output", "$$To", "$$String(", "$$Char", "$$sRef", "\u2581output", "$$)", "\u2581{"], ["\u2581return", "\u2581output", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581output", "$$To", "$$String(", "$$Char", "$$sRef", "\u2581output", "$$)", "\u2581{"], ["\u2581return", "\u2581output", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual AssociateWebsiteAuthorizationProviderResponse AssociateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = AssociateWebsiteAuthorizationProviderRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = AssociateWebsiteAuthorizationProviderResponseUnmarshaller.Instance;\n    return Invoke<AssociateWebsiteAuthorizationProviderResponse>(request, options);\n}\n", "java": "public AssociateWebsiteAuthorizationProviderResult associateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request) {\n    request = beforeClientExecution(request);\n    return executeAssociateWebsiteAuthorizationProvider(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Associate", "$$Web", "$$site", "$$Authorization", "$$Provider", "$$Response", "\u2581Associate", "$$Web", "$$site", "$$Authorization", "$$Provid", "$$er(", "$$Associate", "$$Web", "$$site", "$$Authorization", "$$Provider", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Associate", "$$Web", "$$site", "$$Authorization", "$$Provider", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Associate", "$$Web", "$$site", "$$Authorization", "$$Provider", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Associate", "$$Web", "$$site", "$$Authorization", "$$Provider", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Associate", "$$Web", "$$site", "$$Authorization", "$$Provider", "$$Result", "\u2581", "$$associate", "$$Web", "$$site", "$$Authorization", "$$Provid", "$$er(", "$$Associate", "$$Web", "$$site", "$$Authorization", "$$Provider", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Associate", "$$Web", "$$site", "$$Authorization", "$$Provider", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void Unpop(RevCommit c) {\n    BlockRevQueue.Block b = head;\n    if (b == null) {\n        b = free.NewBlock();\n        b.ResetToMiddle();\n        b.Add(c);\n        head = b;\n        tail = b;\n        return;\n    }\n    else {\n        if (b.CanUnpop()) {\n            b.Unpop(c);\n            return;\n        }\n    }\n    b = free.NewBlock();\n    b.ResetToEnd();\n    b.Unpop(c);\n    b.next = head;\n    head = b;\n}\n", "java": "public void unpop(RevCommit c) {\n    Block b = head;\n    if (b == null) {\n        b = free.newBlock();\n        b.resetToMiddle();\n        b.add(c);\n        head = b;\n        tail = b;\n        return;\n    }\n    else if (b.canUnpop()) {\n        b.unpop(c);\n        return;\n    }\n    b = free.newBlock();\n    b.resetToEnd();\n    b.unpop(c);\n    b.next = head;\n    head = b;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Un", "$$po", "$$p", "$$(", "$$Rev", "$$Commit", "\u2581c)", "\u2581{"], ["\u2581B", "$$lock", "$$Rev", "$$Queue", "$$.", "$$Block", "\u2581b", "\u2581=", "\u2581head", "$$;"], ["\u2581if", "\u2581(b", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581b", "\u2581=", "\u2581f", "$$ree", "$$.N", "$$ew", "$$Block", "$$()", "$$;"], ["\u2581b.", "$$Reset", "$$To", "$$M", "$$id", "$$d", "$$le", "$$()", "$$;"], ["\u2581b", "$$.Add(", "$$c", "$$)", "$$;"], ["\u2581head", "\u2581=", "\u2581b", "$$;"], ["\u2581t", "$$ail", "\u2581=", "\u2581b", "$$;"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581if", "\u2581(b", "$$.C", "$$an", "$$Un", "$$po", "$$p", "$$())", "\u2581{"], ["\u2581b.", "$$Un", "$$po", "$$p", "$$(c", "$$)", "$$;"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581b", "\u2581=", "\u2581f", "$$ree", "$$.N", "$$ew", "$$Block", "$$()", "$$;"], ["\u2581b.", "$$Reset", "$$To", "$$End", "$$()", "$$;"], ["\u2581b.", "$$Un", "$$po", "$$p", "$$(c", "$$)", "$$;"], ["\u2581b", "$$.next", "\u2581=", "\u2581head", "$$;"], ["\u2581head", "\u2581=", "\u2581b", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581un", "$$po", "$$p", "$$(", "$$Rev", "$$Commit", "\u2581c)", "\u2581{"], ["\u2581B", "$$lock", "\u2581b", "\u2581=", "\u2581head", "$$;"], ["\u2581if", "\u2581(b", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581b", "\u2581=", "\u2581f", "$$ree", "$$.", "$$new", "$$Block", "$$()", "$$;"], ["\u2581b.", "$$reset", "$$To", "$$M", "$$id", "$$d", "$$le", "$$()", "$$;"], ["\u2581b", "$$.add(", "$$c", "$$)", "$$;"], ["\u2581head", "\u2581=", "\u2581b", "$$;"], ["\u2581t", "$$ail", "\u2581=", "\u2581b", "$$;"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(b", "$$.c", "$$an", "$$Un", "$$po", "$$p", "$$())", "\u2581{"], ["\u2581b.", "$$un", "$$po", "$$p", "$$(c", "$$)", "$$;"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581b", "\u2581=", "\u2581f", "$$ree", "$$.", "$$new", "$$Block", "$$()", "$$;"], ["\u2581b.", "$$reset", "$$To", "$$End", "$$()", "$$;"], ["\u2581b.", "$$un", "$$po", "$$p", "$$(c", "$$)", "$$;"], ["\u2581b", "$$.next", "\u2581=", "\u2581head", "$$;"], ["\u2581head", "\u2581=", "\u2581b", "$$;"], ["\u2581}"]]}, {"cs": "public EdgeNGramTokenizerFactory(IDictionary<string, string> args) : base(args) {\n    minGramSize = GetInt32(args, \"minGramSize\", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = GetInt32(args, \"maxGramSize\", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);\n    side = Get(args, \"side\", EdgeNGramTokenFilter.Side.FRONT.ToString());\n    if (args.Count > 0) {\n        throw new System.ArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "java": "public EdgeNGramTokenizerFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);\n    if (!args.isEmpty()) {\n        throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581E", "$$d", "$$ge", "$$NG", "$$ram", "$$Token", "$$izer", "$$Factory(", "$$IDictionary<string,", "\u2581string>", "\u2581args)", "\u2581:", "\u2581base(args)", "\u2581{"], ["\u2581min", "$$G", "$$ram", "$$Size", "\u2581=", "\u2581Get", "$$Int32", "$$(args,", "\u2581\"", "$$min", "$$G", "$$ram", "$$Size", "$$\",", "\u2581E", "$$d", "$$ge", "$$NG", "$$ram", "$$Token", "$$iz", "$$er.", "$$DEFAULT_", "$$M", "$$IN", "$$_", "$$G", "$$R", "$$AM", "$$_SIZE", "$$)", "$$;"], ["\u2581max", "$$G", "$$ram", "$$Size", "\u2581=", "\u2581Get", "$$Int32", "$$(args,", "\u2581\"", "$$max", "$$G", "$$ram", "$$Size", "$$\",", "\u2581E", "$$d", "$$ge", "$$NG", "$$ram", "$$Token", "$$iz", "$$er.", "$$DEFAULT_", "$$M", "$$AX_", "$$G", "$$R", "$$AM", "$$_SIZE", "$$)", "$$;"], ["\u2581s", "$$ide", "\u2581=", "\u2581Get", "$$(args,", "\u2581\"", "$$si", "$$de", "$$\",", "\u2581E", "$$d", "$$ge", "$$NG", "$$ram", "$$Token", "$$Filter", "$$.S", "$$ide", "$$.", "$$F", "$$R", "$$ON", "$$T", "$$.ToString()", "$$)", "$$;"], ["\u2581if", "\u2581(args.Count", "\u2581>", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581E", "$$d", "$$ge", "$$NG", "$$ram", "$$Token", "$$izer", "$$Factory(", "$$Map<String,", "\u2581String", "$$>", "\u2581args)", "\u2581{"], ["\u2581super(", "$$arg", "$$s)", "$$;"], ["\u2581min", "$$G", "$$ram", "$$Size", "\u2581=", "\u2581get", "$$Int", "$$(args,", "\u2581\"", "$$min", "$$G", "$$ram", "$$Size", "$$\",", "\u2581E", "$$d", "$$ge", "$$NG", "$$ram", "$$Token", "$$iz", "$$er.", "$$DEFAULT_", "$$M", "$$IN", "$$_", "$$G", "$$R", "$$AM", "$$_SIZE", "$$)", "$$;"], ["\u2581max", "$$G", "$$ram", "$$Size", "\u2581=", "\u2581get", "$$Int", "$$(args,", "\u2581\"", "$$max", "$$G", "$$ram", "$$Size", "$$\",", "\u2581E", "$$d", "$$ge", "$$NG", "$$ram", "$$Token", "$$iz", "$$er.", "$$DEFAULT_", "$$M", "$$AX_", "$$G", "$$R", "$$AM", "$$_SIZE", "$$)", "$$;"], ["\u2581if", "\u2581(!args.isEmpty())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public ModifyDBParameterGroupRequest(string dbParameterGroupName, List<Parameter> parameters) {\n    _dbParameterGroupName = dbParameterGroupName;\n    _parameters = parameters;\n}\n", "java": "public ModifyDBParameterGroupRequest(String dBParameterGroupName, java.util.List<Parameter> parameters) {\n    setDBParameterGroupName(dBParameterGroupName);\n    setParameters(parameters);\n}\n", "cs_t": [["\u2581public", "\u2581Modify", "$$DBParameterGroup", "$$Request(string", "\u2581db", "$$ParameterGroup", "$$Name,", "\u2581List<", "$$Parameter", "$$>", "\u2581parameter", "$$s)", "\u2581{"], ["\u2581_d", "$$b", "$$ParameterGroup", "$$Name", "\u2581=", "\u2581db", "$$ParameterGroup", "$$Name", "$$;"], ["\u2581_", "$$par", "$$ameter", "$$s", "\u2581=", "\u2581parameter", "$$s;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Modify", "$$DBParameterGroup", "$$Request(String", "\u2581d", "$$B", "$$ParameterGroup", "$$Name,", "\u2581java.util.", "$$List<", "$$Parameter", "$$>", "\u2581parameter", "$$s)", "\u2581{"], ["\u2581set", "$$DBParameterGroup", "$$Name", "$$(d", "$$B", "$$ParameterGroup", "$$Name)", "$$;"], ["\u2581set", "$$Parameter", "$$s(", "$$par", "$$ameter", "$$s)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetHostedZoneLimitResponse GetHostedZoneLimit(GetHostedZoneLimitRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetHostedZoneLimitRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetHostedZoneLimitResponseUnmarshaller.Instance;\n    return Invoke<GetHostedZoneLimitResponse>(request, options);\n}\n", "java": "public GetHostedZoneLimitResult getHostedZoneLimit(GetHostedZoneLimitRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetHostedZoneLimit(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$HostedZone", "$$Limit", "$$Response", "\u2581Get", "$$HostedZone", "$$Limit", "$$(Get", "$$HostedZone", "$$Limit", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$HostedZone", "$$Limit", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$HostedZone", "$$Limit", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$HostedZone", "$$Limit", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$HostedZone", "$$Limit", "$$Result", "\u2581get", "$$HostedZone", "$$Limit", "$$(Get", "$$HostedZone", "$$Limit", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$HostedZone", "$$Limit", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Set(int index, long value) {\n    int o = (int)((uint)index >> 6);\n    int b = index & 63;\n    int shift = b << 0;\n    blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);\n}\n", "java": "public void set(int index, long value) {\n    final int o = index >>> 6;\n    final int b = index & 63;\n    final int shift = b << 0;\n    blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Set", "$$(int", "\u2581index,", "\u2581long", "\u2581value)", "\u2581{"], ["\u2581int", "\u2581o", "\u2581=", "\u2581(int", "$$)((", "$$uint)", "$$index", "\u2581>>", "\u25816", "$$)", "$$;"], ["\u2581int", "\u2581b", "\u2581=", "\u2581index", "\u2581&", "\u25816", "$$3", "$$;"], ["\u2581int", "\u2581shift", "\u2581=", "\u2581b", "\u2581<<", "\u25810;"], ["\u2581blocks[", "$$o]", "\u2581=", "\u2581(block", "$$s[", "$$o]", "\u2581&", "\u2581", "$$~", "$$(", "$$1", "$$L", "\u2581<<", "\u2581shift", "$$))", "\u2581|", "\u2581(value", "\u2581<<", "\u2581shift", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$(int", "\u2581index,", "\u2581long", "\u2581value)", "\u2581{"], ["\u2581final", "\u2581int", "\u2581o", "\u2581=", "\u2581index", "\u2581>>>", "\u25816", "$$;"], ["\u2581final", "\u2581int", "\u2581b", "\u2581=", "\u2581index", "\u2581&", "\u25816", "$$3", "$$;"], ["\u2581final", "\u2581int", "\u2581shift", "\u2581=", "\u2581b", "\u2581<<", "\u25810;"], ["\u2581blocks[", "$$o]", "\u2581=", "\u2581(block", "$$s[", "$$o]", "\u2581&", "\u2581", "$$~", "$$(", "$$1", "$$L", "\u2581<<", "\u2581shift", "$$))", "\u2581|", "\u2581(value", "\u2581<<", "\u2581shift", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override RevFilter Clone() {\n    return new CommitterRevFilter.PatternSearch(Pattern());\n}\n", "java": "public RevFilter clone() {\n    return new PatternSearch(pattern());\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581RevFilter", "\u2581Clone()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581", "$$Commit", "$$ter", "$$RevFilter", "$$.", "$$Pattern", "$$Search", "$$(", "$$Pattern", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581RevFilter", "\u2581clone()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581P", "$$attern", "$$Search", "$$(p", "$$attern", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return \"spans(\" + m_term.ToString() + \")@\" + (m_doc == -1 ? \"START\" : (m_doc == int.MaxValue) ? \"END\" : m_doc + \"-\" + m_position);\n}\n", "java": "public String toString() {\n    return \"spans(\" + term.toString() + \")@\" +(doc == -1 ? \"START\" : (doc == NO_MORE_DOCS) ? \"ENDDOC\": doc + \" - \" + (position == NO_MORE_POSITIONS ? \"ENDPOS\" : position));\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$sp", "$$an", "$$s(", "$$\"", "\u2581+", "\u2581m_", "$$term", "$$.ToString()", "\u2581+", "\u2581\")", "$$@", "$$\"", "\u2581+", "\u2581(m", "$$_", "$$d", "$$oc", "\u2581==", "\u2581-1", "\u2581?", "\u2581\"", "$$ST", "$$AR", "$$T", "$$\"", "\u2581:", "\u2581(m", "$$_", "$$d", "$$oc", "\u2581==", "\u2581int", "$$.", "$$Max", "$$Value)", "\u2581?", "\u2581\"", "$$EN", "$$D", "$$\"", "\u2581:", "\u2581m_", "$$d", "$$oc", "\u2581+", "\u2581\"", "$$-", "$$\"", "\u2581+", "\u2581m_", "$$position", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$sp", "$$an", "$$s(", "$$\"", "\u2581+", "\u2581term", "$$.toString()", "\u2581+", "\u2581\")", "$$@", "$$\"", "\u2581+", "$$(d", "$$oc", "\u2581==", "\u2581-1", "\u2581?", "\u2581\"", "$$ST", "$$AR", "$$T", "$$\"", "\u2581:", "\u2581(d", "$$oc", "\u2581==", "\u2581N", "$$O", "$$_M", "$$O", "$$RE", "$$_", "$$D", "$$O", "$$C", "$$S", "$$)", "\u2581?", "\u2581\"", "$$EN", "$$D", "$$D", "$$O", "$$C", "$$\"", "$$:", "\u2581doc", "\u2581+", "\u2581\"", "\u2581-", "\u2581\"", "\u2581+", "\u2581(", "$$position", "\u2581==", "\u2581N", "$$O", "$$_M", "$$O", "$$RE", "$$_", "$$PO", "$$SI", "$$T", "$$ION", "$$S", "\u2581?", "\u2581\"", "$$EN", "$$D", "$$PO", "$$S", "$$\"", "\u2581:", "\u2581position", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool CanAppendMatch() {\n    for (int i = 0; i < heads.Count; i++) {\n        if (heads[i] != LastHead.INSTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n", "java": "public boolean canAppendMatch() {\n    for (Head head : heads) {\n        if (head != LastHead.INSTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581C", "$$an", "$$Ap", "$$pend", "$$Match", "$$()", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581head", "$$s.Count", "$$;", "\u2581i++)", "\u2581{"], ["\u2581if", "\u2581(", "$$head", "$$s[i]", "\u2581!=", "\u2581L", "$$ast", "$$Head", "$$.IN", "$$ST", "$$AN", "$$CE", "$$)", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581c", "$$an", "$$Ap", "$$pend", "$$Match", "$$()", "\u2581{"], ["\u2581for", "\u2581(", "$$Head", "\u2581head", "\u2581:", "\u2581head", "$$s)", "\u2581{"], ["\u2581if", "\u2581(", "$$head", "\u2581!=", "\u2581L", "$$ast", "$$Head", "$$.IN", "$$ST", "$$AN", "$$CE", "$$)", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]]}, {"cs": "public override int lastIndexOf(string subString, int start) {\n    lock (this) {\n        return base.lastIndexOf(subString, start);\n    }\n}\n", "java": "public synchronized int lastIndexOf(String subString, int start) {\n    return super.lastIndexOf(subString, start);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int", "\u2581last", "$$Index", "$$Of", "$$(string", "\u2581sub", "$$String,", "\u2581int", "\u2581start", "$$)", "\u2581{"], ["\u2581lock", "\u2581(this)", "\u2581{"], ["\u2581return", "\u2581base", "$$.", "$$last", "$$Index", "$$Of", "$$(s", "$$ub", "$$String,", "\u2581start", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581synchronized", "\u2581int", "\u2581last", "$$Index", "$$Of", "$$(String", "\u2581sub", "$$String,", "\u2581int", "\u2581start", "$$)", "\u2581{"], ["\u2581return", "\u2581super.", "$$last", "$$Index", "$$Of", "$$(s", "$$ub", "$$String,", "\u2581start", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteNetworkAclEntryResponse DeleteNetworkAclEntry(DeleteNetworkAclEntryRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteNetworkAclEntryRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteNetworkAclEntryResponseUnmarshaller.Instance;\n    return Invoke<DeleteNetworkAclEntryResponse>(request, options);\n}\n", "java": "public DeleteNetworkAclEntryResult deleteNetworkAclEntry(DeleteNetworkAclEntryRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteNetworkAclEntry(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$NetworkAcl", "$$Entry", "$$Response", "\u2581Delete", "$$NetworkAcl", "$$Entry", "$$(Delete", "$$NetworkAcl", "$$Entry", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$NetworkAcl", "$$Entry", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$NetworkAcl", "$$Entry", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$NetworkAcl", "$$Entry", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$NetworkAcl", "$$Entry", "$$Result", "\u2581delete", "$$NetworkAcl", "$$Entry", "$$(Delete", "$$NetworkAcl", "$$Entry", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$NetworkAcl", "$$Entry", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual AssociateMemberToGroupResponse AssociateMemberToGroup(AssociateMemberToGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = AssociateMemberToGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = AssociateMemberToGroupResponseUnmarshaller.Instance;\n    return Invoke<AssociateMemberToGroupResponse>(request, options);\n}\n", "java": "public AssociateMemberToGroupResult associateMemberToGroup(AssociateMemberToGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeAssociateMemberToGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Associate", "$$Member", "$$To", "$$Group", "$$Response", "\u2581Associate", "$$Member", "$$To", "$$Group", "$$(", "$$Associate", "$$Member", "$$To", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Associate", "$$Member", "$$To", "$$Group", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Associate", "$$Member", "$$To", "$$Group", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Associate", "$$Member", "$$To", "$$Group", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Associate", "$$Member", "$$To", "$$Group", "$$Result", "\u2581", "$$associate", "$$Member", "$$To", "$$Group", "$$(", "$$Associate", "$$Member", "$$To", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Associate", "$$Member", "$$To", "$$Group", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static int Committer(byte[] b, int ptr) {\n    int sz = b.Length;\n    if (ptr == 0) {\n        ptr += 46;\n    }\n    while (ptr < sz && b[ptr] == 'p') {\n        ptr += 48;\n    }\n    if (ptr < sz && b[ptr] == 'a') {\n        ptr = NextLF(b, ptr);\n    }\n    return Match(b, ptr, ObjectChecker.committer);\n}\n", "java": "public static final int committer(byte[] b, int ptr) {\n    final int sz = b.length;\n    if (ptr == 0)ptr += 46;\n    while (ptr < sz && b[ptr] == 'p')ptr += 48;\n    if (ptr < sz && b[ptr] == 'a')ptr = nextLF(b, ptr);\n    return match(b, ptr, committer);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581", "$$Commit", "$$ter", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581ptr", "$$)", "\u2581{"], ["\u2581int", "\u2581sz", "\u2581=", "\u2581b", "$$.Length;"], ["\u2581if", "\u2581(", "$$ptr", "\u2581==", "\u25810)", "\u2581{"], ["\u2581ptr", "\u2581+=", "\u25814", "$$6", "$$;"], ["\u2581}"], ["\u2581while", "\u2581(", "$$ptr", "\u2581<", "\u2581sz", "\u2581&&", "\u2581b", "$$[", "$$ptr", "$$]", "\u2581==", "\u2581'", "$$p", "$$')", "\u2581{"], ["\u2581ptr", "\u2581+=", "\u25814", "$$8", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$ptr", "\u2581<", "\u2581sz", "\u2581&&", "\u2581b", "$$[", "$$ptr", "$$]", "\u2581==", "\u2581'", "$$a", "$$')", "\u2581{"], ["\u2581ptr", "\u2581=", "\u2581Next", "$$L", "$$F", "$$(b,", "\u2581ptr", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581Match", "$$(b,", "\u2581ptr", "$$,", "\u2581Object", "$$Check", "$$er.", "$$com", "$$mit", "$$ter", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581final", "\u2581int", "\u2581commit", "$$ter", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581ptr", "$$)", "\u2581{"], ["\u2581final", "\u2581int", "\u2581sz", "\u2581=", "\u2581b", "$$.length;"], ["\u2581if", "\u2581(", "$$ptr", "\u2581==", "\u25810)", "$$ptr", "\u2581+=", "\u25814", "$$6", "$$;"], ["\u2581while", "\u2581(", "$$ptr", "\u2581<", "\u2581sz", "\u2581&&", "\u2581b", "$$[", "$$ptr", "$$]", "\u2581==", "\u2581'", "$$p", "$$')", "$$ptr", "\u2581+=", "\u25814", "$$8", "$$;"], ["\u2581if", "\u2581(", "$$ptr", "\u2581<", "\u2581sz", "\u2581&&", "\u2581b", "$$[", "$$ptr", "$$]", "\u2581==", "\u2581'", "$$a", "$$')", "$$ptr", "\u2581=", "\u2581next", "$$L", "$$F", "$$(b,", "\u2581ptr", "$$)", "$$;"], ["\u2581return", "\u2581match", "$$(b,", "\u2581ptr", "$$,", "\u2581commit", "$$ter", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int getLineNumber() {\n    return row;\n}\n", "java": "public int getLineNumber() {\n    return row;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581get", "$$Line", "$$Number", "$$()", "\u2581{"], ["\u2581return", "\u2581row", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$Line", "$$Number", "$$()", "\u2581{"], ["\u2581return", "\u2581row", "$$;"], ["\u2581}"]]}, {"cs": "public virtual NGit.Api.SubmoduleUpdateCommand AddPath(string path) {\n    paths.AddItem(path);\n    return this;\n}\n", "java": "public SubmoduleUpdateCommand addPath(String path) {\n    paths.add(path);\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581NGit.Api.", "$$Sub", "$$module", "$$Update", "$$Command", "\u2581Add", "$$Path", "$$(string", "\u2581path", "$$)", "\u2581{"], ["\u2581path", "$$s", "$$.Add", "$$Item", "$$(path", "$$)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Sub", "$$module", "$$Update", "$$Command", "\u2581add", "$$Path", "$$(String", "\u2581path", "$$)", "\u2581{"], ["\u2581path", "$$s.add(", "$$path", "$$)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetPushTemplateResponse GetPushTemplate(GetPushTemplateRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetPushTemplateRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetPushTemplateResponseUnmarshaller.Instance;\n    return Invoke<GetPushTemplateResponse>(request, options);\n}\n", "java": "public GetPushTemplateResult getPushTemplate(GetPushTemplateRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetPushTemplate(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Push", "$$Template", "$$Response", "\u2581Get", "$$Push", "$$Template", "$$(Get", "$$Push", "$$Template", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Push", "$$Template", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Push", "$$Template", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Push", "$$Template", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Push", "$$Template", "$$Result", "\u2581get", "$$Push", "$$Template", "$$(Get", "$$Push", "$$Template", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Push", "$$Template", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeVaultResponse DescribeVault(DescribeVaultRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeVaultRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeVaultResponseUnmarshaller.Instance;\n    return Invoke<DescribeVaultResponse>(request, options);\n}\n", "java": "public DescribeVaultResult describeVault(DescribeVaultRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeVault(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Vault", "$$Response", "\u2581Describe", "$$Vault", "$$(Describe", "$$Vault", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Vault", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Vault", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Vault", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Vault", "$$Result", "\u2581describe", "$$Vault", "$$(Describe", "$$Vault", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Vault", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections() {\n    return DescribeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());\n}\n", "java": "public DescribeVpcPeeringConnectionsResult describeVpcPeeringConnections() {\n    return describeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$VpcPeering", "$$Connection", "$$sResponse", "\u2581Describe", "$$VpcPeering", "$$Connection", "$$s()", "\u2581{"], ["\u2581return", "\u2581Describe", "$$VpcPeering", "$$Connection", "$$s(new", "\u2581Describe", "$$VpcPeering", "$$Connection", "$$sRequest", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$VpcPeering", "$$Connection", "$$sResult", "\u2581describe", "$$VpcPeering", "$$Connection", "$$s()", "\u2581{"], ["\u2581return", "\u2581describe", "$$VpcPeering", "$$Connection", "$$s(new", "\u2581Describe", "$$VpcPeering", "$$Connection", "$$sRequest", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.ByteBuffer putLong(int index, long value) {\n    throw new System.NotImplementedException();\n}\n", "java": "public ByteBuffer putLong(int index, long value) {\n    throw new ReadOnlyBufferException();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.ByteBuffer", "\u2581put", "$$Long", "$$(int", "\u2581index,", "\u2581long", "\u2581value)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.NotImplemented", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ByteBuffer", "\u2581put", "$$Long", "$$(int", "\u2581index,", "\u2581long", "\u2581value)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual RegisterDeviceResponse RegisterDevice(RegisterDeviceRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = RegisterDeviceRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = RegisterDeviceResponseUnmarshaller.Instance;\n    return Invoke<RegisterDeviceResponse>(request, options);\n}\n", "java": "public RegisterDeviceResult registerDevice(RegisterDeviceRequest request) {\n    request = beforeClientExecution(request);\n    return executeRegisterDevice(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Register", "$$Device", "$$Response", "\u2581Register", "$$Device", "$$(Re", "$$gister", "$$Device", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Register", "$$Device", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Register", "$$Device", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Re", "$$gister", "$$Device", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Register", "$$Device", "$$Result", "\u2581re", "$$gister", "$$Device", "$$(Re", "$$gister", "$$Device", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Re", "$$gister", "$$Device", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static Format ById(int id) {\n    foreach (Format format in Values) {\n        if (format.Id == id) {\n            return format;\n        }\n    }\n    throw new ArgumentException(\"Unknown format id: \" + id);\n}\n", "java": "public static Format byId(int id) {\n    for (Format format : Format.values()) {\n        if (format.getId() == id) {\n            return format;\n        }\n    }\n    throw new IllegalArgumentException(\"Unknown format id: \" + id);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581Format", "\u2581B", "$$y", "$$Id(", "$$int", "\u2581id)", "\u2581{"], ["\u2581foreach", "\u2581(", "$$Format", "\u2581format", "\u2581in", "\u2581V", "$$alues", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$format", "$$.", "$$Id", "\u2581==", "\u2581id)", "\u2581{"], ["\u2581return", "\u2581format", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581ArgumentException(\"", "$$Unknown", "\u2581format", "\u2581id", "$$:", "\u2581\"", "\u2581+", "\u2581id)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581Format", "\u2581b", "$$y", "$$Id(", "$$int", "\u2581id)", "\u2581{"], ["\u2581for", "\u2581(", "$$Format", "\u2581format", "\u2581:", "\u2581Format", "$$.", "$$values", "$$())", "\u2581{"], ["\u2581if", "\u2581(", "$$format", "$$.get", "$$Id()", "\u2581==", "\u2581id)", "\u2581{"], ["\u2581return", "\u2581format", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"Unknown", "\u2581format", "\u2581id", "$$:", "\u2581\"", "\u2581+", "\u2581id)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteAppResponse DeleteApp(DeleteAppRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteAppRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteAppResponseUnmarshaller.Instance;\n    return Invoke<DeleteAppResponse>(request, options);\n}\n", "java": "public DeleteAppResult deleteApp(DeleteAppRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteApp(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$App", "$$Response", "\u2581Delete", "$$App", "$$(Delete", "$$App", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$App", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$App", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$App", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$App", "$$Result", "\u2581delete", "$$App", "$$(Delete", "$$App", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$App", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetBaiduChannelResponse GetBaiduChannel(GetBaiduChannelRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetBaiduChannelRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetBaiduChannelResponseUnmarshaller.Instance;\n    return Invoke<GetBaiduChannelResponse>(request, options);\n}\n", "java": "public GetBaiduChannelResult getBaiduChannel(GetBaiduChannelRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetBaiduChannel(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$B", "$$a", "$$id", "$$u", "$$Channel", "$$Response", "\u2581Get", "$$B", "$$a", "$$id", "$$u", "$$Channel", "$$(Get", "$$B", "$$a", "$$id", "$$u", "$$Channel", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$B", "$$a", "$$id", "$$u", "$$Channel", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$B", "$$a", "$$id", "$$u", "$$Channel", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$B", "$$a", "$$id", "$$u", "$$Channel", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$B", "$$a", "$$id", "$$u", "$$Channel", "$$Result", "\u2581get", "$$B", "$$a", "$$id", "$$u", "$$Channel", "$$(Get", "$$B", "$$a", "$$id", "$$u", "$$Channel", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$B", "$$a", "$$id", "$$u", "$$Channel", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public FST.BytesReader GetBytesReader() {\n    return fst.GetBytesReader();\n}\n", "java": "public FST.BytesReader getBytesReader() {\n    return fst.getBytesReader();\n}\n", "cs_t": [["\u2581public", "\u2581F", "$$ST", "$$.", "$$Bytes", "$$Reader", "\u2581Get", "$$Bytes", "$$Reader", "$$()", "\u2581{"], ["\u2581return", "\u2581f", "$$st", "$$.Get", "$$Bytes", "$$Reader", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581F", "$$ST", "$$.", "$$Bytes", "$$Reader", "\u2581get", "$$Bytes", "$$Reader", "$$()", "\u2581{"], ["\u2581return", "\u2581f", "$$st", "$$.get", "$$Bytes", "$$Reader", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public static bool isValidSchemeChar(int index, char c) {\n    if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\n        return true;\n    }\n    if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')) {\n        return true;\n    }\n    return false;\n}\n", "java": "public static boolean isValidSchemeChar(int index, char c) {\n    if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\n        return true;\n    }\n    if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')) {\n        return true;\n    }\n    return false;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581bool", "\u2581is", "$$Valid", "$$Sch", "$$eme", "$$Char", "$$(int", "\u2581index,", "\u2581char", "\u2581c)", "\u2581{"], ["\u2581if", "\u2581((", "$$c", "\u2581>=", "\u2581'", "$$a", "$$'", "\u2581&&", "\u2581c", "\u2581<=", "\u2581'", "$$z", "$$')", "\u2581||", "\u2581(c", "\u2581>=", "\u2581'", "$$A", "$$'", "\u2581&&", "\u2581c", "\u2581<=", "\u2581'", "$$Z", "$$'", "$$))", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(index", "\u2581>", "\u25810", "\u2581&&", "\u2581((", "$$c", "\u2581>=", "\u2581'", "$$0", "$$'", "\u2581&&", "\u2581c", "\u2581<=", "\u2581'", "$$9", "$$')", "\u2581||", "\u2581c", "\u2581==", "\u2581'", "$$+", "$$'", "\u2581||", "\u2581c", "\u2581==", "\u2581'", "$$-", "$$'", "\u2581||", "\u2581c", "\u2581==", "\u2581'", "$$.", "$$'", "$$))", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581boolean", "\u2581is", "$$Valid", "$$Sch", "$$eme", "$$Char", "$$(int", "\u2581index,", "\u2581char", "\u2581c)", "\u2581{"], ["\u2581if", "\u2581((", "$$c", "\u2581>=", "\u2581'", "$$a", "$$'", "\u2581&&", "\u2581c", "\u2581<=", "\u2581'", "$$z", "$$')", "\u2581||", "\u2581(c", "\u2581>=", "\u2581'", "$$A", "$$'", "\u2581&&", "\u2581c", "\u2581<=", "\u2581'", "$$Z", "$$'", "$$))", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(index", "\u2581>", "\u25810", "\u2581&&", "\u2581((", "$$c", "\u2581>=", "\u2581'", "$$0", "$$'", "\u2581&&", "\u2581c", "\u2581<=", "\u2581'", "$$9", "$$')", "\u2581||", "\u2581c", "\u2581==", "\u2581'", "$$+", "$$'", "\u2581||", "\u2581c", "\u2581==", "\u2581'", "$$-", "$$'", "\u2581||", "\u2581c", "\u2581==", "\u2581'", "$$.", "$$'", "$$))", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListAppliedSchemaArnsResponse ListAppliedSchemaArns(ListAppliedSchemaArnsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListAppliedSchemaArnsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListAppliedSchemaArnsResponseUnmarshaller.Instance;\n    return Invoke<ListAppliedSchemaArnsResponse>(request, options);\n}\n", "java": "public ListAppliedSchemaArnsResult listAppliedSchemaArns(ListAppliedSchemaArnsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListAppliedSchemaArns(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$App", "$$li", "$$ed", "$$Schema", "$$Arn", "$$sResponse", "\u2581List", "$$App", "$$li", "$$ed", "$$Schema", "$$Arn", "$$s(List", "$$App", "$$li", "$$ed", "$$Schema", "$$Arn", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$App", "$$li", "$$ed", "$$Schema", "$$Arn", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$App", "$$li", "$$ed", "$$Schema", "$$Arn", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$App", "$$li", "$$ed", "$$Schema", "$$Arn", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$App", "$$li", "$$ed", "$$Schema", "$$Arn", "$$sResult", "\u2581list", "$$App", "$$li", "$$ed", "$$Schema", "$$Arn", "$$s(List", "$$App", "$$li", "$$ed", "$$Schema", "$$Arn", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$App", "$$li", "$$ed", "$$Schema", "$$Arn", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public System.Uri BaseUri {\n    get;\n    set;\n}\n", "java": "public String name() {\n    return this.name;\n}\n", "cs_t": [["\u2581public", "\u2581System.", "$$Uri", "\u2581B", "$$ase", "$$Uri", "\u2581{"], ["\u2581get", "$$;"], ["\u2581set", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581name", "$$()", "\u2581{"], ["\u2581return", "\u2581this.", "$$name", "$$;"], ["\u2581}"]]}, {"cs": "public ValueEval Evaluate(ValueEval[] args, OperationEvaluationContext ec) {\n    if (args.Length < 1) {\n        return ErrorEval.VALUE_INVALID;\n    }\n    bool isA1style;\n    String text;\n    try {\n        ValueEval ve = OperandResolver.GetSingleValue(args[0], ec.RowIndex, ec.ColumnIndex);\n        text = OperandResolver.CoerceValueToString(ve);\n        switch (args.Length) {\n        case 1:\n            isA1style = true;\n            break;\n        case 2:\n            isA1style = EvaluateBooleanArg(args[1], ec);\n            break;\n        default:\n            return ErrorEval.VALUE_INVALID;\n        }\n    }\n    catch (EvaluationException e) {\n        return e.GetErrorEval();\n    }\n    return EvaluateIndirect(ec, text, isA1style);\n}\n", "java": "public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {\n    if (args.length < 1) {\n        return ErrorEval.VALUE_INVALID;\n    }\n    boolean isA1style;\n    String text;\n    try {\n        ValueEval ve = OperandResolver.getSingleValue(args[0], ec.getRowIndex(), ec.getColumnIndex());\n        text = OperandResolver.coerceValueToString(ve);\n        switch (args.length) {\n        case 1:\n            isA1style = true;\n            break;\n        case 2:\n            isA1style = evaluateBooleanArg(args[1], ec);\n            break;\n        default:\n            return ErrorEval.VALUE_INVALID;\n        }\n    }\n    catch (EvaluationException e) {\n        return e.getErrorEval();\n    }\n    return evaluateIndirect(ec, text, isA1style);\n}\n", "cs_t": [["\u2581public", "\u2581ValueEval", "\u2581Evaluate", "$$(ValueEval", "$$[]", "\u2581args,", "\u2581", "$$Operation", "$$Evaluation", "$$Context", "\u2581", "$$ec", "$$)", "\u2581{"], ["\u2581if", "\u2581(arg", "$$s.Length", "\u2581<", "\u25811)", "\u2581{"], ["\u2581return", "\u2581ErrorEval.VALUE_INVALID", "$$;"], ["\u2581}"], ["\u2581bool", "\u2581is", "$$A", "$$1", "$$st", "$$yle", "$$;"], ["\u2581String", "\u2581text", "$$;"], ["\u2581try", "\u2581{"], ["\u2581ValueEval", "\u2581ve", "\u2581=", "\u2581OperandResolver", "$$.Get", "$$Single", "$$Value", "$$(arg", "$$s[0]", "$$,", "\u2581", "$$ec", "$$.", "$$RowIndex,", "\u2581", "$$ec", "$$.", "$$Column", "$$Index)", "$$;"], ["\u2581text", "\u2581=", "\u2581OperandResolver.", "$$Co", "$$erce", "$$ValueTo", "$$String(", "$$ve", "$$)", "$$;"], ["\u2581switch", "\u2581(arg", "$$s.Length", "$$)", "\u2581{"], ["\u2581case", "\u25811", "$$:"], ["\u2581is", "$$A", "$$1", "$$st", "$$yle", "\u2581=", "\u2581true", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u25812", "$$:"], ["\u2581is", "$$A", "$$1", "$$st", "$$yle", "\u2581=", "\u2581Evaluate", "$$Boolean", "$$Arg", "$$(arg", "$$s[", "$$1", "$$],", "\u2581", "$$ec", "$$)", "$$;"], ["\u2581break", "$$;"], ["\u2581default", "$$:"], ["\u2581return", "\u2581ErrorEval.VALUE_INVALID", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581catch", "\u2581(EvaluationException", "\u2581e)", "\u2581{"], ["\u2581return", "\u2581e", "$$.Get", "$$ErrorEval", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581Evaluate", "$$Ind", "$$ire", "$$ct", "$$(", "$$ec", "$$,", "\u2581text", "$$,", "\u2581is", "$$A", "$$1", "$$st", "$$yle", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ValueEval", "\u2581evaluate", "$$(ValueEval", "$$[]", "\u2581args,", "\u2581", "$$Operation", "$$Evaluation", "$$Context", "\u2581", "$$ec", "$$)", "\u2581{"], ["\u2581if", "\u2581(arg", "$$s.length", "\u2581<", "\u25811)", "\u2581{"], ["\u2581return", "\u2581ErrorEval.VALUE_INVALID", "$$;"], ["\u2581}"], ["\u2581boolean", "\u2581is", "$$A", "$$1", "$$st", "$$yle", "$$;"], ["\u2581String", "\u2581text", "$$;"], ["\u2581try", "\u2581{"], ["\u2581ValueEval", "\u2581ve", "\u2581=", "\u2581OperandResolver", "$$.get", "$$Single", "$$Value", "$$(arg", "$$s[0]", "$$,", "\u2581", "$$ec", "$$.get", "$$Row", "$$Index", "$$(),", "\u2581", "$$ec", "$$.get", "$$Column", "$$Index", "$$())", "$$;"], ["\u2581text", "\u2581=", "\u2581OperandResolver.", "$$co", "$$erce", "$$ValueTo", "$$String(", "$$ve", "$$)", "$$;"], ["\u2581switch", "\u2581(arg", "$$s.length", "$$)", "\u2581{"], ["\u2581case", "\u25811", "$$:"], ["\u2581is", "$$A", "$$1", "$$st", "$$yle", "\u2581=", "\u2581true", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u25812", "$$:"], ["\u2581is", "$$A", "$$1", "$$st", "$$yle", "\u2581=", "\u2581evaluate", "$$Boolean", "$$Arg", "$$(arg", "$$s[", "$$1", "$$],", "\u2581", "$$ec", "$$)", "$$;"], ["\u2581break", "$$;"], ["\u2581default", "$$:"], ["\u2581return", "\u2581ErrorEval.VALUE_INVALID", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581catch", "\u2581(EvaluationException", "\u2581e)", "\u2581{"], ["\u2581return", "\u2581e.get", "$$ErrorEval", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581evaluate", "$$Ind", "$$ire", "$$ct", "$$(", "$$ec", "$$,", "\u2581text", "$$,", "\u2581is", "$$A", "$$1", "$$st", "$$yle", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public int CompareTo(int[] bs, int p) {\n    int cmp;\n    cmp = NB.CompareUInt32(w1, bs[p]);\n    if (cmp != 0) {\n        return cmp;\n    }\n    cmp = NB.CompareUInt32(w2, bs[p + 1]);\n    if (cmp != 0) {\n        return cmp;\n    }\n    cmp = NB.CompareUInt32(w3, bs[p + 2]);\n    if (cmp != 0) {\n        return cmp;\n    }\n    cmp = NB.CompareUInt32(w4, bs[p + 3]);\n    if (cmp != 0) {\n        return cmp;\n    }\n    return NB.CompareUInt32(w5, bs[p + 4]);\n}\n", "java": "public final int compareTo(int[] bs, int p) {\n    int cmp;\n    cmp = NB.compareUInt32(w1, bs[p]);\n    if (cmp != 0)return cmp;\n    cmp = NB.compareUInt32(w2, bs[p + 1]);\n    if (cmp != 0)return cmp;\n    cmp = NB.compareUInt32(w3, bs[p + 2]);\n    if (cmp != 0)return cmp;\n    cmp = NB.compareUInt32(w4, bs[p + 3]);\n    if (cmp != 0)return cmp;\n    return NB.compareUInt32(w5, bs[p + 4]);\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581Compare", "$$To", "$$(int[]", "\u2581b", "$$s,", "\u2581int", "\u2581p", "$$)", "\u2581{"], ["\u2581int", "\u2581cmp", "$$;"], ["\u2581cmp", "\u2581=", "\u2581NB", "$$.Compare", "$$U", "$$Int32", "$$(w", "$$1,", "\u2581b", "$$s[", "$$p", "$$]", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$mp", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581return", "\u2581cmp", "$$;"], ["\u2581}"], ["\u2581cmp", "\u2581=", "\u2581NB", "$$.Compare", "$$U", "$$Int32", "$$(w", "$$2,", "\u2581b", "$$s[", "$$p", "\u2581+", "\u25811", "$$]", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$mp", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581return", "\u2581cmp", "$$;"], ["\u2581}"], ["\u2581cmp", "\u2581=", "\u2581NB", "$$.Compare", "$$U", "$$Int32", "$$(w", "$$3", "$$,", "\u2581b", "$$s[", "$$p", "\u2581+", "\u25812", "$$]", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$mp", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581return", "\u2581cmp", "$$;"], ["\u2581}"], ["\u2581cmp", "\u2581=", "\u2581NB", "$$.Compare", "$$U", "$$Int32", "$$(w", "$$4", "$$,", "\u2581b", "$$s[", "$$p", "\u2581+", "\u25813", "$$]", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$mp", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581return", "\u2581cmp", "$$;"], ["\u2581}"], ["\u2581return", "\u2581NB", "$$.Compare", "$$U", "$$Int32", "$$(w", "$$5", "$$,", "\u2581b", "$$s[", "$$p", "\u2581+", "\u25814", "$$]", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581int", "\u2581compare", "$$To", "$$(int[]", "\u2581b", "$$s,", "\u2581int", "\u2581p", "$$)", "\u2581{"], ["\u2581int", "\u2581cmp", "$$;"], ["\u2581cmp", "\u2581=", "\u2581NB", "$$.compare", "$$U", "$$Int32", "$$(w", "$$1,", "\u2581b", "$$s[", "$$p", "$$]", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$mp", "\u2581!=", "\u25810)return", "\u2581cmp", "$$;"], ["\u2581cmp", "\u2581=", "\u2581NB", "$$.compare", "$$U", "$$Int32", "$$(w", "$$2,", "\u2581b", "$$s[", "$$p", "\u2581+", "\u25811", "$$]", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$mp", "\u2581!=", "\u25810)return", "\u2581cmp", "$$;"], ["\u2581cmp", "\u2581=", "\u2581NB", "$$.compare", "$$U", "$$Int32", "$$(w", "$$3", "$$,", "\u2581b", "$$s[", "$$p", "\u2581+", "\u25812", "$$]", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$mp", "\u2581!=", "\u25810)return", "\u2581cmp", "$$;"], ["\u2581cmp", "\u2581=", "\u2581NB", "$$.compare", "$$U", "$$Int32", "$$(w", "$$4", "$$,", "\u2581b", "$$s[", "$$p", "\u2581+", "\u25813", "$$]", "$$)", "$$;"], ["\u2581if", "\u2581(c", "$$mp", "\u2581!=", "\u25810)return", "\u2581cmp", "$$;"], ["\u2581return", "\u2581NB", "$$.compare", "$$U", "$$Int32", "$$(w", "$$5", "$$,", "\u2581b", "$$s[", "$$p", "\u2581+", "\u25814", "$$]", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void RemoveName(int index) {\n    names.RemoveAt(index);\n    workbook.RemoveName(index);\n}\n", "java": "public void removeName(int index) {\n    names.remove(index);\n    workbook.removeName(index);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Remove", "$$Name", "$$(int", "\u2581index)", "\u2581{"], ["\u2581n", "$$ames", "$$.Remove", "$$At", "$$(index", "$$)", "$$;"], ["\u2581work", "$$book", "$$.Remove", "$$Name", "$$(index", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581remove", "$$Name", "$$(int", "\u2581index)", "\u2581{"], ["\u2581n", "$$ames", "$$.remove", "$$(index", "$$)", "$$;"], ["\u2581work", "$$book", "$$.remove", "$$Name", "$$(index", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public GetQueueAttributesRequest(string queueUrl, List<string> attributeNames) {\n    _queueUrl = queueUrl;\n    _attributeNames = attributeNames;\n}\n", "java": "public GetQueueAttributesRequest(String queueUrl, java.util.List<String> attributeNames) {\n    setQueueUrl(queueUrl);\n    setAttributeNames(attributeNames);\n}\n", "cs_t": [["\u2581public", "\u2581Get", "$$Queue", "$$Attributes", "$$Request(string", "\u2581queue", "$$Url", "$$,", "\u2581List<", "$$string>", "\u2581at", "$$tribute", "$$Names", "$$)", "\u2581{"], ["\u2581_", "$$qu", "$$eue", "$$Url", "\u2581=", "\u2581queue", "$$Url", "$$;"], ["\u2581_", "$$at", "$$tribute", "$$Names", "\u2581=", "\u2581at", "$$tribute", "$$Names", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Queue", "$$Attributes", "$$Request(String", "\u2581queue", "$$Url", "$$,", "\u2581java.util.", "$$List<", "$$String>", "\u2581at", "$$tribute", "$$Names", "$$)", "\u2581{"], ["\u2581set", "$$Queue", "$$Url", "$$(", "$$qu", "$$eue", "$$Url", "$$)", "$$;"], ["\u2581set", "$$Attribute", "$$Names", "$$(", "$$at", "$$tribute", "$$Names", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static bool[] copyOf(bool[] original, int newLength) {\n    if (newLength < 0) {\n        throw new java.lang.NegativeArraySizeException();\n    }\n    return copyOfRange(original, 0, newLength);\n}\n", "java": "public static boolean[] copyOf(boolean[] original, int newLength) {\n    if (newLength < 0) {\n        throw new NegativeArraySizeException();\n    }\n    return copyOfRange(original, 0, newLength);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581bool", "$$[]", "\u2581copy", "$$Of", "$$(bool", "$$[]", "\u2581original", "$$,", "\u2581int", "\u2581new", "$$Length", "$$)", "\u2581{"], ["\u2581if", "\u2581(new", "$$Length", "\u2581<", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581java.", "$$lan", "$$g", "$$.N", "$$eg", "$$ative", "$$Array", "$$Size", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581copy", "$$Of", "$$Range", "$$(", "$$original", "$$,", "\u25810,", "\u2581new", "$$Length", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581boolean", "$$[]", "\u2581copy", "$$Of", "$$(boolean", "$$[]", "\u2581original", "$$,", "\u2581int", "\u2581new", "$$Length", "$$)", "\u2581{"], ["\u2581if", "\u2581(new", "$$Length", "\u2581<", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581N", "$$eg", "$$ative", "$$Array", "$$Size", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581copy", "$$Of", "$$Range", "$$(", "$$original", "$$,", "\u25810,", "\u2581new", "$$Length", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static void setEnabled(bool enabled) {\n    ENABLED = enabled;\n}\n", "java": "public static void setEnabled(boolean enabled) {\n    ENABLED = enabled;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581set", "$$Enable", "$$d(", "$$bo", "$$ol", "\u2581en", "$$able", "$$d", "$$)", "\u2581{"], ["\u2581E", "$$N", "$$A", "$$BLE", "$$D", "\u2581=", "\u2581en", "$$able", "$$d", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581set", "$$Enable", "$$d(", "$$boolean", "\u2581en", "$$able", "$$d", "$$)", "\u2581{"], ["\u2581E", "$$N", "$$A", "$$BLE", "$$D", "\u2581=", "\u2581en", "$$able", "$$d", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteLogPatternResponse DeleteLogPattern(DeleteLogPatternRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteLogPatternRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteLogPatternResponseUnmarshaller.Instance;\n    return Invoke<DeleteLogPatternResponse>(request, options);\n}\n", "java": "public DeleteLogPatternResult deleteLogPattern(DeleteLogPatternRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteLogPattern(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Log", "$$Pattern", "$$Response", "\u2581Delete", "$$Log", "$$Pattern", "$$(Delete", "$$Log", "$$Pattern", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Log", "$$Pattern", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Log", "$$Pattern", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Log", "$$Pattern", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Log", "$$Pattern", "$$Result", "\u2581delete", "$$Log", "$$Pattern", "$$(Delete", "$$Log", "$$Pattern", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Log", "$$Pattern", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool Contains(char[] text, int offset, int length) {\n    return map.ContainsKey(text, offset, length);\n}\n", "java": "public boolean contains(char[] text, int off, int len) {\n    return map.containsKey(text, off, len);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581", "$$Contain", "$$s(", "$$char", "$$[]", "\u2581text", "$$,", "\u2581int", "\u2581offset,", "\u2581int", "\u2581length)", "\u2581{"], ["\u2581return", "\u2581map", "$$.", "$$Contain", "$$sKey", "$$(", "$$text", "$$,", "\u2581offset,", "\u2581length)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581contains(", "$$char", "$$[]", "\u2581text", "$$,", "\u2581int", "\u2581off,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581return", "\u2581map", "$$.contain", "$$sKey", "$$(", "$$text", "$$,", "\u2581off,", "\u2581len)", "$$;"], ["\u2581}"]]}, {"cs": "public int GetFirstSheetIndexFromExternSheetIndex(int externSheetNumber) {\n    return linkTable.GetFirstInternalSheetIndexForExtIndex(externSheetNumber);\n}\n", "java": "public int getFirstSheetIndexFromExternSheetIndex(int externSheetNumber) {\n    return linkTable.getFirstInternalSheetIndexForExtIndex(externSheetNumber);\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581Get", "$$First", "$$SheetIndex", "$$From", "$$ExternSheet", "$$Index", "$$(int", "\u2581ex", "$$ternSheet", "$$Number", "$$)", "\u2581{"], ["\u2581return", "\u2581link", "$$Table", "$$.Get", "$$First", "$$Internal", "$$SheetIndex", "$$For", "$$Ex", "$$t", "$$Index(", "$$externSheet", "$$Number", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$First", "$$SheetIndex", "$$From", "$$ExternSheet", "$$Index", "$$(int", "\u2581ex", "$$ternSheet", "$$Number", "$$)", "\u2581{"], ["\u2581return", "\u2581link", "$$Table", "$$.get", "$$First", "$$Internal", "$$SheetIndex", "$$For", "$$Ex", "$$t", "$$Index(", "$$externSheet", "$$Number", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool Handles(string commandLine) {\n    return command.Length + 1 < commandLine.Length && commandLine[command.Length] ==' ' && commandLine.StartsWith(command);\n}\n", "java": "public boolean handles(String commandLine) {\n    return command.length() + 1 < commandLine.length()&& commandLine.charAt(command.length()) == ' '&& commandLine.startsWith(command);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581H", "$$and", "$$les", "$$(string", "\u2581com", "$$m", "$$and", "$$Line", "$$)", "\u2581{"], ["\u2581return", "\u2581com", "$$m", "$$and", "$$.Length", "\u2581+", "\u25811", "\u2581<", "\u2581com", "$$m", "$$and", "$$Line", "$$.Length", "\u2581&&", "\u2581com", "$$m", "$$and", "$$Line", "$$[", "$$com", "$$m", "$$and", "$$.Length", "$$]", "\u2581==", "$$'", "\u2581'", "\u2581&&", "\u2581com", "$$m", "$$and", "$$Line", "$$.", "$$Start", "$$sWith", "$$(", "$$com", "$$m", "$$and", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581h", "$$and", "$$les", "$$(String", "\u2581com", "$$m", "$$and", "$$Line", "$$)", "\u2581{"], ["\u2581return", "\u2581com", "$$m", "$$and", "$$.length()", "\u2581+", "\u25811", "\u2581<", "\u2581com", "$$m", "$$and", "$$Line", "$$.length()", "$$&&", "\u2581com", "$$m", "$$and", "$$Line", "$$.char", "$$At(", "$$com", "$$m", "$$and", "$$.length", "$$())", "\u2581==", "\u2581'", "\u2581'", "$$&&", "\u2581com", "$$m", "$$and", "$$Line", "$$.", "$$start", "$$sWith", "$$(", "$$com", "$$m", "$$and", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static void Register(MergeStrategy imp) {\n    Register(imp.GetName(), imp);\n}\n", "java": "public static void register(MergeStrategy imp) {\n    register(imp.getName(), imp);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581Re", "$$gist", "$$er(", "$$Merge", "$$Strategy", "\u2581i", "$$mp", "$$)", "\u2581{"], ["\u2581Re", "$$gist", "$$er(", "$$i", "$$mp", "$$.Get", "$$Name", "$$(),", "\u2581i", "$$mp", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581re", "$$gist", "$$er(", "$$Merge", "$$Strategy", "\u2581i", "$$mp", "$$)", "\u2581{"], ["\u2581re", "$$gist", "$$er(", "$$i", "$$mp", "$$.get", "$$Name", "$$(),", "\u2581i", "$$mp", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public long RamBytesUsed() {\n    return ((index != null) ? index.GetSizeInBytes() : 0);\n}\n", "java": "public long ramBytesUsed() {\n    return BASE_RAM_BYTES_USED + ((index!=null)? index.ramBytesUsed() : 0);\n}\n", "cs_t": [["\u2581public", "\u2581long", "\u2581Ram", "$$BytesUsed()", "\u2581{"], ["\u2581return", "\u2581((", "$$index", "\u2581!=", "\u2581null)", "\u2581?", "\u2581index", "$$.Get", "$$Size", "$$InBytes", "$$()", "\u2581:", "\u25810)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581long", "\u2581ram", "$$BytesUsed()", "\u2581{"], ["\u2581return", "\u2581B", "$$AS", "$$E_", "$$R", "$$AM", "$$_BYTES_", "$$U", "$$SE", "$$D", "\u2581+", "\u2581((", "$$index", "$$!", "$$=", "$$null", "$$)", "$$?", "\u2581index", "$$.", "$$ram", "$$BytesUsed()", "\u2581:", "\u25810)", "$$;"], ["\u2581}"]]}, {"cs": "public HostedZone(string id, string name, string callerReference) {\n    _id = id;\n    _name = name;\n    _callerReference = callerReference;\n}\n", "java": "public HostedZone(String id, String name, String callerReference) {\n    setId(id);\n    setName(name);\n    setCallerReference(callerReference);\n}\n", "cs_t": [["\u2581public", "\u2581H", "$$osted", "$$Zone", "$$(string", "\u2581id", "$$,", "\u2581string", "\u2581name,", "\u2581string", "\u2581c", "$$aller", "$$Reference", "$$)", "\u2581{"], ["\u2581_", "$$id", "\u2581=", "\u2581id", "$$;"], ["\u2581_", "$$name", "\u2581=", "\u2581name", "$$;"], ["\u2581_c", "$$aller", "$$Reference", "\u2581=", "\u2581c", "$$aller", "$$Reference", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581H", "$$osted", "$$Zone", "$$(String", "\u2581id", "$$,", "\u2581String", "\u2581name,", "\u2581String", "\u2581c", "$$aller", "$$Reference", "$$)", "\u2581{"], ["\u2581set", "$$Id(", "$$id", "$$)", "$$;"], ["\u2581set", "$$Name", "$$(name", "$$)", "$$;"], ["\u2581set", "$$C", "$$aller", "$$Reference", "$$(c", "$$aller", "$$Reference", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetFindingsResponse GetFindings(GetFindingsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetFindingsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetFindingsResponseUnmarshaller.Instance;\n    return Invoke<GetFindingsResponse>(request, options);\n}\n", "java": "public GetFindingsResult getFindings(GetFindingsRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetFindings(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Finding", "$$sResponse", "\u2581Get", "$$Finding", "$$s(Get", "$$Finding", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Find", "$$ings", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Find", "$$ings", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Finding", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Finding", "$$sResult", "\u2581get", "$$Finding", "$$s(Get", "$$Finding", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Find", "$$ings", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeTopicsDetectionJobResponse DescribeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeTopicsDetectionJobRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeTopicsDetectionJobResponseUnmarshaller.Instance;\n    return Invoke<DescribeTopicsDetectionJobResponse>(request, options);\n}\n", "java": "public DescribeTopicsDetectionJobResult describeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeTopicsDetectionJob(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$To", "$$pic", "$$s", "$$DetectionJob", "$$Response", "\u2581Describe", "$$To", "$$pic", "$$s", "$$DetectionJob", "$$(Describe", "$$To", "$$pic", "$$s", "$$DetectionJob", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$To", "$$pic", "$$s", "$$DetectionJob", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$To", "$$pic", "$$s", "$$DetectionJob", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$To", "$$pic", "$$s", "$$DetectionJob", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$To", "$$pic", "$$s", "$$DetectionJob", "$$Result", "\u2581describe", "$$To", "$$pic", "$$s", "$$DetectionJob", "$$(Describe", "$$To", "$$pic", "$$s", "$$DetectionJob", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$To", "$$pic", "$$s", "$$DetectionJob", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public bool ProcessMatch(ValueEval eval) {\n    if (eval is NumericValueEval) {\n        if (minimumValue == null) {\n            minimumValue = eval;\n        }\n        else {\n            double currentValue = ((NumericValueEval)eval).NumberValue;\n            double oldValue = ((NumericValueEval)minimumValue).NumberValue;\n            if (currentValue < oldValue) {\n                minimumValue = eval;\n            }\n        }\n    }\n    return true;\n}\n", "java": "public boolean processMatch(ValueEval eval) {\n    if(eval instanceof NumericValueEval) {\n        if(minimumValue == null) {\n            minimumValue = eval;\n        }\n        else {\n            double currentValue = ((NumericValueEval)eval).getNumberValue();\n            double oldValue = ((NumericValueEval)minimumValue).getNumberValue();\n            if(currentValue < oldValue) {\n                minimumValue = eval;\n            }\n        }\n    }\n    return true;\n}\n", "cs_t": [["\u2581public", "\u2581bool", "\u2581", "$$Process", "$$Match", "$$(ValueEval", "\u2581e", "$$val", "$$)", "\u2581{"], ["\u2581if", "\u2581(e", "$$val", "\u2581is", "\u2581Numeric", "$$ValueEval", "$$)", "\u2581{"], ["\u2581if", "\u2581(m", "$$in", "$$im", "$$um", "$$Value", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581min", "$$im", "$$um", "$$Value", "\u2581=", "\u2581e", "$$val", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581double", "\u2581current", "$$Value", "\u2581=", "\u2581((", "$$Num", "$$eric", "$$ValueEval", "$$)", "$$e", "$$val", "$$).", "$$Number", "$$Value", "$$;"], ["\u2581double", "\u2581old", "$$Value", "\u2581=", "\u2581((", "$$Num", "$$eric", "$$ValueEval", "$$)", "$$min", "$$im", "$$um", "$$Value", "$$).", "$$Number", "$$Value", "$$;"], ["\u2581if", "\u2581(c", "$$urrent", "$$Value", "\u2581<", "\u2581old", "$$Value)", "\u2581{"], ["\u2581min", "$$im", "$$um", "$$Value", "\u2581=", "\u2581e", "$$val", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581pro", "$$cess", "$$Match", "$$(ValueEval", "\u2581e", "$$val", "$$)", "\u2581{"], ["\u2581if", "$$(e", "$$val", "\u2581instanceof", "\u2581Numeric", "$$ValueEval", "$$)", "\u2581{"], ["\u2581if(", "$$min", "$$im", "$$um", "$$Value", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581min", "$$im", "$$um", "$$Value", "\u2581=", "\u2581e", "$$val", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581double", "\u2581current", "$$Value", "\u2581=", "\u2581((", "$$Num", "$$eric", "$$ValueEval", "$$)", "$$e", "$$val", "$$)", "$$.get", "$$Number", "$$Value", "$$()", "$$;"], ["\u2581double", "\u2581old", "$$Value", "\u2581=", "\u2581((", "$$Num", "$$eric", "$$ValueEval", "$$)", "$$min", "$$im", "$$um", "$$Value)", "$$.get", "$$Number", "$$Value", "$$()", "$$;"], ["\u2581if", "$$(c", "$$urrent", "$$Value", "\u2581<", "\u2581old", "$$Value)", "\u2581{"], ["\u2581min", "$$im", "$$um", "$$Value", "\u2581=", "\u2581e", "$$val", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]]}, {"cs": "public override void Write(ILittleEndianOutput out1) {\n    out1.WriteByte(sid + PtgClass);\n    out1.WriteShort(field_1_len_ref_subexpression);\n}\n", "java": "public void write(LittleEndianOutput out) {\n    out.writeByte(sid + getPtgClass());\n    out.writeShort(field_1_len_ref_subexpression);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Write", "$$(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteByte(", "$$sid", "\u2581+", "\u2581Ptg", "$$Clas", "$$s)", "$$;"], ["\u2581out1.WriteShort(", "$$field_1_", "$$len", "$$_", "$$ref", "$$_", "$$sub", "$$exp", "$$ression", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581write", "$$(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeByte(", "$$sid", "\u2581+", "\u2581get", "$$Ptg", "$$Class", "$$())", "$$;"], ["\u2581out.writeShort(", "$$field_1_", "$$len", "$$_", "$$ref", "$$_", "$$sub", "$$exp", "$$ression", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static int Main(string[] args) {\n    bool printTree = false;\n    string path = null;\n    for (int i = 0; i < args.Length; i++) {\n        if (args[i].Equals(\"-printTree\", StringComparison.Ordinal)) {\n            printTree = true;\n        }\n        else {\n            path = args[i];\n        }\n    }\n    if (args.Length != (printTree ? 2 : 1)) {\n        throw new ArgumentException();\n    }\n    using (Store.Directory dir = FSDirectory.Open(new DirectoryInfo(path))) {\n        using (var r = new DirectoryTaxonomyReader(dir)) {\n            PrintStats(r, System.Console.Out, printTree);\n        }\n    }\n    return 0;\n}\n", "java": "public static void main(String[] args) throws IOException {\n    boolean printTree = false;\n    String path = null;\n    for(int i=0; i<args.length; i++) {\n        if (args[i].equals(\"-printTree\")) {\n            printTree = true;\n        }\n        else {\n            path = args[i];\n        }\n    }\n    if (args.length != (printTree ? 2 : 1)) {\n        System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");\n        System.exit(1);\n    }\n    Directory dir = FSDirectory.open(Paths.get(path));\n    TaxonomyReader r = new DirectoryTaxonomyReader(dir);\n    printStats(r, System.out, printTree);\n    r.close();\n    dir.close();\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581M", "$$a", "$$in", "$$(string", "$$[]", "\u2581args)", "\u2581{"], ["\u2581bool", "\u2581print", "$$Tree", "\u2581=", "\u2581false", "$$;"], ["\u2581string", "\u2581path", "\u2581=", "\u2581null", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581arg", "$$s.Length;", "\u2581i++)", "\u2581{"], ["\u2581if", "\u2581(arg", "$$s[i]", "$$.Equals(", "$$\"", "$$-", "$$p", "$$rint", "$$Tree", "$$\",", "\u2581StringComparison.Ordinal", "$$))", "\u2581{"], ["\u2581print", "$$Tree", "\u2581=", "\u2581true", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581path", "\u2581=", "\u2581arg", "$$s[i]", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581if", "\u2581(arg", "$$s.Length", "\u2581!=", "\u2581(p", "$$rint", "$$Tree", "\u2581?", "\u25812", "\u2581:", "\u25811", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$ArgumentException", "$$()", "$$;"], ["\u2581}"], ["\u2581u", "$$sing", "\u2581(", "$$Store", "$$.", "$$Directory", "\u2581dir", "\u2581=", "\u2581F", "$$S", "$$Directory", "$$.", "$$Open", "$$(new", "\u2581D", "$$irectory", "$$Info", "$$(path", "$$))", "$$)", "\u2581{"], ["\u2581u", "$$sing", "\u2581(v", "$$ar", "\u2581r", "\u2581=", "\u2581new", "\u2581D", "$$irectory", "$$T", "$$axonomy", "$$Reader", "$$(d", "$$ir", "$$))", "\u2581{"], ["\u2581P", "$$rint", "$$Stat", "$$s(", "$$r", "$$,", "\u2581System.", "$$Con", "$$s", "$$ole", "$$.", "$$Out", "$$,", "\u2581print", "$$Tree", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u25810;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581", "$$main", "$$(String", "$$[]", "\u2581args)", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581boolean", "\u2581print", "$$Tree", "\u2581=", "\u2581false", "$$;"], ["\u2581String", "\u2581path", "\u2581=", "\u2581null", "$$;"], ["\u2581for", "$$(int", "\u2581i", "$$=0", "$$;", "\u2581i", "$$<", "$$arg", "$$s.length;", "\u2581i++)", "\u2581{"], ["\u2581if", "\u2581(arg", "$$s[i]", "$$.equals(", "$$\"", "$$-", "$$p", "$$rint", "$$Tree", "$$\"", "$$))", "\u2581{"], ["\u2581print", "$$Tree", "\u2581=", "\u2581true", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581path", "\u2581=", "\u2581arg", "$$s[i]", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581if", "\u2581(arg", "$$s.length", "\u2581!=", "\u2581(p", "$$rint", "$$Tree", "\u2581?", "\u25812", "\u2581:", "\u25811", "$$))", "\u2581{"], ["\u2581System.", "$$out", "$$.p", "$$rint", "$$ln", "$$(\"", "$$\\n", "$$Usage", "$$:", "\u2581j", "$$ava", "\u2581-", "$$c", "$$lass", "$$path", "\u2581.", "$$..", "\u2581or", "$$g", "$$.ap", "$$ache", "$$.", "$$lu", "$$c", "$$ene", "$$.f", "$$acet", "$$.", "$$util.", "$$P", "$$rint", "$$T", "$$axonomy", "$$Stat", "$$s", "\u2581[", "$$-", "$$p", "$$rint", "$$Tree", "$$]", "\u2581/", "$$path", "$$/", "$$to", "$$/", "$$tax", "$$on", "$$on", "$$m", "$$y", "$$/", "$$index", "$$\\n", "$$\")", "$$;"], ["\u2581System.", "$$ex", "$$it", "$$(", "$$1)", "$$;"], ["\u2581}"], ["\u2581D", "$$irectory", "\u2581dir", "\u2581=", "\u2581F", "$$S", "$$Directory", "$$.", "$$open", "$$(", "$$Path", "$$s.get", "$$(path", "$$))", "$$;"], ["\u2581T", "$$axonomy", "$$Reader", "\u2581r", "\u2581=", "\u2581new", "\u2581D", "$$irectory", "$$T", "$$axonomy", "$$Reader", "$$(d", "$$ir", "$$)", "$$;"], ["\u2581print", "$$Stat", "$$s(", "$$r", "$$,", "\u2581System.", "$$out", "$$,", "\u2581print", "$$Tree", "$$)", "$$;"], ["\u2581r", "$$.c", "$$lose", "$$()", "$$;"], ["\u2581dir", "$$.c", "$$lose", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetByteValue(byte value) {\n    if (!(FieldsData is Byte)) {\n        throw new System.ArgumentException(\"cannot change value type from \" + FieldsData.GetType().Name + \" to Byte\");\n    }\n    FieldsData = new Byte(value);\n}\n", "java": "public void setByteValue(byte value) {\n    if (!(fieldsData instanceof Byte)) {\n        throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Byte\");\n    }\n    fieldsData = Byte.valueOf(value);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Byte", "$$Value", "$$(byte", "\u2581value)", "\u2581{"], ["\u2581if", "\u2581(!", "$$(", "$$Field", "$$s", "$$Data", "\u2581is", "\u2581Byte", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"", "$$c", "$$annot", "\u2581ch", "$$ange", "\u2581value", "\u2581type", "\u2581from", "\u2581\"", "\u2581+", "\u2581Fields", "$$Data", "$$.Get", "$$Type().", "$$Name", "\u2581+", "\u2581\"", "\u2581to", "\u2581Byte", "$$\")", "$$;"], ["\u2581}"], ["\u2581Fields", "$$Data", "\u2581=", "\u2581new", "\u2581Byte", "$$(value", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Byte", "$$Value", "$$(byte", "\u2581value)", "\u2581{"], ["\u2581if", "\u2581(!", "$$(field", "$$s", "$$Data", "\u2581instanceof", "\u2581Byte", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$c", "$$annot", "\u2581ch", "$$ange", "\u2581value", "\u2581type", "\u2581from", "\u2581\"", "\u2581+", "\u2581field", "$$s", "$$Data", "$$.get", "$$Class().get", "$$Simple", "$$Name()", "\u2581+", "\u2581\"", "\u2581to", "\u2581Byte", "$$\")", "$$;"], ["\u2581}"], ["\u2581field", "$$s", "$$Data", "\u2581=", "\u2581Byte", "$$.value", "$$Of(", "$$value", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static int Initialize() {\n    return Initialize(DefaultSeed);\n}\n", "java": "public static int initialize() {\n    return initialize(DEFAULT_SEED);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581In", "$$itial", "$$ize", "$$()", "\u2581{"], ["\u2581return", "\u2581In", "$$itial", "$$ize", "$$(", "$$Default", "$$Se", "$$ed", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581in", "$$itial", "$$ize", "$$()", "\u2581{"], ["\u2581return", "\u2581in", "$$itial", "$$ize", "$$(", "$$DEFAULT_", "$$SE", "$$E", "$$D", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public CachingDoubleValueSource(ValueSource source) {\n    this.m_source = source;\n    m_cache = new JCG.Dictionary<int, double>();\n}\n", "java": "public CachingDoubleValueSource(DoubleValuesSource source) {\n    this.source = source;\n    cache = new HashMap<>();\n}\n", "cs_t": [["\u2581public", "\u2581C", "$$ach", "$$ing", "$$Double", "$$ValueSource", "$$(", "$$ValueSource", "\u2581source", "$$)", "\u2581{"], ["\u2581this.m_", "$$source", "\u2581=", "\u2581source", "$$;"], ["\u2581m_", "$$c", "$$ache", "\u2581=", "\u2581new", "\u2581J", "$$C", "$$G", "$$.D", "$$ictionary", "$$<", "$$int", "$$,", "\u2581double", "$$>", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581C", "$$ach", "$$ing", "$$Double", "$$ValueSource", "$$(", "$$Double", "$$Values", "$$Source", "\u2581source", "$$)", "\u2581{"], ["\u2581this.", "$$source", "\u2581=", "\u2581source", "$$;"], ["\u2581cache", "\u2581=", "\u2581new", "\u2581Hash", "$$Map<", "$$>", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public AttributeDefinition(string attributeName, ScalarAttributeType attributeType) {\n    _attributeName = attributeName;\n    _attributeType = attributeType;\n}\n", "java": "public AttributeDefinition(String attributeName, ScalarAttributeType attributeType) {\n    setAttributeName(attributeName);\n    setAttributeType(attributeType.toString());\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Attribute", "$$Definition", "$$(string", "\u2581at", "$$tribute", "$$Name,", "\u2581S", "$$cal", "$$ar", "$$Attribute", "$$Type", "\u2581at", "$$tribute", "$$Type", "$$)", "\u2581{"], ["\u2581_", "$$at", "$$tribute", "$$Name", "\u2581=", "\u2581at", "$$tribute", "$$Name", "$$;"], ["\u2581_", "$$at", "$$tribute", "$$Type", "\u2581=", "\u2581at", "$$tribute", "$$Type", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Attribute", "$$Definition", "$$(String", "\u2581at", "$$tribute", "$$Name,", "\u2581S", "$$cal", "$$ar", "$$Attribute", "$$Type", "\u2581at", "$$tribute", "$$Type", "$$)", "\u2581{"], ["\u2581set", "$$Attribute", "$$Name(", "$$at", "$$tribute", "$$Name)", "$$;"], ["\u2581set", "$$Attribute", "$$Type", "$$(", "$$at", "$$tribute", "$$Type", "$$.toString()", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static string Join(ICollection<string> parts, string separator) {\n    return NGit.Util.StringUtils.Join(parts, separator, separator);\n}\n", "java": "public static String join(Collection<String> parts, String separator) {\n    return StringUtils.join(parts, separator, separator);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581string", "\u2581", "$$Jo", "$$in", "$$(I", "$$Collection", "$$<string", "$$>", "\u2581part", "$$s,", "\u2581string", "\u2581se", "$$parator", "$$)", "\u2581{"], ["\u2581return", "\u2581NGit.", "$$Util.", "$$String", "$$Utils.", "$$Jo", "$$in", "$$(p", "$$art", "$$s,", "\u2581se", "$$parator", "$$,", "\u2581se", "$$parator", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581String", "\u2581j", "$$o", "$$in", "$$(", "$$Collection<", "$$String>", "\u2581part", "$$s,", "\u2581String", "\u2581se", "$$parator", "$$)", "\u2581{"], ["\u2581return", "\u2581String", "$$Utils.", "$$j", "$$o", "$$in", "$$(p", "$$art", "$$s,", "\u2581se", "$$parator", "$$,", "\u2581se", "$$parator", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListTaskDefinitionFamiliesResponse ListTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListTaskDefinitionFamiliesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListTaskDefinitionFamiliesResponseUnmarshaller.Instance;\n    return Invoke<ListTaskDefinitionFamiliesResponse>(request, options);\n}\n", "java": "public ListTaskDefinitionFamiliesResult listTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request) {\n    request = beforeClientExecution(request);\n    return executeListTaskDefinitionFamilies(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Task", "$$Definition", "$$F", "$$am", "$$ili", "$$es", "$$Response", "\u2581List", "$$Task", "$$Definition", "$$F", "$$am", "$$ili", "$$es", "$$(List", "$$Task", "$$Definition", "$$F", "$$am", "$$ili", "$$es", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Task", "$$Definition", "$$F", "$$am", "$$ili", "$$es", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Task", "$$Definition", "$$F", "$$am", "$$ili", "$$es", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Task", "$$Definition", "$$F", "$$am", "$$ili", "$$es", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Task", "$$Definition", "$$F", "$$am", "$$ili", "$$es", "$$Result", "\u2581list", "$$Task", "$$Definition", "$$F", "$$am", "$$ili", "$$es", "$$(List", "$$Task", "$$Definition", "$$F", "$$am", "$$ili", "$$es", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Task", "$$Definition", "$$F", "$$am", "$$ili", "$$es", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListComponentsResponse ListComponents(ListComponentsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListComponentsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListComponentsResponseUnmarshaller.Instance;\n    return Invoke<ListComponentsResponse>(request, options);\n}\n", "java": "public ListComponentsResult listComponents(ListComponentsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListComponents(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Component", "$$sResponse", "\u2581List", "$$Component", "$$s(List", "$$Component", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Component", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Component", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Component", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Component", "$$sResult", "\u2581list", "$$Component", "$$s(List", "$$Component", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Component", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ActivatePhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"ActivatePhotos\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public ActivatePhotosRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"ActivatePhotos\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581Ac", "$$ti", "$$vate", "$$Photo", "$$sRequest", "$$():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Acti", "$$vate", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Ac", "$$ti", "$$vate", "$$Photo", "$$sRequest", "$$()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Acti", "$$vate", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateMatchmakingRuleSetResponse CreateMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateMatchmakingRuleSetRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateMatchmakingRuleSetResponseUnmarshaller.Instance;\n    return Invoke<CreateMatchmakingRuleSetResponse>(request, options);\n}\n", "java": "public CreateMatchmakingRuleSetResult createMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateMatchmakingRuleSet(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Matchmaking", "$$Rule", "$$Set", "$$Response", "\u2581Create", "$$Matchmaking", "$$Rule", "$$Set", "$$(Create", "$$Matchmaking", "$$Rule", "$$Set", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Matchmaking", "$$Rule", "$$Set", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Matchmaking", "$$Rule", "$$Set", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Matchmaking", "$$Rule", "$$Set", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Matchmaking", "$$Rule", "$$Set", "$$Result", "\u2581create", "$$Matchmaking", "$$Rule", "$$Set", "$$(Create", "$$Matchmaking", "$$Rule", "$$Set", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Matchmaking", "$$Rule", "$$Set", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListAvailableManagementCidrRangesResponse ListAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListAvailableManagementCidrRangesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListAvailableManagementCidrRangesResponseUnmarshaller.Instance;\n    return Invoke<ListAvailableManagementCidrRangesResponse>(request, options);\n}\n", "java": "public ListAvailableManagementCidrRangesResult listAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request) {\n    request = beforeClientExecution(request);\n    return executeListAvailableManagementCidrRanges(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Avail", "$$able", "$$Man", "$$age", "$$ment", "$$Cidr", "$$R", "$$anges", "$$Response", "\u2581List", "$$Avail", "$$able", "$$Man", "$$age", "$$ment", "$$Cidr", "$$R", "$$anges", "$$(List", "$$Avail", "$$able", "$$Man", "$$age", "$$ment", "$$Cidr", "$$R", "$$anges", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Avail", "$$able", "$$Man", "$$age", "$$ment", "$$Cidr", "$$R", "$$anges", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Avail", "$$able", "$$Man", "$$age", "$$ment", "$$Cidr", "$$R", "$$anges", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Avail", "$$able", "$$Man", "$$age", "$$ment", "$$Cidr", "$$R", "$$anges", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Avail", "$$able", "$$Man", "$$age", "$$ment", "$$Cidr", "$$R", "$$anges", "$$Result", "\u2581list", "$$Avail", "$$able", "$$Man", "$$age", "$$ment", "$$Cidr", "$$R", "$$anges", "$$(List", "$$Avail", "$$able", "$$Man", "$$age", "$$ment", "$$Cidr", "$$R", "$$anges", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Avail", "$$able", "$$Man", "$$age", "$$ment", "$$Cidr", "$$R", "$$anges", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ObjectIdSubclassMap<ObjectId> GetBaseObjectIds() {\n    if (baseObjectIds != null) {\n        return baseObjectIds;\n    }\n    return new ObjectIdSubclassMap<ObjectId>();\n}\n", "java": "public ObjectIdSubclassMap<ObjectId> getBaseObjectIds() {\n    if (baseObjectIds != null)return baseObjectIds;\n    return new ObjectIdSubclassMap<>();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581ObjectId", "$$Sub", "$$c", "$$lass", "$$Map<", "$$ObjectId", "$$>", "\u2581Get", "$$Base", "$$ObjectId", "$$s()", "\u2581{"], ["\u2581if", "\u2581(b", "$$ase", "$$ObjectId", "$$s", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581base", "$$ObjectId", "$$s;"], ["\u2581}"], ["\u2581return", "\u2581new", "\u2581ObjectId", "$$Sub", "$$c", "$$lass", "$$Map<", "$$ObjectId", "$$>", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ObjectId", "$$Sub", "$$c", "$$lass", "$$Map<", "$$ObjectId", "$$>", "\u2581get", "$$Base", "$$ObjectId", "$$s()", "\u2581{"], ["\u2581if", "\u2581(b", "$$ase", "$$ObjectId", "$$s", "\u2581!=", "\u2581null)", "$$return", "\u2581base", "$$ObjectId", "$$s;"], ["\u2581return", "\u2581new", "\u2581ObjectId", "$$Sub", "$$c", "$$lass", "$$Map<", "$$>", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeletePushTemplateResponse DeletePushTemplate(DeletePushTemplateRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeletePushTemplateRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeletePushTemplateResponseUnmarshaller.Instance;\n    return Invoke<DeletePushTemplateResponse>(request, options);\n}\n", "java": "public DeletePushTemplateResult deletePushTemplate(DeletePushTemplateRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeletePushTemplate(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Push", "$$Template", "$$Response", "\u2581Delete", "$$Push", "$$Template", "$$(Delete", "$$Push", "$$Template", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Push", "$$Template", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Push", "$$Template", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Push", "$$Template", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Push", "$$Template", "$$Result", "\u2581delete", "$$Push", "$$Template", "$$(Delete", "$$Push", "$$Template", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Push", "$$Template", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateDomainEntryResponse CreateDomainEntry(CreateDomainEntryRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateDomainEntryRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateDomainEntryResponseUnmarshaller.Instance;\n    return Invoke<CreateDomainEntryResponse>(request, options);\n}\n", "java": "public CreateDomainEntryResult createDomainEntry(CreateDomainEntryRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateDomainEntry(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Domain", "$$Entry", "$$Response", "\u2581Create", "$$Domain", "$$Entry", "$$(Create", "$$Domain", "$$Entry", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Domain", "$$Entry", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Domain", "$$Entry", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Domain", "$$Entry", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Domain", "$$Entry", "$$Result", "\u2581create", "$$Domain", "$$Entry", "$$(Create", "$$Domain", "$$Entry", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Domain", "$$Entry", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static int GetEncodedSize(Array values) {\n    int result = values.Length * 1;\n    for (int i = 0; i < values.Length; i++) {\n        result += GetEncodedSize(values.GetValue(i));\n    }\n    return result;\n}\n", "java": "public static int getEncodedSize(Object[] values) {\n    int result = values.length * 1;\n    for (Object value : values) {\n        result += getEncodedSize(value);\n    }\n    return result;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581Get", "$$Encode", "$$d", "$$Size", "$$(", "$$Array", "\u2581values", "$$)", "\u2581{"], ["\u2581int", "\u2581result", "\u2581=", "\u2581values", "$$.Length", "\u2581*", "\u25811", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581values", "$$.Length;", "\u2581i++)", "\u2581{"], ["\u2581result", "\u2581+=", "\u2581Get", "$$Encode", "$$d", "$$Size", "$$(", "$$values", "$$.Get", "$$Value", "$$(i", "$$))", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581get", "$$Encode", "$$d", "$$Size", "$$(Object", "$$[]", "\u2581values", "$$)", "\u2581{"], ["\u2581int", "\u2581result", "\u2581=", "\u2581values", "$$.length", "\u2581*", "\u25811", "$$;"], ["\u2581for", "\u2581(", "$$Object", "\u2581value", "\u2581:", "\u2581values", "$$)", "\u2581{"], ["\u2581result", "\u2581+=", "\u2581get", "$$Encode", "$$d", "$$Size", "$$(value", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]]}, {"cs": "public OpenNLPTokenizerFactory(IDictionary<string, string> args): base(args) {\n    sentenceModelFile = Require(args, SENTENCE_MODEL);\n    tokenizerModelFile = Require(args, TOKENIZER_MODEL);\n    if (args.Any()) {\n        throw new ArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "java": "public OpenNLPTokenizerFactory(Map<String,String> args) {\n    super(args);\n    sentenceModelFile = require(args, SENTENCE_MODEL);\n    tokenizerModelFile = require(args, TOKENIZER_MODEL);\n    if ( ! args.isEmpty()) {\n        throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Open", "$$N", "$$L", "$$P", "$$Token", "$$izer", "$$Factory(", "$$IDictionary<string,", "\u2581string>", "\u2581args):", "\u2581base(args)", "\u2581{"], ["\u2581s", "$$entence", "$$Model", "$$File", "\u2581=", "\u2581Re", "$$quire", "$$(args,", "\u2581S", "$$EN", "$$TE", "$$N", "$$C", "$$E_", "$$M", "$$O", "$$DE", "$$L", "$$)", "$$;"], ["\u2581token", "$$izer", "$$Model", "$$File", "\u2581=", "\u2581Re", "$$quire", "$$(args,", "\u2581T", "$$OK", "$$EN", "$$I", "$$Z", "$$ER", "$$_M", "$$O", "$$DE", "$$L", "$$)", "$$;"], ["\u2581if", "\u2581(arg", "$$s", "$$.A", "$$n", "$$y", "$$())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581ArgumentException(\"", "$$Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Open", "$$N", "$$L", "$$P", "$$Token", "$$izer", "$$Factory(", "$$Map<String,", "$$String>", "\u2581args)", "\u2581{"], ["\u2581super(", "$$arg", "$$s)", "$$;"], ["\u2581s", "$$entence", "$$Model", "$$File", "\u2581=", "\u2581re", "$$quire", "$$(args,", "\u2581S", "$$EN", "$$TE", "$$N", "$$C", "$$E_", "$$M", "$$O", "$$DE", "$$L", "$$)", "$$;"], ["\u2581token", "$$izer", "$$Model", "$$File", "\u2581=", "\u2581re", "$$quire", "$$(args,", "\u2581T", "$$OK", "$$EN", "$$I", "$$Z", "$$ER", "$$_M", "$$O", "$$DE", "$$L", "$$)", "$$;"], ["\u2581if", "\u2581(", "\u2581!", "\u2581arg", "$$s.", "$$isEmpty())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public sealed override int getInt(int index) {\n    checkIndex(index, libcore.io.SizeOf.INT);\n    return libcore.io.Memory.peekInt(backingArray, offset + index, _order);\n}\n", "java": "public final int getInt(int index) {\n    checkIndex(index, SizeOf.INT);\n    return Memory.peekInt(backingArray, offset + index, order);\n}\n", "cs_t": [["\u2581public", "\u2581sealed", "\u2581override", "\u2581int", "\u2581get", "$$Int", "$$(int", "\u2581index)", "\u2581{"], ["\u2581check", "$$Index(index", "$$,", "\u2581libcore.io.SizeOf", "$$.IN", "$$T", "$$)", "$$;"], ["\u2581return", "\u2581libcore.io.", "$$Mem", "$$ory", "$$.p", "$$eek", "$$Int", "$$(b", "$$ackingArray,", "\u2581offset", "\u2581+", "\u2581index,", "\u2581_", "$$order", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581int", "\u2581get", "$$Int", "$$(int", "\u2581index)", "\u2581{"], ["\u2581check", "$$Index(index", "$$,", "\u2581SizeOf", "$$.IN", "$$T", "$$)", "$$;"], ["\u2581return", "\u2581M", "$$em", "$$ory", "$$.p", "$$eek", "$$Int", "$$(b", "$$ackingArray,", "\u2581offset", "\u2581+", "\u2581index,", "\u2581", "$$order", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual IList<Head> GetNextHeads(char c) {\n    if (Matches(c)) {\n        return newHeads;\n    }\n    else {\n        return FileNameMatcher.EMPTY_HEAD_LIST;\n    }\n}\n", "java": "public List<Head> getNextHeads(char c) {\n    if (matches(c)) {\n        return newHeads;\n    }\n    return FileNameMatcher.EMPTY_HEAD_LIST;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581IList<", "$$Head", "$$>", "\u2581Get", "$$Next", "$$Head", "$$s(", "$$char", "\u2581c)", "\u2581{"], ["\u2581if", "\u2581(", "$$Match", "$$es", "$$(c", "$$))", "\u2581{"], ["\u2581return", "\u2581new", "$$Head", "$$s;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581File", "$$Name", "$$Match", "$$er.", "$$E", "$$MPTY", "$$_", "$$H", "$$E", "$$A", "$$D_", "$$L", "$$I", "$$ST", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List<", "$$Head", "$$>", "\u2581get", "$$Next", "$$Head", "$$s(", "$$char", "\u2581c)", "\u2581{"], ["\u2581if", "\u2581(m", "$$atch", "$$es", "$$(c", "$$))", "\u2581{"], ["\u2581return", "\u2581new", "$$Head", "$$s;"], ["\u2581}"], ["\u2581return", "\u2581File", "$$Name", "$$Match", "$$er.", "$$E", "$$MPTY", "$$_", "$$H", "$$E", "$$A", "$$D_", "$$L", "$$I", "$$ST", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.ByteBuffer putShort(short value) {\n    throw new System.NotImplementedException();\n}\n", "java": "public ByteBuffer putShort(short value) {\n    throw new ReadOnlyBufferException();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.ByteBuffer", "\u2581put", "$$Short(", "$$short", "\u2581value)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.NotImplemented", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ByteBuffer", "\u2581put", "$$Short(", "$$short", "\u2581value)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void writeUnshared(object @object) {\n    throw new System.NotImplementedException();\n}\n", "java": "public void writeUnshared(Object object) throws IOException {\n    writeObject(object, true);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581write", "$$Un", "$$sh", "$$are", "$$d(", "$$object", "\u2581@object)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.NotImplemented", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581write", "$$Un", "$$sh", "$$are", "$$d(", "$$Object", "\u2581object)", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581write", "$$Object", "$$(object", "$$,", "\u2581true", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int offsetByCodePoints(int index, int codePointOffset) {\n    return Sharpen.CharHelper.OffsetByCodePoints(value, 0, count, index, codePointOffset);\n}\n", "java": "public int offsetByCodePoints(int index, int codePointOffset) {\n    return Character.offsetByCodePoints(value, 0, count, index,codePointOffset);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581offset", "$$By", "$$Code", "$$Point", "$$s(", "$$int", "\u2581index,", "\u2581int", "\u2581code", "$$Point", "$$Offset", "$$)", "\u2581{"], ["\u2581return", "\u2581Sharpen.", "$$Char", "$$H", "$$el", "$$per", "$$.", "$$Offset", "$$By", "$$Code", "$$Point", "$$s(", "$$value", "$$,", "\u25810,", "\u2581count", "$$,", "\u2581index,", "\u2581code", "$$Point", "$$Offset", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581offset", "$$By", "$$Code", "$$Point", "$$s(", "$$int", "\u2581index,", "\u2581int", "\u2581code", "$$Point", "$$Offset", "$$)", "\u2581{"], ["\u2581return", "\u2581Character", "$$.", "$$offset", "$$By", "$$Code", "$$Point", "$$s(", "$$value", "$$,", "\u25810,", "\u2581count", "$$,", "\u2581index,", "$$code", "$$Point", "$$Offset", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static int GetUniqueAlt(IEnumerable<BitSet> altsets) {\n    BitSet all = GetAlts(altsets);\n    if (all.Cardinality() == 1) {\n        return all.NextSetBit(0);\n    }\n    return ATN.INVALID_ALT_NUMBER;\n}\n", "java": "public static int getUniqueAlt(Collection<BitSet> altsets) {\n    BitSet all = getAlts(altsets);\n    if ( all.cardinality()==1 ) return all.nextSetBit(0);\n    return ATN.INVALID_ALT_NUMBER;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581Get", "$$Uni", "$$qu", "$$e", "$$Alt", "$$(I", "$$Enum", "$$er", "$$able", "$$<", "$$Bit", "$$Set", "$$>", "\u2581alt", "$$set", "$$s)", "\u2581{"], ["\u2581B", "$$it", "$$Set", "\u2581all", "\u2581=", "\u2581Get", "$$Alt", "$$s(", "$$alt", "$$set", "$$s)", "$$;"], ["\u2581if", "\u2581(", "$$all", "$$.C", "$$ard", "$$inal", "$$ity", "$$()", "\u2581==", "\u25811)", "\u2581{"], ["\u2581return", "\u2581all", "$$.N", "$$ext", "$$Set", "$$Bit", "$$(", "$$0)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581ATN", "$$.", "$$INVALID", "$$_", "$$AL", "$$T_", "$$N", "$$UM", "$$B", "$$ER", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581get", "$$Uni", "$$qu", "$$e", "$$Alt", "$$(", "$$Collection<", "$$Bit", "$$Set", "$$>", "\u2581alt", "$$set", "$$s)", "\u2581{"], ["\u2581B", "$$it", "$$Set", "\u2581all", "\u2581=", "\u2581get", "$$Alt", "$$s(", "$$alt", "$$set", "$$s)", "$$;"], ["\u2581if", "\u2581(", "\u2581all", "$$.c", "$$ard", "$$inal", "$$ity", "$$()", "$$==", "$$1", "\u2581)", "\u2581return", "\u2581all", "$$.next", "$$Set", "$$Bit", "$$(", "$$0)", "$$;"], ["\u2581return", "\u2581ATN", "$$.", "$$INVALID", "$$_", "$$AL", "$$T_", "$$N", "$$UM", "$$B", "$$ER", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DateTime GetWhen() {\n    return Sharpen.Extensions.CreateDate(when);\n}\n", "java": "public Date getWhen() {\n    return new Date(when);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Date", "$$Time", "\u2581Get", "$$W", "$$h", "$$en", "$$()", "\u2581{"], ["\u2581return", "\u2581Sharpen.", "$$Ex", "$$tension", "$$s.", "$$Create", "$$Date", "$$(w", "$$h", "$$en", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Date", "\u2581get", "$$W", "$$h", "$$en", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581Date", "$$(w", "$$h", "$$en", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public RuleTagToken(string ruleName, int bypassTokenType, string label) {\n    if (string.IsNullOrEmpty(ruleName)) {\n        throw new ArgumentException(\"ruleName cannot be null or empty.\");\n    }\n    this.ruleName = ruleName;\n    this.bypassTokenType = bypassTokenType;\n    this.label = label;\n}\n", "java": "public RuleTagToken(String ruleName, int bypassTokenType, String label) {\n    if (ruleName == null || ruleName.isEmpty()) {\n        throw new IllegalArgumentException(\"ruleName cannot be null or empty.\");\n    }\n    this.ruleName = ruleName;\n    this.bypassTokenType = bypassTokenType;\n    this.label = label;\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Rule", "$$Tag", "$$Token", "$$(string", "\u2581rule", "$$Name,", "\u2581int", "\u2581b", "$$yp", "$$ass", "$$Token", "$$Type,", "\u2581string", "\u2581label", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$string", "$$.Is", "$$Null", "$$Or", "$$Empty", "$$(r", "$$ule", "$$Name", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581ArgumentException(\"", "$$rule", "$$Name", "\u2581c", "$$annot", "\u2581be", "\u2581null", "\u2581or", "\u2581e", "$$mpty", "$$.", "$$\")", "$$;"], ["\u2581}"], ["\u2581this.", "$$rule", "$$Name", "\u2581=", "\u2581rule", "$$Name", "$$;"], ["\u2581this.", "$$b", "$$yp", "$$ass", "$$Token", "$$Type", "\u2581=", "\u2581b", "$$yp", "$$ass", "$$Token", "$$Type", "$$;"], ["\u2581this.", "$$l", "$$abel", "\u2581=", "\u2581label", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Rule", "$$Tag", "$$Token", "$$(String", "\u2581rule", "$$Name,", "\u2581int", "\u2581b", "$$yp", "$$ass", "$$Token", "$$Type,", "\u2581String", "\u2581label", "$$)", "\u2581{"], ["\u2581if", "\u2581(r", "$$ule", "$$Name", "\u2581==", "\u2581null", "\u2581||", "\u2581rule", "$$Name", "$$.", "$$isEmpty())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$rule", "$$Name", "\u2581c", "$$annot", "\u2581be", "\u2581null", "\u2581or", "\u2581e", "$$mpty", "$$.", "$$\")", "$$;"], ["\u2581}"], ["\u2581this.", "$$rule", "$$Name", "\u2581=", "\u2581rule", "$$Name", "$$;"], ["\u2581this.", "$$b", "$$yp", "$$ass", "$$Token", "$$Type", "\u2581=", "\u2581b", "$$yp", "$$ass", "$$Token", "$$Type", "$$;"], ["\u2581this.", "$$l", "$$abel", "\u2581=", "\u2581label", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DisableOrganizationAdminAccountResponse DisableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DisableOrganizationAdminAccountRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DisableOrganizationAdminAccountResponseUnmarshaller.Instance;\n    return Invoke<DisableOrganizationAdminAccountResponse>(request, options);\n}\n", "java": "public DisableOrganizationAdminAccountResult disableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request) {\n    request = beforeClientExecution(request);\n    return executeDisableOrganizationAdminAccount(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Disable", "$$Organization", "$$Ad", "$$min", "$$Account", "$$Response", "\u2581Disable", "$$Organization", "$$Ad", "$$min", "$$Account", "$$(", "$$Disable", "$$Organization", "$$Ad", "$$min", "$$Account", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Disable", "$$Organization", "$$Ad", "$$min", "$$Account", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Disable", "$$Organization", "$$Ad", "$$min", "$$Account", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Disable", "$$Organization", "$$Ad", "$$min", "$$Account", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Disable", "$$Organization", "$$Ad", "$$min", "$$Account", "$$Result", "\u2581dis", "$$able", "$$Organization", "$$Ad", "$$min", "$$Account", "$$(", "$$Disable", "$$Organization", "$$Ad", "$$min", "$$Account", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Disable", "$$Organization", "$$Ad", "$$min", "$$Account", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateRoomResponse CreateRoom(CreateRoomRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateRoomRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateRoomResponseUnmarshaller.Instance;\n    return Invoke<CreateRoomResponse>(request, options);\n}\n", "java": "public CreateRoomResult createRoom(CreateRoomRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateRoom(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Room", "$$Response", "\u2581Create", "$$Room", "$$(Create", "$$Room", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Room", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Room", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Room", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Room", "$$Result", "\u2581create", "$$Room", "$$(Create", "$$Room", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Room", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteReplicationGroupResponse DeleteReplicationGroup(DeleteReplicationGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteReplicationGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteReplicationGroupResponseUnmarshaller.Instance;\n    return Invoke<DeleteReplicationGroupResponse>(request, options);\n}\n", "java": "public ReplicationGroup deleteReplicationGroup(DeleteReplicationGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteReplicationGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$ReplicationGroup", "$$Response", "\u2581Delete", "$$ReplicationGroup", "$$(Delete", "$$ReplicationGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$ReplicationGroup", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$ReplicationGroup", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$ReplicationGroup", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Re", "$$plication", "$$Group", "\u2581delete", "$$ReplicationGroup", "$$(Delete", "$$ReplicationGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$ReplicationGroup", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public java.nio.CharBuffer decode(java.nio.ByteBuffer buffer) {\n    try {\n        return newDecoder().onMalformedInput(java.nio.charset.CodingErrorAction.REPLACE).onUnmappableCharacter(java.nio.charset.CodingErrorAction.REPLACE).decode(buffer);\n    }\n    catch (java.nio.charset.CharacterCodingException ex) {\n        throw new System.Exception(ex.Message, ex);\n    }\n}\n", "java": "public final CharBuffer decode(ByteBuffer buffer) {\n    try {\n        return newDecoder().onMalformedInput(CodingErrorAction.REPLACE).onUnmappableCharacter(CodingErrorAction.REPLACE).decode(buffer);\n    }\n    catch (CharacterCodingException ex) {\n        throw new Error(ex.getMessage(), ex);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581java.nio.", "$$CharBuffer", "\u2581decode", "$$(", "$$java.", "$$nio.", "$$ByteBuffer", "\u2581buffer", "$$)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581return", "\u2581new", "$$Dec", "$$od", "$$er", "$$().", "$$on", "$$M", "$$al", "$$form", "$$ed", "$$Input", "$$(", "$$java.", "$$nio.", "$$char", "$$set", "$$.", "$$Co", "$$d", "$$ing", "$$Error", "$$Action", "$$.", "$$RE", "$$P", "$$LA", "$$CE", "$$).", "$$on", "$$Unm", "$$ap", "$$p", "$$able", "$$Character", "$$(", "$$java.", "$$nio.", "$$char", "$$set", "$$.", "$$Co", "$$d", "$$ing", "$$Error", "$$Action", "$$.", "$$RE", "$$P", "$$LA", "$$CE", "$$).", "$$d", "$$ecode", "$$(buffer", "$$)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$java.", "$$nio.", "$$char", "$$set", "$$.", "$$Character", "$$Co", "$$d", "$$ing", "$$Exception", "\u2581ex", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.", "$$Exception(", "$$ex", "$$.", "$$Message", "$$,", "\u2581ex", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581Char", "$$Buffer", "\u2581decode", "$$(", "$$ByteBuffer", "\u2581buffer", "$$)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581return", "\u2581new", "$$Dec", "$$od", "$$er", "$$().", "$$on", "$$M", "$$al", "$$form", "$$ed", "$$Input", "$$(", "$$Co", "$$d", "$$ing", "$$Error", "$$Action", "$$.", "$$RE", "$$P", "$$LA", "$$CE", "$$).", "$$on", "$$Unm", "$$ap", "$$p", "$$able", "$$Character", "$$(", "$$Co", "$$d", "$$ing", "$$Error", "$$Action", "$$.", "$$RE", "$$P", "$$LA", "$$CE", "$$).", "$$d", "$$ecode", "$$(buffer", "$$)", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$Character", "$$Co", "$$d", "$$ing", "$$Exception", "\u2581ex", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Error", "$$(", "$$ex", "$$.get", "$$Message", "$$(),", "\u2581ex", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public Distribution(string id, string status, string domainName) {\n    _id = id;\n    _status = status;\n    _domainName = domainName;\n}\n", "java": "public Distribution(String id, String status, String domainName) {\n    setId(id);\n    setStatus(status);\n    setDomainName(domainName);\n}\n", "cs_t": [["\u2581public", "\u2581D", "$$istribution", "$$(string", "\u2581id", "$$,", "\u2581string", "\u2581st", "$$atu", "$$s,", "\u2581string", "\u2581d", "$$omain", "$$Name)", "\u2581{"], ["\u2581_", "$$id", "\u2581=", "\u2581id", "$$;"], ["\u2581_", "$$st", "$$atu", "$$s", "\u2581=", "\u2581st", "$$atu", "$$s;"], ["\u2581_d", "$$omain", "$$Name", "\u2581=", "\u2581d", "$$omain", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$istribution", "$$(String", "\u2581id", "$$,", "\u2581String", "\u2581st", "$$atu", "$$s,", "\u2581String", "\u2581d", "$$omain", "$$Name)", "\u2581{"], ["\u2581set", "$$Id(", "$$id", "$$)", "$$;"], ["\u2581set", "$$Statu", "$$s(", "$$st", "$$atu", "$$s)", "$$;"], ["\u2581set", "$$Domain", "$$Name", "$$(d", "$$omain", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public sealed override object array() {\n    return protectedArray();\n}\n", "java": "public final double[] array() {\n    return protectedArray();\n}\n", "cs_t": [["\u2581public", "\u2581sealed", "\u2581override", "\u2581object", "\u2581array", "$$()", "\u2581{"], ["\u2581return", "\u2581pro", "$$te", "$$c", "$$ted", "$$Array", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581double", "$$[]", "\u2581array", "$$()", "\u2581{"], ["\u2581return", "\u2581pro", "$$te", "$$c", "$$ted", "$$Array", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public DateWindow1904Record(RecordInputStream in1) {\n    field_1_window = in1.ReadShort();\n}\n", "java": "public DateWindow1904Record(RecordInputStream in) {\n    field_1_window = in.readShort();\n}\n", "cs_t": [["\u2581public", "\u2581Date", "$$W", "$$indow", "$$19", "$$0", "$$4", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581field_1_", "$$w", "$$indow", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Date", "$$W", "$$indow", "$$19", "$$0", "$$4", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581field_1_", "$$w", "$$indow", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public DeleteDBSnapshotRequest(string dbSnapshotIdentifier) {\n    _dbSnapshotIdentifier = dbSnapshotIdentifier;\n}\n", "java": "public DeleteDBSnapshotRequest(String dBSnapshotIdentifier) {\n    setDBSnapshotIdentifier(dBSnapshotIdentifier);\n}\n", "cs_t": [["\u2581public", "\u2581Delete", "$$DB", "$$Snapshot", "$$Request(string", "\u2581db", "$$Snapshot", "$$Identifier", "$$)", "\u2581{"], ["\u2581_d", "$$b", "$$Snapshot", "$$Identifier", "\u2581=", "\u2581db", "$$Snapshot", "$$Identifier", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$DB", "$$Snapshot", "$$Request(String", "\u2581d", "$$B", "$$Snapshot", "$$Identifier", "$$)", "\u2581{"], ["\u2581set", "$$DB", "$$Snapshot", "$$Identifier", "$$(d", "$$B", "$$Snapshot", "$$Identifier", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ParserExtension GetExtension(string key) {\n    if (key == null || !this.extensions.TryGetValue(key, out ParserExtension value)) return null;\n    return value;\n}\n", "java": "public final ParserExtension getExtension(String key) {\n    return this.extensions.get(key);\n}\n", "cs_t": [["\u2581public", "\u2581Par", "$$ser", "$$Ex", "$$tension", "\u2581Get", "$$Ex", "$$tension", "$$(string", "\u2581key)", "\u2581{"], ["\u2581if", "\u2581(", "$$key", "\u2581==", "\u2581null", "\u2581||", "\u2581!", "$$this.", "$$ex", "$$tension", "$$s.", "$$TryGet", "$$Value(", "$$key", "$$,", "\u2581out", "\u2581Par", "$$ser", "$$Ex", "$$tension", "\u2581value", "$$))", "\u2581return", "\u2581null", "$$;"], ["\u2581return", "\u2581value", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581Par", "$$ser", "$$Ex", "$$tension", "\u2581get", "$$Ex", "$$tension", "$$(String", "\u2581key)", "\u2581{"], ["\u2581return", "\u2581this.", "$$ex", "$$tension", "$$s.get", "$$(key", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void Inform(IResourceLoader loader) {\n    try {\n        if (chunkerModelFile != null) {\n            OpenNLPOpsFactory.GetChunkerModel(chunkerModelFile, loader);\n        }\n    }\n    catch (IOException e) {\n        throw new ArgumentException(e.ToString(), e);\n    }\n}\n", "java": "public void inform(ResourceLoader loader) {\n    try {\n        if (chunkerModelFile != null) {\n            OpenNLPOpsFactory.getChunkerModel(chunkerModelFile, loader);\n        }\n    }\n    catch (IOException e) {\n        throw new IllegalArgumentException(e);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581In", "$$form", "$$(I", "$$Resource", "$$Load", "$$er", "\u2581load", "$$er)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581if", "\u2581(", "$$ch", "$$un", "$$ker", "$$Model", "$$File", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581", "$$Open", "$$N", "$$L", "$$PO", "$$p", "$$s", "$$Factory", "$$.Get", "$$Ch", "$$un", "$$ker", "$$Model", "$$(", "$$ch", "$$un", "$$ker", "$$Model", "$$File", "$$,", "\u2581load", "$$er)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581catch", "\u2581(IOException", "\u2581e)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$ArgumentException", "$$(e", "$$.ToString()", "$$,", "\u2581e)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581in", "$$form", "$$(", "$$Resource", "$$Load", "$$er", "\u2581load", "$$er)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581if", "\u2581(", "$$ch", "$$un", "$$ker", "$$Model", "$$File", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581", "$$Open", "$$N", "$$L", "$$PO", "$$p", "$$s", "$$Factory", "$$.get", "$$Ch", "$$un", "$$ker", "$$Model", "$$(", "$$ch", "$$un", "$$ker", "$$Model", "$$File", "$$,", "\u2581load", "$$er)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581catch", "\u2581(IOException", "\u2581e)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException", "$$(e", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual CompleteVaultLockResponse CompleteVaultLock(CompleteVaultLockRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CompleteVaultLockRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CompleteVaultLockResponseUnmarshaller.Instance;\n    return Invoke<CompleteVaultLockResponse>(request, options);\n}\n", "java": "public CompleteVaultLockResult completeVaultLock(CompleteVaultLockRequest request) {\n    request = beforeClientExecution(request);\n    return executeCompleteVaultLock(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Comp", "$$lete", "$$Vault", "$$Lock", "$$Response", "\u2581Comp", "$$lete", "$$Vault", "$$Lock", "$$(", "$$Comp", "$$lete", "$$Vault", "$$Lock", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Comp", "$$lete", "$$Vault", "$$Lock", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Comp", "$$lete", "$$Vault", "$$Lock", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Comp", "$$lete", "$$Vault", "$$Lock", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Comp", "$$lete", "$$Vault", "$$Lock", "$$Result", "\u2581comp", "$$lete", "$$Vault", "$$Lock", "$$(", "$$Comp", "$$lete", "$$Vault", "$$Lock", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Comp", "$$lete", "$$Vault", "$$Lock", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public int[] GetCharIntervals() {\n    return (int[])(Array)_points.Clone();\n}\n", "java": "public final int[] getCharIntervals() {\n    return points.clone();\n}\n", "cs_t": [["\u2581public", "\u2581int[]", "\u2581Get", "$$Char", "$$Inter", "$$val", "$$s()", "\u2581{"], ["\u2581return", "\u2581(int", "$$[]", "$$)", "$$(", "$$Array", "$$)", "$$_", "$$point", "$$s.", "$$Clone", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581int[]", "\u2581get", "$$Char", "$$Inter", "$$val", "$$s()", "\u2581{"], ["\u2581return", "\u2581po", "$$int", "$$s.", "$$c", "$$lone()", "$$;"], ["\u2581}"]]}, {"cs": "public long RamBytesUsed() {\n    return RamUsageEstimator.AlignObjectSize(3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF + 2 * RamUsageEstimator.NUM_BYTES_INT32)+ RamUsageEstimator.SizeOf(data)+ positions.RamBytesUsed()+ wordNums.RamBytesUsed();\n}\n", "java": "public long ramBytesUsed() {\n    return values.ramBytesUsed()+ super.ramBytesUsed()+ Long.BYTES+ RamUsageEstimator.NUM_BYTES_OBJECT_REF;\n}\n", "cs_t": [["\u2581public", "\u2581long", "\u2581Ram", "$$BytesUsed()", "\u2581{"], ["\u2581return", "\u2581RamUsageEstimator", "$$.A", "$$li", "$$gn", "$$Object", "$$Size", "$$(", "$$3", "\u2581*", "\u2581RamUsageEstimator.NUM_BYTES_", "$$OBJECT_", "$$REF", "\u2581+", "\u25812", "\u2581*", "\u2581RamUsageEstimator.NUM_BYTES_", "$$IN", "$$T", "$$32", "$$)", "$$+", "\u2581RamUsageEstimator", "$$.", "$$SizeOf", "$$(d", "$$ata", "$$)", "$$+", "\u2581position", "$$s.", "$$R", "$$am", "$$BytesUsed()", "$$+", "\u2581word", "$$Num", "$$s.", "$$R", "$$am", "$$BytesUsed()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581long", "\u2581ram", "$$BytesUsed()", "\u2581{"], ["\u2581return", "\u2581values", "$$.", "$$ram", "$$BytesUsed()", "$$+", "\u2581super.", "$$ram", "$$BytesUsed()", "$$+", "\u2581Long", "$$.B", "$$YTE", "$$S", "$$+", "\u2581RamUsageEstimator.NUM_BYTES_", "$$OBJECT_", "$$REF", "$$;"], ["\u2581}"]]}, {"cs": "public virtual RegisterInstancesWithLoadBalancerResponse RegisterInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = RegisterInstancesWithLoadBalancerRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = RegisterInstancesWithLoadBalancerResponseUnmarshaller.Instance;\n    return Invoke<RegisterInstancesWithLoadBalancerResponse>(request, options);\n}\n", "java": "public RegisterInstancesWithLoadBalancerResult registerInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request) {\n    request = beforeClientExecution(request);\n    return executeRegisterInstancesWithLoadBalancer(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Register", "$$Instances", "$$With", "$$LoadBalancer", "$$Response", "\u2581Register", "$$Instances", "$$With", "$$Load", "$$Balan", "$$c", "$$er(", "$$Re", "$$gister", "$$Instances", "$$With", "$$LoadBalancer", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Register", "$$Instances", "$$With", "$$LoadBalancer", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Register", "$$Instances", "$$With", "$$LoadBalancer", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Re", "$$gister", "$$Instances", "$$With", "$$LoadBalancer", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Register", "$$Instances", "$$With", "$$LoadBalancer", "$$Result", "\u2581re", "$$gister", "$$Instances", "$$With", "$$Load", "$$Balan", "$$c", "$$er(", "$$Re", "$$gister", "$$Instances", "$$With", "$$LoadBalancer", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Re", "$$gister", "$$Instances", "$$With", "$$LoadBalancer", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public DescribeClusterUserKubeconfigRequest(): base(\"CS\", \"2015-12-15\", \"DescribeClusterUserKubeconfig\", \"cs\", \"openAPI\") {\n    UriPattern = \"/k8s/[ClusterId]/user_config\";\n    Method = MethodType.GET;\n}\n", "java": "public DescribeClusterUserKubeconfigRequest() {\n    super(\"CS\", \"2015-12-15\", \"DescribeClusterUserKubeconfig\", \"csk\");\n    setUriPattern(\"/k8s/[ClusterId]/user_config\");\n    setMethod(MethodType.GET);\n}\n", "cs_t": [["\u2581public", "\u2581DescribeCluster", "$$User", "$$K", "$$ub", "$$ec", "$$on", "$$fig", "$$Request():", "\u2581base(\"", "$$C", "$$S", "$$\",", "\u2581\"201", "$$5", "$$-1", "$$2", "$$-1", "$$5", "$$\",", "\u2581\"", "$$Describe", "$$Cluster", "$$User", "$$K", "$$ub", "$$ec", "$$on", "$$fig", "$$\",", "\u2581\"c", "$$s\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581", "$$UriPattern", "\u2581=", "\u2581\"/", "$$k", "$$8", "$$s", "$$/[", "$$Cluster", "$$Id", "$$]/", "$$user", "$$_", "$$config", "$$\"", "$$;"], ["\u2581Method", "\u2581=", "\u2581Method", "$$Type.", "$$GE", "$$T", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581DescribeCluster", "$$User", "$$K", "$$ub", "$$ec", "$$on", "$$fig", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$C", "$$S", "$$\",", "\u2581\"201", "$$5", "$$-1", "$$2", "$$-1", "$$5", "$$\",", "\u2581\"", "$$Describe", "$$Cluster", "$$User", "$$K", "$$ub", "$$ec", "$$on", "$$fig", "$$\",", "\u2581\"c", "$$sk", "$$\")", "$$;"], ["\u2581set", "$$UriPattern", "$$(\"/", "$$k", "$$8", "$$s", "$$/[", "$$Cluster", "$$Id", "$$]/", "$$user", "$$_", "$$config", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.", "$$GE", "$$T", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public PrecisionRecord(RecordInputStream in1) {\n    field_1_precision = in1.ReadShort();\n}\n", "java": "public PrecisionRecord(RecordInputStream in) {\n    field_1_precision = in.readShort();\n}\n", "cs_t": [["\u2581public", "\u2581P", "$$re", "$$c", "$$ision", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581field_1_", "$$pre", "$$c", "$$ision", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$re", "$$c", "$$ision", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581field_1_", "$$pre", "$$c", "$$ision", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort(LeftRowGutter);\n    out1.WriteShort(TopColGutter);\n    out1.WriteShort(RowLevelMax);\n    out1.WriteShort(ColLevelMax);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort(getLeftRowGutter());\n    out.writeShort(getTopColGutter());\n    out.writeShort(getRowLevelMax());\n    out.writeShort(getColLevelMax());\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$Left", "$$Row", "$$G", "$$ut", "$$ter", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$To", "$$p", "$$Col", "$$G", "$$ut", "$$ter", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$Row", "$$Level", "$$Max", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$Col", "$$Level", "$$Max", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(get", "$$Left", "$$Row", "$$G", "$$ut", "$$ter", "$$())", "$$;"], ["\u2581out.writeShort(get", "$$To", "$$p", "$$Col", "$$G", "$$ut", "$$ter", "$$())", "$$;"], ["\u2581out.writeShort(get", "$$Row", "$$Level", "$$Max", "$$())", "$$;"], ["\u2581out.writeShort(get", "$$Col", "$$Level", "$$Max", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteVirtualInterfaceResponse DeleteVirtualInterface(DeleteVirtualInterfaceRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteVirtualInterfaceRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteVirtualInterfaceResponseUnmarshaller.Instance;\n    return Invoke<DeleteVirtualInterfaceResponse>(request, options);\n}\n", "java": "public DeleteVirtualInterfaceResult deleteVirtualInterface(DeleteVirtualInterfaceRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteVirtualInterface(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$VirtualInterface", "$$Response", "\u2581Delete", "$$VirtualInterface", "$$(Delete", "$$VirtualInterface", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$VirtualInterface", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$VirtualInterface", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$VirtualInterface", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$VirtualInterface", "$$Result", "\u2581delete", "$$VirtualInterface", "$$(Delete", "$$VirtualInterface", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$VirtualInterface", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public Entry GetEntry(String name) {\n    if (excludes.Contains(name)) {\n        throw new FileNotFoundException(name);\n    }\n    Entry entry = directory.GetEntry(name);\n    return WrapEntry(entry);\n}\n", "java": "public Entry getEntry(String name) throws FileNotFoundException {\n    if (excludes.contains(name)) {\n        throw new FileNotFoundException(name);\n    }\n    Entry entry = directory.getEntry(name);\n    return wrapEntry(entry);\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Entry", "\u2581Get", "$$Entry", "$$(String", "\u2581name)", "\u2581{"], ["\u2581if", "\u2581(", "$$ex", "$$clu", "$$d", "$$es", "$$.", "$$Contain", "$$s(", "$$name", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581File", "$$Not", "$$Found", "$$Exception", "$$(name", "$$)", "$$;"], ["\u2581}"], ["\u2581", "$$Entry", "\u2581entry", "\u2581=", "\u2581directory", "$$.Get", "$$Entry", "$$(name", "$$)", "$$;"], ["\u2581return", "\u2581W", "$$rap", "$$Entry", "$$(", "$$entry", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Entry", "\u2581get", "$$Entry", "$$(String", "\u2581name)", "\u2581throws", "\u2581File", "$$Not", "$$Found", "$$Exception", "\u2581{"], ["\u2581if", "\u2581(", "$$ex", "$$clu", "$$d", "$$es", "$$.contain", "$$s(", "$$name", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581File", "$$Not", "$$Found", "$$Exception", "$$(name", "$$)", "$$;"], ["\u2581}"], ["\u2581", "$$Entry", "\u2581entry", "\u2581=", "\u2581directory", "$$.get", "$$Entry", "$$(name", "$$)", "$$;"], ["\u2581return", "\u2581w", "$$rap", "$$Entry", "$$(", "$$entry", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[BACKUP]\\n\");\n    buffer.Append(\"    .backup          = \").Append(StringUtil.ToHexString(Backup)).Append(\"\\n\");\n    buffer.Append(\"[/BACKUP]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"[BACKUP]\\n\");\n    buffer.append(\"    .backup          = \").append(Integer.toHexString(getBackup())).append(\"\\n\");\n    buffer.append(\"[/BACKUP]\\n\");\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$B", "$$A", "$$CK", "$$U", "$$P", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$back", "$$up", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$String", "$$Util", "$$.To", "$$HexString(", "$$Backup", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"[/", "$$B", "$$A", "$$CK", "$$U", "$$P", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(\"[", "$$B", "$$A", "$$CK", "$$U", "$$P", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$back", "$$up", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$Integ", "$$er.", "$$to", "$$HexString(", "$$get", "$$Backup", "$$()))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"[/", "$$B", "$$A", "$$CK", "$$U", "$$P", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteVoiceConnectorOriginationResponse DeleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteVoiceConnectorOriginationRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteVoiceConnectorOriginationResponseUnmarshaller.Instance;\n    return Invoke<DeleteVoiceConnectorOriginationResponse>(request, options);\n}\n", "java": "public DeleteVoiceConnectorOriginationResult deleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteVoiceConnectorOrigination(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$VoiceConnector", "$$Ori", "$$g", "$$ination", "$$Response", "\u2581Delete", "$$VoiceConnector", "$$Ori", "$$g", "$$ination", "$$(Delete", "$$VoiceConnector", "$$Ori", "$$g", "$$ination", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$VoiceConnector", "$$Ori", "$$g", "$$ination", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$VoiceConnector", "$$Ori", "$$g", "$$ination", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$VoiceConnector", "$$Ori", "$$g", "$$ination", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$VoiceConnector", "$$Ori", "$$g", "$$ination", "$$Result", "\u2581delete", "$$VoiceConnector", "$$Ori", "$$g", "$$ination", "$$(Delete", "$$VoiceConnector", "$$Ori", "$$g", "$$ination", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$VoiceConnector", "$$Ori", "$$g", "$$ination", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual OpenStringBuilder Append(char c) {\n    Write(c);\n    return this;\n}\n", "java": "public Appendable append(char c) {\n    write(c);\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Open", "$$String", "$$Builder", "\u2581Ap", "$$pend(", "$$char", "\u2581c)", "\u2581{"], ["\u2581Write", "$$(c", "$$)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Ap", "$$pend", "$$able", "\u2581append(", "$$char", "\u2581c)", "\u2581{"], ["\u2581write", "$$(c", "$$)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public static long GenerationFromSegmentsFileName(string fileName) {\n    if (fileName.Equals(IndexFileNames.SEGMENTS, StringComparison.Ordinal)) {\n        return 0;\n    }\n    else if (fileName.StartsWith(IndexFileNames.SEGMENTS, StringComparison.Ordinal)) {\n        return Number.Parse(fileName.Substring(1 + IndexFileNames.SEGMENTS.Length), Character.MaxRadix);\n    }\n    else {\n        throw new System.ArgumentException(\"fileName \\\"\" + fileName + \"\\\" is not a segments file\");\n    }\n}\n", "java": "public static long generationFromSegmentsFileName(String fileName) {\n    if (fileName.equals(OLD_SEGMENTS_GEN)) {\n        throw new IllegalArgumentException(\"\\\"\" + OLD_SEGMENTS_GEN + \"\\\" is not a valid segment file name since 4.0\");\n    }\n    else if (fileName.equals(IndexFileNames.SEGMENTS)) {\n        return 0;\n    }\n    else if (fileName.startsWith(IndexFileNames.SEGMENTS)) {\n        return Long.parseLong(fileName.substring(1+IndexFileNames.SEGMENTS.length()),Character.MAX_RADIX);\n    }\n    else {\n        throw new IllegalArgumentException(\"fileName \\\"\" + fileName + \"\\\" is not a segments file\");\n    }\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581long", "\u2581G", "$$en", "$$eration", "$$From", "$$Segment", "$$s", "$$File", "$$Name", "$$(string", "\u2581file", "$$Name)", "\u2581{"], ["\u2581if", "\u2581(", "$$file", "$$Name", "$$.Equals(", "$$Index", "$$File", "$$Names", "$$.", "$$SE", "$$G", "$$M", "$$EN", "$$T", "$$S", "$$,", "\u2581StringComparison.Ordinal", "$$))", "\u2581{"], ["\u2581return", "\u25810;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(", "$$file", "$$Name", "$$.", "$$Start", "$$sWith", "$$(", "$$Index", "$$File", "$$Names", "$$.", "$$SE", "$$G", "$$M", "$$EN", "$$T", "$$S", "$$,", "\u2581StringComparison.Ordinal", "$$))", "\u2581{"], ["\u2581return", "\u2581Number", "$$.", "$$Parse", "$$(", "$$file", "$$Name", "$$.Sub", "$$string(", "$$1", "\u2581+", "\u2581Index", "$$File", "$$Names", "$$.", "$$SE", "$$G", "$$M", "$$EN", "$$T", "$$S", "$$.Length", "$$),", "\u2581Character", "$$.", "$$Max", "$$R", "$$ad", "$$i", "$$x", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"", "$$file", "$$Name", "\u2581", "$$\\\"", "$$\"", "\u2581+", "\u2581file", "$$Name", "\u2581+", "\u2581\"", "$$\\\"", "\u2581is", "\u2581not", "\u2581a", "\u2581se", "$$gment", "$$s", "\u2581file", "$$\")", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581long", "\u2581gen", "$$eration", "$$From", "$$Segment", "$$s", "$$File", "$$Name", "$$(String", "\u2581file", "$$Name)", "\u2581{"], ["\u2581if", "\u2581(", "$$file", "$$Name", "$$.equals(", "$$O", "$$L", "$$D_", "$$SE", "$$G", "$$M", "$$EN", "$$T", "$$S_", "$$G", "$$EN", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$\\\"", "$$\"", "\u2581+", "\u2581", "$$O", "$$L", "$$D_", "$$SE", "$$G", "$$M", "$$EN", "$$T", "$$S_", "$$G", "$$EN", "\u2581+", "\u2581\"", "$$\\\"", "\u2581is", "\u2581not", "\u2581a", "\u2581val", "$$id", "\u2581se", "$$gment", "\u2581file", "\u2581name", "\u2581s", "$$in", "$$ce", "\u25814", "$$.0", "$$\")", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(", "$$file", "$$Name", "$$.equals(", "$$Index", "$$File", "$$Names", "$$.", "$$SE", "$$G", "$$M", "$$EN", "$$T", "$$S", "$$))", "\u2581{"], ["\u2581return", "\u25810;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(", "$$file", "$$Name", "$$.", "$$start", "$$sWith", "$$(", "$$Index", "$$File", "$$Names", "$$.", "$$SE", "$$G", "$$M", "$$EN", "$$T", "$$S", "$$))", "\u2581{"], ["\u2581return", "\u2581Long", "$$.", "$$parse", "$$Long", "$$(", "$$file", "$$Name", "$$.sub", "$$string(", "$$1", "$$+", "$$Index", "$$File", "$$Names", "$$.", "$$SE", "$$G", "$$M", "$$EN", "$$T", "$$S", "$$.length", "$$())", "$$,", "$$Character", "$$.M", "$$AX_", "$$R", "$$AD", "$$I", "$$X", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$file", "$$Name", "\u2581", "$$\\\"", "$$\"", "\u2581+", "\u2581file", "$$Name", "\u2581+", "\u2581\"", "$$\\\"", "\u2581is", "\u2581not", "\u2581a", "\u2581se", "$$gment", "$$s", "\u2581file", "$$\")", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public static NGit.Transport.TagOpt FromOption(string o) {\n    if (o == null || o.Length == 0) {\n        return AUTO_FOLLOW;\n    }\n    foreach (NGit.Transport.TagOpt tagopt in Values()) {\n        if (tagopt.Option().Equals(o)) {\n            return tagopt;\n        }\n    }\n    throw new ArgumentException(MessageFormat.Format(JGitText.Get().invalidTagOption,o));\n}\n", "java": "public static TagOpt fromOption(String o) {\n    if (o == null || o.length() == 0)return AUTO_FOLLOW;\n    for (TagOpt tagopt : values()) {\n        if (tagopt.option().equals(o))return tagopt;\n    }\n    throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidTagOption, o));\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581NGit.", "$$Transport", "$$.", "$$Tag", "$$O", "$$pt", "\u2581", "$$From", "$$Option", "$$(string", "\u2581o)", "\u2581{"], ["\u2581if", "\u2581(o", "\u2581==", "\u2581null", "\u2581||", "\u2581o", "$$.Length", "\u2581==", "\u25810)", "\u2581{"], ["\u2581return", "\u2581A", "$$UT", "$$O_", "$$F", "$$O", "$$L", "$$LOW", "$$;"], ["\u2581}"], ["\u2581foreach", "\u2581(", "$$N", "$$Git", "$$.", "$$Transport", "$$.", "$$Tag", "$$O", "$$pt", "\u2581tag", "$$o", "$$pt", "\u2581in", "\u2581V", "$$alues", "$$())", "\u2581{"], ["\u2581if", "\u2581(", "$$tag", "$$o", "$$pt", "$$.", "$$Option", "$$().", "$$E", "$$quals(", "$$o", "$$))", "\u2581{"], ["\u2581return", "\u2581tag", "$$o", "$$pt", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581", "$$ArgumentException", "$$(", "$$MessageFormat", "$$.Format", "$$(JGitText.Get", "$$().", "$$in", "$$valid", "$$Tag", "$$Option", "$$,", "$$o", "$$))", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581", "$$Tag", "$$O", "$$pt", "\u2581from", "$$Option", "$$(String", "\u2581o)", "\u2581{"], ["\u2581if", "\u2581(o", "\u2581==", "\u2581null", "\u2581||", "\u2581o", "$$.length()", "\u2581==", "\u25810)return", "\u2581A", "$$UT", "$$O_", "$$F", "$$O", "$$L", "$$LOW", "$$;"], ["\u2581for", "\u2581(", "$$Tag", "$$O", "$$pt", "\u2581tag", "$$o", "$$pt", "\u2581:", "\u2581values", "$$())", "\u2581{"], ["\u2581if", "\u2581(", "$$tag", "$$o", "$$pt", "$$.", "$$o", "$$ption", "$$().", "$$equals(", "$$o", "$$))return", "\u2581tag", "$$o", "$$pt", "$$;"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException", "$$(", "$$MessageFormat", "$$.format", "$$(JGitText", "$$.get().", "$$in", "$$valid", "$$Tag", "$$Option", "$$,", "\u2581o", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StartContentModerationResponse StartContentModeration(StartContentModerationRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = StartContentModerationRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = StartContentModerationResponseUnmarshaller.Instance;\n    return Invoke<StartContentModerationResponse>(request, options);\n}\n", "java": "public StartContentModerationResult startContentModeration(StartContentModerationRequest request) {\n    request = beforeClientExecution(request);\n    return executeStartContentModeration(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Start", "$$Content", "$$Mod", "$$eration", "$$Response", "\u2581Start", "$$Content", "$$Mod", "$$eration", "$$(Start", "$$Content", "$$Mod", "$$eration", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Start", "$$Content", "$$Mod", "$$eration", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Start", "$$Content", "$$Mod", "$$eration", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Start", "$$Content", "$$Mod", "$$eration", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Start", "$$Content", "$$Mod", "$$eration", "$$Result", "\u2581start", "$$Content", "$$Mod", "$$eration", "$$(Start", "$$Content", "$$Mod", "$$eration", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Start", "$$Content", "$$Mod", "$$eration", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static string quoteReplacement(string s) {\n    java.lang.StringBuilder result = new java.lang.StringBuilder(s.Length);\n    {\n        for (int i = 0; i < s.Length; i++) {\n            char c = s[i];\n            if (c == '\\\\' || c == '$') {\n                result.append('\\\\');\n            }\n            result.append(c);\n        }\n    }\n    return result.ToString();\n}\n", "java": "public static String quoteReplacement(String s) {\n    StringBuilder result = new StringBuilder(s.length());\n    for (int i = 0; i < s.length(); i++) {\n        char c = s.charAt(i);\n        if (c == '\\\\' || c == '$') {\n            result.append('\\\\');\n        }\n        result.append(c);\n    }\n    return result.toString();\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581string", "\u2581qu", "$$ote", "$$Re", "$$placement", "$$(string", "\u2581s)", "\u2581{"], ["\u2581java.lang.String", "$$Builder", "\u2581result", "\u2581=", "\u2581new", "\u2581java.lang.String", "$$Builder", "$$(", "$$s.Length", "$$)", "$$;"], ["\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581s", "$$.Length;", "\u2581i++)", "\u2581{"], ["\u2581char", "\u2581c", "\u2581=", "\u2581s", "$$[i]", "$$;"], ["\u2581if", "\u2581(c", "\u2581==", "\u2581'", "$$\\", "$$\\", "$$'", "\u2581||", "\u2581c", "\u2581==", "\u2581'", "$$$", "$$')", "\u2581{"], ["\u2581result", "$$.append('", "$$\\", "$$\\", "$$')", "$$;"], ["\u2581}"], ["\u2581result", "$$.append(", "$$c", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581result", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581String", "\u2581qu", "$$ote", "$$Re", "$$placement", "$$(String", "\u2581s)", "\u2581{"], ["\u2581StringBuilder", "\u2581result", "\u2581=", "\u2581new", "\u2581StringBuilder(", "$$s.length", "$$())", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581s", "$$.length()", "$$;", "\u2581i++)", "\u2581{"], ["\u2581char", "\u2581c", "\u2581=", "\u2581s", "$$.char", "$$At", "$$(i", "$$)", "$$;"], ["\u2581if", "\u2581(c", "\u2581==", "\u2581'", "$$\\", "$$\\", "$$'", "\u2581||", "\u2581c", "\u2581==", "\u2581'", "$$$", "$$')", "\u2581{"], ["\u2581result", "$$.append('", "$$\\", "$$\\", "$$')", "$$;"], ["\u2581}"], ["\u2581result", "$$.append(", "$$c", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public void set(V newValue) {\n    value = newValue;\n}\n", "java": "public final void set(V newValue) {\n    value = newValue;\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581set", "$$(", "$$V", "\u2581new", "$$Value)", "\u2581{"], ["\u2581value", "\u2581=", "\u2581new", "$$Value", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581void", "\u2581set", "$$(", "$$V", "\u2581new", "$$Value)", "\u2581{"], ["\u2581value", "\u2581=", "\u2581new", "$$Value", "$$;"], ["\u2581}"]]}, {"cs": "public QueryParserTokenManager(ICharStream stream) {\n    InitBlock();\n    m_input_stream = stream;\n}\n", "java": "public QueryParserTokenManager(CharStream stream) {\n    input_stream = stream;\n}\n", "cs_t": [["\u2581public", "\u2581Query", "$$Parser", "$$Token", "$$Man", "$$ag", "$$er(", "$$I", "$$Char", "$$Stream", "\u2581stream", "$$)", "\u2581{"], ["\u2581In", "$$it", "$$Block", "$$()", "$$;"], ["\u2581m_", "$$input", "$$_", "$$stream", "\u2581=", "\u2581stream", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Query", "$$Parser", "$$Token", "$$Man", "$$ag", "$$er(", "$$Char", "$$Stream", "\u2581stream", "$$)", "\u2581{"], ["\u2581input", "$$_", "$$stream", "\u2581=", "\u2581stream", "$$;"], ["\u2581}"]]}, {"cs": "public long ValueFor(double elapsed) {\n    double val;\n    if (modBy == 0)val = elapsed / factor;\n    elseval = elapsed / factor % modBy;\n    if (type == '0')return (long)Math.Round(val);\n    elsereturn (long)val;\n}\n", "java": "public long valueFor(double elapsed) {\n    double val;\n    if (modBy == 0)val = elapsed / factor;\n    elseval = elapsed / factor % modBy;\n    if (type == '0')return Math.round(val);\n    elsereturn (long) val;\n}\n", "cs_t": [["\u2581public", "\u2581long", "\u2581", "$$Value", "$$For", "$$(double", "\u2581el", "$$ap", "$$sed", "$$)", "\u2581{"], ["\u2581double", "\u2581val", "$$;"], ["\u2581if", "\u2581(m", "$$od", "$$By", "\u2581==", "\u25810)", "$$val", "\u2581=", "\u2581el", "$$ap", "$$sed", "\u2581/", "\u2581fa", "$$ctor", "$$;"], ["\u2581else", "$$val", "\u2581=", "\u2581el", "$$ap", "$$sed", "\u2581/", "\u2581fa", "$$ctor", "\u2581%", "\u2581mod", "$$By", "$$;"], ["\u2581if", "\u2581(t", "$$ype", "\u2581==", "\u2581'", "$$0", "$$')", "$$return", "\u2581(", "$$long", "$$)", "$$Math.", "$$Ro", "$$un", "$$d(", "$$val", "$$)", "$$;"], ["\u2581else", "$$return", "\u2581(", "$$long", "$$)", "$$val", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581long", "\u2581value", "$$For", "$$(double", "\u2581el", "$$ap", "$$sed", "$$)", "\u2581{"], ["\u2581double", "\u2581val", "$$;"], ["\u2581if", "\u2581(m", "$$od", "$$By", "\u2581==", "\u25810)", "$$val", "\u2581=", "\u2581el", "$$ap", "$$sed", "\u2581/", "\u2581fa", "$$ctor", "$$;"], ["\u2581else", "$$val", "\u2581=", "\u2581el", "$$ap", "$$sed", "\u2581/", "\u2581fa", "$$ctor", "\u2581%", "\u2581mod", "$$By", "$$;"], ["\u2581if", "\u2581(t", "$$ype", "\u2581==", "\u2581'", "$$0", "$$')", "$$return", "\u2581Math.", "$$ro", "$$un", "$$d(", "$$val", "$$)", "$$;"], ["\u2581else", "$$return", "\u2581(", "$$long", "$$)", "\u2581val", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.LongBuffer get(long[] dst, int dstOffset, int longCount) {\n    byteBuffer.limit(_limit * libcore.io.SizeOf.LONG);\n    byteBuffer.position(_position * libcore.io.SizeOf.LONG);\n    if (byteBuffer is java.nio.DirectByteBuffer) {\n        ((java.nio.DirectByteBuffer)byteBuffer).get(dst, dstOffset, longCount);\n    }\n    else {\n        ((java.nio.HeapByteBuffer)byteBuffer).get(dst, dstOffset, longCount);\n    }\n    this._position += longCount;\n    return this;\n}\n", "java": "public LongBuffer get(long[] dst, int dstOffset, int longCount) {\n    byteBuffer.limit(limit * SizeOf.LONG);\n    byteBuffer.position(position * SizeOf.LONG);\n    if (byteBuffer instanceof DirectByteBuffer) {\n        ((DirectByteBuffer) byteBuffer).get(dst, dstOffset, longCount);\n    }\n    else {\n        ((HeapByteBuffer) byteBuffer).get(dst, dstOffset, longCount);\n    }\n    this.position += longCount;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$Long", "$$Buffer", "\u2581get", "$$(long[]", "\u2581dst", "$$,", "\u2581int", "\u2581dstOffset,", "\u2581int", "\u2581long", "$$Count)", "\u2581{"], ["\u2581byteBuffer.", "$$limit", "$$(_", "$$limit", "\u2581*", "\u2581libcore.io.SizeOf", "$$.", "$$L", "$$ON", "$$G", "$$)", "$$;"], ["\u2581byteBuffer.", "$$position", "$$(_", "$$position", "\u2581*", "\u2581libcore.io.SizeOf", "$$.", "$$L", "$$ON", "$$G", "$$)", "$$;"], ["\u2581if", "\u2581(byte", "$$Buffer", "\u2581is", "\u2581java.nio.", "$$Direct", "$$ByteBuffer", "$$)", "\u2581{"], ["\u2581((", "$$java.", "$$nio.", "$$Direct", "$$ByteBuffer", "$$)", "$$byte", "$$Buffer", "$$)", "$$.get", "$$(d", "$$st", "$$,", "\u2581dstOffset,", "\u2581long", "$$Count)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581((", "$$java.", "$$nio.", "$$He", "$$ap", "$$ByteBuffer", "$$)", "$$byte", "$$Buffer", "$$)", "$$.get", "$$(d", "$$st", "$$,", "\u2581dstOffset,", "\u2581long", "$$Count)", "$$;"], ["\u2581}"], ["\u2581this._", "$$position", "\u2581+=", "\u2581long", "$$Count", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Long", "$$Buffer", "\u2581get", "$$(long[]", "\u2581dst", "$$,", "\u2581int", "\u2581dstOffset,", "\u2581int", "\u2581long", "$$Count)", "\u2581{"], ["\u2581byteBuffer.", "$$limit", "$$(", "$$limit", "\u2581*", "\u2581SizeOf", "$$.", "$$L", "$$ON", "$$G", "$$)", "$$;"], ["\u2581byteBuffer.", "$$position", "$$(", "$$position", "\u2581*", "\u2581SizeOf", "$$.", "$$L", "$$ON", "$$G", "$$)", "$$;"], ["\u2581if", "\u2581(byte", "$$Buffer", "\u2581instanceof", "\u2581D", "$$ire", "$$ct", "$$ByteBuffer", "$$)", "\u2581{"], ["\u2581((", "$$Direct", "$$ByteBuffer", "$$)", "\u2581byteBuffer", "$$)", "$$.get", "$$(d", "$$st", "$$,", "\u2581dstOffset,", "\u2581long", "$$Count)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581((", "$$He", "$$ap", "$$ByteBuffer", "$$)", "\u2581byteBuffer", "$$)", "$$.get", "$$(d", "$$st", "$$,", "\u2581dstOffset,", "\u2581long", "$$Count)", "$$;"], ["\u2581}"], ["\u2581this.", "$$position", "\u2581+=", "\u2581long", "$$Count", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void RemoveErrorListeners() {\n    _listeners = new IAntlrErrorListener<Symbol>[0];\n}\n", "java": "public void removeErrorListeners() {\n    _listeners.clear();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Remove", "$$Error", "$$Listener", "$$s()", "\u2581{"], ["\u2581_", "$$li", "$$s", "$$tener", "$$s", "\u2581=", "\u2581new", "\u2581I", "$$An", "$$t", "$$lr", "$$Error", "$$Listener", "$$<", "$$S", "$$ymbol", "$$>", "$$[0]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581remove", "$$Error", "$$Listener", "$$s()", "\u2581{"], ["\u2581_", "$$li", "$$s", "$$tener", "$$s.", "$$c", "$$lear()", "$$;"], ["\u2581}"]]}, {"cs": "public CommonTokenStream(ITokenSource tokenSource, int channel): this(tokenSource) {\n    this.channel = channel;\n}\n", "java": "public CommonTokenStream(TokenSource tokenSource, int channel) {\n    this(tokenSource);\n    this.channel = channel;\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Common", "$$TokenStream", "$$(I", "$$Token", "$$Source", "\u2581token", "$$Source", "$$,", "\u2581int", "\u2581ch", "$$annel", "$$):", "\u2581this", "$$(", "$$token", "$$Source", "$$)", "\u2581{"], ["\u2581this.", "$$ch", "$$annel", "\u2581=", "\u2581ch", "$$annel", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Common", "$$TokenStream", "$$(", "$$Token", "$$Source", "\u2581token", "$$Source", "$$,", "\u2581int", "\u2581ch", "$$annel", "$$)", "\u2581{"], ["\u2581this", "$$(", "$$token", "$$Source", "$$)", "$$;"], ["\u2581this.", "$$ch", "$$annel", "\u2581=", "\u2581ch", "$$annel", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListObjectPoliciesResponse ListObjectPolicies(ListObjectPoliciesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListObjectPoliciesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListObjectPoliciesResponseUnmarshaller.Instance;\n    return Invoke<ListObjectPoliciesResponse>(request, options);\n}\n", "java": "public ListObjectPoliciesResult listObjectPolicies(ListObjectPoliciesRequest request) {\n    request = beforeClientExecution(request);\n    return executeListObjectPolicies(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Object", "$$Policies", "$$Response", "\u2581List", "$$Object", "$$Policies", "$$(List", "$$Object", "$$Policies", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Object", "$$Policies", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Object", "$$Policies", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Object", "$$Policies", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Object", "$$Policies", "$$Result", "\u2581list", "$$Object", "$$Policies", "$$(List", "$$Object", "$$Policies", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Object", "$$Policies", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ObjectToPack(AnyObjectId src, int type) : base(src) {\n    flags = type << TYPE_SHIFT;\n}\n", "java": "public ObjectToPack(AnyObjectId src, int type) {\n    super(src);\n    flags = type << TYPE_SHIFT;\n}\n", "cs_t": [["\u2581public", "\u2581Object", "$$To", "$$Pack", "$$(", "$$AnyObjectId", "\u2581src", "$$,", "\u2581int", "\u2581type", "$$)", "\u2581:", "\u2581base", "$$(src", "$$)", "\u2581{"], ["\u2581flag", "$$s", "\u2581=", "\u2581type", "\u2581<<", "\u2581T", "$$YP", "$$E_", "$$SH", "$$I", "$$F", "$$T", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Object", "$$To", "$$Pack", "$$(", "$$AnyObjectId", "\u2581src", "$$,", "\u2581int", "\u2581type", "$$)", "\u2581{"], ["\u2581super(", "$$s", "$$rc", "$$)", "$$;"], ["\u2581flag", "$$s", "\u2581=", "\u2581type", "\u2581<<", "\u2581T", "$$YP", "$$E_", "$$SH", "$$I", "$$F", "$$T", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int Stem(char[] s, int len) {\n    int numVowels_Renamed = NumVowels(s, len);\n    for (int i = 0; i < affixes.Length; i++) {\n        Affix affix = affixes[i];\n        if (numVowels_Renamed > affix.vc && len >= affix.affix.Length + 3 && StemmerUtil.EndsWith(s, len, affix.affix)) {\n            len -= affix.affix.Length;\n            return affix.palatalizes ? Unpalatalize(s, len) : len;\n        }\n    }\n    return len;\n}\n", "java": "public int stem(char s[], int len) {\n    int numVowels = numVowels(s, len);\n    for (int i = 0; i < affixes.length; i++) {\n        Affix affix = affixes[i];\n        if (numVowels > affix.vc && len >= affix.affix.length + 3 && endsWith(s, len, affix.affix)) {\n            len -= affix.affix.length;\n            return affix.palatalizes ? unpalatalize(s, len) : len;\n        }\n    }\n    return len;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581S", "$$tem", "$$(char[]", "\u2581s", "$$,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581int", "\u2581num", "$$V", "$$ow", "$$el", "$$s", "$$_", "$$Ren", "$$ame", "$$d", "\u2581=", "\u2581Num", "$$V", "$$ow", "$$el", "$$s(", "$$s,", "\u2581len)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581a", "$$f", "$$fix", "$$es", "$$.Length;", "\u2581i++)", "\u2581{"], ["\u2581A", "$$f", "$$fix", "\u2581a", "$$f", "$$fix", "\u2581=", "\u2581a", "$$f", "$$fix", "$$es", "$$[i]", "$$;"], ["\u2581if", "\u2581(n", "$$um", "$$V", "$$ow", "$$el", "$$s", "$$_", "$$Ren", "$$ame", "$$d", "\u2581>", "\u2581a", "$$f", "$$fix", "$$.", "$$v", "$$c", "\u2581&&", "\u2581len", "\u2581>=", "\u2581a", "$$f", "$$fix", "$$.", "$$af", "$$fix", "$$.Length", "\u2581+", "\u25813", "\u2581&&", "\u2581S", "$$tem", "$$mer", "$$Util.", "$$End", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581a", "$$f", "$$fix", "$$.", "$$af", "$$fix", "$$))", "\u2581{"], ["\u2581len", "\u2581-=", "\u2581a", "$$f", "$$fix", "$$.", "$$af", "$$fix", "$$.Length;"], ["\u2581return", "\u2581a", "$$f", "$$fix", "$$.p", "$$al", "$$at", "$$al", "$$iz", "$$es", "\u2581?", "\u2581Un", "$$p", "$$al", "$$at", "$$al", "$$ize", "$$(s,", "\u2581len)", "\u2581:", "\u2581len", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581len", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581s", "$$tem", "$$(char", "\u2581s", "$$[]", "$$,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581int", "\u2581num", "$$V", "$$ow", "$$el", "$$s", "\u2581=", "\u2581num", "$$V", "$$ow", "$$el", "$$s(", "$$s,", "\u2581len)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581a", "$$f", "$$fix", "$$es", "$$.length;", "\u2581i++)", "\u2581{"], ["\u2581A", "$$f", "$$fix", "\u2581a", "$$f", "$$fix", "\u2581=", "\u2581a", "$$f", "$$fix", "$$es", "$$[i]", "$$;"], ["\u2581if", "\u2581(n", "$$um", "$$V", "$$ow", "$$el", "$$s", "\u2581>", "\u2581a", "$$f", "$$fix", "$$.", "$$v", "$$c", "\u2581&&", "\u2581len", "\u2581>=", "\u2581a", "$$f", "$$fix", "$$.", "$$af", "$$fix", "$$.length", "\u2581+", "\u25813", "\u2581&&", "\u2581end", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581a", "$$f", "$$fix", "$$.", "$$af", "$$fix", "$$))", "\u2581{"], ["\u2581len", "\u2581-=", "\u2581a", "$$f", "$$fix", "$$.", "$$af", "$$fix", "$$.length;"], ["\u2581return", "\u2581a", "$$f", "$$fix", "$$.p", "$$al", "$$at", "$$al", "$$iz", "$$es", "\u2581?", "\u2581un", "$$p", "$$al", "$$at", "$$al", "$$ize", "$$(s,", "\u2581len)", "\u2581:", "\u2581len", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581len", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void Recover(Parser recognizer, RecognitionException e) {\n    if (lastErrorIndex == ((ITokenStream)recognizer.InputStream).Index && lastErrorStates != null && lastErrorStates.Contains(recognizer.State)) {\n        recognizer.Consume();\n    }\n    lastErrorIndex = ((ITokenStream)recognizer.InputStream).Index;\n    if (lastErrorStates == null) {\n        lastErrorStates = new IntervalSet();\n    }\n    lastErrorStates.Add(recognizer.State);\n    IntervalSet followSet = GetErrorRecoverySet(recognizer);\n    ConsumeUntil(recognizer, followSet);\n}\n", "java": "public void recover(Parser recognizer, RecognitionException e) {\n    if ( lastErrorIndex==recognizer.getInputStream().index() &&lastErrorStates != null &&lastErrorStates.contains(recognizer.getState()) ) {\n        recognizer.consume();\n    }\n    lastErrorIndex = recognizer.getInputStream().index();\n    if ( lastErrorStates==null ) lastErrorStates = new IntervalSet();\n    lastErrorStates.add(recognizer.getState());\n    IntervalSet followSet = getErrorRecoverySet(recognizer);\n    consumeUntil(recognizer, followSet);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581", "$$Reco", "$$ver", "$$(", "$$Parser", "\u2581re", "$$cognizer", "$$,", "\u2581", "$$Recogn", "$$ition", "$$Exception", "\u2581e)", "\u2581{"], ["\u2581if", "\u2581(", "$$last", "$$Error", "$$Index", "\u2581==", "\u2581((", "$$I", "$$TokenStream", "$$)", "$$re", "$$co", "$$gn", "$$iz", "$$er.", "$$InputStream", "$$).", "$$Index", "\u2581&&", "\u2581last", "$$Error", "$$St", "$$ates", "\u2581!=", "\u2581null", "\u2581&&", "\u2581last", "$$Error", "$$St", "$$ates", "$$.", "$$Contain", "$$s", "$$(re", "$$co", "$$gn", "$$iz", "$$er.", "$$State", "$$))", "\u2581{"], ["\u2581re", "$$co", "$$gn", "$$iz", "$$er.", "$$Con", "$$sume", "$$()", "$$;"], ["\u2581}"], ["\u2581last", "$$Error", "$$Index", "\u2581=", "\u2581((", "$$I", "$$TokenStream", "$$)", "$$re", "$$co", "$$gn", "$$iz", "$$er.", "$$InputStream", "$$).", "$$Index", "$$;"], ["\u2581if", "\u2581(", "$$last", "$$Error", "$$St", "$$ates", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581last", "$$Error", "$$St", "$$ates", "\u2581=", "\u2581new", "\u2581IntervalSet", "$$()", "$$;"], ["\u2581}"], ["\u2581last", "$$Error", "$$St", "$$ates", "$$.Add", "$$(re", "$$co", "$$gn", "$$iz", "$$er.", "$$State", "$$)", "$$;"], ["\u2581IntervalSet", "\u2581f", "$$ollow", "$$Set", "\u2581=", "\u2581Get", "$$Error", "$$Reco", "$$ver", "$$y", "$$Set", "$$(re", "$$cognizer", "$$)", "$$;"], ["\u2581Con", "$$sume", "$$Un", "$$til", "$$(re", "$$cognizer", "$$,", "\u2581f", "$$ollow", "$$Set", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581re", "$$co", "$$ver", "$$(", "$$Parser", "\u2581re", "$$cognizer", "$$,", "\u2581", "$$Recogn", "$$ition", "$$Exception", "\u2581e)", "\u2581{"], ["\u2581if", "\u2581(", "\u2581last", "$$Error", "$$Index", "$$==", "$$re", "$$cognizer", "$$.get", "$$InputStream", "$$().", "$$index", "$$()", "\u2581&&", "$$last", "$$Error", "$$St", "$$ates", "\u2581!=", "\u2581null", "\u2581&&", "$$last", "$$Error", "$$St", "$$ates", "$$.contain", "$$s", "$$(re", "$$cognizer", "$$.get", "$$State", "$$())", "\u2581)", "\u2581{"], ["\u2581re", "$$co", "$$gn", "$$iz", "$$er.", "$$con", "$$sume", "$$()", "$$;"], ["\u2581}"], ["\u2581last", "$$Error", "$$Index", "\u2581=", "\u2581re", "$$cognizer", "$$.get", "$$InputStream", "$$().", "$$index", "$$()", "$$;"], ["\u2581if", "\u2581(", "\u2581last", "$$Error", "$$St", "$$ates", "$$==", "$$null", "\u2581)", "\u2581last", "$$Error", "$$St", "$$ates", "\u2581=", "\u2581new", "\u2581IntervalSet", "$$()", "$$;"], ["\u2581last", "$$Error", "$$St", "$$ates", "$$.add", "$$(re", "$$cognizer", "$$.get", "$$State", "$$())", "$$;"], ["\u2581IntervalSet", "\u2581f", "$$ollow", "$$Set", "\u2581=", "\u2581get", "$$Error", "$$Reco", "$$ver", "$$y", "$$Set", "$$(re", "$$cognizer", "$$)", "$$;"], ["\u2581con", "$$sume", "$$Un", "$$til", "$$(re", "$$cognizer", "$$,", "\u2581f", "$$ollow", "$$Set", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToFormulaString() {\n    String value = field_3_string;\n    int len = value.Length;\n    StringBuilder sb = new StringBuilder(len + 4);\n    sb.Append(FORMULA_DELIMITER);\n    for (int i = 0; i < len; i++) {\n        char c = value[i];\n        if (c == FORMULA_DELIMITER) {\n            sb.Append(FORMULA_DELIMITER);\n        }\n        sb.Append(c);\n    }\n    sb.Append(FORMULA_DELIMITER);\n    return sb.ToString();\n}\n", "java": "public String toFormulaString() {\n    String value = field_3_string;\n    int len = value.length();\n    StringBuilder sb = new StringBuilder(len + 4);\n    sb.append(FORMULA_DELIMITER);\n    for (int i = 0; i < len; i++) {\n        char c = value.charAt(i);\n        if (c == FORMULA_DELIMITER) {\n            sb.append(FORMULA_DELIMITER);\n        }\n        sb.append(c);\n    }\n    sb.append(FORMULA_DELIMITER);\n    return sb.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581To", "$$Formula", "$$String()", "\u2581{"], ["\u2581String", "\u2581value", "\u2581=", "\u2581field_3_", "$$string", "$$;"], ["\u2581int", "\u2581len", "\u2581=", "\u2581value", "$$.Length;"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder(", "$$len", "\u2581+", "\u25814)", "$$;"], ["\u2581sb.Append(", "$$F", "$$ORM", "$$UL", "$$A", "$$_", "$$DE", "$$L", "$$IM", "$$I", "$$TER", "$$)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581len", "$$;", "\u2581i++)", "\u2581{"], ["\u2581char", "\u2581c", "\u2581=", "\u2581value", "$$[i]", "$$;"], ["\u2581if", "\u2581(c", "\u2581==", "\u2581F", "$$ORM", "$$UL", "$$A", "$$_", "$$DE", "$$L", "$$IM", "$$I", "$$TER", "$$)", "\u2581{"], ["\u2581sb.Append(", "$$F", "$$ORM", "$$UL", "$$A", "$$_", "$$DE", "$$L", "$$IM", "$$I", "$$TER", "$$)", "$$;"], ["\u2581}"], ["\u2581sb.Append(", "$$c", "$$)", "$$;"], ["\u2581}"], ["\u2581sb.Append(", "$$F", "$$ORM", "$$UL", "$$A", "$$_", "$$DE", "$$L", "$$IM", "$$I", "$$TER", "$$)", "$$;"], ["\u2581return", "\u2581sb", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581to", "$$Formula", "$$String()", "\u2581{"], ["\u2581String", "\u2581value", "\u2581=", "\u2581field_3_", "$$string", "$$;"], ["\u2581int", "\u2581len", "\u2581=", "\u2581value", "$$.length()", "$$;"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder(", "$$len", "\u2581+", "\u25814)", "$$;"], ["\u2581sb.append(", "$$F", "$$ORM", "$$UL", "$$A", "$$_", "$$DE", "$$L", "$$IM", "$$I", "$$TER", "$$)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581len", "$$;", "\u2581i++)", "\u2581{"], ["\u2581char", "\u2581c", "\u2581=", "\u2581value", "$$.char", "$$At", "$$(i", "$$)", "$$;"], ["\u2581if", "\u2581(c", "\u2581==", "\u2581F", "$$ORM", "$$UL", "$$A", "$$_", "$$DE", "$$L", "$$IM", "$$I", "$$TER", "$$)", "\u2581{"], ["\u2581sb.append(", "$$F", "$$ORM", "$$UL", "$$A", "$$_", "$$DE", "$$L", "$$IM", "$$I", "$$TER", "$$)", "$$;"], ["\u2581}"], ["\u2581sb.append(", "$$c", "$$)", "$$;"], ["\u2581}"], ["\u2581sb.append(", "$$F", "$$ORM", "$$UL", "$$A", "$$_", "$$DE", "$$L", "$$IM", "$$I", "$$TER", "$$)", "$$;"], ["\u2581return", "\u2581sb", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public UnlinkFaceRequest(): base(\"LinkFace\", \"2018-07-20\", \"UnlinkFace\") {\n    Protocol = ProtocolType.HTTPS;\n    Method = MethodType.POST;\n}\n", "java": "public UnlinkFaceRequest() {\n    super(\"LinkFace\", \"2018-07-20\", \"UnlinkFace\");\n    setProtocol(ProtocolType.HTTPS);\n    setMethod(MethodType.POST);\n}\n", "cs_t": [["\u2581public", "\u2581Un", "$$link", "$$Face", "$$Request():", "\u2581base(\"", "$$Link", "$$Face", "$$\",", "\u2581\"2018", "$$-07", "$$-", "$$20", "$$\",", "\u2581\"", "$$Un", "$$link", "$$Face", "$$\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581Method", "\u2581=", "\u2581MethodType.POST", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Un", "$$link", "$$Face", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$Link", "$$Face", "$$\",", "\u2581\"2018", "$$-07", "$$-", "$$20", "$$\",", "\u2581\"", "$$Un", "$$link", "$$Face", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581setMethod(Method", "$$Type.POST", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ConfigurationOptionSetting(string awsNamespace, string optionName, string value) {\n    _awsNamespace = awsNamespace;\n    _optionName = optionName;\n    _value = value;\n}\n", "java": "public ConfigurationOptionSetting(String namespace, String optionName, String value) {\n    setNamespace(namespace);\n    setOptionName(optionName);\n    setValue(value);\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Configuration", "$$Option", "$$Setting", "$$(string", "\u2581a", "$$w", "$$s", "$$Namespace", "$$,", "\u2581string", "\u2581o", "$$ption", "$$Name,", "\u2581string", "\u2581value)", "\u2581{"], ["\u2581_", "$$aw", "$$s", "$$Namespace", "\u2581=", "\u2581a", "$$w", "$$s", "$$Namespace", "$$;"], ["\u2581_", "$$o", "$$ption", "$$Name", "\u2581=", "\u2581o", "$$ption", "$$Name", "$$;"], ["\u2581_", "$$value", "\u2581=", "\u2581value", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Configuration", "$$Option", "$$Setting", "$$(String", "\u2581n", "$$ames", "$$pace", "$$,", "\u2581String", "\u2581o", "$$ption", "$$Name,", "\u2581String", "\u2581value)", "\u2581{"], ["\u2581set", "$$Namespace", "$$(n", "$$ames", "$$pace", "$$)", "$$;"], ["\u2581set", "$$Option", "$$Name", "$$(o", "$$ption", "$$Name)", "$$;"], ["\u2581set", "$$Value(", "$$value", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string GetFully(string key) {\n    StringBuilder result = new StringBuilder(m_tries.Count * 2);\n    for (int i = 0; i < m_tries.Count; i++) {\n        string r = m_tries[i].GetFully(key);\n        if (r == null || (r.Length == 1 && r[0] == EOM)) {\n            return result.ToString();\n        }\n        result.Append(r);\n    }\n    return result.ToString();\n}\n", "java": "public CharSequence getFully(CharSequence key) {\n    StringBuilder result = new StringBuilder(tries.size() * 2);\n    for (int i = 0; i < tries.size(); i++) {\n        CharSequence r = tries.get(i).getFully(key);\n        if (r == null || (r.length() == 1 && r.charAt(0) == EOM)) {\n            return result;\n        }\n        result.append(r);\n    }\n    return result;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581Get", "$$Full", "$$y", "$$(string", "\u2581key)", "\u2581{"], ["\u2581StringBuilder", "\u2581result", "\u2581=", "\u2581new", "\u2581StringBuilder(", "$$m_", "$$t", "$$ries", "$$.Count", "\u2581*", "\u25812)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581m_", "$$t", "$$ries", "$$.Count", "$$;", "\u2581i++)", "\u2581{"], ["\u2581string", "\u2581r", "\u2581=", "\u2581m_", "$$t", "$$ries", "$$[i]", "$$.Get", "$$Full", "$$y", "$$(key", "$$)", "$$;"], ["\u2581if", "\u2581(r", "\u2581==", "\u2581null", "\u2581||", "\u2581(r", "$$.Length", "\u2581==", "\u25811", "\u2581&&", "\u2581r", "$$[0]", "\u2581==", "\u2581E", "$$O", "$$M", "$$))", "\u2581{"], ["\u2581return", "\u2581result", "$$.ToString()", "$$;"], ["\u2581}"], ["\u2581result", "$$.Append(", "$$r", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Char", "$$Sequence", "\u2581get", "$$Full", "$$y", "$$(", "$$CharSequence", "\u2581key)", "\u2581{"], ["\u2581StringBuilder", "\u2581result", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$(t", "$$ries", "$$.size()", "\u2581*", "\u25812)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581t", "$$ries", "$$.size()", "$$;", "\u2581i++)", "\u2581{"], ["\u2581Char", "$$Sequence", "\u2581r", "\u2581=", "\u2581t", "$$ries", "$$.get", "$$(i", "$$)", "$$.get", "$$Full", "$$y", "$$(key", "$$)", "$$;"], ["\u2581if", "\u2581(r", "\u2581==", "\u2581null", "\u2581||", "\u2581(r", "$$.length()", "\u2581==", "\u25811", "\u2581&&", "\u2581r", "$$.char", "$$At(", "$$0)", "\u2581==", "\u2581E", "$$O", "$$M", "$$))", "\u2581{"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"], ["\u2581result", "$$.append(", "$$r", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeMountTargetSecurityGroupsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeMountTargetSecurityGroupsResponseUnmarshaller.Instance;\n    return Invoke<DescribeMountTargetSecurityGroupsResponse>(request, options);\n}\n", "java": "public DescribeMountTargetSecurityGroupsResult describeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeMountTargetSecurityGroups(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Mo", "$$unt", "$$Target", "$$SecurityGroup", "$$sResponse", "\u2581Describe", "$$Mo", "$$unt", "$$Target", "$$SecurityGroup", "$$s(Describe", "$$Mo", "$$unt", "$$Target", "$$SecurityGroup", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Mo", "$$unt", "$$Target", "$$SecurityGroup", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Mo", "$$unt", "$$Target", "$$SecurityGroup", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Mo", "$$unt", "$$Target", "$$SecurityGroup", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Mo", "$$unt", "$$Target", "$$SecurityGroup", "$$sResult", "\u2581describe", "$$Mo", "$$unt", "$$Target", "$$SecurityGroup", "$$s(Describe", "$$Mo", "$$unt", "$$Target", "$$SecurityGroup", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Mo", "$$unt", "$$Target", "$$SecurityGroup", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetApiMappingResponse GetApiMapping(GetApiMappingRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetApiMappingRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetApiMappingResponseUnmarshaller.Instance;\n    return Invoke<GetApiMappingResponse>(request, options);\n}\n", "java": "public GetApiMappingResult getApiMapping(GetApiMappingRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetApiMapping(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Api", "$$Mapping", "$$Response", "\u2581Get", "$$Api", "$$Mapping", "$$(Get", "$$Api", "$$Mapping", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Api", "$$Mapping", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Api", "$$Mapping", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Api", "$$Mapping", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Api", "$$Mapping", "$$Result", "\u2581get", "$$Api", "$$Mapping", "$$(Get", "$$Api", "$$Mapping", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Api", "$$Mapping", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public HttpRequest(string strUrl) {\n    Url = strUrl;\n    Headers = new Dictionary<string, string>();\n}\n", "java": "public HttpRequest(String strUrl) {\n    super(strUrl);\n}\n", "cs_t": [["\u2581public", "\u2581H", "$$tt", "$$p", "$$Request(string", "\u2581str", "$$Url", "$$)", "\u2581{"], ["\u2581", "$$Url", "\u2581=", "\u2581str", "$$Url", "$$;"], ["\u2581H", "$$ead", "$$er", "$$s", "\u2581=", "\u2581new", "\u2581D", "$$ictionary<string,", "\u2581string>", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581H", "$$tt", "$$p", "$$Request(String", "\u2581str", "$$Url", "$$)", "\u2581{"], ["\u2581super(", "$$str", "$$Url", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public MemFuncPtg(int subExprLen) {\n    field_1_len_ref_subexpression = subExprLen;\n}\n", "java": "public MemFuncPtg(int subExprLen) {\n    field_1_len_ref_subexpression = subExprLen;\n}\n", "cs_t": [["\u2581public", "\u2581M", "$$em", "$$F", "$$unc", "$$Ptg", "$$(int", "\u2581sub", "$$Exp", "$$r", "$$Len", "$$)", "\u2581{"], ["\u2581field_1_", "$$len", "$$_", "$$ref", "$$_", "$$sub", "$$exp", "$$ression", "\u2581=", "\u2581sub", "$$Exp", "$$r", "$$Len", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581M", "$$em", "$$F", "$$unc", "$$Ptg", "$$(int", "\u2581sub", "$$Exp", "$$r", "$$Len", "$$)", "\u2581{"], ["\u2581field_1_", "$$len", "$$_", "$$ref", "$$_", "$$sub", "$$exp", "$$ression", "\u2581=", "\u2581sub", "$$Exp", "$$r", "$$Len", "$$;"], ["\u2581}"]]}, {"cs": "public static TermStats[] GetHighFreqTerms(IndexReader reader, int numTerms, string field, IComparer<TermStats> comparer) {\n    TermStatsQueue tiq = null;\n    if (field != null) {\n        Fields fields = MultiFields.GetFields(reader);\n        if (fields == null) {\n            throw new Exception(\"field \" + field + \" not found\");\n        }\n        Terms terms = fields.GetTerms(field);\n        if (terms != null) {\n            TermsEnum termsEnum = terms.GetIterator(null);\n            tiq = new TermStatsQueue(numTerms, comparer);\n            tiq.Fill(field, termsEnum);\n        }\n    }\n    else {\n        Fields fields = MultiFields.GetFields(reader);\n        if (fields == null) {\n            throw new Exception(\"no fields found for this index\");\n        }\n        tiq = new TermStatsQueue(numTerms, comparer);\n        foreach (string fieldName in fields) {\n            Terms terms = fields.GetTerms(fieldName);\n            if (terms != null) {\n                tiq.Fill(fieldName, terms.GetIterator(null));\n            }\n        }\n    }\n    TermStats[] result = new TermStats[tiq.Count];\n    int count = tiq.Count - 1;\n    while (tiq.Count != 0) {\n        result[count] = tiq.Pop();\n        count--;\n    }\n    return result;\n}\n", "java": "public static TermStats[] getHighFreqTerms(IndexReader reader, int numTerms, String field, Comparator<TermStats> comparator) throws Exception {\n    TermStatsQueue tiq = null;\n    if (field != null) {\n        Terms terms = MultiTerms.getTerms(reader, field);\n        if (terms == null) {\n            throw new RuntimeException(\"field \" + field + \" not found\");\n        }\n        TermsEnum termsEnum = terms.iterator();\n        tiq = new TermStatsQueue(numTerms, comparator);\n        tiq.fill(field, termsEnum);\n    }\n    else {\n        Collection<String> fields = FieldInfos.getIndexedFields(reader);\n        if (fields.size() == 0) {\n            throw new RuntimeException(\"no fields found for this index\");\n        }\n        tiq = new TermStatsQueue(numTerms, comparator);\n        for (String fieldName : fields) {\n            Terms terms = MultiTerms.getTerms(reader, fieldName);\n            if (terms != null) {\n                tiq.fill(fieldName, terms.iterator());\n            }\n        }\n    }\n    TermStats[] result = new TermStats[tiq.size()];\n    int count = tiq.size() - 1;\n    while (tiq.size() != 0) {\n        result[count] = tiq.pop();\n        count--;\n    }\n    return result;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581Term", "$$Stat", "$$s", "$$[]", "\u2581Get", "$$H", "$$igh", "$$Freq", "$$Term", "$$s(", "$$Index", "$$Reader", "\u2581read", "$$er,", "\u2581int", "\u2581num", "$$Term", "$$s,", "\u2581string", "\u2581field", "$$,", "\u2581I", "$$Compare", "$$r", "$$<", "$$Term", "$$Stat", "$$s", "$$>", "\u2581compare", "$$r", "$$)", "\u2581{"], ["\u2581Term", "$$Stat", "$$s", "$$Queue", "\u2581", "$$ti", "$$q", "\u2581=", "\u2581null", "$$;"], ["\u2581if", "\u2581(", "$$field", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581Fields", "\u2581field", "$$s", "\u2581=", "\u2581M", "$$ulti", "$$Field", "$$s.Get", "$$Field", "$$s", "$$(re", "$$ad", "$$er)", "$$;"], ["\u2581if", "\u2581(", "$$field", "$$s", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Exception(\"", "$$field", "\u2581\"", "\u2581+", "\u2581field", "\u2581+", "\u2581\"", "\u2581not", "\u2581f", "$$ound", "$$\")", "$$;"], ["\u2581}"], ["\u2581Term", "$$s", "\u2581term", "$$s", "\u2581=", "\u2581field", "$$s.Get", "$$Term", "$$s(", "$$field", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$term", "$$s", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581Term", "$$s", "$$Enum", "\u2581term", "$$s", "$$Enum", "\u2581=", "\u2581term", "$$s.Get", "$$Iterator", "$$(null", "$$)", "$$;"], ["\u2581", "$$ti", "$$q", "\u2581=", "\u2581new", "\u2581Term", "$$Stat", "$$s", "$$Queue", "$$(n", "$$um", "$$Term", "$$s,", "\u2581compare", "$$r", "$$)", "$$;"], ["\u2581", "$$ti", "$$q", "$$.", "$$Fill", "$$(field", "$$,", "\u2581term", "$$s", "$$Enum", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581Fields", "\u2581field", "$$s", "\u2581=", "\u2581M", "$$ulti", "$$Field", "$$s.Get", "$$Field", "$$s", "$$(re", "$$ad", "$$er)", "$$;"], ["\u2581if", "\u2581(", "$$field", "$$s", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Exception(\"", "$$n", "$$o", "\u2581field", "$$s", "\u2581f", "$$ound", "\u2581for", "\u2581this", "\u2581index", "$$\")", "$$;"], ["\u2581}"], ["\u2581", "$$ti", "$$q", "\u2581=", "\u2581new", "\u2581Term", "$$Stat", "$$s", "$$Queue", "$$(n", "$$um", "$$Term", "$$s,", "\u2581compare", "$$r", "$$)", "$$;"], ["\u2581foreach", "\u2581(", "$$string", "\u2581field", "$$Name", "\u2581in", "\u2581field", "$$s)", "\u2581{"], ["\u2581Term", "$$s", "\u2581term", "$$s", "\u2581=", "\u2581field", "$$s.Get", "$$Term", "$$s(", "$$field", "$$Name)", "$$;"], ["\u2581if", "\u2581(", "$$term", "$$s", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581", "$$ti", "$$q", "$$.", "$$Fill", "$$(field", "$$Name,", "\u2581term", "$$s.Get", "$$Iterator", "$$(null", "$$))", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581Term", "$$Stat", "$$s", "$$[]", "\u2581result", "\u2581=", "\u2581new", "\u2581Term", "$$Stat", "$$s[", "$$ti", "$$q", "$$.Count", "$$]", "$$;"], ["\u2581int", "\u2581count", "\u2581=", "\u2581", "$$ti", "$$q", "$$.Count", "\u2581-", "\u25811", "$$;"], ["\u2581while", "\u2581(", "$$ti", "$$q", "$$.Count", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581result", "$$[", "$$count", "$$]", "\u2581=", "\u2581", "$$ti", "$$q", "$$.", "$$Po", "$$p", "$$()", "$$;"], ["\u2581count", "$$--", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581Term", "$$Stat", "$$s", "$$[]", "\u2581get", "$$H", "$$igh", "$$Freq", "$$Term", "$$s(", "$$Index", "$$Reader", "\u2581read", "$$er,", "\u2581int", "\u2581num", "$$Term", "$$s,", "\u2581String", "\u2581field", "$$,", "\u2581", "$$Compar", "$$ator", "$$<", "$$Term", "$$Stat", "$$s", "$$>", "\u2581comp", "$$ar", "$$ator", "$$)", "\u2581throws", "\u2581", "$$Exception", "\u2581{"], ["\u2581Term", "$$Stat", "$$s", "$$Queue", "\u2581", "$$ti", "$$q", "\u2581=", "\u2581null", "$$;"], ["\u2581if", "\u2581(", "$$field", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581Term", "$$s", "\u2581term", "$$s", "\u2581=", "\u2581M", "$$ulti", "$$Term", "$$s.get", "$$Terms", "$$(re", "$$ad", "$$er,", "\u2581field)", "$$;"], ["\u2581if", "\u2581(", "$$term", "$$s", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581RuntimeException(\"", "$$field", "\u2581\"", "\u2581+", "\u2581field", "\u2581+", "\u2581\"", "\u2581not", "\u2581f", "$$ound", "$$\")", "$$;"], ["\u2581}"], ["\u2581Term", "$$s", "$$Enum", "\u2581term", "$$s", "$$Enum", "\u2581=", "\u2581term", "$$s.", "$$iterator", "$$()", "$$;"], ["\u2581", "$$ti", "$$q", "\u2581=", "\u2581new", "\u2581Term", "$$Stat", "$$s", "$$Queue", "$$(n", "$$um", "$$Term", "$$s,", "\u2581comp", "$$ar", "$$ator", "$$)", "$$;"], ["\u2581", "$$ti", "$$q", "$$.", "$$fill", "$$(field", "$$,", "\u2581term", "$$s", "$$Enum", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581", "$$Collection<", "$$String>", "\u2581field", "$$s", "\u2581=", "\u2581Field", "$$Info", "$$s.get", "$$Index", "$$ed", "$$Field", "$$s", "$$(re", "$$ad", "$$er)", "$$;"], ["\u2581if", "\u2581(", "$$field", "$$s.size()", "\u2581==", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581RuntimeException(\"", "$$n", "$$o", "\u2581field", "$$s", "\u2581f", "$$ound", "\u2581for", "\u2581this", "\u2581index", "$$\")", "$$;"], ["\u2581}"], ["\u2581", "$$ti", "$$q", "\u2581=", "\u2581new", "\u2581Term", "$$Stat", "$$s", "$$Queue", "$$(n", "$$um", "$$Term", "$$s,", "\u2581comp", "$$ar", "$$ator", "$$)", "$$;"], ["\u2581for", "\u2581(", "$$String", "\u2581field", "$$Name", "\u2581:", "\u2581field", "$$s)", "\u2581{"], ["\u2581Term", "$$s", "\u2581term", "$$s", "\u2581=", "\u2581M", "$$ulti", "$$Term", "$$s.get", "$$Terms", "$$(re", "$$ad", "$$er,", "\u2581field", "$$Name)", "$$;"], ["\u2581if", "\u2581(", "$$term", "$$s", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581", "$$ti", "$$q", "$$.", "$$fill", "$$(field", "$$Name,", "\u2581term", "$$s.", "$$iterator", "$$())", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581Term", "$$Stat", "$$s", "$$[]", "\u2581result", "\u2581=", "\u2581new", "\u2581Term", "$$Stat", "$$s[", "$$ti", "$$q", "$$.size()", "$$]", "$$;"], ["\u2581int", "\u2581count", "\u2581=", "\u2581", "$$ti", "$$q", "$$.size()", "\u2581-", "\u25811", "$$;"], ["\u2581while", "\u2581(", "$$ti", "$$q", "$$.size()", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581result", "$$[", "$$count", "$$]", "\u2581=", "\u2581", "$$ti", "$$q", "$$.", "$$po", "$$p", "$$()", "$$;"], ["\u2581count", "$$--", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteApnsVoipChannelResponse DeleteApnsVoipChannel(DeleteApnsVoipChannelRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteApnsVoipChannelRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteApnsVoipChannelResponseUnmarshaller.Instance;\n    return Invoke<DeleteApnsVoipChannelResponse>(request, options);\n}\n", "java": "public DeleteApnsVoipChannelResult deleteApnsVoipChannel(DeleteApnsVoipChannelRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteApnsVoipChannel(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Apns", "$$Vo", "$$ip", "$$Channel", "$$Response", "\u2581Delete", "$$Apns", "$$Vo", "$$ip", "$$Channel", "$$(Delete", "$$Apns", "$$Vo", "$$ip", "$$Channel", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Apns", "$$Vo", "$$ip", "$$Channel", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Apns", "$$Vo", "$$ip", "$$Channel", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Apns", "$$Vo", "$$ip", "$$Channel", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Apns", "$$Vo", "$$ip", "$$Channel", "$$Result", "\u2581delete", "$$Apns", "$$Vo", "$$ip", "$$Channel", "$$(Delete", "$$Apns", "$$Vo", "$$ip", "$$Channel", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Apns", "$$Vo", "$$ip", "$$Channel", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListFacesResponse ListFaces(ListFacesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListFacesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListFacesResponseUnmarshaller.Instance;\n    return Invoke<ListFacesResponse>(request, options);\n}\n", "java": "public ListFacesResult listFaces(ListFacesRequest request) {\n    request = beforeClientExecution(request);\n    return executeListFaces(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Faces", "$$Response", "\u2581List", "$$Faces", "$$(List", "$$Faces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Faces", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Faces", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Faces", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Faces", "$$Result", "\u2581list", "$$Faces", "$$(List", "$$Faces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Faces", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ShapeFieldCacheDistanceValueSource(SpatialContext ctx,ShapeFieldCacheProvider<IPoint> provider, IPoint from, double multiplier) {\n    this.ctx = ctx;\n    this.from = from;\n    this.provider = provider;\n    this.multiplier = multiplier;\n}\n", "java": "public ShapeFieldCacheDistanceValueSource(SpatialContext ctx,ShapeFieldCacheProvider<Point> provider, Point from, double multiplier) {\n    this.ctx = ctx;\n    this.from = from;\n    this.provider = provider;\n    this.multiplier = multiplier;\n}\n", "cs_t": [["\u2581public", "\u2581Sh", "$$ape", "$$Field", "$$Cache", "$$Distance", "$$ValueSource", "$$(", "$$Sp", "$$ati", "$$al", "$$Context", "\u2581ctx", "$$,", "$$Shape", "$$Field", "$$Cache", "$$Provider", "$$<", "$$I", "$$Point", "$$>", "\u2581pro", "$$v", "$$id", "$$er,", "\u2581I", "$$Point", "\u2581from", "$$,", "\u2581double", "\u2581m", "$$ulti", "$$p", "$$li", "$$er)", "\u2581{"], ["\u2581this.", "$$ctx", "\u2581=", "\u2581ctx", "$$;"], ["\u2581this.f", "$$rom", "\u2581=", "\u2581from", "$$;"], ["\u2581this.", "$$pro", "$$v", "$$id", "$$er", "\u2581=", "\u2581pro", "$$v", "$$id", "$$er", "$$;"], ["\u2581this.", "$$m", "$$ulti", "$$p", "$$li", "$$er", "\u2581=", "\u2581m", "$$ulti", "$$p", "$$li", "$$er", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Sh", "$$ape", "$$Field", "$$Cache", "$$Distance", "$$ValueSource", "$$(", "$$Sp", "$$ati", "$$al", "$$Context", "\u2581ctx", "$$,", "$$Shape", "$$Field", "$$Cache", "$$Provider", "$$<", "$$Point", "$$>", "\u2581pro", "$$v", "$$id", "$$er,", "\u2581", "$$Point", "\u2581from", "$$,", "\u2581double", "\u2581m", "$$ulti", "$$p", "$$li", "$$er)", "\u2581{"], ["\u2581this.", "$$ctx", "\u2581=", "\u2581ctx", "$$;"], ["\u2581this.f", "$$rom", "\u2581=", "\u2581from", "$$;"], ["\u2581this.", "$$pro", "$$v", "$$id", "$$er", "\u2581=", "\u2581pro", "$$v", "$$id", "$$er", "$$;"], ["\u2581this.", "$$m", "$$ulti", "$$p", "$$li", "$$er", "\u2581=", "\u2581m", "$$ulti", "$$p", "$$li", "$$er", "$$;"], ["\u2581}"]]}, {"cs": "public override char get(int index) {\n    checkIndex(index);\n    return sequence[index];\n}\n", "java": "public char get(int index) {\n    checkIndex(index);\n    return sequence.charAt(index);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581char", "\u2581get(int", "\u2581index)", "\u2581{"], ["\u2581check", "$$Index(index", "$$)", "$$;"], ["\u2581return", "\u2581se", "$$qu", "$$ence", "$$[index", "$$]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581char", "\u2581get(int", "\u2581index)", "\u2581{"], ["\u2581check", "$$Index(index", "$$)", "$$;"], ["\u2581return", "\u2581se", "$$qu", "$$ence", "$$.char", "$$At", "$$(index", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateConfigurationProfileResponse UpdateConfigurationProfile(UpdateConfigurationProfileRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateConfigurationProfileRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateConfigurationProfileResponseUnmarshaller.Instance;\n    return Invoke<UpdateConfigurationProfileResponse>(request, options);\n}\n", "java": "public UpdateConfigurationProfileResult updateConfigurationProfile(UpdateConfigurationProfileRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateConfigurationProfile(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$Configuration", "$$Profile", "$$Response", "\u2581Update", "$$Configuration", "$$Profile", "$$(Update", "$$Configuration", "$$Profile", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$Configuration", "$$Profile", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$Configuration", "$$Profile", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$Configuration", "$$Profile", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$Configuration", "$$Profile", "$$Result", "\u2581update", "$$Configuration", "$$Profile", "$$(Update", "$$Configuration", "$$Profile", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$Configuration", "$$Profile", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeLifecycleHooksResponse DescribeLifecycleHooks(DescribeLifecycleHooksRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeLifecycleHooksRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeLifecycleHooksResponseUnmarshaller.Instance;\n    return Invoke<DescribeLifecycleHooksResponse>(request, options);\n}\n", "java": "public DescribeLifecycleHooksResult describeLifecycleHooks(DescribeLifecycleHooksRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeLifecycleHooks(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Lifecycle", "$$H", "$$o", "$$ok", "$$sResponse", "\u2581Describe", "$$Lifecycle", "$$H", "$$o", "$$ok", "$$s(Describe", "$$Lifecycle", "$$H", "$$o", "$$ok", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Lifecycle", "$$H", "$$o", "$$ok", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Lifecycle", "$$H", "$$o", "$$ok", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Lifecycle", "$$H", "$$o", "$$ok", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Lifecycle", "$$H", "$$o", "$$ok", "$$sResult", "\u2581describe", "$$Lifecycle", "$$H", "$$o", "$$ok", "$$s(Describe", "$$Lifecycle", "$$H", "$$o", "$$ok", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Lifecycle", "$$H", "$$o", "$$ok", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeHostReservationsResponse DescribeHostReservations(DescribeHostReservationsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeHostReservationsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeHostReservationsResponseUnmarshaller.Instance;\n    return Invoke<DescribeHostReservationsResponse>(request, options);\n}\n", "java": "public DescribeHostReservationsResult describeHostReservations(DescribeHostReservationsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeHostReservations(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Host", "$$Reserv", "$$ation", "$$sResponse", "\u2581Describe", "$$Host", "$$Reserv", "$$ation", "$$s(Describe", "$$Host", "$$Reserv", "$$ation", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Host", "$$Reserv", "$$ation", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Host", "$$Reserv", "$$ation", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Host", "$$Reserv", "$$ation", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Host", "$$Reserv", "$$ation", "$$sResult", "\u2581describe", "$$Host", "$$Reserv", "$$ation", "$$s(Describe", "$$Host", "$$Reserv", "$$ation", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Host", "$$Reserv", "$$ation", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static PredictionContext FromRuleContext(ATN atn, RuleContext outerContext) {\n    if (outerContext == null)outerContext = ParserRuleContext.EMPTY;\n    if (outerContext.Parent == null || outerContext == ParserRuleContext.EMPTY)return PredictionContext.EMPTY;\n    PredictionContext parent = PredictionContext.FromRuleContext(atn, outerContext.Parent);\n    ATNState state = atn.states[outerContext.invokingState];\n    RuleTransition transition = (RuleTransition)state.Transition(0);\n    return parent.GetChild(transition.followState.stateNumber);\n}\n", "java": "public static PredictionContext fromRuleContext(ATN atn, RuleContext outerContext) {\n    if ( outerContext==null ) outerContext = RuleContext.EMPTY;\n    if ( outerContext.parent==null || outerContext==RuleContext.EMPTY ) {\n        return PredictionContext.EMPTY;\n    }\n    PredictionContext parent = EMPTY;\n    parent = PredictionContext.fromRuleContext(atn, outerContext.parent);\n    ATNState state = atn.states.get(outerContext.invokingState);\n    RuleTransition transition = (RuleTransition)state.transition(0);\n    return SingletonPredictionContext.create(parent, transition.followState.stateNumber);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581Pred", "$$iction", "$$Context", "\u2581", "$$From", "$$RuleContext", "$$(", "$$ATN", "\u2581at", "$$n", "$$,", "\u2581", "$$RuleContext", "\u2581out", "$$er", "$$Context", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$out", "$$er", "$$Context", "\u2581==", "\u2581null)", "$$out", "$$er", "$$Context", "\u2581=", "\u2581Par", "$$ser", "$$RuleContext", "$$.E", "$$MPTY", "$$;"], ["\u2581if", "\u2581(", "$$out", "$$er", "$$Context", "$$.", "$$Parent", "\u2581==", "\u2581null", "\u2581||", "\u2581out", "$$er", "$$Context", "\u2581==", "\u2581Par", "$$ser", "$$RuleContext", "$$.E", "$$MPTY", "$$)return", "\u2581Pred", "$$iction", "$$Context", "$$.E", "$$MPTY", "$$;"], ["\u2581Pred", "$$iction", "$$Context", "\u2581parent", "\u2581=", "\u2581Pred", "$$iction", "$$Context", "$$.", "$$From", "$$RuleContext", "$$(", "$$at", "$$n", "$$,", "\u2581out", "$$er", "$$Context", "$$.", "$$Parent", "$$)", "$$;"], ["\u2581ATN", "$$State", "\u2581state", "\u2581=", "\u2581at", "$$n", "$$.", "$$st", "$$ates", "$$[", "$$out", "$$er", "$$Context", "$$.", "$$in", "$$vok", "$$ing", "$$State", "$$]", "$$;"], ["\u2581", "$$Rule", "$$Transition", "\u2581t", "$$ran", "$$sition", "\u2581=", "\u2581(", "$$Rule", "$$Transition", "$$)", "$$state", "$$.", "$$Transition", "$$(", "$$0)", "$$;"], ["\u2581return", "\u2581parent", "$$.Get", "$$Ch", "$$ild(", "$$t", "$$ran", "$$sition", "$$.f", "$$ollow", "$$State", "$$.", "$$state", "$$Number", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581Pred", "$$iction", "$$Context", "\u2581from", "$$RuleContext", "$$(", "$$ATN", "\u2581at", "$$n", "$$,", "\u2581", "$$RuleContext", "\u2581out", "$$er", "$$Context", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "\u2581out", "$$er", "$$Context", "$$==", "$$null", "\u2581)", "\u2581out", "$$er", "$$Context", "\u2581=", "\u2581", "$$RuleContext", "$$.E", "$$MPTY", "$$;"], ["\u2581if", "\u2581(", "\u2581out", "$$er", "$$Context", "$$.", "$$parent", "$$==", "$$null", "\u2581||", "\u2581out", "$$er", "$$Context", "$$==", "$$RuleContext", "$$.E", "$$MPTY", "\u2581)", "\u2581{"], ["\u2581return", "\u2581Pred", "$$iction", "$$Context", "$$.E", "$$MPTY", "$$;"], ["\u2581}"], ["\u2581Pred", "$$iction", "$$Context", "\u2581parent", "\u2581=", "\u2581E", "$$MPTY", "$$;"], ["\u2581parent", "\u2581=", "\u2581Pred", "$$iction", "$$Context", "$$.f", "$$rom", "$$RuleContext", "$$(", "$$at", "$$n", "$$,", "\u2581out", "$$er", "$$Context", "$$.", "$$parent", "$$)", "$$;"], ["\u2581ATN", "$$State", "\u2581state", "\u2581=", "\u2581at", "$$n", "$$.", "$$st", "$$ates", "$$.get", "$$(out", "$$er", "$$Context", "$$.", "$$in", "$$vok", "$$ing", "$$State", "$$)", "$$;"], ["\u2581", "$$Rule", "$$Transition", "\u2581t", "$$ran", "$$sition", "\u2581=", "\u2581(", "$$Rule", "$$Transition", "$$)", "$$state", "$$.", "$$t", "$$ran", "$$sition", "$$(", "$$0)", "$$;"], ["\u2581return", "\u2581S", "$$ing", "$$l", "$$et", "$$on", "$$Prediction", "$$Context", "$$.create", "$$(", "$$parent", "$$,", "\u2581t", "$$ran", "$$sition", "$$.f", "$$ollow", "$$State", "$$.", "$$state", "$$Number", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[SXVDEX]\\n\");\n    buffer.Append(\"    .grbit1 =\").Append(HexDump.IntToHex(grbit1)).Append(\"\\n\");\n    buffer.Append(\"    .grbit2 =\").Append(HexDump.ByteToHex(grbit2)).Append(\"\\n\");\n    buffer.Append(\"    .citmShow =\").Append(HexDump.ByteToHex(citmShow)).Append(\"\\n\");\n    buffer.Append(\"    .isxdiSort =\").Append(HexDump.ShortToHex(isxdiSort)).Append(\"\\n\");\n    buffer.Append(\"    .isxdiShow =\").Append(HexDump.ShortToHex(isxdiShow)).Append(\"\\n\");\n    buffer.Append(\"    .subName =\").Append(subName).Append(\"\\n\");\n    buffer.Append(\"[/SXVDEX]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"[SXVDEX]\\n\");\n    buffer.append(\"    .grbit1 =\").append(HexDump.intToHex(_grbit1)).append(\"\\n\");\n    buffer.append(\"    .grbit2 =\").append(HexDump.byteToHex(_grbit2)).append(\"\\n\");\n    buffer.append(\"    .citmShow =\").append(HexDump.byteToHex(_citmShow)).append(\"\\n\");\n    buffer.append(\"    .isxdiSort =\").append(HexDump.shortToHex(_isxdiSort)).append(\"\\n\");\n    buffer.append(\"    .isxdiShow =\").append(HexDump.shortToHex(_isxdiShow)).append(\"\\n\");\n    buffer.append(\"    .subtotalName =\").append(_subtotalName).append(\"\\n\");\n    buffer.append(\"[/SXVDEX]\\n\");\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$S", "$$X", "$$V", "$$DE", "$$X", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$gr", "$$bit", "$$1", "\u2581=", "$$\").Append(", "$$HexDump.", "$$Int", "$$ToHex(", "$$gr", "$$bit", "$$1", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$gr", "$$bit", "$$2", "\u2581=", "$$\").Append(", "$$HexDump.", "$$Byte", "$$ToHex(", "$$gr", "$$bit", "$$2", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$.c", "$$it", "$$m", "$$Sh", "$$ow", "\u2581=", "$$\").Append(", "$$HexDump.", "$$Byte", "$$ToHex", "$$(c", "$$it", "$$m", "$$Sh", "$$ow", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$is", "$$x", "$$d", "$$i", "$$Sort", "\u2581=", "$$\").Append(", "$$HexDump.Short", "$$ToHex(", "$$is", "$$x", "$$d", "$$i", "$$Sort", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$is", "$$x", "$$d", "$$i", "$$Sh", "$$ow", "\u2581=", "$$\").Append(", "$$HexDump.Short", "$$ToHex(", "$$is", "$$x", "$$d", "$$i", "$$Sh", "$$ow", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$sub", "$$Name", "\u2581=", "$$\").Append(", "$$sub", "$$Name)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"[/", "$$S", "$$X", "$$V", "$$DE", "$$X", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(\"[", "$$S", "$$X", "$$V", "$$DE", "$$X", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$gr", "$$bit", "$$1", "\u2581=", "$$\").append(", "$$HexDump.", "$$int", "$$ToHex", "$$(_", "$$gr", "$$bit", "$$1", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$gr", "$$bit", "$$2", "\u2581=", "$$\").append(", "$$HexDump.", "$$byte", "$$ToHex", "$$(_", "$$gr", "$$bit", "$$2", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$.c", "$$it", "$$m", "$$Sh", "$$ow", "\u2581=", "$$\").append(", "$$HexDump.", "$$byte", "$$ToHex", "$$(_", "$$c", "$$it", "$$m", "$$Sh", "$$ow", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$is", "$$x", "$$d", "$$i", "$$Sort", "\u2581=", "$$\").append(", "$$HexDump.short", "$$ToHex", "$$(_", "$$is", "$$x", "$$d", "$$i", "$$Sort", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$is", "$$x", "$$d", "$$i", "$$Sh", "$$ow", "\u2581=", "$$\").append(", "$$HexDump.short", "$$ToHex", "$$(_", "$$is", "$$x", "$$d", "$$i", "$$Sh", "$$ow", "$$))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$sub", "$$t", "$$otal", "$$Name", "\u2581=", "$$\").append(", "$$_", "$$sub", "$$t", "$$otal", "$$Name)", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"[/", "$$S", "$$X", "$$V", "$$DE", "$$X", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    StringBuilder r = new StringBuilder();\n    r.Append(\"BlameResult: \");\n    r.Append(GetResultPath());\n    return r.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder r = new StringBuilder();\n    r.append(\"BlameResult: \");\n    r.append(getResultPath());\n    return r.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581r", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581r", "$$.Append(\"", "$$B", "$$l", "$$ame", "$$Result", "$$:", "\u2581\")", "$$;"], ["\u2581r", "$$.Append(", "$$Get", "$$Result", "$$Path", "$$())", "$$;"], ["\u2581return", "\u2581r", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581r", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581r", "$$.append(\"", "$$B", "$$l", "$$ame", "$$Result", "$$:", "\u2581\")", "$$;"], ["\u2581r", "$$.append(", "$$get", "$$Result", "$$Path", "$$())", "$$;"], ["\u2581return", "\u2581r", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListChangeSetsResponse ListChangeSets(ListChangeSetsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListChangeSetsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListChangeSetsResponseUnmarshaller.Instance;\n    return Invoke<ListChangeSetsResponse>(request, options);\n}\n", "java": "public ListChangeSetsResult listChangeSets(ListChangeSetsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListChangeSets(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Change", "$$Set", "$$sResponse", "\u2581List", "$$Change", "$$Set", "$$s(List", "$$Change", "$$Set", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Change", "$$Set", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Change", "$$Set", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Change", "$$Set", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Change", "$$Set", "$$sResult", "\u2581list", "$$Change", "$$Set", "$$s(List", "$$Change", "$$Set", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Change", "$$Set", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool IsAllowNonFastForwards() {\n    return allowNonFastForwards;\n}\n", "java": "public boolean isAllowNonFastForwards() {\n    return allowNonFastForwards;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581Is", "$$Al", "$$low", "$$Non", "$$F", "$$ast", "$$For", "$$ward", "$$s()", "\u2581{"], ["\u2581return", "\u2581all", "$$ow", "$$Non", "$$F", "$$ast", "$$For", "$$ward", "$$s;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$Al", "$$low", "$$Non", "$$F", "$$ast", "$$For", "$$ward", "$$s()", "\u2581{"], ["\u2581return", "\u2581all", "$$ow", "$$Non", "$$F", "$$ast", "$$For", "$$ward", "$$s;"], ["\u2581}"]]}, {"cs": "public FeatRecord() {\n    futureHeader = new FtrHeader();\n    futureHeader.RecordType = (sid);\n}\n", "java": "public FeatRecord() {\n    futureHeader = new FtrHeader();\n    futureHeader.setRecordType(sid);\n}\n", "cs_t": [["\u2581public", "\u2581F", "$$e", "$$at", "$$Record", "$$()", "\u2581{"], ["\u2581f", "$$u", "$$ture", "$$Header", "\u2581=", "\u2581new", "\u2581F", "$$tr", "$$Header", "$$()", "$$;"], ["\u2581f", "$$u", "$$ture", "$$Head", "$$er.", "$$Record", "$$Type", "\u2581=", "\u2581(", "$$sid", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581F", "$$e", "$$at", "$$Record", "$$()", "\u2581{"], ["\u2581f", "$$u", "$$ture", "$$Header", "\u2581=", "\u2581new", "\u2581F", "$$tr", "$$Header", "$$()", "$$;"], ["\u2581f", "$$u", "$$ture", "$$Head", "$$er.", "$$set", "$$Record", "$$Type", "$$(", "$$sid", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.ShortBuffer put(short c) {\n    throw new java.nio.ReadOnlyBufferException();\n}\n", "java": "public ShortBuffer put(short c) {\n    throw new ReadOnlyBufferException();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$Short", "$$Buffer", "\u2581put", "$$(short", "\u2581c)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581java.nio.Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Sh", "$$ort", "$$Buffer", "\u2581put", "$$(short", "\u2581c)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetQuery(string query) {\n    this.query = query;\n    this.m_message = new Message(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, \"\");\n}\n", "java": "public void setQuery(CharSequence query) {\n    this.query = query;\n    this.message = new MessageImpl(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, \"\");\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Query", "$$(string", "\u2581query", "$$)", "\u2581{"], ["\u2581this.", "$$query", "\u2581=", "\u2581query", "$$;"], ["\u2581this.m_", "$$m", "$$essage", "\u2581=", "\u2581new", "\u2581M", "$$essage", "$$(", "$$Query", "$$Parser", "$$M", "$$ess", "$$ages", "$$.", "$$INVALID", "$$_", "$$S", "$$Y", "$$N", "$$T", "$$AX_", "$$C", "$$AN", "$$NO", "$$T_", "$$P", "$$AR", "$$SE", "$$,", "\u2581query", "$$,", "\u2581\"", "$$\")", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Query(", "$$CharSequence", "\u2581query", "$$)", "\u2581{"], ["\u2581this.", "$$query", "\u2581=", "\u2581query", "$$;"], ["\u2581this.", "$$m", "$$essage", "\u2581=", "\u2581new", "\u2581M", "$$essage", "$$Impl", "$$(", "$$Query", "$$Parser", "$$M", "$$ess", "$$ages", "$$.", "$$INVALID", "$$_", "$$S", "$$Y", "$$N", "$$T", "$$AX_", "$$C", "$$AN", "$$NO", "$$T_", "$$P", "$$AR", "$$SE", "$$,", "\u2581query", "$$,", "\u2581\"", "$$\")", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StashApplyCommand StashApply() {\n    return new StashApplyCommand(repo);\n}\n", "java": "public StashApplyCommand stashApply() {\n    return new StashApplyCommand(repo);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581St", "$$ash", "$$App", "$$ly", "$$Command", "\u2581St", "$$ash", "$$App", "$$ly", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581St", "$$ash", "$$App", "$$ly", "$$Command", "$$(repo", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581St", "$$ash", "$$App", "$$ly", "$$Command", "\u2581st", "$$ash", "$$App", "$$ly", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581St", "$$ash", "$$App", "$$ly", "$$Command", "$$(repo", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ICollection NameSet() {\n    return dictionaryNameToID.Keys;\n}\n", "java": "public Set<String> nameSet() {\n    return Collections.unmodifiableSet(dictionary.values());\n}\n", "cs_t": [["\u2581public", "\u2581I", "$$Collection", "\u2581", "$$Name", "$$Set", "$$()", "\u2581{"], ["\u2581return", "\u2581d", "$$ictionary", "$$Name", "$$To", "$$ID", "$$.", "$$Key", "$$s;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Set", "$$<", "$$String>", "\u2581name", "$$Set", "$$()", "\u2581{"], ["\u2581return", "\u2581", "$$Collections.", "$$un", "$$mod", "$$ifi", "$$able", "$$Set", "$$(d", "$$ictionary", "$$.", "$$values", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public static int getEffectivePort(string scheme, int specifiedPort) {\n    if (specifiedPort != -1) {\n        return specifiedPort;\n    }\n    if (Sharpen.StringHelper.EqualsIgnoreCase(\"http\", scheme)) {\n        return 80;\n    }\n    else {\n        if (Sharpen.StringHelper.EqualsIgnoreCase(\"https\", scheme)) {\n            return 443;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n", "java": "public static int getEffectivePort(String scheme, int specifiedPort) {\n    if (specifiedPort != -1) {\n        return specifiedPort;\n    }\n    if (\"http\".equalsIgnoreCase(scheme)) {\n        return 80;\n    }\n    else if (\"https\".equalsIgnoreCase(scheme)) {\n        return 443;\n    }\n    else {\n        return -1;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581get", "$$E", "$$ff", "$$ec", "$$tive", "$$Port", "$$(string", "\u2581s", "$$ch", "$$eme", "$$,", "\u2581int", "\u2581spec", "$$ified", "$$Port", "$$)", "\u2581{"], ["\u2581if", "\u2581(s", "$$p", "$$ec", "$$ified", "$$Port", "\u2581!=", "\u2581-1)", "\u2581{"], ["\u2581return", "\u2581spec", "$$ified", "$$Port", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$Sh", "$$arpen.", "$$String", "$$H", "$$el", "$$per", "$$.E", "$$qual", "$$s", "$$I", "$$gnoreCase", "$$(\"", "$$h", "$$tt", "$$p", "$$\",", "\u2581s", "$$ch", "$$eme", "$$))", "\u2581{"], ["\u2581return", "\u25818", "$$0", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581if", "\u2581(", "$$Sh", "$$arpen.", "$$String", "$$H", "$$el", "$$per", "$$.E", "$$qual", "$$s", "$$I", "$$gnoreCase", "$$(\"", "$$h", "$$tt", "$$p", "$$s\",", "\u2581s", "$$ch", "$$eme", "$$))", "\u2581{"], ["\u2581return", "\u25814", "$$4", "$$3", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581get", "$$E", "$$ff", "$$ec", "$$tive", "$$Port", "$$(String", "\u2581s", "$$ch", "$$eme", "$$,", "\u2581int", "\u2581spec", "$$ified", "$$Port", "$$)", "\u2581{"], ["\u2581if", "\u2581(s", "$$p", "$$ec", "$$ified", "$$Port", "\u2581!=", "\u2581-1)", "\u2581{"], ["\u2581return", "\u2581spec", "$$ified", "$$Port", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(\"", "$$h", "$$tt", "$$p", "$$\"", "$$.", "$$e", "$$qual", "$$s", "$$I", "$$gnoreCase", "$$(s", "$$ch", "$$eme", "$$))", "\u2581{"], ["\u2581return", "\u25818", "$$0", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(\"", "$$h", "$$tt", "$$p", "$$s", "$$\"", "$$.", "$$e", "$$qual", "$$s", "$$I", "$$gnoreCase", "$$(s", "$$ch", "$$eme", "$$))", "\u2581{"], ["\u2581return", "\u25814", "$$4", "$$3", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual ListAssessmentTemplatesResponse ListAssessmentTemplates(ListAssessmentTemplatesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListAssessmentTemplatesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListAssessmentTemplatesResponseUnmarshaller.Instance;\n    return Invoke<ListAssessmentTemplatesResponse>(request, options);\n}\n", "java": "public ListAssessmentTemplatesResult listAssessmentTemplates(ListAssessmentTemplatesRequest request) {\n    request = beforeClientExecution(request);\n    return executeListAssessmentTemplates(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Assessment", "$$Templ", "$$ates", "$$Response", "\u2581List", "$$Assessment", "$$Templ", "$$ates", "$$(List", "$$Assessment", "$$Templ", "$$ates", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Assessment", "$$Templ", "$$ates", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Assessment", "$$Templ", "$$ates", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Assessment", "$$Templ", "$$ates", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Assessment", "$$Templ", "$$ates", "$$Result", "\u2581list", "$$Assessment", "$$Templ", "$$ates", "$$(List", "$$Assessment", "$$Templ", "$$ates", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Assessment", "$$Templ", "$$ates", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual RestoreFromClusterSnapshotResponse RestoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = RestoreFromClusterSnapshotRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = RestoreFromClusterSnapshotResponseUnmarshaller.Instance;\n    return Invoke<RestoreFromClusterSnapshotResponse>(request, options);\n}\n", "java": "public Cluster restoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request) {\n    request = beforeClientExecution(request);\n    return executeRestoreFromClusterSnapshot(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581R", "$$estore", "$$From", "$$ClusterSnapshot", "$$Response", "\u2581R", "$$estore", "$$From", "$$ClusterSnapshot", "$$(", "$$Rest", "$$ore", "$$From", "$$ClusterSnapshot", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581R", "$$estore", "$$From", "$$ClusterSnapshot", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581R", "$$estore", "$$From", "$$ClusterSnapshot", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Rest", "$$ore", "$$From", "$$ClusterSnapshot", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581C", "$$l", "$$uster", "\u2581r", "$$estore", "$$From", "$$ClusterSnapshot", "$$(", "$$Rest", "$$ore", "$$From", "$$ClusterSnapshot", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Rest", "$$ore", "$$From", "$$ClusterSnapshot", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void AddShape(HSSFShape shape) {\n    shape.Patriarch = (this.Patriarch);\n    shape.Parent = (this);\n    shapes.Add(shape);\n}\n", "java": "public void addShape(HSSFShape shape) {\n    shape.setPatriarch(this.getPatriarch());\n    shape.setParent(this);\n    shapes.add(shape);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Add", "$$Shape", "$$(HSSF", "$$Shape", "\u2581shape", "$$)", "\u2581{"], ["\u2581shape", "$$.", "$$P", "$$at", "$$ri", "$$arch", "\u2581=", "\u2581(this", "$$.", "$$P", "$$at", "$$ri", "$$arch", "$$)", "$$;"], ["\u2581shape", "$$.", "$$Parent", "\u2581=", "\u2581(this)", "$$;"], ["\u2581sh", "$$ap", "$$es", "$$.Add(", "$$shape", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581add", "$$Shape", "$$(HSSF", "$$Shape", "\u2581shape", "$$)", "\u2581{"], ["\u2581shape", "$$.set", "$$P", "$$at", "$$ri", "$$arch", "$$(this", "$$.get", "$$P", "$$at", "$$ri", "$$arch", "$$())", "$$;"], ["\u2581shape", "$$.set", "$$Parent", "$$(this", "$$)", "$$;"], ["\u2581sh", "$$ap", "$$es", "$$.add(", "$$shape", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Equals(object o) {\n    if (this == o) return true;\n    if (o == null || GetType() != o.GetType()) return false;\n    FacetEntry that = (FacetEntry)o;\n    if (count != that.count) return false;\n    if (!value.Equals(that.value)) return false;\n    return true;\n}\n", "java": "public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n    FacetEntry that = (FacetEntry) o;\n    if (count != that.count) return false;\n    if (!value.equals(that.value)) return false;\n    return true;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Equals(object", "\u2581o)", "\u2581{"], ["\u2581if", "\u2581(this", "\u2581==", "\u2581o)", "\u2581return", "\u2581true", "$$;"], ["\u2581if", "\u2581(o", "\u2581==", "\u2581null", "\u2581||", "\u2581Get", "$$Type()", "\u2581!=", "\u2581o", "$$.Get", "$$Type", "$$())", "\u2581return", "\u2581false", "$$;"], ["\u2581F", "$$acet", "$$Entry", "\u2581th", "$$at", "\u2581=", "\u2581(", "$$Facet", "$$Entry", "$$)o", "$$;"], ["\u2581if", "\u2581(count", "\u2581!=", "\u2581th", "$$at", "$$.", "$$count", "$$)", "\u2581return", "\u2581false", "$$;"], ["\u2581if", "\u2581(!", "$$value", "$$.Equals(", "$$th", "$$at", "$$.value", "$$))", "\u2581return", "\u2581false", "$$;"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581equals(Object", "\u2581o)", "\u2581{"], ["\u2581if", "\u2581(this", "\u2581==", "\u2581o)", "\u2581return", "\u2581true", "$$;"], ["\u2581if", "\u2581(o", "\u2581==", "\u2581null", "\u2581||", "\u2581get", "$$Class", "$$()", "\u2581!=", "\u2581o", "$$.get", "$$Class", "$$())", "\u2581return", "\u2581false", "$$;"], ["\u2581F", "$$acet", "$$Entry", "\u2581th", "$$at", "\u2581=", "\u2581(", "$$Facet", "$$Entry", "$$)", "\u2581o", "$$;"], ["\u2581if", "\u2581(count", "\u2581!=", "\u2581th", "$$at", "$$.", "$$count", "$$)", "\u2581return", "\u2581false", "$$;"], ["\u2581if", "\u2581(!", "$$value", "$$.equals(", "$$th", "$$at", "$$.value", "$$))", "\u2581return", "\u2581false", "$$;"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]]}, {"cs": "public static int Prev(byte[] b, int ptr, char chrA) {\n    if (ptr == b.Length) {\n        --ptr;\n    }\n    while (ptr >= 0) {\n        if (b[ptr--] == chrA) {\n            return ptr;\n        }\n    }\n    return ptr;\n}\n", "java": "public static final int prev(byte[] b, int ptr, char chrA) {\n    if (ptr == b.length)--ptr;\n    while (ptr >= 0) {\n        if (b[ptr--] == chrA)return ptr;\n    }\n    return ptr;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581P", "$$re", "$$v", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581ptr", "$$,", "\u2581char", "\u2581ch", "$$r", "$$A", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$ptr", "\u2581==", "\u2581b", "$$.Length)", "\u2581{"], ["\u2581-", "$$-", "$$ptr", "$$;"], ["\u2581}"], ["\u2581while", "\u2581(", "$$ptr", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581if", "\u2581(b", "$$[", "$$ptr", "$$--", "$$]", "\u2581==", "\u2581ch", "$$r", "$$A", "$$)", "\u2581{"], ["\u2581return", "\u2581ptr", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581ptr", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581final", "\u2581int", "\u2581pre", "$$v", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581ptr", "$$,", "\u2581char", "\u2581ch", "$$r", "$$A", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$ptr", "\u2581==", "\u2581b", "$$.length)", "$$--", "$$ptr", "$$;"], ["\u2581while", "\u2581(", "$$ptr", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581if", "\u2581(b", "$$[", "$$ptr", "$$--", "$$]", "\u2581==", "\u2581ch", "$$r", "$$A", "$$)return", "\u2581ptr", "$$;"], ["\u2581}"], ["\u2581return", "\u2581ptr", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool IsDeltaRepresentation() {\n    return deltaBase != null;\n}\n", "java": "public final boolean isDeltaRepresentation() {\n    return deltaBase != null;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581Is", "$$Delta", "$$Re", "$$p", "$$res", "$$ent", "$$ation", "$$()", "\u2581{"], ["\u2581return", "\u2581delta", "$$Base", "\u2581!=", "\u2581null", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581boolean", "\u2581is", "$$Delta", "$$Re", "$$p", "$$res", "$$ent", "$$ation", "$$()", "\u2581{"], ["\u2581return", "\u2581delta", "$$Base", "\u2581!=", "\u2581null", "$$;"], ["\u2581}"]]}, {"cs": "public virtual IToken EmitEOF() {\n    int cpos = Column;\n    int line = Line;\n    IToken eof = _factory.Create(_tokenFactorySourcePair, TokenConstants.EOF, null, TokenConstants.DefaultChannel, _input.Index, _input.Index - 1, line, cpos);\n    Emit(eof);\n    return eof;\n}\n", "java": "public Token emitEOF() {\n    int cpos = getCharPositionInLine();\n    int line = getLine();\n    Token eof = _factory.create(_tokenFactorySourcePair, Token.EOF, null, Token.DEFAULT_CHANNEL, _input.index(), _input.index()-1,line, cpos);\n    emit(eof);\n    return eof;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581I", "$$Token", "\u2581E", "$$mit", "$$E", "$$OF", "$$()", "\u2581{"], ["\u2581int", "\u2581c", "$$pos", "\u2581=", "\u2581", "$$Column", "$$;"], ["\u2581int", "\u2581line", "\u2581=", "\u2581L", "$$ine", "$$;"], ["\u2581I", "$$Token", "\u2581e", "$$of", "\u2581=", "\u2581_", "$$fa", "$$ctory", "$$.Create", "$$(_", "$$token", "$$Factory", "$$Source", "$$Pair", "$$,", "\u2581Token", "$$Constants.", "$$E", "$$OF", "$$,", "\u2581null", "$$,", "\u2581Token", "$$Constants.", "$$Default", "$$Channel", "$$,", "\u2581_", "$$input", "$$.", "$$Index,", "\u2581_", "$$input", "$$.", "$$Index", "\u2581-", "\u25811,", "\u2581line", "$$,", "\u2581c", "$$po", "$$s)", "$$;"], ["\u2581E", "$$mit", "$$(e", "$$of", "$$)", "$$;"], ["\u2581return", "\u2581e", "$$of", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Token", "\u2581e", "$$mit", "$$E", "$$OF", "$$()", "\u2581{"], ["\u2581int", "\u2581c", "$$pos", "\u2581=", "\u2581get", "$$Char", "$$Position", "$$In", "$$Line", "$$()", "$$;"], ["\u2581int", "\u2581line", "\u2581=", "\u2581get", "$$Line", "$$()", "$$;"], ["\u2581Token", "\u2581e", "$$of", "\u2581=", "\u2581_", "$$fa", "$$ctory", "$$.create", "$$(_", "$$token", "$$Factory", "$$Source", "$$Pair", "$$,", "\u2581Token", "$$.E", "$$OF", "$$,", "\u2581null", "$$,", "\u2581Token", "$$.", "$$DEFAULT_", "$$CH", "$$AN", "$$N", "$$E", "$$L", "$$,", "\u2581_", "$$input", "$$.", "$$index", "$$(),", "\u2581_", "$$input", "$$.", "$$index", "$$()", "$$-", "$$1,", "$$line", "$$,", "\u2581c", "$$po", "$$s)", "$$;"], ["\u2581e", "$$mit", "$$(e", "$$of", "$$)", "$$;"], ["\u2581return", "\u2581e", "$$of", "$$;"], ["\u2581}"]]}, {"cs": "public UpdateUserRequest(string userName) {\n    _userName = userName;\n}\n", "java": "public UpdateUserRequest(String userName) {\n    setUserName(userName);\n}\n", "cs_t": [["\u2581public", "\u2581Update", "$$User", "$$Request(string", "\u2581user", "$$Name)", "\u2581{"], ["\u2581_", "$$user", "$$Name", "\u2581=", "\u2581user", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$User", "$$Request(String", "\u2581user", "$$Name)", "\u2581{"], ["\u2581set", "$$User", "$$Name(", "$$user", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual RevFilter Negate() {\n    return NotRevFilter.Create(this);\n}\n", "java": "public RevFilter negate() {\n    return NotRevFilter.create(this);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581RevFilter", "\u2581N", "$$e", "$$gate", "$$()", "\u2581{"], ["\u2581return", "\u2581Not", "$$RevFilter", "$$.Create", "$$(this", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581RevFilter", "\u2581n", "$$e", "$$gate", "$$()", "\u2581{"], ["\u2581return", "\u2581Not", "$$RevFilter", "$$.create", "$$(this", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetTagger(PersonIdent taggerIdent) {\n    tagger = taggerIdent;\n}\n", "java": "public void setTagger(PersonIdent taggerIdent) {\n    tagger = taggerIdent;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Tag", "$$g", "$$er(", "$$Per", "$$son", "$$Ident", "\u2581tag", "$$ger", "$$Ident", "$$)", "\u2581{"], ["\u2581tag", "$$ger", "\u2581=", "\u2581tag", "$$ger", "$$Ident", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Tag", "$$g", "$$er(", "$$Per", "$$son", "$$Ident", "\u2581tag", "$$ger", "$$Ident", "$$)", "\u2581{"], ["\u2581tag", "$$ger", "\u2581=", "\u2581tag", "$$ger", "$$Ident", "$$;"], ["\u2581}"]]}, {"cs": "public static BufferSize Automatic() {\n    long max, total, free;\n    using (var proc = Process.GetCurrentProcess()) {\n        max = proc.PeakVirtualMemorySize64;\n        total = proc.VirtualMemorySize64;\n        free = proc.PrivateMemorySize64;\n    }\n    long totalAvailableBytes = max - total + free;\n    long sortBufferByteSize = free / 2;\n    long minBufferSizeBytes = MIN_BUFFER_SIZE_MB * MB;\n    if (sortBufferByteSize < minBufferSizeBytes || totalAvailableBytes > 10 * minBufferSizeBytes) {\n        if (totalAvailableBytes / 2 > minBufferSizeBytes) {\n            sortBufferByteSize = totalAvailableBytes / 2;\n        }\n        else {\n            sortBufferByteSize = Math.Max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);\n        }\n    }\n    return new BufferSize(Math.Min((long)int.MaxValue, sortBufferByteSize));\n}\n", "java": "public static BufferSize automatic() {\n    Runtime rt = Runtime.getRuntime();\n    final long max = rt.maxMemory();\n    final long total = rt.totalMemory();\n    final long free = rt.freeMemory();\n    final long totalAvailableBytes = max - total + free;\n    long sortBufferByteSize = free/2;\n    final long minBufferSizeBytes = MIN_BUFFER_SIZE_MB*MB;\n    if (sortBufferByteSize <  minBufferSizeBytes|| totalAvailableBytes > 10 * minBufferSizeBytes) {\n        if (totalAvailableBytes/2 > minBufferSizeBytes) {\n            sortBufferByteSize = totalAvailableBytes/2;\n        }\n        else {\n            sortBufferByteSize = Math.max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);\n        }\n    }\n    return new BufferSize(Math.min((long)Integer.MAX_VALUE, sortBufferByteSize));\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581Buffer", "$$Size", "\u2581A", "$$ut", "$$o", "$$ma", "$$tic", "$$()", "\u2581{"], ["\u2581long", "\u2581max", "$$,", "\u2581total", "$$,", "\u2581f", "$$ree", "$$;"], ["\u2581u", "$$sing", "\u2581(v", "$$ar", "\u2581pro", "$$c", "\u2581=", "\u2581", "$$Pro", "$$ces", "$$s.Get", "$$Current", "$$Process", "$$())", "\u2581{"], ["\u2581max", "\u2581=", "\u2581pro", "$$c.", "$$P", "$$e", "$$a", "$$k", "$$Virtual", "$$Mem", "$$ory", "$$Size", "$$64", "$$;"], ["\u2581total", "\u2581=", "\u2581pro", "$$c.", "$$Virtual", "$$Mem", "$$ory", "$$Size", "$$64", "$$;"], ["\u2581f", "$$ree", "\u2581=", "\u2581pro", "$$c.", "$$Private", "$$Mem", "$$ory", "$$Size", "$$64", "$$;"], ["\u2581}"], ["\u2581long", "\u2581total", "$$Avail", "$$able", "$$Bytes", "\u2581=", "\u2581max", "\u2581-", "\u2581total", "\u2581+", "\u2581f", "$$ree", "$$;"], ["\u2581long", "\u2581s", "$$ort", "$$Buffer", "$$Byte", "$$Size", "\u2581=", "\u2581f", "$$ree", "\u2581/", "\u25812", "$$;"], ["\u2581long", "\u2581min", "$$Buffer", "$$Size", "$$Bytes", "\u2581=", "\u2581M", "$$IN", "$$_B", "$$U", "$$FF", "$$ER", "$$_", "$$SIZ", "$$E_", "$$M", "$$B", "\u2581*", "\u2581M", "$$B", "$$;"], ["\u2581if", "\u2581(s", "$$ort", "$$Buffer", "$$Byte", "$$Size", "\u2581<", "\u2581min", "$$Buffer", "$$Size", "$$Bytes", "\u2581||", "\u2581total", "$$Avail", "$$able", "$$Bytes", "\u2581>", "\u258110", "\u2581*", "\u2581min", "$$Buffer", "$$Size", "$$Bytes", "$$)", "\u2581{"], ["\u2581if", "\u2581(t", "$$otal", "$$Avail", "$$able", "$$Bytes", "\u2581/", "\u25812", "\u2581>", "\u2581min", "$$Buffer", "$$Size", "$$Bytes", "$$)", "\u2581{"], ["\u2581s", "$$ort", "$$Buffer", "$$Byte", "$$Size", "\u2581=", "\u2581total", "$$Avail", "$$able", "$$Bytes", "\u2581/", "\u25812", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581s", "$$ort", "$$Buffer", "$$Byte", "$$Size", "\u2581=", "\u2581Math.", "$$Max", "$$(", "$$A", "$$B", "$$S", "$$O", "$$LU", "$$TE", "$$_M", "$$IN", "$$_", "$$S", "$$OR", "$$T_", "$$B", "$$U", "$$FF", "$$ER", "$$_SIZE", "$$,", "\u2581s", "$$ort", "$$Buffer", "$$Byte", "$$Size)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581new", "\u2581Buffer", "$$Size", "$$(", "$$Math.", "$$Min", "$$((", "$$long", "$$)", "$$int", "$$.", "$$Max", "$$Value", "$$,", "\u2581s", "$$ort", "$$Buffer", "$$Byte", "$$Size", "$$))", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581Buffer", "$$Size", "\u2581a", "$$ut", "$$o", "$$ma", "$$tic", "$$()", "\u2581{"], ["\u2581Runtime", "\u2581r", "$$t", "\u2581=", "\u2581Runtime", "$$.get", "$$Runtime", "$$()", "$$;"], ["\u2581final", "\u2581long", "\u2581max", "\u2581=", "\u2581r", "$$t", "$$.", "$$max", "$$Mem", "$$ory", "$$()", "$$;"], ["\u2581final", "\u2581long", "\u2581total", "\u2581=", "\u2581r", "$$t", "$$.", "$$t", "$$otal", "$$Mem", "$$ory", "$$()", "$$;"], ["\u2581final", "\u2581long", "\u2581f", "$$ree", "\u2581=", "\u2581r", "$$t", "$$.f", "$$ree", "$$Mem", "$$ory", "$$()", "$$;"], ["\u2581final", "\u2581long", "\u2581total", "$$Avail", "$$able", "$$Bytes", "\u2581=", "\u2581max", "\u2581-", "\u2581total", "\u2581+", "\u2581f", "$$ree", "$$;"], ["\u2581long", "\u2581s", "$$ort", "$$Buffer", "$$Byte", "$$Size", "\u2581=", "\u2581f", "$$ree", "$$/", "$$2", "$$;"], ["\u2581final", "\u2581long", "\u2581min", "$$Buffer", "$$Size", "$$Bytes", "\u2581=", "\u2581M", "$$IN", "$$_B", "$$U", "$$FF", "$$ER", "$$_", "$$SIZ", "$$E_", "$$M", "$$B", "$$*", "$$M", "$$B", "$$;"], ["\u2581if", "\u2581(s", "$$ort", "$$Buffer", "$$Byte", "$$Size", "\u2581<", "\u2581", "\u2581min", "$$Buffer", "$$Size", "$$Bytes", "$$|", "$$|", "\u2581total", "$$Avail", "$$able", "$$Bytes", "\u2581>", "\u258110", "\u2581*", "\u2581min", "$$Buffer", "$$Size", "$$Bytes", "$$)", "\u2581{"], ["\u2581if", "\u2581(t", "$$otal", "$$Avail", "$$able", "$$Bytes", "$$/", "$$2", "\u2581>", "\u2581min", "$$Buffer", "$$Size", "$$Bytes", "$$)", "\u2581{"], ["\u2581s", "$$ort", "$$Buffer", "$$Byte", "$$Size", "\u2581=", "\u2581total", "$$Avail", "$$able", "$$Bytes", "$$/", "$$2", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581s", "$$ort", "$$Buffer", "$$Byte", "$$Size", "\u2581=", "\u2581Math.", "$$max", "$$(", "$$A", "$$B", "$$S", "$$O", "$$LU", "$$TE", "$$_M", "$$IN", "$$_", "$$S", "$$OR", "$$T_", "$$B", "$$U", "$$FF", "$$ER", "$$_SIZE", "$$,", "\u2581s", "$$ort", "$$Buffer", "$$Byte", "$$Size)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581new", "\u2581Buffer", "$$Size", "$$(", "$$Math.", "$$min", "$$((", "$$long", "$$)", "$$Integ", "$$er.", "$$M", "$$AX_", "$$VALU", "$$E", "$$,", "\u2581s", "$$ort", "$$Buffer", "$$Byte", "$$Size", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public static int TrimTrailingWhitespace(byte[] raw, int start, int end) {\n    int ptr = end - 1;\n    while (start <= ptr && IsWhitespace(raw[ptr])) {\n        ptr--;\n    }\n    return ptr + 1;\n}\n", "java": "public static int trimTrailingWhitespace(byte[] raw, int start, int end) {\n    int ptr = end - 1;\n    while (start <= ptr && isWhitespace(raw[ptr]))ptr--;\n    return ptr + 1;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581T", "$$ri", "$$m", "$$Tra", "$$il", "$$ing", "$$W", "$$h", "$$it", "$$es", "$$pace", "$$(byte[]", "\u2581raw", "$$,", "\u2581int", "\u2581start,", "\u2581int", "\u2581end)", "\u2581{"], ["\u2581int", "\u2581ptr", "\u2581=", "\u2581end", "\u2581-", "\u25811", "$$;"], ["\u2581while", "\u2581(start", "\u2581<=", "\u2581ptr", "\u2581&&", "\u2581Is", "$$W", "$$h", "$$it", "$$es", "$$pace", "$$(", "$$raw", "$$[", "$$ptr", "$$]", "$$))", "\u2581{"], ["\u2581ptr", "$$--", "$$;"], ["\u2581}"], ["\u2581return", "\u2581ptr", "\u2581+", "\u25811", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581t", "$$ri", "$$m", "$$Tra", "$$il", "$$ing", "$$W", "$$h", "$$it", "$$es", "$$pace", "$$(byte[]", "\u2581raw", "$$,", "\u2581int", "\u2581start,", "\u2581int", "\u2581end)", "\u2581{"], ["\u2581int", "\u2581ptr", "\u2581=", "\u2581end", "\u2581-", "\u25811", "$$;"], ["\u2581while", "\u2581(start", "\u2581<=", "\u2581ptr", "\u2581&&", "\u2581is", "$$W", "$$h", "$$it", "$$es", "$$pace", "$$(", "$$raw", "$$[", "$$ptr", "$$]", "$$))", "$$ptr", "$$--", "$$;"], ["\u2581return", "\u2581ptr", "\u2581+", "\u25811", "$$;"], ["\u2581}"]]}, {"cs": "public TopMarginRecord(RecordInputStream in1) {\n    field_1_margin = in1.ReadDouble();\n}\n", "java": "public TopMarginRecord( RecordInputStream in ) {\n    field_1_margin = in.readDouble();\n}\n", "cs_t": [["\u2581public", "\u2581To", "$$p", "$$M", "$$argin", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581field_1_", "$$m", "$$argin", "\u2581=", "\u2581in1.Read", "$$Double", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581To", "$$p", "$$M", "$$argin", "$$Record(", "\u2581", "$$RecordInputStream", "\u2581in", "\u2581)", "\u2581{"], ["\u2581field_1_", "$$m", "$$argin", "\u2581=", "\u2581in.read", "$$Double", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType) {\n    _infoType = infoType;\n}\n", "java": "public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType) {\n    setInfoType(infoType.toString());\n}\n", "cs_t": [["\u2581public", "\u2581R", "$$et", "$$rie", "$$ve", "$$Environment", "$$Info", "$$Request", "$$(", "$$Environment", "$$Info", "$$Type", "\u2581info", "$$Type", "$$)", "\u2581{"], ["\u2581_in", "$$fo", "$$Type", "\u2581=", "\u2581info", "$$Type", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581R", "$$et", "$$rie", "$$ve", "$$Environment", "$$Info", "$$Request", "$$(", "$$Environment", "$$Info", "$$Type", "\u2581info", "$$Type", "$$)", "\u2581{"], ["\u2581set", "$$Info", "$$Type", "$$(in", "$$fo", "$$Type", "$$.toString()", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreatePlayerSessionsResponse CreatePlayerSessions(CreatePlayerSessionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreatePlayerSessionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreatePlayerSessionsResponseUnmarshaller.Instance;\n    return Invoke<CreatePlayerSessionsResponse>(request, options);\n}\n", "java": "public CreatePlayerSessionsResult createPlayerSessions(CreatePlayerSessionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreatePlayerSessions(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$P", "$$lay", "$$er", "$$Session", "$$sResponse", "\u2581Create", "$$P", "$$lay", "$$er", "$$Session", "$$s(", "$$Create", "$$P", "$$lay", "$$er", "$$Session", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$P", "$$lay", "$$er", "$$Session", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$P", "$$lay", "$$er", "$$Session", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$P", "$$lay", "$$er", "$$Session", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$P", "$$lay", "$$er", "$$Session", "$$sResult", "\u2581create", "$$P", "$$lay", "$$er", "$$Session", "$$s(", "$$Create", "$$P", "$$lay", "$$er", "$$Session", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$P", "$$lay", "$$er", "$$Session", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateProxySessionResponse CreateProxySession(CreateProxySessionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateProxySessionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateProxySessionResponseUnmarshaller.Instance;\n    return Invoke<CreateProxySessionResponse>(request, options);\n}\n", "java": "public CreateProxySessionResult createProxySession(CreateProxySessionRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateProxySession(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Proxy", "$$Session", "$$Response", "\u2581Create", "$$Proxy", "$$Session", "$$(Create", "$$Proxy", "$$Session", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Proxy", "$$Session", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Proxy", "$$Session", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Proxy", "$$Session", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Proxy", "$$Session", "$$Result", "\u2581create", "$$Proxy", "$$Session", "$$(Create", "$$Proxy", "$$Session", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Proxy", "$$Session", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int GetObjectType() {\n    return type;\n}\n", "java": "public int getObjectType() {\n    return type;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581Get", "$$Object", "$$Type()", "\u2581{"], ["\u2581return", "\u2581type", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$Object", "$$Type()", "\u2581{"], ["\u2581return", "\u2581type", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string GetScheme() {\n    return scheme;\n}\n", "java": "public String getScheme() {\n    return scheme;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581Get", "$$Sch", "$$eme", "$$()", "\u2581{"], ["\u2581return", "\u2581s", "$$ch", "$$eme", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Sch", "$$eme", "$$()", "\u2581{"], ["\u2581return", "\u2581s", "$$ch", "$$eme", "$$;"], ["\u2581}"]]}, {"cs": "public override void Characters(char[] ch, int start, int length) {\n    contents.Append(ch, start, length);\n}\n", "java": "public void characters(char[] ch, int start, int length) {\n    contents.append(ch, start, length);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Character", "$$s(", "$$char", "$$[]", "\u2581ch", "$$,", "\u2581int", "\u2581start,", "\u2581int", "\u2581length)", "\u2581{"], ["\u2581con", "$$tent", "$$s", "$$.Append(", "$$ch", "$$,", "\u2581start,", "\u2581length)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581char", "$$acter", "$$s(", "$$char", "$$[]", "\u2581ch", "$$,", "\u2581int", "\u2581start,", "\u2581int", "\u2581length)", "\u2581{"], ["\u2581con", "$$tent", "$$s.", "$$ap", "$$pend(", "$$ch", "$$,", "\u2581start,", "\u2581length)", "$$;"], ["\u2581}"]]}, {"cs": "public FetchAlbumTagPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"FetchAlbumTagPhotos\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public FetchAlbumTagPhotosRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"FetchAlbumTagPhotos\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581F", "$$etch", "$$Al", "$$b", "$$um", "$$Tag", "$$Photo", "$$sRequest", "$$():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$F", "$$etch", "$$Al", "$$b", "$$um", "$$Tag", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581F", "$$etch", "$$Al", "$$b", "$$um", "$$Tag", "$$Photo", "$$sRequest", "$$()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$F", "$$etch", "$$Al", "$$b", "$$um", "$$Tag", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteMembersResponse DeleteMembers(DeleteMembersRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteMembersRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteMembersResponseUnmarshaller.Instance;\n    return Invoke<DeleteMembersResponse>(request, options);\n}\n", "java": "public DeleteMembersResult deleteMembers(DeleteMembersRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteMembers(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Member", "$$sResponse", "\u2581Delete", "$$Member", "$$s(", "$$Delete", "$$Member", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Member", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Member", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Member", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Member", "$$sResult", "\u2581delete", "$$Member", "$$s(", "$$Delete", "$$Member", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Member", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetContactReachabilityStatusResponse GetContactReachabilityStatus(GetContactReachabilityStatusRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetContactReachabilityStatusRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetContactReachabilityStatusResponseUnmarshaller.Instance;\n    return Invoke<GetContactReachabilityStatusResponse>(request, options);\n}\n", "java": "public GetContactReachabilityStatusResult getContactReachabilityStatus(GetContactReachabilityStatusRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetContactReachabilityStatus(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Contact", "$$Re", "$$ach", "$$ability", "$$Statu", "$$sResponse", "\u2581Get", "$$Contact", "$$Re", "$$ach", "$$ability", "$$Statu", "$$s(Get", "$$Contact", "$$Re", "$$ach", "$$ability", "$$Statu", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Contact", "$$Re", "$$ach", "$$ability", "$$Status", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Contact", "$$Re", "$$ach", "$$ability", "$$Status", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Contact", "$$Re", "$$ach", "$$ability", "$$Statu", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Contact", "$$Re", "$$ach", "$$ability", "$$Statu", "$$sResult", "\u2581get", "$$Contact", "$$Re", "$$ach", "$$ability", "$$Statu", "$$s(Get", "$$Contact", "$$Re", "$$ach", "$$ability", "$$Statu", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Contact", "$$Re", "$$ach", "$$ability", "$$Status", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool remove(object o) {\n    lock (this._enclosing) {\n        int oldSize = this._enclosing._size;\n        this._enclosing.remove(o);\n        return this._enclosing._size != oldSize;\n    }\n}\n", "java": "@Override public boolean remove(Object o) {\n    return Impl.this.remove(o) != null;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581remove", "$$(object", "\u2581o)", "\u2581{"], ["\u2581lock", "\u2581(this", "$$._", "$$enclosing", "$$)", "\u2581{"], ["\u2581int", "\u2581old", "$$Size", "\u2581=", "\u2581this._enclosing", "$$._", "$$size", "$$;"], ["\u2581this._enclosing", "$$.remove", "$$(o", "$$)", "$$;"], ["\u2581return", "\u2581this._enclosing", "$$._", "$$size", "\u2581!=", "\u2581old", "$$Size", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581@Override", "\u2581public", "\u2581boolean", "\u2581remove", "$$(Object", "\u2581o)", "\u2581{"], ["\u2581return", "\u2581I", "$$mpl", "$$.", "$$this", "$$.remove", "$$(o", "$$)", "\u2581!=", "\u2581null", "$$;"], ["\u2581}"]]}, {"cs": "public virtual E last() {\n    return backingMap.lastKey();\n}\n", "java": "public E last() {\n    return backingMap.lastKey();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581E", "\u2581last", "$$()", "\u2581{"], ["\u2581return", "\u2581b", "$$acking", "$$Map.", "$$last", "$$Key", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581E", "\u2581last", "$$()", "\u2581{"], ["\u2581return", "\u2581b", "$$acking", "$$Map.", "$$last", "$$Key", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateStreamingDistributionResponse CreateStreamingDistribution(CreateStreamingDistributionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateStreamingDistributionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateStreamingDistributionResponseUnmarshaller.Instance;\n    return Invoke<CreateStreamingDistributionResponse>(request, options);\n}\n", "java": "public CreateStreamingDistributionResult createStreamingDistribution(CreateStreamingDistributionRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateStreamingDistribution(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$StreamingDistribution", "$$Response", "\u2581Create", "$$StreamingDistribution", "$$(Create", "$$StreamingDistribution", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$StreamingDistribution", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$StreamingDistribution", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$StreamingDistribution", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$StreamingDistribution", "$$Result", "\u2581create", "$$StreamingDistribution", "$$(Create", "$$StreamingDistribution", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$StreamingDistribution", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public bool isAbsolute() {\n    return absolute;\n}\n", "java": "public boolean isAbsolute() {\n    return absolute;\n}\n", "cs_t": [["\u2581public", "\u2581bool", "\u2581is", "$$A", "$$bs", "$$ol", "$$ute", "$$()", "\u2581{"], ["\u2581return", "\u2581", "$$ab", "$$s", "$$ol", "$$ute", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$A", "$$bs", "$$ol", "$$ute", "$$()", "\u2581{"], ["\u2581return", "\u2581", "$$ab", "$$s", "$$ol", "$$ute", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DisableAddOnResponse DisableAddOn(DisableAddOnRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DisableAddOnRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DisableAddOnResponseUnmarshaller.Instance;\n    return Invoke<DisableAddOnResponse>(request, options);\n}\n", "java": "public DisableAddOnResult disableAddOn(DisableAddOnRequest request) {\n    request = beforeClientExecution(request);\n    return executeDisableAddOn(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Disable", "$$Add", "$$On", "$$Response", "\u2581Disable", "$$Add", "$$On", "$$(", "$$Disable", "$$Add", "$$On", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Disable", "$$Add", "$$On", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Disable", "$$Add", "$$On", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Disable", "$$Add", "$$On", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Disable", "$$Add", "$$On", "$$Result", "\u2581dis", "$$able", "$$Add", "$$On", "$$(", "$$Disable", "$$Add", "$$On", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Disable", "$$Add", "$$On", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeAliasResponse DescribeAlias(DescribeAliasRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeAliasRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeAliasResponseUnmarshaller.Instance;\n    return Invoke<DescribeAliasResponse>(request, options);\n}\n", "java": "public DescribeAliasResult describeAlias(DescribeAliasRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeAlias(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Alias", "$$Response", "\u2581Describe", "$$Ali", "$$a", "$$s(Describe", "$$Alias", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Alias", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Alias", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Alias", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Alias", "$$Result", "\u2581describe", "$$Ali", "$$a", "$$s(Describe", "$$Alias", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Alias", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Next(int delta) {\n    while (--delta >= 0) {\n        if (currentSubtree != null) {\n            ptr += currentSubtree.GetEntrySpan();\n        }\n        else {\n            ptr++;\n        }\n        if (Eof) {\n            break;\n        }\n        ParseEntry();\n    }\n}\n", "java": "public void next(int delta) {\n    while (--delta >= 0) {\n        if (currentSubtree != null)ptr += currentSubtree.getEntrySpan();\n        elseptr++;\n        if (eof())break;\n        parseEntry();\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Next", "$$(int", "\u2581delta", "$$)", "\u2581{"], ["\u2581while", "\u2581(", "$$--", "$$d", "$$elta", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581if", "\u2581(c", "$$urrent", "$$Sub", "$$t", "$$ree", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581ptr", "\u2581+=", "\u2581current", "$$Sub", "$$t", "$$ree", "$$.Get", "$$Entry", "$$Span", "$$()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581ptr", "$$++", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$E", "$$of", "$$)", "\u2581{"], ["\u2581break", "$$;"], ["\u2581}"], ["\u2581Parse", "$$Entry", "$$()", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581next", "$$(int", "\u2581delta", "$$)", "\u2581{"], ["\u2581while", "\u2581(", "$$--", "$$d", "$$elta", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581if", "\u2581(c", "$$urrent", "$$Sub", "$$t", "$$ree", "\u2581!=", "\u2581null)", "$$ptr", "\u2581+=", "\u2581current", "$$Sub", "$$t", "$$ree", "$$.get", "$$Entry", "$$Span", "$$()", "$$;"], ["\u2581else", "$$ptr", "$$++", "$$;"], ["\u2581if", "\u2581(e", "$$of", "$$())", "$$b", "$$reak", "$$;"], ["\u2581par", "$$se", "$$Entry", "$$()", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override RevFilter Clone() {\n    return new AndRevFilter.Binary(a.Clone(), b.Clone());\n}\n", "java": "public RevFilter clone() {\n    return new Binary(a.clone(), b.clone());\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581RevFilter", "\u2581Clone()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581An", "$$d", "$$RevFilter", "$$.B", "$$inary", "$$(a", "$$.", "$$Clone", "$$(),", "\u2581b.", "$$Clone", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581RevFilter", "\u2581clone()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581B", "$$inary", "$$(a", "$$.c", "$$lone", "$$(),", "\u2581b", "$$.c", "$$lone", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public override TextReader Create(TextReader input) {\n    return new PersianCharFilter(input);\n}\n", "java": "public Reader create(Reader input) {\n    return new PersianCharFilter(input);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581", "$$Text", "$$Reader", "\u2581Create", "$$(", "$$Text", "$$Reader", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581P", "$$er", "$$si", "$$an", "$$Char", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Reader", "\u2581create", "$$(", "$$Reader", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581P", "$$er", "$$si", "$$an", "$$Char", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string Option() {\n    return option;\n}\n", "java": "public String option() {\n    return option;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581", "$$Option", "$$()", "\u2581{"], ["\u2581return", "\u2581o", "$$ption", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581o", "$$ption", "$$()", "\u2581{"], ["\u2581return", "\u2581o", "$$ption", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    var sb = new StringBuilder(\"[\");\n    foreach (var item in this) {\n        if (sb.Length > 1) {\n            sb.Append(\", \");\n        }\n        sb.Append(item);\n    }\n    return sb.Append(']').ToString();\n}\n", "java": "public String toString() {\n    final StringBuilder sb = new StringBuilder(\"[\");\n    for (Object item : this) {\n        if (sb.length()>1) sb.append(\", \");\n        if (item instanceof char[]) {\n            sb.append((char[]) item);\n        }\n        else {\n            sb.append(item);\n        }\n    }\n    return sb.append(']').toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581var", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$(\"", "$$[", "$$\")", "$$;"], ["\u2581foreach", "\u2581(v", "$$ar", "\u2581i", "$$tem", "\u2581in", "\u2581this", "$$)", "\u2581{"], ["\u2581if", "\u2581(s", "$$b", "$$.Length", "\u2581>", "\u25811)", "\u2581{"], ["\u2581sb.Append(\"", "$$,", "\u2581\")", "$$;"], ["\u2581}"], ["\u2581sb.Append(", "$$i", "$$tem", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581sb.Append(", "$$'", "$$]", "$$')", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581final", "\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$(\"", "$$[", "$$\")", "$$;"], ["\u2581for", "\u2581(", "$$Object", "\u2581i", "$$tem", "\u2581:", "\u2581this", "$$)", "\u2581{"], ["\u2581if", "\u2581(s", "$$b", "$$.length()", "$$>", "$$1)", "\u2581sb.append(\"", "$$,", "\u2581\")", "$$;"], ["\u2581if", "\u2581(i", "$$tem", "\u2581instanceof", "\u2581char[]", "$$)", "\u2581{"], ["\u2581sb.append(", "$$(char[]", "$$)", "\u2581i", "$$tem", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581sb.append(", "$$i", "$$tem", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581sb", "$$.append('", "$$]", "$$')", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeSignalingChannelResponse DescribeSignalingChannel(DescribeSignalingChannelRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeSignalingChannelRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeSignalingChannelResponseUnmarshaller.Instance;\n    return Invoke<DescribeSignalingChannelResponse>(request, options);\n}\n", "java": "public DescribeSignalingChannelResult describeSignalingChannel(DescribeSignalingChannelRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeSignalingChannel(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Sign", "$$aling", "$$Channel", "$$Response", "\u2581Describe", "$$Sign", "$$aling", "$$Channel", "$$(Describe", "$$Sign", "$$aling", "$$Channel", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Sign", "$$aling", "$$Channel", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Sign", "$$aling", "$$Channel", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Sign", "$$aling", "$$Channel", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Sign", "$$aling", "$$Channel", "$$Result", "\u2581describe", "$$Sign", "$$aling", "$$Channel", "$$(Describe", "$$Sign", "$$aling", "$$Channel", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Sign", "$$aling", "$$Channel", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual AttachStaticIpResponse AttachStaticIp(AttachStaticIpRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = AttachStaticIpRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = AttachStaticIpResponseUnmarshaller.Instance;\n    return Invoke<AttachStaticIpResponse>(request, options);\n}\n", "java": "public AttachStaticIpResult attachStaticIp(AttachStaticIpRequest request) {\n    request = beforeClientExecution(request);\n    return executeAttachStaticIp(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Attach", "$$St", "$$atic", "$$Ip", "$$Response", "\u2581Attach", "$$St", "$$atic", "$$Ip", "$$(", "$$Attach", "$$St", "$$atic", "$$Ip", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Attach", "$$St", "$$atic", "$$Ip", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Attach", "$$St", "$$atic", "$$Ip", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Attach", "$$St", "$$atic", "$$Ip", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Attach", "$$St", "$$atic", "$$Ip", "$$Result", "\u2581at", "$$tach", "$$St", "$$atic", "$$Ip", "$$(", "$$Attach", "$$St", "$$atic", "$$Ip", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Attach", "$$St", "$$atic", "$$Ip", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder sb = new StringBuilder(64);\n    CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);\n    CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);\n    sb.Append(GetType().Name);\n    sb.Append(\" [\").Append(crA.FormatAsString()).Append(':').Append(crB.FormatAsString()).Append(\"]\");\n    return sb.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder sb = new StringBuilder(64);\n    CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);\n    CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);\n    sb.append(getClass().getName());\n    sb.append(\" [\").append(crA.formatAsString()).append(':').append(crB.formatAsString()).append(\"]\");\n    return sb.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder(", "$$64", "$$)", "$$;"], ["\u2581Cell", "$$Reference", "\u2581cr", "$$A", "\u2581=", "\u2581new", "\u2581Cell", "$$Reference", "$$(_", "$$first", "$$RowIndex,", "\u2581_first", "$$Column", "$$Index,", "\u2581false", "$$,", "\u2581false", "$$)", "$$;"], ["\u2581Cell", "$$Reference", "\u2581cr", "$$B", "\u2581=", "\u2581new", "\u2581Cell", "$$Reference", "$$(_", "$$last", "$$RowIndex,", "\u2581_last", "$$Column", "$$Index,", "\u2581false", "$$,", "\u2581false", "$$)", "$$;"], ["\u2581sb.Append(", "$$Get", "$$Type().", "$$Name)", "$$;"], ["\u2581sb.Append(\"", "\u2581[", "$$\").Append(", "$$cr", "$$A", "$$.Format", "$$As", "$$String()", "$$)", "$$.Append('", "$$:", "$$')", "$$.Append(", "$$cr", "$$B", "$$.Format", "$$As", "$$String()", "$$)", "$$.Append(\"", "$$]", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder(", "$$64", "$$)", "$$;"], ["\u2581Cell", "$$Reference", "\u2581cr", "$$A", "\u2581=", "\u2581new", "\u2581Cell", "$$Reference", "$$(_", "$$first", "$$RowIndex,", "\u2581_first", "$$Column", "$$Index,", "\u2581false", "$$,", "\u2581false", "$$)", "$$;"], ["\u2581Cell", "$$Reference", "\u2581cr", "$$B", "\u2581=", "\u2581new", "\u2581Cell", "$$Reference", "$$(_", "$$last", "$$RowIndex,", "\u2581_last", "$$Column", "$$Index,", "\u2581false", "$$,", "\u2581false", "$$)", "$$;"], ["\u2581sb.append(", "$$get", "$$Class().get", "$$Name", "$$())", "$$;"], ["\u2581sb.append(\"", "\u2581[", "$$\").append(", "$$cr", "$$A", "$$.format", "$$As", "$$String()", "$$)", "$$.append('", "$$:", "$$')", "$$.append(", "$$cr", "$$B", "$$.format", "$$As", "$$String()", "$$)", "$$.append(\"", "$$]", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat,BloomFilterFactory bloomFilterFactory) : base() {\n    _delegatePostingsFormat = delegatePostingsFormat;\n    _bloomFilterFactory = bloomFilterFactory;\n}\n", "java": "public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat,BloomFilterFactory bloomFilterFactory) {\n    super(BLOOM_CODEC_NAME);\n    this.delegatePostingsFormat = delegatePostingsFormat;\n    this.bloomFilterFactory = bloomFilterFactory;\n}\n", "cs_t": [["\u2581public", "\u2581B", "$$lo", "$$om", "$$Filter", "$$ing", "$$Po", "$$stings", "$$Format", "$$(", "$$Po", "$$stings", "$$Format", "\u2581de", "$$legate", "$$Po", "$$stings", "$$Format", "$$,", "$$B", "$$lo", "$$om", "$$Filter", "$$Factory", "\u2581b", "$$lo", "$$om", "$$Filter", "$$Factory", "$$)", "\u2581:", "\u2581base", "$$()", "\u2581{"], ["\u2581_", "$$de", "$$legate", "$$Po", "$$stings", "$$Format", "\u2581=", "\u2581de", "$$legate", "$$Po", "$$stings", "$$Format", "$$;"], ["\u2581_b", "$$lo", "$$om", "$$Filter", "$$Factory", "\u2581=", "\u2581b", "$$lo", "$$om", "$$Filter", "$$Factory", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581B", "$$lo", "$$om", "$$Filter", "$$ing", "$$Po", "$$stings", "$$Format", "$$(", "$$Po", "$$stings", "$$Format", "\u2581de", "$$legate", "$$Po", "$$stings", "$$Format", "$$,", "$$B", "$$lo", "$$om", "$$Filter", "$$Factory", "\u2581b", "$$lo", "$$om", "$$Filter", "$$Factory", "$$)", "\u2581{"], ["\u2581super(", "$$B", "$$LO", "$$O", "$$M", "$$_", "$$CO", "$$DE", "$$C", "$$_", "$$N", "$$AM", "$$E", "$$)", "$$;"], ["\u2581this.", "$$de", "$$legate", "$$Po", "$$stings", "$$Format", "\u2581=", "\u2581de", "$$legate", "$$Po", "$$stings", "$$Format", "$$;"], ["\u2581this.", "$$b", "$$lo", "$$om", "$$Filter", "$$Factory", "\u2581=", "\u2581b", "$$lo", "$$om", "$$Filter", "$$Factory", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListTemplatesResponse ListTemplates(ListTemplatesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListTemplatesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListTemplatesResponseUnmarshaller.Instance;\n    return Invoke<ListTemplatesResponse>(request, options);\n}\n", "java": "public ListTemplatesResult listTemplates(ListTemplatesRequest request) {\n    request = beforeClientExecution(request);\n    return executeListTemplates(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Templ", "$$ates", "$$Response", "\u2581List", "$$Templ", "$$ates", "$$(List", "$$Templ", "$$ates", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Templ", "$$ates", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Templ", "$$ates", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Templ", "$$ates", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Templ", "$$ates", "$$Result", "\u2581list", "$$Templ", "$$ates", "$$(List", "$$Templ", "$$ates", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Templ", "$$ates", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public TimerThread(long resolution, Counter counter): base(THREAD_NAME) {\n    this.resolution = resolution;\n    this.counter = counter;\n    this.IsBackground = (true);\n}\n", "java": "public TimerThread(long resolution, Counter counter) {\n    super(THREAD_NAME);\n    this.resolution = resolution;\n    this.counter = counter;\n    this.setDaemon(true);\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Tim", "$$er", "$$Th", "$$rea", "$$d(", "$$long", "\u2581res", "$$olution", "$$,", "\u2581", "$$Co", "$$un", "$$ter", "\u2581co", "$$un", "$$ter", "$$):", "\u2581base", "$$(", "$$TH", "$$RE", "$$A", "$$D_", "$$N", "$$AM", "$$E", "$$)", "\u2581{"], ["\u2581this.", "$$res", "$$olution", "\u2581=", "\u2581res", "$$olution", "$$;"], ["\u2581this.", "$$co", "$$un", "$$ter", "\u2581=", "\u2581co", "$$un", "$$ter", "$$;"], ["\u2581this.", "$$Is", "$$Back", "$$ground", "\u2581=", "\u2581(true)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Tim", "$$er", "$$Th", "$$rea", "$$d(", "$$long", "\u2581res", "$$olution", "$$,", "\u2581", "$$Co", "$$un", "$$ter", "\u2581co", "$$un", "$$ter", "$$)", "\u2581{"], ["\u2581super(", "$$TH", "$$RE", "$$A", "$$D_", "$$N", "$$AM", "$$E", "$$)", "$$;"], ["\u2581this.", "$$res", "$$olution", "\u2581=", "\u2581res", "$$olution", "$$;"], ["\u2581this.", "$$co", "$$un", "$$ter", "\u2581=", "\u2581co", "$$un", "$$ter", "$$;"], ["\u2581this.", "$$set", "$$D", "$$a", "$$em", "$$on", "$$(t", "$$rue", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public DrawingRecord() {\n    recordData = EMPTY_BYTE_ARRAY;\n}\n", "java": "public DrawingRecord() {\n    recordData = EMPTY_BYTE_ARRAY;\n}\n", "cs_t": [["\u2581public", "\u2581D", "$$raw", "$$ing", "$$Record", "$$()", "\u2581{"], ["\u2581record", "$$Data", "\u2581=", "\u2581E", "$$MPTY", "$$_BYTE", "$$_", "$$AR", "$$R", "$$A", "$$Y", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$raw", "$$ing", "$$Record", "$$()", "\u2581{"], ["\u2581record", "$$Data", "\u2581=", "\u2581E", "$$MPTY", "$$_BYTE", "$$_", "$$AR", "$$R", "$$A", "$$Y", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListDirectoriesResponse ListDirectories(ListDirectoriesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListDirectoriesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListDirectoriesResponseUnmarshaller.Instance;\n    return Invoke<ListDirectoriesResponse>(request, options);\n}\n", "java": "public ListDirectoriesResult listDirectories(ListDirectoriesRequest request) {\n    request = beforeClientExecution(request);\n    return executeListDirectories(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Dire", "$$ctor", "$$ies", "$$Response", "\u2581List", "$$Dire", "$$ctor", "$$ies", "$$(List", "$$Dire", "$$ctor", "$$ies", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Dire", "$$ctor", "$$ies", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Dire", "$$ctor", "$$ies", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Dire", "$$ctor", "$$ies", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Dire", "$$ctor", "$$ies", "$$Result", "\u2581list", "$$Dire", "$$ctor", "$$ies", "$$(List", "$$Dire", "$$ctor", "$$ies", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Dire", "$$ctor", "$$ies", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n    for (int j = 0; j < iterations; ++j) {\n        var block = blocks[blocksOffset++];\n        values[valuesOffset++] = ((int)((uint)block >> 7)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 6)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 5)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 4)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 3)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 2)) & 1;\n        values[valuesOffset++] = ((int)((uint)block >> 1)) & 1;\n        values[valuesOffset++] = block & 1;\n    }\n}\n", "java": "public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n    for (int j = 0; j < iterations; ++j) {\n        final byte block = blocks[blocksOffset++];\n        values[valuesOffset++] = (block >>> 7) & 1;\n        values[valuesOffset++] = (block >>> 6) & 1;\n        values[valuesOffset++] = (block >>> 5) & 1;\n        values[valuesOffset++] = (block >>> 4) & 1;\n        values[valuesOffset++] = (block >>> 3) & 1;\n        values[valuesOffset++] = (block >>> 2) & 1;\n        values[valuesOffset++] = (block >>> 1) & 1;\n        values[valuesOffset++] = block & 1;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581D", "$$ecode", "$$(byte[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581int[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581j", "\u2581=", "\u25810;", "\u2581j", "\u2581<", "\u2581iterations;", "\u2581++", "$$j", "$$)", "\u2581{"], ["\u2581var", "\u2581block", "\u2581=", "\u2581blocks[blocksOffset++]", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25817", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25816", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25815", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25814", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25813", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25812", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((int)((", "$$uint)", "$$block", "\u2581>>", "\u25811", "$$))", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581block", "\u2581&", "\u25811", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581decode", "$$(byte[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581int[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581j", "\u2581=", "\u25810;", "\u2581j", "\u2581<", "\u2581iterations;", "\u2581++", "$$j", "$$)", "\u2581{"], ["\u2581final", "\u2581byte", "\u2581block", "\u2581=", "\u2581blocks[blocksOffset++]", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25817", "$$)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25816", "$$)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25815", "$$)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25814)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25813", "$$)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25812)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(block", "\u2581>>>", "\u25811)", "\u2581&", "\u25811", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581block", "\u2581&", "\u25811", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual GroupingSearch DisableCaching() {\n    this.maxCacheRAMMB = null;\n    this.maxDocsToCache = null;\n    return this;\n}\n", "java": "public GroupingSearch disableCaching() {\n    this.maxCacheRAMMB = null;\n    this.maxDocsToCache = null;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Group", "$$ing", "$$Search", "\u2581Disable", "$$C", "$$ach", "$$ing", "$$()", "\u2581{"], ["\u2581this.", "$$max", "$$Cache", "$$R", "$$AM", "$$M", "$$B", "\u2581=", "\u2581null", "$$;"], ["\u2581this.", "$$max", "$$Doc", "$$sTo", "$$Cache", "\u2581=", "\u2581null", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Group", "$$ing", "$$Search", "\u2581dis", "$$able", "$$C", "$$ach", "$$ing", "$$()", "\u2581{"], ["\u2581this.", "$$max", "$$Cache", "$$R", "$$AM", "$$M", "$$B", "\u2581=", "\u2581null", "$$;"], ["\u2581this.", "$$max", "$$Doc", "$$sTo", "$$Cache", "\u2581=", "\u2581null", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public static int idealByteArraySize(int need) {\n    {\n        for (int i = 4; i < 32; i++) {\n            if (need <= (1 << i) - 12) {\n                return (1 << i) - 12;\n            }\n        }\n    }\n    return need;\n}\n", "java": "public static int idealByteArraySize(int need) {\n    for (int i = 4; i < 32; i++)if (need <= (1 << i) - 12)return (1 << i) - 12;\n    return need;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581i", "$$de", "$$al", "$$ByteArray", "$$Size", "$$(int", "\u2581n", "$$eed", "$$)", "\u2581{"], ["\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25814", "$$;", "\u2581i", "\u2581<", "\u2581", "$$32", "$$;", "\u2581i++)", "\u2581{"], ["\u2581if", "\u2581(n", "$$eed", "\u2581<=", "\u2581(", "$$1", "\u2581<<", "\u2581i", "$$)", "\u2581-", "\u25811", "$$2)", "\u2581{"], ["\u2581return", "\u2581(", "$$1", "\u2581<<", "\u2581i", "$$)", "\u2581-", "\u25811", "$$2", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581n", "$$eed", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581i", "$$de", "$$al", "$$ByteArray", "$$Size", "$$(int", "\u2581n", "$$eed", "$$)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25814", "$$;", "\u2581i", "\u2581<", "\u2581", "$$32", "$$;", "\u2581i++)", "$$if", "\u2581(n", "$$eed", "\u2581<=", "\u2581(", "$$1", "\u2581<<", "\u2581i", "$$)", "\u2581-", "\u25811", "$$2)", "$$return", "\u2581(", "$$1", "\u2581<<", "\u2581i", "$$)", "\u2581-", "\u25811", "$$2", "$$;"], ["\u2581return", "\u2581n", "$$eed", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateAssessmentTargetResponse UpdateAssessmentTarget(UpdateAssessmentTargetRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateAssessmentTargetRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateAssessmentTargetResponseUnmarshaller.Instance;\n    return Invoke<UpdateAssessmentTargetResponse>(request, options);\n}\n", "java": "public UpdateAssessmentTargetResult updateAssessmentTarget(UpdateAssessmentTargetRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateAssessmentTarget(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$Assessment", "$$Target", "$$Response", "\u2581Update", "$$Assessment", "$$Target", "$$(Update", "$$Assessment", "$$Target", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$Assessment", "$$Target", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$Assessment", "$$Target", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$Assessment", "$$Target", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$Assessment", "$$Target", "$$Result", "\u2581update", "$$Assessment", "$$Target", "$$(Update", "$$Assessment", "$$Target", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$Assessment", "$$Target", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ModifyVolumeResponse ModifyVolume(ModifyVolumeRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ModifyVolumeRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ModifyVolumeResponseUnmarshaller.Instance;\n    return Invoke<ModifyVolumeResponse>(request, options);\n}\n", "java": "public ModifyVolumeResult modifyVolume(ModifyVolumeRequest request) {\n    request = beforeClientExecution(request);\n    return executeModifyVolume(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Modify", "$$Volume", "$$Response", "\u2581Modify", "$$Volume", "$$(Modify", "$$Volume", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Modify", "$$Volume", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Modify", "$$Volume", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Modify", "$$Volume", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Modify", "$$Volume", "$$Result", "\u2581modify", "$$Volume", "$$(Modify", "$$Volume", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeModify", "$$Volume", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override Cell Merge(Cell m, Cell e) {\n    if (m.cmd == e.cmd && m.@ref == e.@ref && m.skip == e.skip) {\n        Cell c = new Cell(m);\n        c.cnt += e.cnt;\n        return c;\n    }\n    else {\n        return null;\n    }\n}\n", "java": "public Cell merge(Cell m, Cell e) {\n    if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip) {\n        Cell c = new Cell(m);\n        c.cnt += e.cnt;\n        return c;\n    }\n    else {\n        return null;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581Cell", "\u2581Merge", "$$(", "$$Cell", "\u2581m", "$$,", "\u2581Cell", "\u2581e)", "\u2581{"], ["\u2581if", "\u2581(m", "$$.c", "$$md", "\u2581==", "\u2581e", "$$.c", "$$md", "\u2581&&", "\u2581m", "$$.", "$$@", "$$ref", "\u2581==", "\u2581e", "$$.", "$$@", "$$ref", "\u2581&&", "\u2581m", "$$.", "$$skip", "\u2581==", "\u2581e", "$$.", "$$skip", "$$)", "\u2581{"], ["\u2581Cell", "\u2581c", "\u2581=", "\u2581new", "\u2581Cell", "$$(m", "$$)", "$$;"], ["\u2581c", "$$.c", "$$nt", "\u2581+=", "\u2581e", "$$.c", "$$nt", "$$;"], ["\u2581return", "\u2581c", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581null", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Cell", "\u2581m", "$$erge", "$$(", "$$Cell", "\u2581m", "$$,", "\u2581Cell", "\u2581e)", "\u2581{"], ["\u2581if", "\u2581(m", "$$.c", "$$md", "\u2581==", "\u2581e", "$$.c", "$$md", "\u2581&&", "\u2581m", "$$.re", "$$f", "\u2581==", "\u2581e", "$$.re", "$$f", "\u2581&&", "\u2581m", "$$.", "$$skip", "\u2581==", "\u2581e", "$$.", "$$skip", "$$)", "\u2581{"], ["\u2581Cell", "\u2581c", "\u2581=", "\u2581new", "\u2581Cell", "$$(m", "$$)", "$$;"], ["\u2581c", "$$.c", "$$nt", "\u2581+=", "\u2581e", "$$.c", "$$nt", "$$;"], ["\u2581return", "\u2581c", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581null", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override ByteBuffer Read(int length, long position) {\n    if (position >= Size)throw new ArgumentException(\"Position \" + position + \" past the end of the file\");\n    ByteBuffer dst;\n    int worked = -1;\n    if (writable) {\n        dst = ByteBuffer.CreateBuffer(length);\n        worked = 0;\n    }\n    else {\n        fileStream.Position = position;\n        dst = ByteBuffer.CreateBuffer(length);\n        worked = IOUtils.ReadFully(fileStream, dst.Buffer);\n    }\n    if(worked == -1)throw new ArgumentException(\"Position \" + position + \" past the end of the file\");\n    dst.Position = 0;\n    return dst;\n}\n", "java": "public ByteBuffer read(int length, long position) throws IOException {\n    if(position >= size()) {\n        throw new IndexOutOfBoundsException(\"Position \" + position + \" past the end of the file\");\n    }\n    ByteBuffer dst;\n    if (writable) {\n        dst = channel.map(FileChannel.MapMode.READ_WRITE, position, length);\n        buffersToClean.add(dst);\n    }\n    else {\n        channel.position(position);\n        dst = ByteBuffer.allocate(length);\n        int worked = IOUtils.readFully(channel, dst);\n        if(worked == -1) {\n            throw new IndexOutOfBoundsException(\"Position \" + position + \" past the end of the file\");\n        }\n    }\n    dst.position(0);\n    return dst;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581ByteBuffer", "\u2581Re", "$$ad(", "$$int", "\u2581length", "$$,", "\u2581long", "\u2581position", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$position", "\u2581>=", "\u2581Size", "$$)", "$$throw", "\u2581new", "\u2581ArgumentException(\"", "$$Position", "\u2581\"", "\u2581+", "\u2581position", "\u2581+", "\u2581\"", "\u2581p", "$$ast", "\u2581the", "\u2581end", "\u2581of", "\u2581the", "\u2581file", "$$\")", "$$;"], ["\u2581ByteBuffer", "\u2581dst", "$$;"], ["\u2581int", "\u2581work", "$$ed", "\u2581=", "\u2581-1", "$$;"], ["\u2581if", "\u2581(", "$$w", "$$ri", "$$table", "$$)", "\u2581{"], ["\u2581dst", "\u2581=", "\u2581Byte", "$$Buffer.", "$$Create", "$$Buffer", "$$(", "$$length", "$$)", "$$;"], ["\u2581work", "$$ed", "\u2581=", "\u25810;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581file", "$$Stream", "$$.", "$$Position", "\u2581=", "\u2581position", "$$;"], ["\u2581dst", "\u2581=", "\u2581Byte", "$$Buffer.", "$$Create", "$$Buffer", "$$(", "$$length", "$$)", "$$;"], ["\u2581work", "$$ed", "\u2581=", "\u2581IOUtils.", "$$Read", "$$Full", "$$y", "$$(", "$$file", "$$Stream", "$$,", "\u2581dst", "$$.", "$$Buffer", "$$)", "$$;"], ["\u2581}"], ["\u2581if(", "$$work", "$$ed", "\u2581==", "\u2581-1)", "$$throw", "\u2581new", "\u2581ArgumentException(\"", "$$Position", "\u2581\"", "\u2581+", "\u2581position", "\u2581+", "\u2581\"", "\u2581p", "$$ast", "\u2581the", "\u2581end", "\u2581of", "\u2581the", "\u2581file", "$$\")", "$$;"], ["\u2581dst", "$$.", "$$Position", "\u2581=", "\u25810;"], ["\u2581return", "\u2581dst", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ByteBuffer", "\u2581re", "$$ad(", "$$int", "\u2581length", "$$,", "\u2581long", "\u2581position", "$$)", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581if(", "$$position", "\u2581>=", "\u2581size", "$$())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Index", "$$OutOf", "$$Bounds", "$$Exception(\"", "$$Position", "\u2581\"", "\u2581+", "\u2581position", "\u2581+", "\u2581\"", "\u2581p", "$$ast", "\u2581the", "\u2581end", "\u2581of", "\u2581the", "\u2581file", "$$\")", "$$;"], ["\u2581}"], ["\u2581ByteBuffer", "\u2581dst", "$$;"], ["\u2581if", "\u2581(", "$$w", "$$ri", "$$table", "$$)", "\u2581{"], ["\u2581dst", "\u2581=", "\u2581ch", "$$annel", "$$.", "$$map", "$$(", "$$File", "$$Channel", "$$.", "$$Map", "$$Mode", "$$.", "$$RE", "$$A", "$$D_", "$$W", "$$R", "$$I", "$$TE", "$$,", "\u2581position", "$$,", "\u2581length)", "$$;"], ["\u2581buffer", "$$sTo", "$$C", "$$le", "$$an", "$$.add(", "$$d", "$$st", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581ch", "$$annel", "$$.", "$$position", "$$(", "$$position", "$$)", "$$;"], ["\u2581dst", "\u2581=", "\u2581Byte", "$$Buffer.", "$$all", "$$oc", "$$ate", "$$(", "$$length", "$$)", "$$;"], ["\u2581int", "\u2581work", "$$ed", "\u2581=", "\u2581IOUtils.", "$$read", "$$Full", "$$y", "$$(", "$$ch", "$$annel", "$$,", "\u2581dst", "$$)", "$$;"], ["\u2581if(", "$$work", "$$ed", "\u2581==", "\u2581-1)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Index", "$$OutOf", "$$Bounds", "$$Exception(\"", "$$Position", "\u2581\"", "\u2581+", "\u2581position", "\u2581+", "\u2581\"", "\u2581p", "$$ast", "\u2581the", "\u2581end", "\u2581of", "\u2581the", "\u2581file", "$$\")", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581dst", "$$.", "$$position", "$$(", "$$0)", "$$;"], ["\u2581return", "\u2581dst", "$$;"], ["\u2581}"]]}, {"cs": "public virtual RespondActivityTaskCompletedResponse RespondActivityTaskCompleted(RespondActivityTaskCompletedRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = RespondActivityTaskCompletedRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = RespondActivityTaskCompletedResponseUnmarshaller.Instance;\n    return Invoke<RespondActivityTaskCompletedResponse>(request, options);\n}\n", "java": "public void respondActivityTaskCompleted(RespondActivityTaskCompletedRequest request) {\n    request = beforeClientExecution(request);\n    executeRespondActivityTaskCompleted(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Respon", "$$d", "$$Activity", "$$Task", "$$Comp", "$$lete", "$$d", "$$Response", "\u2581", "$$Respon", "$$d", "$$Activity", "$$Task", "$$Comp", "$$lete", "$$d(", "$$Respon", "$$d", "$$Activity", "$$Task", "$$Comp", "$$lete", "$$d", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581", "$$Respon", "$$d", "$$Activity", "$$Task", "$$Comp", "$$lete", "$$d", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581", "$$Respon", "$$d", "$$Activity", "$$Task", "$$Comp", "$$lete", "$$d", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Respon", "$$d", "$$Activity", "$$Task", "$$Comp", "$$lete", "$$d", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581res", "$$pon", "$$d", "$$Activity", "$$Task", "$$Comp", "$$lete", "$$d(", "$$Respon", "$$d", "$$Activity", "$$Task", "$$Comp", "$$lete", "$$d", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581execute", "$$Respon", "$$d", "$$Activity", "$$Task", "$$Comp", "$$lete", "$$d", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void incrementProgressBy(int diff) {\n    lock (this) {\n        setProgress(mProgress + diff);\n    }\n}\n", "java": "public synchronized final void incrementProgressBy(int diff) {\n    setProgress(mProgress + diff);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581in", "$$crement", "$$Progress", "$$By", "$$(int", "\u2581d", "$$iff", "$$)", "\u2581{"], ["\u2581lock", "\u2581(this)", "\u2581{"], ["\u2581set", "$$Pro", "$$gres", "$$s(", "$$m", "$$Progress", "\u2581+", "\u2581d", "$$iff", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581synchronized", "\u2581final", "\u2581void", "\u2581in", "$$crement", "$$Progress", "$$By", "$$(int", "\u2581d", "$$iff", "$$)", "\u2581{"], ["\u2581set", "$$Pro", "$$gres", "$$s(", "$$m", "$$Progress", "\u2581+", "\u2581d", "$$iff", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual WorkingTreeIterator.MetadataDiff CompareMetadata(DirCacheEntry entry) {\n    if (entry.IsAssumeValid) {\n        return WorkingTreeIterator.MetadataDiff.EQUAL;\n    }\n    if (entry.IsUpdateNeeded) {\n        return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;\n    }\n    if (!entry.IsSmudged && entry.Length != (int)GetEntryLength()) {\n        return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;\n    }\n    if (IsModeDifferent(entry.RawMode)) {\n        return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;\n    }\n    long cacheLastModified = entry.LastModified;\n    long fileLastModified = GetEntryLastModified();\n    if (cacheLastModified % 1000 == 0 || fileLastModified % 1000 == 0) {\n        cacheLastModified = cacheLastModified - cacheLastModified % 1000;\n        fileLastModified = fileLastModified - fileLastModified % 1000;\n    }\n    if (fileLastModified != cacheLastModified) {\n        return WorkingTreeIterator.MetadataDiff.DIFFER_BY_TIMESTAMP;\n    }\n    else {\n        if (!entry.IsSmudged) {\n            return WorkingTreeIterator.MetadataDiff.EQUAL;\n        }\n        else {\n            return WorkingTreeIterator.MetadataDiff.SMUDGED;\n        }\n    }\n}\n", "java": "public MetadataDiff compareMetadata(DirCacheEntry entry) {\n    if (entry.isAssumeValid())return MetadataDiff.EQUAL;\n    if (entry.isUpdateNeeded())return MetadataDiff.DIFFER_BY_METADATA;\n    if (isModeDifferent(entry.getRawMode()))return MetadataDiff.DIFFER_BY_METADATA;\n    int type = mode & FileMode.TYPE_MASK;\n    if (type == FileMode.TYPE_TREE || type == FileMode.TYPE_GITLINK)return MetadataDiff.EQUAL;\n    if (!entry.isSmudged() && entry.getLength() != (int) getEntryLength())return MetadataDiff.DIFFER_BY_METADATA;\n    Instant cacheLastModified = entry.getLastModifiedInstant();\n    Instant fileLastModified = getEntryLastModifiedInstant();\n    if (timestampComparator.compare(cacheLastModified, fileLastModified,getOptions().getCheckStat() == CheckStat.MINIMAL) != 0) {\n        return MetadataDiff.DIFFER_BY_TIMESTAMP;\n    }\n    if (entry.isSmudged()) {\n        return MetadataDiff.SMUDGED;\n    }\n    return MetadataDiff.EQUAL;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Work", "$$ing", "$$Tree", "$$Iterator", "$$.", "$$Metadata", "$$D", "$$iff", "\u2581Compare", "$$Metadata", "$$(", "$$Dir", "$$Cache", "$$Entry", "\u2581entry", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$entry", "$$.Is", "$$Ass", "$$ume", "$$Valid", "$$)", "\u2581{"], ["\u2581return", "\u2581", "$$Work", "$$ing", "$$Tree", "$$Iterator", "$$.", "$$Metadata", "$$D", "$$iff", "$$.E", "$$Q", "$$U", "$$AL", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$entry", "$$.Is", "$$Update", "$$N", "$$ee", "$$ded", "$$)", "\u2581{"], ["\u2581return", "\u2581", "$$Work", "$$ing", "$$Tree", "$$Iterator", "$$.", "$$Metadata", "$$D", "$$iff", "$$.D", "$$I", "$$FF", "$$ER", "$$_B", "$$Y", "$$_M", "$$E", "$$TA", "$$D", "$$AT", "$$A", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(!", "$$entry", "$$.Is", "$$Sm", "$$ud", "$$ge", "$$d", "\u2581&&", "\u2581entry", "$$.Length", "\u2581!=", "\u2581(int)", "$$Get", "$$Entry", "$$Length", "$$())", "\u2581{"], ["\u2581return", "\u2581", "$$Work", "$$ing", "$$Tree", "$$Iterator", "$$.", "$$Metadata", "$$D", "$$iff", "$$.D", "$$I", "$$FF", "$$ER", "$$_B", "$$Y", "$$_M", "$$E", "$$TA", "$$D", "$$AT", "$$A", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$Is", "$$Mode", "$$D", "$$iff", "$$e", "$$rent", "$$(", "$$entry", "$$.", "$$Raw", "$$Mode", "$$))", "\u2581{"], ["\u2581return", "\u2581", "$$Work", "$$ing", "$$Tree", "$$Iterator", "$$.", "$$Metadata", "$$D", "$$iff", "$$.D", "$$I", "$$FF", "$$ER", "$$_B", "$$Y", "$$_M", "$$E", "$$TA", "$$D", "$$AT", "$$A", "$$;"], ["\u2581}"], ["\u2581long", "\u2581cache", "$$Last", "$$Mod", "$$ified", "\u2581=", "\u2581entry", "$$.", "$$Last", "$$Mod", "$$ified", "$$;"], ["\u2581long", "\u2581file", "$$Last", "$$Mod", "$$ified", "\u2581=", "\u2581Get", "$$Entry", "$$Last", "$$Mod", "$$ified", "$$()", "$$;"], ["\u2581if", "\u2581(c", "$$ache", "$$Last", "$$Mod", "$$ified", "\u2581%", "\u25811", "$$00", "$$0", "\u2581==", "\u25810", "\u2581||", "\u2581file", "$$Last", "$$Mod", "$$ified", "\u2581%", "\u25811", "$$00", "$$0", "\u2581==", "\u25810)", "\u2581{"], ["\u2581cache", "$$Last", "$$Mod", "$$ified", "\u2581=", "\u2581cache", "$$Last", "$$Mod", "$$ified", "\u2581-", "\u2581cache", "$$Last", "$$Mod", "$$ified", "\u2581%", "\u25811", "$$00", "$$0", "$$;"], ["\u2581file", "$$Last", "$$Mod", "$$ified", "\u2581=", "\u2581file", "$$Last", "$$Mod", "$$ified", "\u2581-", "\u2581file", "$$Last", "$$Mod", "$$ified", "\u2581%", "\u25811", "$$00", "$$0", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$file", "$$Last", "$$Mod", "$$ified", "\u2581!=", "\u2581cache", "$$Last", "$$Mod", "$$ified", "$$)", "\u2581{"], ["\u2581return", "\u2581", "$$Work", "$$ing", "$$Tree", "$$Iterator", "$$.", "$$Metadata", "$$D", "$$iff", "$$.D", "$$I", "$$FF", "$$ER", "$$_B", "$$Y_", "$$T", "$$IM", "$$E", "$$ST", "$$AM", "$$P", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581if", "\u2581(!", "$$entry", "$$.Is", "$$Sm", "$$ud", "$$ge", "$$d", "$$)", "\u2581{"], ["\u2581return", "\u2581", "$$Work", "$$ing", "$$Tree", "$$Iterator", "$$.", "$$Metadata", "$$D", "$$iff", "$$.E", "$$Q", "$$U", "$$AL", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581", "$$Work", "$$ing", "$$Tree", "$$Iterator", "$$.", "$$Metadata", "$$D", "$$iff", "$$.S", "$$M", "$$U", "$$D", "$$GE", "$$D", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581M", "$$et", "$$adata", "$$D", "$$iff", "\u2581compare", "$$Metadata", "$$(", "$$Dir", "$$Cache", "$$Entry", "\u2581entry", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$entry", "$$.is", "$$Ass", "$$ume", "$$Valid", "$$())", "$$return", "\u2581M", "$$et", "$$adata", "$$D", "$$iff", "$$.E", "$$Q", "$$U", "$$AL", "$$;"], ["\u2581if", "\u2581(", "$$entry", "$$.is", "$$Update", "$$N", "$$ee", "$$ded", "$$())", "$$return", "\u2581M", "$$et", "$$adata", "$$D", "$$iff", "$$.D", "$$I", "$$FF", "$$ER", "$$_B", "$$Y", "$$_M", "$$E", "$$TA", "$$D", "$$AT", "$$A", "$$;"], ["\u2581if", "\u2581(is", "$$Mode", "$$D", "$$iff", "$$e", "$$rent", "$$(", "$$entry", "$$.get", "$$Raw", "$$Mode", "$$()))", "$$return", "\u2581M", "$$et", "$$adata", "$$D", "$$iff", "$$.D", "$$I", "$$FF", "$$ER", "$$_B", "$$Y", "$$_M", "$$E", "$$TA", "$$D", "$$AT", "$$A", "$$;"], ["\u2581int", "\u2581type", "\u2581=", "\u2581mode", "\u2581&", "\u2581File", "$$Mode", "$$.", "$$TYP", "$$E_", "$$M", "$$AS", "$$K", "$$;"], ["\u2581if", "\u2581(t", "$$ype", "\u2581==", "\u2581File", "$$Mode", "$$.", "$$TYP", "$$E_", "$$T", "$$RE", "$$E", "\u2581||", "\u2581type", "\u2581==", "\u2581File", "$$Mode", "$$.", "$$TYP", "$$E_", "$$G", "$$IT", "$$L", "$$IN", "$$K", "$$)return", "\u2581M", "$$et", "$$adata", "$$D", "$$iff", "$$.E", "$$Q", "$$U", "$$AL", "$$;"], ["\u2581if", "\u2581(!", "$$entry", "$$.is", "$$Sm", "$$ud", "$$ge", "$$d", "$$()", "\u2581&&", "\u2581entry", "$$.get", "$$Length", "$$()", "\u2581!=", "\u2581(int)", "\u2581get", "$$Entry", "$$Length", "$$())", "$$return", "\u2581M", "$$et", "$$adata", "$$D", "$$iff", "$$.D", "$$I", "$$FF", "$$ER", "$$_B", "$$Y", "$$_M", "$$E", "$$TA", "$$D", "$$AT", "$$A", "$$;"], ["\u2581", "$$Instan", "$$t", "\u2581cache", "$$Last", "$$Mod", "$$ified", "\u2581=", "\u2581entry", "$$.get", "$$Last", "$$Mod", "$$ified", "$$Instan", "$$t", "$$()", "$$;"], ["\u2581", "$$Instan", "$$t", "\u2581file", "$$Last", "$$Mod", "$$ified", "\u2581=", "\u2581get", "$$Entry", "$$Last", "$$Mod", "$$ified", "$$Instan", "$$t", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$tim", "$$est", "$$am", "$$p", "$$Compar", "$$ator", "$$.compare", "$$(c", "$$ache", "$$Last", "$$Mod", "$$ified", "$$,", "\u2581file", "$$Last", "$$Mod", "$$ified", "$$,", "$$get", "$$Options", "$$().get", "$$Check", "$$Stat", "$$()", "\u2581==", "\u2581Check", "$$Stat", "$$.M", "$$IN", "$$IM", "$$AL", "$$)", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581return", "\u2581M", "$$et", "$$adata", "$$D", "$$iff", "$$.D", "$$I", "$$FF", "$$ER", "$$_B", "$$Y_", "$$T", "$$IM", "$$E", "$$ST", "$$AM", "$$P", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$entry", "$$.is", "$$Sm", "$$ud", "$$ge", "$$d", "$$())", "\u2581{"], ["\u2581return", "\u2581M", "$$et", "$$adata", "$$D", "$$iff", "$$.S", "$$M", "$$U", "$$D", "$$GE", "$$D", "$$;"], ["\u2581}"], ["\u2581return", "\u2581M", "$$et", "$$adata", "$$D", "$$iff", "$$.E", "$$Q", "$$U", "$$AL", "$$;"], ["\u2581}"]]}, {"cs": "public static NumberRecord ConvertToNumberRecord(RKRecord rk) {\n    NumberRecord num = new NumberRecord();\n    num.Column = (rk.Column);\n    num.Row = (rk.Row);\n    num.XFIndex = (rk.XFIndex);\n    num.Value = (rk.RKNumber);\n    return num;\n}\n", "java": "public static NumberRecord convertToNumberRecord(RKRecord rk) {\n    NumberRecord num = new NumberRecord();\n    num.setColumn(rk.getColumn());\n    num.setRow(rk.getRow());\n    num.setXFIndex(rk.getXFIndex());\n    num.setValue(rk.getRKNumber());\n    return num;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581Number", "$$Record", "\u2581Con", "$$vert", "$$To", "$$Number", "$$Record(", "$$R", "$$K", "$$Record", "\u2581r", "$$k", "$$)", "\u2581{"], ["\u2581Number", "$$Record", "\u2581num", "\u2581=", "\u2581new", "\u2581Number", "$$Record", "$$()", "$$;"], ["\u2581num", "$$.", "$$Column", "\u2581=", "\u2581(r", "$$k", "$$.", "$$Column", "$$)", "$$;"], ["\u2581num", "$$.", "$$Row", "\u2581=", "\u2581(r", "$$k", "$$.", "$$Row", "$$)", "$$;"], ["\u2581num", "$$.", "$$X", "$$F", "$$Index", "\u2581=", "\u2581(r", "$$k", "$$.", "$$X", "$$F", "$$Index)", "$$;"], ["\u2581num", "$$.", "$$Value", "\u2581=", "\u2581(r", "$$k", "$$.", "$$R", "$$K", "$$Number", "$$)", "$$;"], ["\u2581return", "\u2581num", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581Number", "$$Record", "\u2581con", "$$vert", "$$To", "$$Number", "$$Record(", "$$R", "$$K", "$$Record", "\u2581r", "$$k", "$$)", "\u2581{"], ["\u2581Number", "$$Record", "\u2581num", "\u2581=", "\u2581new", "\u2581Number", "$$Record", "$$()", "$$;"], ["\u2581num", "$$.set", "$$Column", "$$(r", "$$k", "$$.get", "$$Column", "$$())", "$$;"], ["\u2581num", "$$.set", "$$Row", "$$(r", "$$k", "$$.get", "$$Row", "$$())", "$$;"], ["\u2581num", "$$.set", "$$X", "$$F", "$$Index", "$$(r", "$$k", "$$.get", "$$X", "$$F", "$$Index", "$$())", "$$;"], ["\u2581num", "$$.set", "$$Value(", "$$r", "$$k", "$$.get", "$$R", "$$K", "$$Number", "$$())", "$$;"], ["\u2581return", "\u2581num", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.CharBuffer put(char[] src, int srcOffset, int charCount) {\n    byteBuffer.limit(_limit * libcore.io.SizeOf.CHAR);\n    byteBuffer.position(_position * libcore.io.SizeOf.CHAR);\n    if (byteBuffer is java.nio.ReadWriteDirectByteBuffer) {\n        ((java.nio.ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, charCount);\n    }\n    else {\n        ((java.nio.ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, charCount);\n    }\n    this._position += charCount;\n    return this;\n}\n", "java": "public CharBuffer put(char[] src, int srcOffset, int charCount) {\n    byteBuffer.limit(limit * SizeOf.CHAR);\n    byteBuffer.position(position * SizeOf.CHAR);\n    if (byteBuffer instanceof ReadWriteDirectByteBuffer) {\n        ((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, charCount);\n    }\n    else {\n        ((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, charCount);\n    }\n    this.position += charCount;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$CharBuffer", "\u2581put", "$$(char[]", "\u2581src", "$$,", "\u2581int", "\u2581srcOffset,", "\u2581int", "\u2581char", "$$Count)", "\u2581{"], ["\u2581byteBuffer.", "$$limit", "$$(_", "$$limit", "\u2581*", "\u2581libcore.io.SizeOf", "$$.C", "$$H", "$$AR", "$$)", "$$;"], ["\u2581byteBuffer.", "$$position", "$$(_", "$$position", "\u2581*", "\u2581libcore.io.SizeOf", "$$.C", "$$H", "$$AR", "$$)", "$$;"], ["\u2581if", "\u2581(byte", "$$Buffer", "\u2581is", "\u2581java.nio.Read", "$$Write", "$$Direct", "$$ByteBuffer", "$$)", "\u2581{"], ["\u2581((", "$$java.", "$$nio.", "$$Read", "$$Write", "$$Direct", "$$ByteBuffer", "$$)", "$$byte", "$$Buffer", "$$).", "$$put", "$$(src", "$$,", "\u2581srcOffset,", "\u2581char", "$$Count)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581((", "$$java.", "$$nio.", "$$Read", "$$Write", "$$He", "$$ap", "$$ByteBuffer", "$$)", "$$byte", "$$Buffer", "$$).", "$$put", "$$(src", "$$,", "\u2581srcOffset,", "\u2581char", "$$Count)", "$$;"], ["\u2581}"], ["\u2581this._", "$$position", "\u2581+=", "\u2581char", "$$Count", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Char", "$$Buffer", "\u2581put", "$$(char[]", "\u2581src", "$$,", "\u2581int", "\u2581srcOffset,", "\u2581int", "\u2581char", "$$Count)", "\u2581{"], ["\u2581byteBuffer.", "$$limit", "$$(", "$$limit", "\u2581*", "\u2581SizeOf", "$$.C", "$$H", "$$AR", "$$)", "$$;"], ["\u2581byteBuffer.", "$$position", "$$(", "$$position", "\u2581*", "\u2581SizeOf", "$$.C", "$$H", "$$AR", "$$)", "$$;"], ["\u2581if", "\u2581(byte", "$$Buffer", "\u2581instanceof", "\u2581Read", "$$Write", "$$Direct", "$$ByteBuffer", "$$)", "\u2581{"], ["\u2581((", "$$Read", "$$Write", "$$Direct", "$$ByteBuffer", "$$)", "\u2581byteBuffer", "$$).", "$$put", "$$(src", "$$,", "\u2581srcOffset,", "\u2581char", "$$Count)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581((", "$$Read", "$$Write", "$$He", "$$ap", "$$ByteBuffer", "$$)", "\u2581byteBuffer", "$$).", "$$put", "$$(src", "$$,", "\u2581srcOffset,", "\u2581char", "$$Count)", "$$;"], ["\u2581}"], ["\u2581this.", "$$position", "\u2581+=", "\u2581char", "$$Count", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public int GetCells() {\n    int size = 0;\n    foreach (char c in cells.Keys) {\n        Cell e = At(c);\n        if (e.cmd >= 0 || e.@ref >= 0) {\n            size++;\n        }\n    }\n    return size;\n}\n", "java": "public int getCells() {\n    Iterator<Character> i = cells.keySet().iterator();\n    int size = 0;\n    for (; i.hasNext();) {\n        Character c = i.next();\n        Cell e = at(c);\n        if (e.cmd >= 0 || e.ref >= 0) {\n            size++;\n        }\n    }\n    return size;\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581Get", "$$Cell", "$$s()", "\u2581{"], ["\u2581int", "\u2581size", "\u2581=", "\u25810;"], ["\u2581foreach", "\u2581(char", "\u2581c", "\u2581in", "\u2581cell", "$$s.", "$$Key", "$$s)", "\u2581{"], ["\u2581Cell", "\u2581e", "\u2581=", "\u2581", "$$At", "$$(c", "$$)", "$$;"], ["\u2581if", "\u2581(e", "$$.c", "$$md", "\u2581>=", "\u25810", "\u2581||", "\u2581e", "$$.", "$$@", "$$ref", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581size", "$$++", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581size", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$Cell", "$$s()", "\u2581{"], ["\u2581Iterator<", "$$Character", "$$>", "\u2581i", "\u2581=", "\u2581cell", "$$s.", "$$key", "$$Set", "$$().", "$$iterator", "$$()", "$$;"], ["\u2581int", "\u2581size", "\u2581=", "\u25810;"], ["\u2581for", "\u2581(", "$$;", "\u2581i", "$$.has", "$$Next()", "$$;", "$$)", "\u2581{"], ["\u2581Character", "\u2581c", "\u2581=", "\u2581i", "$$.next", "$$()", "$$;"], ["\u2581Cell", "\u2581e", "\u2581=", "\u2581at", "$$(c", "$$)", "$$;"], ["\u2581if", "\u2581(e", "$$.c", "$$md", "\u2581>=", "\u25810", "\u2581||", "\u2581e", "$$.re", "$$f", "\u2581>=", "\u25810)", "\u2581{"], ["\u2581size", "$$++", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581size", "$$;"], ["\u2581}"]]}, {"cs": "public BeiderMorseFilterFactory(IDictionary<string, string> args): base(args) {\n    NameType nameType = (NameType)Enum.Parse(typeof(NameType), Get(args, \"nameType\", NameType.GENERIC.ToString()), true);\n    RuleType ruleType = (RuleType)Enum.Parse(typeof(RuleType), Get(args, \"ruleType\", RuleType.APPROX.ToString()), true);\n    bool concat = GetBoolean(args, \"concat\", true);\n    engine = new PhoneticEngine(nameType, ruleType, concat);\n    ISet<string> langs = GetSet(args, \"languageSet\");\n    languageSet = (null == langs || (1 == langs.Count && langs.Contains(\"auto\"))) ? null : LanguageSet.From(langs);\n    if (!(args.Count == 0)) {\n        throw new ArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "java": "public BeiderMorseFilterFactory(Map<String,String> args) {\n    super(args);\n    NameType nameType = NameType.valueOf(get(args, \"nameType\", NameType.GENERIC.toString()));\n    RuleType ruleType = RuleType.valueOf(get(args, \"ruleType\", RuleType.APPROX.toString()));\n    boolean concat = getBoolean(args, \"concat\", true);\n    engine = new PhoneticEngine(nameType, ruleType, concat);\n    Set<String> langs = getSet(args, \"languageSet\");\n    languageSet = (null == langs || (1 == langs.size() && langs.contains(\"auto\"))) ? null : LanguageSet.from(langs);\n    if (!args.isEmpty()) {\n        throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581B", "$$e", "$$id", "$$er", "$$M", "$$or", "$$se", "$$FilterFactory(IDictionary<string,", "\u2581string>", "\u2581args):", "\u2581base(args)", "\u2581{"], ["\u2581", "$$Name", "$$Type", "\u2581name", "$$Type", "\u2581=", "\u2581(", "$$Name", "$$Type", "$$)", "$$Enum", "$$.", "$$Parse", "$$(t", "$$ype", "$$of", "$$(", "$$Name", "$$Type", "$$),", "\u2581Get", "$$(args,", "\u2581\"", "$$name", "$$Type", "$$\",", "\u2581", "$$Name", "$$Type.", "$$G", "$$EN", "$$ER", "$$I", "$$C", "$$.ToString()", "$$),", "\u2581true", "$$)", "$$;"], ["\u2581", "$$Rule", "$$Type", "\u2581rule", "$$Type", "\u2581=", "\u2581(", "$$Rule", "$$Type", "$$)", "$$Enum", "$$.", "$$Parse", "$$(t", "$$ype", "$$of", "$$(", "$$Rule", "$$Type", "$$),", "\u2581Get", "$$(args,", "\u2581\"", "$$rule", "$$Type", "$$\",", "\u2581", "$$Rule", "$$Type", "$$.A", "$$P", "$$P", "$$RO", "$$X", "$$.ToString()", "$$),", "\u2581true", "$$)", "$$;"], ["\u2581bool", "\u2581con", "$$c", "$$at", "\u2581=", "\u2581Get", "$$Boolean(args,", "\u2581\"", "$$con", "$$c", "$$at", "$$\",", "\u2581true", "$$)", "$$;"], ["\u2581", "$$eng", "$$ine", "\u2581=", "\u2581new", "\u2581P", "$$h", "$$one", "$$tic", "$$Engine", "$$(name", "$$Type,", "\u2581rule", "$$Type,", "\u2581con", "$$c", "$$at", "$$)", "$$;"], ["\u2581I", "$$Set", "$$<string", "$$>", "\u2581l", "$$ang", "$$s", "\u2581=", "\u2581Get", "$$Set", "$$(args,", "\u2581\"", "$$lan", "$$g", "$$u", "$$age", "$$Set", "$$\")", "$$;"], ["\u2581l", "$$ang", "$$u", "$$age", "$$Set", "\u2581=", "\u2581(n", "$$ull", "\u2581==", "\u2581l", "$$ang", "$$s", "\u2581||", "\u2581(", "$$1", "\u2581==", "\u2581l", "$$ang", "$$s.Count", "\u2581&&", "\u2581l", "$$ang", "$$s.", "$$Contain", "$$s(", "$$\"", "$$a", "$$ut", "$$o", "$$\"", "$$))", "$$)", "\u2581?", "\u2581null", "\u2581:", "\u2581L", "$$ang", "$$u", "$$age", "$$Set", "$$.", "$$From", "$$(", "$$lan", "$$g", "$$s)", "$$;"], ["\u2581if", "\u2581(!", "$$(arg", "$$s.Count", "\u2581==", "\u25810", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581ArgumentException(\"", "$$Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581B", "$$e", "$$id", "$$er", "$$M", "$$or", "$$se", "$$FilterFactory(Map<String,String>", "\u2581args)", "\u2581{"], ["\u2581super(", "$$arg", "$$s)", "$$;"], ["\u2581", "$$Name", "$$Type", "\u2581name", "$$Type", "\u2581=", "\u2581", "$$Name", "$$Type.", "$$value", "$$Of(", "$$get", "$$(args,", "\u2581\"", "$$name", "$$Type", "$$\",", "\u2581", "$$Name", "$$Type.", "$$G", "$$EN", "$$ER", "$$I", "$$C", "$$.toString()", "$$))", "$$;"], ["\u2581", "$$Rule", "$$Type", "\u2581rule", "$$Type", "\u2581=", "\u2581", "$$Rule", "$$Type.", "$$value", "$$Of(", "$$get", "$$(args,", "\u2581\"", "$$rule", "$$Type", "$$\",", "\u2581", "$$Rule", "$$Type", "$$.A", "$$P", "$$P", "$$RO", "$$X", "$$.toString()", "$$))", "$$;"], ["\u2581boolean", "\u2581con", "$$c", "$$at", "\u2581=", "\u2581get", "$$Boolean(args,", "\u2581\"", "$$con", "$$c", "$$at", "$$\",", "\u2581true", "$$)", "$$;"], ["\u2581", "$$eng", "$$ine", "\u2581=", "\u2581new", "\u2581P", "$$h", "$$one", "$$tic", "$$Engine", "$$(name", "$$Type,", "\u2581rule", "$$Type,", "\u2581con", "$$c", "$$at", "$$)", "$$;"], ["\u2581Set", "$$<", "$$String>", "\u2581l", "$$ang", "$$s", "\u2581=", "\u2581get", "$$Set", "$$(args,", "\u2581\"", "$$lan", "$$g", "$$u", "$$age", "$$Set", "$$\")", "$$;"], ["\u2581l", "$$ang", "$$u", "$$age", "$$Set", "\u2581=", "\u2581(n", "$$ull", "\u2581==", "\u2581l", "$$ang", "$$s", "\u2581||", "\u2581(", "$$1", "\u2581==", "\u2581l", "$$ang", "$$s.size()", "\u2581&&", "\u2581l", "$$ang", "$$s.", "$$con", "$$tain", "$$s(", "$$\"", "$$a", "$$ut", "$$o", "$$\"", "$$))", "$$)", "\u2581?", "\u2581null", "\u2581:", "\u2581L", "$$ang", "$$u", "$$age", "$$Set", "$$.f", "$$rom", "$$(", "$$lan", "$$g", "$$s)", "$$;"], ["\u2581if", "\u2581(!args.isEmpty())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public static double varp(double[] v) {\n    double r = Double.NaN;\n    if (v != null && v.Length > 1) {\n        r = devsq(v) / v.Length;\n    }\n    return r;\n}\n", "java": "public static double varp(double[] v) {\n    double r = Double.NaN;\n    if (v!=null && v.length > 1) {\n        r = devsq(v) /v.length;\n    }\n    return r;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581var", "$$p", "$$(double", "$$[]", "\u2581v)", "\u2581{"], ["\u2581double", "\u2581r", "\u2581=", "\u2581Double", "$$.N", "$$a", "$$N", "$$;"], ["\u2581if", "\u2581(v", "\u2581!=", "\u2581null", "\u2581&&", "\u2581v", "$$.Length", "\u2581>", "\u25811)", "\u2581{"], ["\u2581r", "\u2581=", "\u2581de", "$$v", "$$sq", "$$(", "$$v", "$$)", "\u2581/", "\u2581v", "$$.Length;"], ["\u2581}"], ["\u2581return", "\u2581r", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581var", "$$p", "$$(double", "$$[]", "\u2581v)", "\u2581{"], ["\u2581double", "\u2581r", "\u2581=", "\u2581Double", "$$.N", "$$a", "$$N", "$$;"], ["\u2581if", "\u2581(v", "$$!", "$$=", "$$null", "\u2581&&", "\u2581v", "$$.length", "\u2581>", "\u25811)", "\u2581{"], ["\u2581r", "\u2581=", "\u2581de", "$$v", "$$sq", "$$(", "$$v", "$$)", "\u2581/", "$$v", "$$.length;"], ["\u2581}"], ["\u2581return", "\u2581r", "$$;"], ["\u2581}"]]}, {"cs": "public PersianNormalizationFilterFactory(IDictionary<string, string> args) : base(args) {\n    if (args.Count > 0) {\n        throw new System.ArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "java": "public PersianNormalizationFilterFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n        throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581P", "$$er", "$$si", "$$an", "$$Normal", "$$ization", "$$FilterFactory(IDictionary<string,", "\u2581string>", "\u2581args)", "\u2581:", "\u2581base(args)", "\u2581{"], ["\u2581if", "\u2581(args.Count", "\u2581>", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$er", "$$si", "$$an", "$$Normal", "$$ization", "$$FilterFactory(Map<String,String>", "\u2581args)", "\u2581{"], ["\u2581super(", "$$arg", "$$s)", "$$;"], ["\u2581if", "\u2581(!args.isEmpty())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"Unknown", "\u2581parameters:", "\u2581\"", "\u2581+", "\u2581args)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public static WeightedTerm[] GetTerms(Query query, bool prohibited, string fieldName) {\n    var terms = new JCG.HashSet<WeightedTerm>();\n    if (fieldName != null) {\n        fieldName = fieldName.Intern();\n    }\n    GetTerms(query, terms, prohibited, fieldName);\n    return terms.ToArray();\n}\n", "java": "public static WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) {\n    HashSet<WeightedTerm> terms = new HashSet<>();\n    Predicate<String> fieldSelector = fieldName == null ? f -> true : fieldName::equals;\n    query.visit(new BoostedTermExtractor(1, terms, prohibited, fieldSelector));\n    return terms.toArray(new WeightedTerm[0]);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581W", "$$eighted", "$$Term", "$$[]", "\u2581Get", "$$Term", "$$s(", "$$Query", "\u2581query", "$$,", "\u2581bool", "\u2581pro", "$$h", "$$ib", "$$i", "$$ted", "$$,", "\u2581string", "\u2581field", "$$Name)", "\u2581{"], ["\u2581var", "\u2581term", "$$s", "\u2581=", "\u2581new", "\u2581J", "$$C", "$$G", "$$.", "$$Hash", "$$Set<", "$$W", "$$eighted", "$$Term", "$$>", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$field", "$$Name", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581field", "$$Name", "\u2581=", "\u2581field", "$$Name", "$$.", "$$Intern", "$$()", "$$;"], ["\u2581}"], ["\u2581Get", "$$Term", "$$s(", "$$query", "$$,", "\u2581term", "$$s,", "\u2581pro", "$$h", "$$ib", "$$i", "$$ted", "$$,", "\u2581field", "$$Name)", "$$;"], ["\u2581return", "\u2581term", "$$s.", "$$To", "$$Array", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581W", "$$eighted", "$$Term", "$$[]", "\u2581get", "$$Term", "$$s(", "$$Query", "\u2581query", "$$,", "\u2581boolean", "\u2581pro", "$$h", "$$ib", "$$i", "$$ted", "$$,", "\u2581String", "\u2581field", "$$Name)", "\u2581{"], ["\u2581Hash", "$$Set<", "$$W", "$$eighted", "$$Term", "$$>", "\u2581term", "$$s", "\u2581=", "\u2581new", "\u2581Hash", "$$Set<", "$$>", "$$()", "$$;"], ["\u2581Pred", "$$icate", "$$<", "$$String>", "\u2581field", "$$Se", "$$lector", "\u2581=", "\u2581field", "$$Name", "\u2581==", "\u2581null", "\u2581?", "\u2581f", "\u2581-", "$$>", "\u2581true", "\u2581:", "\u2581field", "$$Name", "$$:", "$$:", "$$e", "$$qual", "$$s;"], ["\u2581query", "$$.", "$$v", "$$is", "$$it", "$$(new", "\u2581Bo", "$$osted", "$$Term", "$$Ex", "$$tra", "$$ctor", "$$(", "$$1,", "\u2581term", "$$s,", "\u2581pro", "$$h", "$$ib", "$$i", "$$ted", "$$,", "\u2581field", "$$Se", "$$lector", "$$))", "$$;"], ["\u2581return", "\u2581term", "$$s.", "$$to", "$$Array", "$$(new", "\u2581W", "$$eighted", "$$Term", "$$[0]", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteDocumentationPartResponse DeleteDocumentationPart(DeleteDocumentationPartRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteDocumentationPartRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteDocumentationPartResponseUnmarshaller.Instance;\n    return Invoke<DeleteDocumentationPartResponse>(request, options);\n}\n", "java": "public DeleteDocumentationPartResult deleteDocumentationPart(DeleteDocumentationPartRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteDocumentationPart(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Documentation", "$$Part", "$$Response", "\u2581Delete", "$$Documentation", "$$Part", "$$(Delete", "$$Documentation", "$$Part", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Documentation", "$$Part", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Documentation", "$$Part", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Documentation", "$$Part", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Documentation", "$$Part", "$$Result", "\u2581delete", "$$Documentation", "$$Part", "$$(Delete", "$$Documentation", "$$Part", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Documentation", "$$Part", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[CHART]\\n\");\n    buffer.Append(\"    .x                    = \").Append(\"0x\").Append(HexDump.ToHex(X)).Append(\" (\").Append(X).Append(\" )\");\n    buffer.Append(Environment.NewLine);\n    buffer.Append(\"    .y                    = \").Append(\"0x\").Append(HexDump.ToHex(Y)).Append(\" (\").Append(Y).Append(\" )\");\n    buffer.Append(Environment.NewLine);\n    buffer.Append(\"    .width                = \").Append(\"0x\").Append(HexDump.ToHex(Width)).Append(\" (\").Append(Width).Append(\" )\");\n    buffer.Append(Environment.NewLine);\n    buffer.Append(\"    .height               = \").Append(\"0x\").Append(HexDump.ToHex(Height)).Append(\" (\").Append(Height).Append(\" )\");\n    buffer.Append(Environment.NewLine);\n    buffer.Append(\"[/CHART]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"[CHART]\\n\");\n    sb.append(\"    .x     = \").append(getX()).append('\\n');\n    sb.append(\"    .y     = \").append(getY()).append('\\n');\n    sb.append(\"    .width = \").append(getWidth()).append('\\n');\n    sb.append(\"    .height= \").append(getHeight()).append('\\n');\n    sb.append(\"[/CHART]\\n\");\n    return sb.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$CHAR", "$$T", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$x", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\")", "$$.Append(\"", "$$0x", "$$\").Append(", "$$HexDump", "$$.To", "$$Hex", "$$(", "$$X", "$$))", "$$.Append(\"", "\u2581(", "$$\").Append(", "$$X", "$$)", "$$.Append(\"", "\u2581)", "$$\")", "$$;"], ["\u2581buffer.Append(", "$$Environment", "$$.N", "$$ew", "$$Line", "$$)", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$y", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\")", "$$.Append(\"", "$$0x", "$$\").Append(", "$$HexDump", "$$.To", "$$Hex", "$$(", "$$Y", "$$))", "$$.Append(\"", "\u2581(", "$$\").Append(", "$$Y", "$$)", "$$.Append(\"", "\u2581)", "$$\")", "$$;"], ["\u2581buffer.Append(", "$$Environment", "$$.N", "$$ew", "$$Line", "$$)", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$.w", "$$idth", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\")", "$$.Append(\"", "$$0x", "$$\").Append(", "$$HexDump", "$$.To", "$$Hex", "$$(", "$$Width", "$$))", "$$.Append(\"", "\u2581(", "$$\").Append(", "$$Width", "$$)", "$$.Append(\"", "\u2581)", "$$\")", "$$;"], ["\u2581buffer.Append(", "$$Environment", "$$.N", "$$ew", "$$Line", "$$)", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$h", "$$eight", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\")", "$$.Append(\"", "$$0x", "$$\").Append(", "$$HexDump", "$$.To", "$$Hex", "$$(", "$$H", "$$eight", "$$))", "$$.Append(\"", "\u2581(", "$$\").Append(", "$$H", "$$eight", "$$)", "$$.Append(\"", "\u2581)", "$$\")", "$$;"], ["\u2581buffer.Append(", "$$Environment", "$$.N", "$$ew", "$$Line", "$$)", "$$;"], ["\u2581buffer.Append(\"[/", "$$CHAR", "$$T", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581sb.append(\"", "$$[", "$$CHAR", "$$T", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581sb.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$x", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$get", "$$X", "$$())", "$$.append('", "$$\\n", "$$')", "$$;"], ["\u2581sb.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$y", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$get", "$$Y", "$$())", "$$.append('", "$$\\n", "$$')", "$$;"], ["\u2581sb.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$.w", "$$idth", "\u2581=", "\u2581\").append(", "$$get", "$$Width", "$$())", "$$.append('", "$$\\n", "$$')", "$$;"], ["\u2581sb.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$h", "$$eight", "$$=", "\u2581\").append(", "$$get", "$$H", "$$eight", "$$())", "$$.append('", "$$\\n", "$$')", "$$;"], ["\u2581sb.append(\"", "$$[/", "$$CHAR", "$$T", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public sealed override short get(int index) {\n    checkIndex(index);\n    return backingArray[offset + index];\n}\n", "java": "public final short get(int index) {\n    checkIndex(index);\n    return backingArray[offset + index];\n}\n", "cs_t": [["\u2581public", "\u2581sealed", "\u2581override", "\u2581short", "\u2581get(int", "\u2581index)", "\u2581{"], ["\u2581check", "$$Index(index", "$$)", "$$;"], ["\u2581return", "\u2581b", "$$ackingArray", "$$[offset", "\u2581+", "\u2581index", "$$]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581short", "\u2581get(int", "\u2581index)", "\u2581{"], ["\u2581check", "$$Index(index", "$$)", "$$;"], ["\u2581return", "\u2581b", "$$ackingArray", "$$[offset", "\u2581+", "\u2581index", "$$]", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return Image;\n}\n", "java": "public String toString() {\n    return image;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581I", "$$ma", "$$ge", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581i", "$$ma", "$$ge", "$$;"], ["\u2581}"]]}, {"cs": "public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {\n    try {\n        AreaEval reA = EvaluateRef(arg0);\n        AreaEval reB = EvaluateRef(arg1);\n        AreaEval result = ResolveRange(reA, reB);\n        if (result == null) {\n            return ErrorEval.NULL_INTERSECTION;\n        }\n        return result;\n    }\n    catch (EvaluationException e) {\n        return e.GetErrorEval();\n    }\n}\n", "java": "public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {\n    try {\n        AreaEval reA = evaluateRef(arg0);\n        AreaEval reB = evaluateRef(arg1);\n        AreaEval result = resolveRange(reA, reB);\n        if (result == null) {\n            return ErrorEval.NULL_INTERSECTION;\n        }\n        return result;\n    }\n    catch (EvaluationException e) {\n        return e.getErrorEval();\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581ValueEval", "\u2581Evaluate(int", "\u2581srcRowIndex,", "\u2581int", "\u2581srcColumnIndex,", "\u2581ValueEval", "\u2581arg0,", "\u2581ValueEval", "\u2581arg", "$$1)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581A", "$$rea", "$$Eval", "\u2581re", "$$A", "\u2581=", "\u2581Evaluate", "$$Ref", "$$(arg", "$$0)", "$$;"], ["\u2581A", "$$rea", "$$Eval", "\u2581re", "$$B", "\u2581=", "\u2581Evaluate", "$$Ref", "$$(arg", "$$1)", "$$;"], ["\u2581A", "$$rea", "$$Eval", "\u2581result", "\u2581=", "\u2581", "$$Resol", "$$ve", "$$Range", "$$(re", "$$A", "$$,", "\u2581re", "$$B", "$$)", "$$;"], ["\u2581if", "\u2581(result", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581Error", "$$Eval", "$$.N", "$$UL", "$$L", "$$_", "$$IN", "$$TER", "$$SE", "$$CTION", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(EvaluationException", "\u2581e)", "\u2581{"], ["\u2581return", "\u2581e", "$$.Get", "$$ErrorEval", "$$()", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ValueEval", "\u2581evaluate(int", "\u2581srcRowIndex,", "\u2581int", "\u2581srcColumnIndex,", "\u2581ValueEval", "\u2581arg0,", "\u2581ValueEval", "\u2581arg", "$$1)", "\u2581{"], ["\u2581try", "\u2581{"], ["\u2581A", "$$rea", "$$Eval", "\u2581re", "$$A", "\u2581=", "\u2581evaluate", "$$Ref", "$$(arg", "$$0)", "$$;"], ["\u2581A", "$$rea", "$$Eval", "\u2581re", "$$B", "\u2581=", "\u2581evaluate", "$$Ref", "$$(arg", "$$1)", "$$;"], ["\u2581A", "$$rea", "$$Eval", "\u2581result", "\u2581=", "\u2581res", "$$ol", "$$ve", "$$Range", "$$(re", "$$A", "$$,", "\u2581re", "$$B", "$$)", "$$;"], ["\u2581if", "\u2581(result", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581Error", "$$Eval", "$$.N", "$$UL", "$$L", "$$_", "$$IN", "$$TER", "$$SE", "$$CTION", "$$;"], ["\u2581}"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(EvaluationException", "\u2581e)", "\u2581{"], ["\u2581return", "\u2581e.get", "$$ErrorEval", "$$()", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual void Clear() {\n    weightBySpanQuery.Clear();\n}\n", "java": "public void clear() {\n    weightBySpanQuery.clear();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581C", "$$lear()", "\u2581{"], ["\u2581w", "$$eight", "$$By", "$$Span", "$$Query", "$$.C", "$$lear()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581clear()", "\u2581{"], ["\u2581w", "$$eight", "$$By", "$$Span", "$$Query", "$$.c", "$$lear()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int FindEndOffset(StringBuilder buffer, int start) {\n    if (start > buffer.Length || start < 0) return start;\n    bi.SetText(buffer.ToString(start, buffer.Length - start));\n    return bi.Next() + start;\n}\n", "java": "public int findEndOffset(StringBuilder buffer, int start) {\n    if( start > buffer.length() || start < 0 ) return start;\n    bi.setText(buffer.substring(start));\n    return bi.next() + start;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581F", "$$ind", "$$End", "$$Offset", "$$(String", "$$Builder", "\u2581buffer,", "\u2581int", "\u2581start", "$$)", "\u2581{"], ["\u2581if", "\u2581(start", "\u2581>", "\u2581buffer", "$$.Length", "\u2581||", "\u2581start", "\u2581<", "\u25810)", "\u2581return", "\u2581start", "$$;"], ["\u2581b", "$$i", "$$.Set", "$$Text", "$$(buffer", "$$.To", "$$String(", "$$start", "$$,", "\u2581buffer", "$$.Length", "\u2581-", "\u2581start", "$$))", "$$;"], ["\u2581return", "\u2581b", "$$i", "$$.N", "$$ext", "$$()", "\u2581+", "\u2581start", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581find", "$$End", "$$Offset", "$$(String", "$$Builder", "\u2581buffer,", "\u2581int", "\u2581start", "$$)", "\u2581{"], ["\u2581if(", "\u2581start", "\u2581>", "\u2581buffer", "$$.length()", "\u2581||", "\u2581start", "\u2581<", "\u25810", "\u2581)", "\u2581return", "\u2581start", "$$;"], ["\u2581b", "$$i", "$$.set", "$$Text", "$$(buffer", "$$.sub", "$$string(", "$$start", "$$))", "$$;"], ["\u2581return", "\u2581b", "$$i", "$$.next", "$$()", "\u2581+", "\u2581start", "$$;"], ["\u2581}"]]}, {"cs": "public SrndQuery PrimaryQuery() {\n    SrndQuery q;\n    switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk) {\n    case RegexpToken.LPAREN:\n        Jj_consume_token(RegexpToken.LPAREN);\n        q = FieldsQuery();\n        Jj_consume_token(RegexpToken.RPAREN);\n        break;\n    case RegexpToken.OR:\n    case RegexpToken.AND:\n    case RegexpToken.W:\n    case RegexpToken.N:\n        q = PrefixOperatorQuery();\n        break;\n    case RegexpToken.TRUNCQUOTED:\n    case RegexpToken.QUOTED:\n    case RegexpToken.SUFFIXTERM:\n    case RegexpToken.TRUNCTERM:\n    case RegexpToken.TERM:\n        q = SimpleTerm();\n        break;\n    default:\n        jj_la1[5] = jj_gen;\n        Jj_consume_token(-1);\n        throw new ParseException();\n    }\n    OptionalWeights(q);\n    {\n        if (true) return q;\n    }\n    throw new Exception(\"Missing return statement in function\");\n}\n", "java": "final public SrndQuery PrimaryQuery() throws ParseException {\n    SrndQuery q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case LPAREN:\n        jj_consume_token(LPAREN);\n        q = FieldsQuery();\n        jj_consume_token(RPAREN);\n        break;\n    case OR:\n    case AND:\n    case W:\n    case N:\n        q = PrefixOperatorQuery();\n        break;\n    case TRUNCQUOTED:\n    case QUOTED:\n    case SUFFIXTERM:\n    case TRUNCTERM:\n    case TERM:\n        q = SimpleTerm();\n        break;\n    default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n    }\n    OptionalWeights(q);\n    {\n        if (true) return q;\n    }\n    throw new Error(\"Missing return statement in function\");\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$rndQuery", "\u2581P", "$$ri", "$$mary", "$$Query", "$$()", "\u2581{"], ["\u2581S", "$$rndQuery", "\u2581q", "$$;"], ["\u2581switch", "\u2581((", "$$jj_", "$$ntk", "\u2581==", "\u2581-1)", "\u2581?", "\u2581J", "$$j_", "$$ntk", "$$()", "\u2581:", "\u2581jj_", "$$ntk", "$$)", "\u2581{"], ["\u2581case", "\u2581Re", "$$g", "$$exp", "$$Token", "$$.", "$$L", "$$P", "$$A", "$$RE", "$$N", "$$:"], ["\u2581J", "$$j_", "$$con", "$$sume", "$$_token", "$$(Re", "$$g", "$$exp", "$$Token", "$$.", "$$L", "$$P", "$$A", "$$RE", "$$N", "$$)", "$$;"], ["\u2581q", "\u2581=", "\u2581Fields", "$$Query", "$$()", "$$;"], ["\u2581J", "$$j_", "$$con", "$$sume", "$$_token", "$$(Re", "$$g", "$$exp", "$$Token", "$$.", "$$R", "$$P", "$$A", "$$RE", "$$N", "$$)", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581Re", "$$g", "$$exp", "$$Token", "$$.", "$$OR", "$$:"], ["\u2581case", "\u2581Re", "$$g", "$$exp", "$$Token", "$$.A", "$$N", "$$D", "$$:"], ["\u2581case", "\u2581Re", "$$g", "$$exp", "$$Token", "$$.", "$$W", "$$:"], ["\u2581case", "\u2581Re", "$$g", "$$exp", "$$Token", "$$.N", "$$:"], ["\u2581q", "\u2581=", "\u2581P", "$$re", "$$fix", "$$Oper", "$$ator", "$$Query", "$$()", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581Re", "$$g", "$$exp", "$$Token", "$$.", "$$T", "$$R", "$$UN", "$$C", "$$Q", "$$U", "$$O", "$$TE", "$$D", "$$:"], ["\u2581case", "\u2581Re", "$$g", "$$exp", "$$Token", "$$.", "$$Q", "$$U", "$$O", "$$TE", "$$D", "$$:"], ["\u2581case", "\u2581Re", "$$g", "$$exp", "$$Token", "$$.S", "$$U", "$$FF", "$$I", "$$X", "$$TER", "$$M", "$$:"], ["\u2581case", "\u2581Re", "$$g", "$$exp", "$$Token", "$$.", "$$T", "$$R", "$$UN", "$$C", "$$TER", "$$M", "$$:"], ["\u2581case", "\u2581Re", "$$g", "$$exp", "$$Token", "$$.", "$$TER", "$$M", "$$:"], ["\u2581q", "\u2581=", "\u2581Simple", "$$Term", "$$()", "$$;"], ["\u2581break", "$$;"], ["\u2581default", "$$:"], ["\u2581jj_", "$$la", "$$1", "$$[", "$$5", "$$]", "\u2581=", "\u2581jj_gen", "$$;"], ["\u2581J", "$$j_", "$$con", "$$sume", "$$_token", "$$(", "$$-", "$$1)", "$$;"], ["\u2581throw", "\u2581new", "\u2581Parse", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581", "$$Option", "$$al", "$$Weight", "$$s(", "$$q", "$$)", "$$;"], ["\u2581{"], ["\u2581if", "\u2581(true)", "\u2581return", "\u2581q", "$$;"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581Exception(\"", "$$M", "$$issing", "\u2581return", "\u2581state", "$$ment", "\u2581in", "\u2581function", "$$\")", "$$;"], ["\u2581}"]], "java_t": [["\u2581final", "\u2581public", "\u2581S", "$$rndQuery", "\u2581P", "$$ri", "$$mary", "$$Query", "$$()", "\u2581throws", "\u2581Parse", "$$Exception", "\u2581{"], ["\u2581S", "$$rndQuery", "\u2581q", "$$;"], ["\u2581switch", "\u2581((", "$$jj_", "$$ntk", "$$==", "$$-", "$$1)", "$$?", "$$jj_", "$$ntk", "$$():", "$$jj_", "$$ntk", "$$)", "\u2581{"], ["\u2581case", "\u2581L", "$$P", "$$A", "$$RE", "$$N", "$$:"], ["\u2581jj_", "$$con", "$$sume", "$$_token", "$$(", "$$L", "$$P", "$$A", "$$RE", "$$N", "$$)", "$$;"], ["\u2581q", "\u2581=", "\u2581Fields", "$$Query", "$$()", "$$;"], ["\u2581jj_", "$$con", "$$sume", "$$_token", "$$(", "$$R", "$$P", "$$A", "$$RE", "$$N", "$$)", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581", "$$OR", "$$:"], ["\u2581case", "\u2581A", "$$N", "$$D", "$$:"], ["\u2581case", "\u2581W", "$$:"], ["\u2581case", "\u2581N", "$$:"], ["\u2581q", "\u2581=", "\u2581P", "$$re", "$$fix", "$$Oper", "$$ator", "$$Query", "$$()", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581T", "$$R", "$$UN", "$$C", "$$Q", "$$U", "$$O", "$$TE", "$$D", "$$:"], ["\u2581case", "\u2581", "$$Q", "$$U", "$$O", "$$TE", "$$D", "$$:"], ["\u2581case", "\u2581S", "$$U", "$$FF", "$$I", "$$X", "$$TER", "$$M", "$$:"], ["\u2581case", "\u2581T", "$$R", "$$UN", "$$C", "$$TER", "$$M", "$$:"], ["\u2581case", "\u2581", "$$TER", "$$M", "$$:"], ["\u2581q", "\u2581=", "\u2581Simple", "$$Term", "$$()", "$$;"], ["\u2581break", "$$;"], ["\u2581default", "$$:"], ["\u2581jj_", "$$la", "$$1", "$$[", "$$5", "$$]", "\u2581=", "\u2581jj_gen", "$$;"], ["\u2581jj_", "$$con", "$$sume", "$$_token", "$$(", "$$-", "$$1)", "$$;"], ["\u2581throw", "\u2581new", "\u2581Parse", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581", "$$Option", "$$al", "$$Weight", "$$s(", "$$q", "$$)", "$$;"], ["\u2581{"], ["\u2581if", "\u2581(true)", "\u2581return", "\u2581q", "$$;"], ["\u2581}"], ["\u2581throw", "\u2581new", "\u2581Error", "$$(\"", "$$M", "$$issing", "\u2581return", "\u2581state", "$$ment", "\u2581in", "\u2581function", "$$\")", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteApiKeyResponse DeleteApiKey(DeleteApiKeyRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteApiKeyRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteApiKeyResponseUnmarshaller.Instance;\n    return Invoke<DeleteApiKeyResponse>(request, options);\n}\n", "java": "public DeleteApiKeyResult deleteApiKey(DeleteApiKeyRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteApiKey(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Api", "$$Key", "$$Response", "\u2581Delete", "$$Api", "$$Key", "$$(Delete", "$$Api", "$$Key", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Api", "$$Key", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Api", "$$Key", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Api", "$$Key", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Api", "$$Key", "$$Result", "\u2581delete", "$$Api", "$$Key", "$$(Delete", "$$Api", "$$Key", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Api", "$$Key", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public InsertTagsRequest(): base(\"Ots\", \"2016-06-20\", \"InsertTags\", \"ots\", \"openAPI\") {\n    Method = MethodType.POST;\n}\n", "java": "public InsertTagsRequest() {\n    super(\"Ots\", \"2016-06-20\", \"InsertTags\", \"ots\");\n    setMethod(MethodType.POST);\n}\n", "cs_t": [["\u2581public", "\u2581In", "$$sert", "$$Tag", "$$sRequest", "$$():", "\u2581base(\"", "$$O", "$$t", "$$s\",", "\u2581\"2016-06", "$$-", "$$20", "$$\",", "\u2581\"", "$$In", "$$sert", "$$Tag", "$$s\",", "\u2581\"", "$$ot", "$$s\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Method", "\u2581=", "\u2581MethodType.POST", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581In", "$$sert", "$$Tag", "$$sRequest", "$$()", "\u2581{"], ["\u2581super(\"", "$$O", "$$t", "$$s\",", "\u2581\"2016-06", "$$-", "$$20", "$$\",", "\u2581\"", "$$In", "$$sert", "$$Tag", "$$s\",", "\u2581\"", "$$ot", "$$s", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.POST", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteUserByPrincipalIdResponse DeleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteUserByPrincipalIdRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteUserByPrincipalIdResponseUnmarshaller.Instance;\n    return Invoke<DeleteUserByPrincipalIdResponse>(request, options);\n}\n", "java": "public DeleteUserByPrincipalIdResult deleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteUserByPrincipalId(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$User", "$$By", "$$P", "$$r", "$$in", "$$c", "$$ip", "$$al", "$$Id", "$$Response", "\u2581Delete", "$$User", "$$By", "$$P", "$$r", "$$in", "$$c", "$$ip", "$$al", "$$Id(", "$$Delete", "$$User", "$$By", "$$P", "$$r", "$$in", "$$c", "$$ip", "$$al", "$$Id", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$User", "$$By", "$$P", "$$r", "$$in", "$$c", "$$ip", "$$al", "$$Id", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$User", "$$By", "$$P", "$$r", "$$in", "$$c", "$$ip", "$$al", "$$Id", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$User", "$$By", "$$P", "$$r", "$$in", "$$c", "$$ip", "$$al", "$$Id", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$User", "$$By", "$$P", "$$r", "$$in", "$$c", "$$ip", "$$al", "$$Id", "$$Result", "\u2581delete", "$$User", "$$By", "$$P", "$$r", "$$in", "$$c", "$$ip", "$$al", "$$Id(", "$$Delete", "$$User", "$$By", "$$P", "$$r", "$$in", "$$c", "$$ip", "$$al", "$$Id", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$User", "$$By", "$$P", "$$r", "$$in", "$$c", "$$ip", "$$al", "$$Id", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeNetworkInterfacesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeNetworkInterfacesResponseUnmarshaller.Instance;\n    return Invoke<DescribeNetworkInterfacesResponse>(request, options);\n}\n", "java": "public DescribeNetworkInterfacesResult describeNetworkInterfaces(DescribeNetworkInterfacesRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeNetworkInterfaces(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$Response", "\u2581Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$(Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$Result", "\u2581describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$(Describe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Network", "$$Inter", "$$fa", "$$ces", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override int Serialize(int offset, byte[] data, EscherSerializationListener listener) {\n    listener.BeforeRecordSerialize(offset, RecordId, this);\n    LittleEndian.PutShort(data, offset, Options);\n    LittleEndian.PutShort(data, offset + 2, RecordId);\n    LittleEndian.PutInt(data, offset + 4, 8);\n    LittleEndian.PutInt(data, offset + 8, field_1_numShapes);\n    LittleEndian.PutInt(data, offset + 12, field_2_lastMSOSPID);\n    listener.AfterRecordSerialize(offset + 16, RecordId, RecordSize, this);\n    return RecordSize;\n}\n", "java": "public int serialize( int offset, byte[] data, EscherSerializationListener listener ) {\n    listener.beforeRecordSerialize( offset, getRecordId(), this );\n    LittleEndian.putShort( data, offset, getOptions() );\n    LittleEndian.putShort( data, offset + 2, getRecordId() );\n    LittleEndian.putInt( data, offset + 4, 8 );\n    LittleEndian.putInt( data, offset + 8, field_1_numShapes );\n    LittleEndian.putInt( data, offset + 12, field_2_lastMSOSPID );\n    listener.afterRecordSerialize( offset + 16, getRecordId(), getRecordSize(), this );\n    return getRecordSize();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int", "\u2581Serialize", "$$(int", "\u2581offset,", "\u2581byte[]", "\u2581data,", "\u2581Escher", "$$S", "$$erialization", "$$Listener", "\u2581listener", "$$)", "\u2581{"], ["\u2581lis", "$$tener.", "$$Be", "$$fore", "$$RecordS", "$$erialize", "$$(offset", "$$,", "\u2581Record", "$$Id,", "\u2581this", "$$)", "$$;"], ["\u2581LittleEndian.Put", "$$Short(data,", "\u2581offset,", "\u2581", "$$Options", "$$)", "$$;"], ["\u2581LittleEndian.Put", "$$Short(data,", "\u2581offset", "\u2581+", "\u25812", "$$,", "\u2581Record", "$$Id)", "$$;"], ["\u2581LittleEndian.Put", "$$Int(data,", "\u2581offset", "\u2581+", "\u25814", "$$,", "\u25818)", "$$;"], ["\u2581LittleEndian.Put", "$$Int(data,", "\u2581offset", "\u2581+", "\u25818", "$$,", "\u2581field_1_", "$$num", "$$Sh", "$$ap", "$$es", "$$)", "$$;"], ["\u2581LittleEndian.Put", "$$Int(data,", "\u2581offset", "\u2581+", "\u25811", "$$2,", "\u2581field_2_", "$$last", "$$M", "$$S", "$$O", "$$S", "$$P", "$$ID", "$$)", "$$;"], ["\u2581listener", "$$.A", "$$fter", "$$RecordS", "$$erialize", "$$(offset", "\u2581+", "\u258116", "$$,", "\u2581Record", "$$Id,", "\u2581Record", "$$Size,", "\u2581this", "$$)", "$$;"], ["\u2581return", "\u2581Record", "$$Size", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581serialize", "$$(", "\u2581int", "\u2581offset,", "\u2581byte[]", "\u2581data,", "\u2581Escher", "$$S", "$$erialization", "$$Listener", "\u2581listener", "\u2581)", "\u2581{"], ["\u2581lis", "$$tener.", "$$be", "$$fore", "$$RecordS", "$$erialize", "$$(", "\u2581offset,", "\u2581getRecord", "$$Id", "$$(),", "\u2581this", "\u2581)", "$$;"], ["\u2581LittleEndian.put", "$$Short(", "\u2581data,", "\u2581offset,", "\u2581get", "$$Options", "$$()", "\u2581)", "$$;"], ["\u2581LittleEndian.put", "$$Short(", "\u2581data,", "\u2581offset", "\u2581+", "\u25812", "$$,", "\u2581getRecord", "$$Id()", "\u2581)", "$$;"], ["\u2581LittleEndian.put", "$$Int(", "\u2581data,", "\u2581offset", "\u2581+", "\u25814", "$$,", "\u25818", "\u2581)", "$$;"], ["\u2581LittleEndian.put", "$$Int(", "\u2581data,", "\u2581offset", "\u2581+", "\u25818", "$$,", "\u2581field_1_", "$$num", "$$Sh", "$$ap", "$$es", "\u2581)", "$$;"], ["\u2581LittleEndian.put", "$$Int(", "\u2581data,", "\u2581offset", "\u2581+", "\u25811", "$$2,", "\u2581field_2_", "$$last", "$$M", "$$S", "$$O", "$$S", "$$P", "$$ID", "\u2581)", "$$;"], ["\u2581lis", "$$tener.", "$$af", "$$ter", "$$RecordS", "$$erialize", "$$(", "\u2581offset", "\u2581+", "\u258116", "$$,", "\u2581getRecord", "$$Id", "$$(),", "\u2581getRecord", "$$Size", "$$(),", "\u2581this", "\u2581)", "$$;"], ["\u2581return", "\u2581getRecord", "$$Size()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateSecurityConfigurationResponse CreateSecurityConfiguration(CreateSecurityConfigurationRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateSecurityConfigurationRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateSecurityConfigurationResponseUnmarshaller.Instance;\n    return Invoke<CreateSecurityConfigurationResponse>(request, options);\n}\n", "java": "public CreateSecurityConfigurationResult createSecurityConfiguration(CreateSecurityConfigurationRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateSecurityConfiguration(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Security", "$$Configuration", "$$Response", "\u2581Create", "$$Security", "$$Configuration", "$$(Create", "$$Security", "$$ConfigurationRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Security", "$$Configuration", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Security", "$$Configuration", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Security", "$$Configuration", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Security", "$$Configuration", "$$Result", "\u2581create", "$$Security", "$$Configuration", "$$(Create", "$$Security", "$$ConfigurationRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Security", "$$Configuration", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeClientVpnConnectionsResponse DescribeClientVpnConnections(DescribeClientVpnConnectionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeClientVpnConnectionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeClientVpnConnectionsResponseUnmarshaller.Instance;\n    return Invoke<DescribeClientVpnConnectionsResponse>(request, options);\n}\n", "java": "public DescribeClientVpnConnectionsResult describeClientVpnConnections(DescribeClientVpnConnectionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeClientVpnConnections(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$ClientVpn", "$$Connection", "$$sResponse", "\u2581Describe", "$$ClientVpn", "$$Connection", "$$s(Describe", "$$ClientVpn", "$$Connection", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$ClientVpn", "$$Connection", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$ClientVpn", "$$Connection", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$ClientVpn", "$$Connection", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$ClientVpn", "$$Connection", "$$sResult", "\u2581describe", "$$ClientVpn", "$$Connection", "$$s(Describe", "$$ClientVpn", "$$Connection", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$ClientVpn", "$$Connection", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static void fill(double[] array, double value) {\n    {\n        for (int i = 0; i < array.Length; i++) {\n            array[i] = value;\n        }\n    }\n}\n", "java": "public static void fill(double[] array, double value) {\n    for (int i = 0; i < array.length; i++) {\n        array[i] = value;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581fill", "$$(double", "$$[]", "\u2581array,", "\u2581double", "\u2581value)", "\u2581{"], ["\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581array", "$$.Length;", "\u2581i++)", "\u2581{"], ["\u2581array", "$$[i]", "\u2581=", "\u2581value", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581fill", "$$(double", "$$[]", "\u2581array,", "\u2581double", "\u2581value)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581array", "$$.length;", "\u2581i++)", "\u2581{"], ["\u2581array", "$$[i]", "\u2581=", "\u2581value", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public bool hasNext() {\n    return pos < maxColumn;\n}\n", "java": "public boolean hasNext() {\n    return nextId < cells.length;\n}\n", "cs_t": [["\u2581public", "\u2581bool", "\u2581has", "$$Next()", "\u2581{"], ["\u2581return", "\u2581pos", "\u2581<", "\u2581max", "$$Column", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581has", "$$Next()", "\u2581{"], ["\u2581return", "\u2581next", "$$Id", "\u2581<", "\u2581cell", "$$s.length;"], ["\u2581}"]]}, {"cs": "public DocsEnum Reset(int[] postings) {\n    this.postings = postings;\n    upto = -2;\n    freq_Renamed = 0;\n    return this;\n}\n", "java": "public PostingsEnum reset(int[] postings) {\n    this.postings = postings;\n    upto = -2;\n    freq = 0;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581Doc", "$$s", "$$Enum", "\u2581Reset", "$$(int[]", "\u2581po", "$$st", "$$ing", "$$s)", "\u2581{"], ["\u2581this.", "$$po", "$$stings", "\u2581=", "\u2581po", "$$stings", "$$;"], ["\u2581upto", "\u2581=", "\u2581-", "$$2", "$$;"], ["\u2581f", "$$req", "$$_", "$$Ren", "$$ame", "$$d", "\u2581=", "\u25810;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Po", "$$stings", "$$Enum", "\u2581reset", "$$(int[]", "\u2581po", "$$st", "$$ing", "$$s)", "\u2581{"], ["\u2581this.", "$$po", "$$stings", "\u2581=", "\u2581po", "$$stings", "$$;"], ["\u2581upto", "\u2581=", "\u2581-", "$$2", "$$;"], ["\u2581f", "$$req", "\u2581=", "\u25810;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public bool HasAll(RevFlagSet set) {\n    return (flags & set.mask) == set.mask;\n}\n", "java": "public final boolean hasAll(RevFlagSet set) {\n    return (flags & set.mask) == set.mask;\n}\n", "cs_t": [["\u2581public", "\u2581bool", "\u2581H", "$$as", "$$All", "$$(", "$$Rev", "$$Flag", "$$Set", "\u2581set", "$$)", "\u2581{"], ["\u2581return", "\u2581(f", "$$lag", "$$s", "\u2581&", "\u2581set", "$$.", "$$mask", "$$)", "\u2581==", "\u2581set", "$$.", "$$mask", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581boolean", "\u2581has", "$$All", "$$(", "$$Rev", "$$Flag", "$$Set", "\u2581set", "$$)", "\u2581{"], ["\u2581return", "\u2581(f", "$$lag", "$$s", "\u2581&", "\u2581set", "$$.", "$$mask", "$$)", "\u2581==", "\u2581set", "$$.", "$$mask", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ModifyAccountResponse ModifyAccount(ModifyAccountRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ModifyAccountRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ModifyAccountResponseUnmarshaller.Instance;\n    return Invoke<ModifyAccountResponse>(request, options);\n}\n", "java": "public ModifyAccountResult modifyAccount(ModifyAccountRequest request) {\n    request = beforeClientExecution(request);\n    return executeModifyAccount(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Modify", "$$Account", "$$Response", "\u2581Modify", "$$Account", "$$(Modify", "$$Account", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Modify", "$$Account", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Modify", "$$Account", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Modify", "$$Account", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Modify", "$$Account", "$$Result", "\u2581modify", "$$Account", "$$(Modify", "$$Account", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeModify", "$$Account", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual IToken LT(int k) {\n    LazyInit();\n    if (k == 0) {\n        return null;\n    }\n    if (k < 0) {\n        return Lb(-k);\n    }\n    int i = p + k - 1;\n    Sync(i);\n    if (i >= tokens.Count) {\n        return tokens[tokens.Count - 1];\n    }\n    return tokens[i];\n}\n", "java": "public Token LT(int k) {\n    lazyInit();\n    if ( k==0 ) return null;\n    if ( k < 0 ) return LB(-k);\n    int i = p + k - 1;\n    sync(i);\n    if ( i >= tokens.size() ) {\n        return tokens.get(tokens.size()-1);\n    }\n    return tokens.get(i);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581I", "$$Token", "\u2581L", "$$T", "$$(int", "\u2581k", "$$)", "\u2581{"], ["\u2581L", "$$a", "$$z", "$$y", "$$Init", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$k", "\u2581==", "\u25810)", "\u2581{"], ["\u2581return", "\u2581null", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$k", "\u2581<", "\u25810)", "\u2581{"], ["\u2581return", "\u2581L", "$$b", "$$(", "$$-", "$$k", "$$)", "$$;"], ["\u2581}"], ["\u2581int", "\u2581i", "\u2581=", "\u2581p", "\u2581+", "\u2581k", "\u2581-", "\u25811", "$$;"], ["\u2581S", "$$yn", "$$c", "$$(i", "$$)", "$$;"], ["\u2581if", "\u2581(i", "\u2581>=", "\u2581token", "$$s.", "$$Count)", "\u2581{"], ["\u2581return", "\u2581token", "$$s[", "$$token", "$$s.Count", "\u2581-", "\u25811", "$$]", "$$;"], ["\u2581}"], ["\u2581return", "\u2581token", "$$s[i]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Token", "\u2581L", "$$T", "$$(int", "\u2581k", "$$)", "\u2581{"], ["\u2581la", "$$z", "$$y", "$$Init", "$$()", "$$;"], ["\u2581if", "\u2581(", "\u2581k", "$$==", "$$0", "\u2581)", "\u2581return", "\u2581null", "$$;"], ["\u2581if", "\u2581(", "\u2581k", "\u2581<", "\u25810", "\u2581)", "\u2581return", "\u2581L", "$$B", "$$(", "$$-", "$$k", "$$)", "$$;"], ["\u2581int", "\u2581i", "\u2581=", "\u2581p", "\u2581+", "\u2581k", "\u2581-", "\u25811", "$$;"], ["\u2581syn", "$$c", "$$(i", "$$)", "$$;"], ["\u2581if", "\u2581(", "\u2581i", "\u2581>=", "\u2581token", "$$s.size()", "\u2581)", "\u2581{"], ["\u2581return", "\u2581token", "$$s.get", "$$(", "$$token", "$$s.size()", "$$-", "$$1)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581token", "$$s.get", "$$(i", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void RemoveSheet(int sheetIndex) {\n    if (boundsheets.Count > sheetIndex) {\n        records.Remove(records.Bspos - (boundsheets.Count - 1) + sheetIndex);\n        boundsheets.RemoveAt(sheetIndex);\n        FixTabIdRecord();\n    }\n    int sheetNum1Based = sheetIndex + 1;\n    for (int i = 0; i < NumNames; i++) {\n        NameRecord nr = GetNameRecord(i);\n        if (nr.SheetNumber == sheetNum1Based) {\n            nr.SheetNumber = (0);\n        }\n        else if (nr.SheetNumber > sheetNum1Based) {\n            nr.SheetNumber = (nr.SheetNumber - 1);\n        }\n    }\n    if (linkTable != null) {\n        for (int i = sheetIndex + 1; i < NumSheets + 1; i++) {\n            linkTable.RemoveSheet(i);\n        }\n    }\n}\n", "java": "public void removeSheet(int sheetIndex) {\n    if (boundsheets.size() > sheetIndex) {\n        records.remove(records.getBspos() - (boundsheets.size() - 1) + sheetIndex);\n        boundsheets.remove(sheetIndex);\n        fixTabIdRecord();\n    }\n    int sheetNum1Based = sheetIndex + 1;\n    for(int i=0; i<getNumNames(); i++) {\n        NameRecord nr = getNameRecord(i);\n        if(nr.getSheetNumber() == sheetNum1Based) {\n            nr.setSheetNumber(0);\n        }\n        else if(nr.getSheetNumber() > sheetNum1Based) {\n            nr.setSheetNumber(nr.getSheetNumber()-1);\n        }\n    }\n    if (linkTable != null) {\n        linkTable.removeSheet(sheetIndex);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Remove", "$$Sheet", "$$(int", "\u2581sheet", "$$Index)", "\u2581{"], ["\u2581if", "\u2581(", "$$bo", "$$und", "$$sheet", "$$s.Count", "\u2581>", "\u2581sheet", "$$Index)", "\u2581{"], ["\u2581record", "$$s.", "$$Remove", "$$(re", "$$cord", "$$s.", "$$B", "$$s", "$$pos", "\u2581-", "\u2581(", "$$bo", "$$und", "$$sheet", "$$s.Count", "\u2581-", "\u25811)", "\u2581+", "\u2581sheet", "$$Index)", "$$;"], ["\u2581bo", "$$und", "$$sheet", "$$s.", "$$Remove", "$$At(", "$$sheet", "$$Index)", "$$;"], ["\u2581", "$$Fi", "$$x", "$$T", "$$ab", "$$Id", "$$Record", "$$()", "$$;"], ["\u2581}"], ["\u2581int", "\u2581sheet", "$$Num", "$$1", "$$Base", "$$d", "\u2581=", "\u2581sheet", "$$Index", "\u2581+", "\u25811", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581Num", "$$Names", "$$;", "\u2581i++)", "\u2581{"], ["\u2581", "$$NameRecord", "\u2581n", "$$r", "\u2581=", "\u2581Get", "$$Name", "$$Record(", "$$i)", "$$;"], ["\u2581if", "\u2581(n", "$$r", "$$.", "$$Sheet", "$$Number", "\u2581==", "\u2581sheet", "$$Num", "$$1", "$$Base", "$$d", "$$)", "\u2581{"], ["\u2581n", "$$r", "$$.", "$$Sheet", "$$Number", "\u2581=", "\u2581(", "$$0)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(n", "$$r", "$$.", "$$Sheet", "$$Number", "\u2581>", "\u2581sheet", "$$Num", "$$1", "$$Base", "$$d", "$$)", "\u2581{"], ["\u2581n", "$$r", "$$.", "$$Sheet", "$$Number", "\u2581=", "\u2581(n", "$$r", "$$.", "$$Sheet", "$$Number", "\u2581-", "\u25811)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581if", "\u2581(", "$$link", "$$Table", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u2581sheet", "$$Index", "\u2581+", "\u25811", "$$;", "\u2581i", "\u2581<", "\u2581Num", "$$Sheet", "$$s", "\u2581+", "\u25811", "$$;", "\u2581i++)", "\u2581{"], ["\u2581link", "$$Table", "$$.Remove", "$$Sheet", "$$(i", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581remove", "$$Sheet", "$$(int", "\u2581sheet", "$$Index)", "\u2581{"], ["\u2581if", "\u2581(", "$$bo", "$$und", "$$sheet", "$$s.size()", "\u2581>", "\u2581sheet", "$$Index)", "\u2581{"], ["\u2581record", "$$s.", "$$re", "$$move", "$$(re", "$$cord", "$$s.get", "$$B", "$$s", "$$pos", "$$()", "\u2581-", "\u2581(", "$$bo", "$$und", "$$sheet", "$$s.size()", "\u2581-", "\u25811)", "\u2581+", "\u2581sheet", "$$Index)", "$$;"], ["\u2581bo", "$$und", "$$sheet", "$$s.", "$$re", "$$move", "$$(", "$$sheet", "$$Index)", "$$;"], ["\u2581fi", "$$x", "$$T", "$$ab", "$$Id", "$$Record", "$$()", "$$;"], ["\u2581}"], ["\u2581int", "\u2581sheet", "$$Num", "$$1", "$$Base", "$$d", "\u2581=", "\u2581sheet", "$$Index", "\u2581+", "\u25811", "$$;"], ["\u2581for", "$$(int", "\u2581i", "$$=0", "$$;", "\u2581i", "$$<", "$$get", "$$Num", "$$Names", "$$()", "$$;", "\u2581i++)", "\u2581{"], ["\u2581", "$$NameRecord", "\u2581n", "$$r", "\u2581=", "\u2581get", "$$Name", "$$Record(", "$$i)", "$$;"], ["\u2581if", "$$(n", "$$r", "$$.get", "$$Sheet", "$$Number", "$$()", "\u2581==", "\u2581sheet", "$$Num", "$$1", "$$Base", "$$d", "$$)", "\u2581{"], ["\u2581n", "$$r", "$$.set", "$$Sheet", "$$Number", "$$(", "$$0)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "$$(n", "$$r", "$$.get", "$$Sheet", "$$Number", "$$()", "\u2581>", "\u2581sheet", "$$Num", "$$1", "$$Base", "$$d", "$$)", "\u2581{"], ["\u2581n", "$$r", "$$.set", "$$Sheet", "$$Number", "$$(n", "$$r", "$$.get", "$$Sheet", "$$Number", "$$()", "$$-", "$$1)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581if", "\u2581(", "$$link", "$$Table", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581link", "$$Table", "$$.remove", "$$Sheet", "$$(", "$$sheet", "$$Index)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public void RemoveName(int index) {\n    names.RemoveAt(index);\n    workbook.RemoveName(index);\n}\n", "java": "public void removeName(String name) {\n    int index = getNameIndex(name);\n    removeName(index);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Remove", "$$Name", "$$(int", "\u2581index)", "\u2581{"], ["\u2581n", "$$ames", "$$.Remove", "$$At", "$$(index", "$$)", "$$;"], ["\u2581work", "$$book", "$$.Remove", "$$Name", "$$(index", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581remove", "$$Name", "$$(String", "\u2581name)", "\u2581{"], ["\u2581int", "\u2581index", "\u2581=", "\u2581get", "$$Name", "$$Index", "$$(name", "$$)", "$$;"], ["\u2581remove", "$$Name", "$$(index", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Equals(Object o) {\n    if (!(o is Property))return false;\n    Property p = (Property)o;\n    Object pValue = p.Value;\n    long pId = p.ID;\n    if (id != pId || (id != 0 && !TypesAreEqual(type, p.Type)))return false;\n    if (value == null && pValue == null)return true;\n    if (value == null || pValue == null)return false;\n    Type valueClass = value.GetType();\n    Type pValueClass = pValue.GetType();\n    if (!(valueClass.IsAssignableFrom(pValueClass)) &&!(pValueClass.IsAssignableFrom(valueClass)))return false;\n    if (value is byte[])return Arrays.Equals((byte[])value, (byte[])pValue);\n    return value.Equals(pValue);\n}\n", "java": "public boolean equals(final Object o) {\n    if (!(o instanceof Property)) {\n        return false;\n    }\n    final Property p = (Property) o;\n    final Object pValue = p.getValue();\n    final long pId = p.getID();\n    if (id != pId || (id != 0 && !typesAreEqual(type, p.getType()))) {\n        return false;\n    }\n    if (value == null && pValue == null) {\n        return true;\n    }\n    if (value == null || pValue == null) {\n        return false;\n    }\n    final Class<?> valueClass = value.getClass();\n    final Class<?> pValueClass = pValue.getClass();\n    if (!(valueClass.isAssignableFrom(pValueClass)) &&!(pValueClass.isAssignableFrom(valueClass))) {\n        return false;\n    }\n    if (value instanceof byte[]) {\n        byte[] thisVal = (byte[]) value, otherVal = (byte[]) pValue;\n        int len = unpaddedLength(thisVal);\n        if (len != unpaddedLength(otherVal)) {\n            return false;\n        }\n        for (int i=0; i<len; i++) {\n            if (thisVal[i] != otherVal[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return value.equals(pValue);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Equals(", "$$Object", "\u2581o)", "\u2581{"], ["\u2581if", "\u2581(!(o", "\u2581is", "\u2581", "$$Property", "$$))return", "\u2581false", "$$;"], ["\u2581", "$$Property", "\u2581p", "\u2581=", "\u2581(", "$$Property", "$$)o", "$$;"], ["\u2581Object", "\u2581p", "$$Value", "\u2581=", "\u2581p", "$$.", "$$Value", "$$;"], ["\u2581long", "\u2581p", "$$Id", "\u2581=", "\u2581p", "$$.", "$$ID", "$$;"], ["\u2581if", "\u2581(", "$$id", "\u2581!=", "\u2581p", "$$Id", "\u2581||", "\u2581(", "$$id", "\u2581!=", "\u25810", "\u2581&&", "\u2581!", "$$Types", "$$A", "$$re", "$$E", "$$qual", "$$(t", "$$ype", "$$,", "\u2581p", "$$.", "$$Type", "$$))", "$$)return", "\u2581false", "$$;"], ["\u2581if", "\u2581(value", "\u2581==", "\u2581null", "\u2581&&", "\u2581p", "$$Value", "\u2581==", "\u2581null)", "$$return", "\u2581true", "$$;"], ["\u2581if", "\u2581(value", "\u2581==", "\u2581null", "\u2581||", "\u2581p", "$$Value", "\u2581==", "\u2581null)", "$$return", "\u2581false", "$$;"], ["\u2581", "$$Type", "\u2581value", "$$Class", "\u2581=", "\u2581value", "$$.Get", "$$Type()", "$$;"], ["\u2581", "$$Type", "\u2581p", "$$Value", "$$Class", "\u2581=", "\u2581p", "$$Value", "$$.Get", "$$Type()", "$$;"], ["\u2581if", "\u2581(!", "$$(value", "$$Class.", "$$Is", "$$Assign", "$$able", "$$From", "$$(p", "$$Value", "$$Class", "$$))", "\u2581&&", "$$!", "$$(p", "$$Value", "$$Class.", "$$Is", "$$Assign", "$$able", "$$From", "$$(value", "$$Class", "$$))", "$$)return", "\u2581false", "$$;"], ["\u2581if", "\u2581(value", "\u2581is", "\u2581byte[]", "$$)return", "\u2581Arrays.", "$$E", "$$quals(", "$$(byte[]", "$$)", "$$value", "$$,", "\u2581(byte", "$$[]", "$$)", "$$p", "$$Value)", "$$;"], ["\u2581return", "\u2581value", "$$.Equals(", "$$p", "$$Value)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581equals(", "$$f", "$$inal", "\u2581Object", "\u2581o)", "\u2581{"], ["\u2581if", "\u2581(!(o", "\u2581instanceof", "\u2581", "$$Property", "$$))", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581final", "\u2581", "$$Property", "\u2581p", "\u2581=", "\u2581(", "$$Property", "$$)", "\u2581o", "$$;"], ["\u2581final", "\u2581Object", "\u2581p", "$$Value", "\u2581=", "\u2581p", "$$.get", "$$Value", "$$()", "$$;"], ["\u2581final", "\u2581long", "\u2581p", "$$Id", "\u2581=", "\u2581p", "$$.get", "$$ID", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$id", "\u2581!=", "\u2581p", "$$Id", "\u2581||", "\u2581(", "$$id", "\u2581!=", "\u25810", "\u2581&&", "\u2581!", "$$t", "$$yp", "$$es", "$$A", "$$re", "$$E", "$$qual", "$$(t", "$$ype", "$$,", "\u2581p", "$$.get", "$$Type()", "$$))", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(value", "\u2581==", "\u2581null", "\u2581&&", "\u2581p", "$$Value", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(value", "\u2581==", "\u2581null", "\u2581||", "\u2581p", "$$Value", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581final", "\u2581C", "$$lass", "$$<", "$$?", "$$>", "\u2581value", "$$Class", "\u2581=", "\u2581value", "$$.get", "$$Class", "$$()", "$$;"], ["\u2581final", "\u2581C", "$$lass", "$$<", "$$?", "$$>", "\u2581p", "$$Value", "$$Class", "\u2581=", "\u2581p", "$$Value", "$$.get", "$$Class", "$$()", "$$;"], ["\u2581if", "\u2581(!", "$$(value", "$$Class.", "$$is", "$$Assign", "$$able", "$$From", "$$(p", "$$Value", "$$Class", "$$))", "\u2581&&", "$$!", "$$(p", "$$Value", "$$Class.", "$$is", "$$Assign", "$$able", "$$From", "$$(value", "$$Class", "$$))", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(value", "\u2581instanceof", "\u2581byte[]", "$$)", "\u2581{"], ["\u2581byte[]", "\u2581this", "$$Val", "\u2581=", "\u2581(byte", "$$[]", "$$)", "\u2581value", "$$,", "\u2581other", "$$Val", "\u2581=", "\u2581(byte", "$$[]", "$$)", "\u2581p", "$$Value", "$$;"], ["\u2581int", "\u2581len", "\u2581=", "\u2581un", "$$p", "$$ad", "$$ded", "$$Length", "$$(this", "$$Val", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$len", "\u2581!=", "\u2581un", "$$p", "$$ad", "$$ded", "$$Length", "$$(other", "$$Val", "$$))", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581for", "\u2581(int", "\u2581i", "$$=0", "$$;", "\u2581i", "$$<", "$$len", "$$;", "\u2581i++)", "\u2581{"], ["\u2581if", "\u2581(this", "$$Val", "$$[i]", "\u2581!=", "\u2581other", "$$Val", "$$[i]", "$$)", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"], ["\u2581return", "\u2581value", "$$.equals(", "$$p", "$$Value)", "$$;"], ["\u2581}"]]}, {"cs": "public GetRepoBuildListRequest(): base(\"cr\", \"2016-06-07\", \"GetRepoBuildList\", \"cr\", \"openAPI\") {\n    UriPattern = \"/repos/[RepoNamespace]/[RepoName]/build\";\n    Method = MethodType.GET;\n}\n", "java": "public GetRepoBuildListRequest() {\n    super(\"cr\", \"2016-06-07\", \"GetRepoBuildList\", \"cr\");\n    setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/build\");\n    setMethod(MethodType.GET);\n}\n", "cs_t": [["\u2581public", "\u2581Get", "$$Repo", "$$Build", "$$List", "$$Request():", "\u2581base(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"Get", "$$Repo", "$$Build", "$$List", "$$\",", "\u2581\"", "$$cr\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581", "$$UriPattern", "\u2581=", "\u2581\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]/", "$$bu", "$$ild", "$$\"", "$$;"], ["\u2581Method", "\u2581=", "\u2581Method", "$$Type.", "$$GE", "$$T", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Repo", "$$Build", "$$List", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"Get", "$$Repo", "$$Build", "$$List", "$$\",", "\u2581\"", "$$cr", "$$\")", "$$;"], ["\u2581set", "$$UriPattern", "$$(\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]/", "$$bu", "$$ild", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.", "$$GE", "$$T", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public MessageWriter() {\n    buf = new ByteArrayOutputStream();\n    enc = new OutputStreamWriter(GetRawStream(), Constants.CHARSET);\n}\n", "java": "public MessageWriter() {\n    buf = new ByteArrayOutputStream();\n    enc = new OutputStreamWriter(getRawStream(), UTF_8);\n}\n", "cs_t": [["\u2581public", "\u2581M", "$$essage", "$$Writer", "$$()", "\u2581{"], ["\u2581buf", "\u2581=", "\u2581new", "\u2581Byte", "$$Array", "$$OutputStream", "$$()", "$$;"], ["\u2581", "$$enc", "\u2581=", "\u2581new", "\u2581", "$$OutputStream", "$$Writer", "$$(Get", "$$Raw", "$$Stream", "$$(),", "\u2581Constants.", "$$CHAR", "$$SE", "$$T", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581M", "$$essage", "$$Writer", "$$()", "\u2581{"], ["\u2581buf", "\u2581=", "\u2581new", "\u2581Byte", "$$Array", "$$OutputStream", "$$()", "$$;"], ["\u2581", "$$enc", "\u2581=", "\u2581new", "\u2581", "$$OutputStream", "$$Writer", "$$(get", "$$Raw", "$$Stream", "$$(),", "\u2581", "$$UTF", "$$_", "$$8", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void Append(RecordBase r) {\n    _recs.Add(r);\n}\n", "java": "public void append(RecordBase r) {\n    _recs.add(r);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Ap", "$$pend(", "$$Record", "$$Base", "\u2581r", "$$)", "\u2581{"], ["\u2581_re", "$$c", "$$s.Add(", "$$r", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581append(", "$$Record", "$$Base", "\u2581r", "$$)", "\u2581{"], ["\u2581_re", "$$c", "$$s.add(", "$$r", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Close() {\n    if (this.Read(this.skipBuffer) != -1 || this.actualSize != this.expectedSize) {\n        throw new CorruptObjectException(MessageFormat.Format(JGitText.Get().packfileCorruptionDetected, JGitText.Get().wrongDecompressedLength));\n    }\n    int used = this._enclosing.bAvail - this.inf.RemainingInput;\n    if (0 < used) {\n        this._enclosing.OnObjectData(this.src, this._enclosing.buf, this.p, used);\n        this._enclosing.Use(used);\n    }\n    this.inf.Reset();\n}\n", "java": "public void close() throws IOException {\n    if (read(skipBuffer) != -1 || actualSize != expectedSize) {\n        throw new CorruptObjectException(MessageFormat.format(JGitText.get().packfileCorruptionDetected,JGitText.get().wrongDecompressedLength));\n    }\n    int used = bAvail - inf.getRemaining();\n    if (0 < used) {\n        onObjectData(src, buf, p, used);\n        use(used);\n    }\n    inf.reset();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581C", "$$lose", "$$()", "\u2581{"], ["\u2581if", "\u2581(this", "$$.", "$$Re", "$$ad(", "$$this.", "$$skip", "$$Buffer", "$$)", "\u2581!=", "\u2581-1", "\u2581||", "\u2581this.", "$$ac", "$$tual", "$$Size", "\u2581!=", "\u2581this.", "$$expected", "$$Size)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581C", "$$or", "$$r", "$$up", "$$t", "$$Object", "$$Exception(", "$$MessageFormat", "$$.Format", "$$(JGitText.Get", "$$().", "$$p", "$$ack", "$$file", "$$C", "$$or", "$$r", "$$u", "$$ption", "$$Dete", "$$c", "$$ted", "$$,", "\u2581", "$$JGitText", "$$.Get", "$$()", "$$.w", "$$r", "$$ong", "$$Dec", "$$o", "$$mp", "$$ressed", "$$Length", "$$))", "$$;"], ["\u2581}"], ["\u2581int", "\u2581u", "$$sed", "\u2581=", "\u2581this._enclosing", "$$.", "$$b", "$$Avail", "\u2581-", "\u2581this.", "$$in", "$$f", "$$.", "$$Remaining", "$$Input", "$$;"], ["\u2581if", "\u2581(", "$$0", "\u2581<", "\u2581u", "$$sed", "$$)", "\u2581{"], ["\u2581this._enclosing", "$$.", "$$On", "$$Object", "$$Data", "$$(this", "$$.", "$$s", "$$rc", "$$,", "\u2581this._enclosing", "$$.", "$$buf", "$$,", "\u2581this.p", "$$,", "\u2581u", "$$sed", "$$)", "$$;"], ["\u2581this._enclosing", "$$.", "$$U", "$$se", "$$(", "$$used", "$$)", "$$;"], ["\u2581}"], ["\u2581this.", "$$in", "$$f", "$$.", "$$Reset", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581c", "$$lose", "$$()", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581if", "\u2581(", "$$rea", "$$d(", "$$skip", "$$Buffer", "$$)", "\u2581!=", "\u2581-1", "\u2581||", "\u2581ac", "$$tual", "$$Size", "\u2581!=", "\u2581expected", "$$Size)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581C", "$$or", "$$r", "$$up", "$$t", "$$Object", "$$Exception(", "$$MessageFormat", "$$.format", "$$(JGitText", "$$.get().", "$$p", "$$ack", "$$file", "$$C", "$$or", "$$r", "$$u", "$$ption", "$$Dete", "$$c", "$$ted", "$$,", "$$JGitText", "$$.get", "$$()", "$$.w", "$$r", "$$ong", "$$Dec", "$$o", "$$mp", "$$ressed", "$$Length", "$$))", "$$;"], ["\u2581}"], ["\u2581int", "\u2581u", "$$sed", "\u2581=", "\u2581b", "$$Avail", "\u2581-", "\u2581in", "$$f", "$$.get", "$$Remaining", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$0", "\u2581<", "\u2581u", "$$sed", "$$)", "\u2581{"], ["\u2581on", "$$Object", "$$Data", "$$(src", "$$,", "\u2581buf", "$$,", "\u2581p", "$$,", "\u2581u", "$$sed", "$$)", "$$;"], ["\u2581use", "$$(", "$$used", "$$)", "$$;"], ["\u2581}"], ["\u2581in", "$$f", "$$.", "$$reset", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeModelPackageResponse DescribeModelPackage(DescribeModelPackageRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeModelPackageRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeModelPackageResponseUnmarshaller.Instance;\n    return Invoke<DescribeModelPackageResponse>(request, options);\n}\n", "java": "public DescribeModelPackageResult describeModelPackage(DescribeModelPackageRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeModelPackage(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Model", "$$Pack", "$$age", "$$Response", "\u2581Describe", "$$Model", "$$Pack", "$$age", "$$(Describe", "$$Model", "$$Pack", "$$age", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Model", "$$Pack", "$$age", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Model", "$$Pack", "$$age", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Model", "$$Pack", "$$age", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Model", "$$Pack", "$$age", "$$Result", "\u2581describe", "$$Model", "$$Pack", "$$age", "$$(Describe", "$$Model", "$$Pack", "$$age", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Model", "$$Pack", "$$age", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void Construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {\n    if (rec is FormulaRecord) {\n        FormulaRecord formulaRec = (FormulaRecord)rec;\n        StringRecord cachedText=null;\n        Type nextClass = rs.PeekNextClass();\n        if (nextClass == typeof(StringRecord)) {\n            cachedText = (StringRecord)rs.GetNext();\n        }\n        else {\n            cachedText = null;\n        }\n        InsertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));\n    }\n    else {\n        InsertCell(rec);\n    }\n}\n", "java": "public void construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {\n    if (rec instanceof FormulaRecord) {\n        FormulaRecord formulaRec = (FormulaRecord)rec;\n        StringRecord cachedText;\n        Class<? extends Record> nextClass = rs.peekNextClass();\n        if (nextClass == StringRecord.class) {\n            cachedText = (StringRecord) rs.getNext();\n        }\n        else {\n            cachedText = null;\n        }\n        insertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));\n    }\n    else {\n        insertCell(rec);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Con", "$$str", "$$u", "$$ct", "$$(", "$$Cell", "$$Value", "$$Record", "$$Interface", "\u2581rec", "$$,", "\u2581Record", "$$Stream", "\u2581r", "$$s,", "\u2581Sh", "$$ared", "$$Value", "$$Man", "$$ag", "$$er", "\u2581s", "$$f", "$$h", "$$)", "\u2581{"], ["\u2581if", "\u2581(re", "$$c", "\u2581is", "\u2581Formula", "$$Record)", "\u2581{"], ["\u2581Formula", "$$Record", "\u2581formula", "$$Rec", "\u2581=", "\u2581(", "$$Formula", "$$Record)", "$$re", "$$c", "$$;"], ["\u2581String", "$$Record", "\u2581c", "$$ached", "$$Text", "$$=", "$$null", "$$;"], ["\u2581", "$$Type", "\u2581next", "$$Class", "\u2581=", "\u2581r", "$$s.", "$$P", "$$eek", "$$Next", "$$Class", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$next", "$$Class", "\u2581==", "\u2581type", "$$of", "$$(String", "$$Record", "$$))", "\u2581{"], ["\u2581c", "$$ached", "$$Text", "\u2581=", "\u2581(", "$$String", "$$Record)", "$$r", "$$s.Get", "$$Next()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581c", "$$ached", "$$Text", "\u2581=", "\u2581null", "$$;"], ["\u2581}"], ["\u2581In", "$$sert", "$$Cell", "$$(new", "\u2581Formula", "$$Record", "$$Aggregate", "$$(", "$$form", "$$ula", "$$Rec", "$$,", "\u2581c", "$$ached", "$$Text", "$$,", "\u2581s", "$$f", "$$h", "$$))", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581In", "$$sert", "$$Cell", "$$(re", "$$c", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581con", "$$str", "$$u", "$$ct", "$$(", "$$Cell", "$$Value", "$$Record", "$$Interface", "\u2581rec", "$$,", "\u2581Record", "$$Stream", "\u2581r", "$$s,", "\u2581Sh", "$$ared", "$$Value", "$$Man", "$$ag", "$$er", "\u2581s", "$$f", "$$h", "$$)", "\u2581{"], ["\u2581if", "\u2581(re", "$$c", "\u2581instanceof", "\u2581Formula", "$$Record)", "\u2581{"], ["\u2581Formula", "$$Record", "\u2581formula", "$$Rec", "\u2581=", "\u2581(", "$$Formula", "$$Record)", "$$re", "$$c", "$$;"], ["\u2581String", "$$Record", "\u2581c", "$$ached", "$$Text", "$$;"], ["\u2581C", "$$lass", "$$<", "$$?", "\u2581ex", "$$ten", "$$d", "$$s", "\u2581Record", "$$>", "\u2581next", "$$Class", "\u2581=", "\u2581r", "$$s.", "$$p", "$$eek", "$$Next", "$$Class", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$next", "$$Class", "\u2581==", "\u2581String", "$$Record", "$$.c", "$$las", "$$s)", "\u2581{"], ["\u2581c", "$$ached", "$$Text", "\u2581=", "\u2581(", "$$String", "$$Record)", "\u2581r", "$$s.get", "$$Next()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581c", "$$ached", "$$Text", "\u2581=", "\u2581null", "$$;"], ["\u2581}"], ["\u2581insert", "$$Cell", "$$(new", "\u2581Formula", "$$Record", "$$Aggregate", "$$(", "$$form", "$$ula", "$$Rec", "$$,", "\u2581c", "$$ached", "$$Text", "$$,", "\u2581s", "$$f", "$$h", "$$))", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581insert", "$$Cell", "$$(re", "$$c", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override object Clone() {\n    return new DeflateDecompressor();\n}\n", "java": "public Decompressor clone() {\n    return new DeflateDecompressor();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581object", "\u2581Clone()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581De", "$$f", "$$l", "$$ate", "$$Dec", "$$o", "$$mp", "$$ress", "$$or", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$ec", "$$o", "$$mp", "$$ress", "$$or", "\u2581clone()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581De", "$$f", "$$l", "$$ate", "$$Dec", "$$o", "$$mp", "$$ress", "$$or", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateS3ResourcesResponse UpdateS3Resources(UpdateS3ResourcesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateS3ResourcesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateS3ResourcesResponseUnmarshaller.Instance;\n    return Invoke<UpdateS3ResourcesResponse>(request, options);\n}\n", "java": "public UpdateS3ResourcesResult updateS3Resources(UpdateS3ResourcesRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateS3Resources(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$S3", "$$Resources", "$$Response", "\u2581Update", "$$S3", "$$Resources", "$$(Update", "$$S3", "$$Resources", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$S3", "$$Resources", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$S3", "$$Resources", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$S3", "$$Resources", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$S3", "$$Resources", "$$Result", "\u2581update", "$$S3", "$$Resources", "$$(Update", "$$S3", "$$Resources", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$S3", "$$Resources", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public GroupQueryNode(IQueryNode query) {\n    if (query == null) {\n        throw new QueryNodeError(new Message(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, \"query\", \"null\"));\n    }\n    Allocate();\n    IsLeaf = false;\n    Add(query);\n}\n", "java": "public GroupQueryNode(QueryNode query) {\n    if (query == null) {\n        throw new QueryNodeError(new MessageImpl(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, \"query\", \"null\"));\n    }\n    allocate();\n    setLeaf(false);\n    add(query);\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Group", "$$QueryNode", "$$(I", "$$QueryNode", "\u2581query", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$query", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$QueryNode", "$$Error", "$$(new", "\u2581M", "$$essage", "$$(", "$$Query", "$$Parser", "$$M", "$$ess", "$$ages", "$$.", "$$P", "$$AR", "$$AM", "$$E", "$$TER", "$$_", "$$VALU", "$$E_", "$$NO", "$$T_", "$$S", "$$U", "$$P", "$$P", "$$OR", "$$TE", "$$D", "$$,", "\u2581\"", "$$query", "$$\",", "\u2581\"", "$$null", "$$\"", "$$))", "$$;"], ["\u2581}"], ["\u2581A", "$$l", "$$locate", "$$()", "$$;"], ["\u2581Is", "$$Le", "$$af", "\u2581=", "\u2581false", "$$;"], ["\u2581Add(", "$$query", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Group", "$$QueryNode", "$$(", "$$QueryNode", "\u2581query", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$query", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$QueryNode", "$$Error", "$$(new", "\u2581M", "$$essage", "$$Impl", "$$(", "$$Query", "$$Parser", "$$M", "$$ess", "$$ages", "$$.", "$$P", "$$AR", "$$AM", "$$E", "$$TER", "$$_", "$$VALU", "$$E_", "$$NO", "$$T_", "$$S", "$$U", "$$P", "$$P", "$$OR", "$$TE", "$$D", "$$,", "\u2581\"", "$$query", "$$\",", "\u2581\"", "$$null", "$$\"", "$$))", "$$;"], ["\u2581}"], ["\u2581all", "$$oc", "$$ate", "$$()", "$$;"], ["\u2581set", "$$Le", "$$af", "$$(f", "$$alse", "$$)", "$$;"], ["\u2581add(", "$$query", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToQueryString(IEscapeQuerySyntax escaper) {\n    StringBuilder path = new StringBuilder();\n    path.Append(\"/\").Append(GetFirstPathElement());\n    foreach (QueryText pathelement in GetPathElements(1)) {\n        string value = escaper.Escape(new StringCharSequence(pathelement.Value),CultureInfo.InvariantCulture, EscapeQuerySyntaxType.STRING).ToString();\n        path.Append(\"/\\\"\").Append(value).Append(\"\\\"\");\n    }\n    return path.ToString();\n}\n", "java": "public CharSequence toQueryString(EscapeQuerySyntax escaper) {\n    StringBuilder path = new StringBuilder();\n    path.append(\"/\").append(getFirstPathElement());\n    for (QueryText pathelement : getPathElements(1)) {\n        CharSequence value = escaper.escape(pathelement.value, Locale.getDefault(), Type.STRING);\n        path.append(\"/\\\"\").append(value).append(\"\\\"\");\n    }\n    return path.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581To", "$$Query", "$$String(", "$$I", "$$Escape", "$$Query", "$$Syntax", "\u2581", "$$esc", "$$ap", "$$er)", "\u2581{"], ["\u2581StringBuilder", "\u2581path", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581path", "$$.Append(\"", "$$/", "$$\").Append(", "$$Get", "$$First", "$$Path", "$$Element", "$$())", "$$;"], ["\u2581foreach", "\u2581(", "$$Query", "$$Text", "\u2581path", "$$e", "$$lement", "\u2581in", "\u2581Get", "$$Path", "$$Element", "$$s(", "$$1", "$$))", "\u2581{"], ["\u2581string", "\u2581value", "\u2581=", "\u2581", "$$esc", "$$ap", "$$er.", "$$Escape", "$$(new", "\u2581String", "$$CharSequence", "$$(path", "$$e", "$$lement", "$$.", "$$Value", "$$),", "$$Culture", "$$Info.", "$$Inv", "$$ariant", "$$Culture", "$$,", "\u2581E", "$$sc", "$$ape", "$$Query", "$$Syntax", "$$Type.", "$$ST", "$$R", "$$ING", "$$)", "$$.ToString()", "$$;"], ["\u2581path", "$$.Append(\"", "$$/", "$$\\\"", "$$\").Append(", "$$value", "$$)", "$$.Append(\"", "$$\\\"", "$$\")", "$$;"], ["\u2581}"], ["\u2581return", "\u2581path", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Char", "$$Sequence", "\u2581to", "$$Query", "$$String(", "$$Escape", "$$Query", "$$Syntax", "\u2581", "$$esc", "$$ap", "$$er)", "\u2581{"], ["\u2581StringBuilder", "\u2581path", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581path", "$$.append(\"", "$$/", "$$\").append(", "$$get", "$$First", "$$Path", "$$Element", "$$())", "$$;"], ["\u2581for", "\u2581(", "$$Query", "$$Text", "\u2581path", "$$e", "$$lement", "\u2581:", "\u2581get", "$$Path", "$$Element", "$$s(", "$$1", "$$))", "\u2581{"], ["\u2581Char", "$$Sequence", "\u2581value", "\u2581=", "\u2581", "$$esc", "$$ap", "$$er.", "$$escape", "$$(path", "$$e", "$$lement", "$$.value", "$$,", "\u2581L", "$$oc", "$$ale", "$$.get", "$$Default", "$$(),", "\u2581", "$$Type.", "$$ST", "$$R", "$$ING", "$$)", "$$;"], ["\u2581path", "$$.append(\"", "$$/", "$$\\\"", "$$\").append(", "$$value", "$$)", "$$.append(\"", "$$\\\"", "$$\")", "$$;"], ["\u2581}"], ["\u2581return", "\u2581path", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public void RemoveCellComment() {\n    HSSFComment comment2 = _sheet.FindCellComment(_record.Row, _record.Column);\n    comment = null;\n    if (null == comment2) {\n        return;\n    }\n    (_sheet.DrawingPatriarch as HSSFPatriarch).RemoveShape(comment2);\n}\n", "java": "public void removeCellComment() {\n    HSSFComment comment = _sheet.findCellComment(_record.getRow(), _record.getColumn());\n    _comment = null;\n    if (null == comment) {\n        return;\n    }\n    _sheet.getDrawingPatriarch().removeShape(comment);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Remove", "$$Cell", "$$Comment", "$$()", "\u2581{"], ["\u2581HSSF", "$$Comment", "\u2581com", "$$ment", "$$2", "\u2581=", "\u2581_", "$$sheet", "$$.", "$$Find", "$$Cell", "$$Comment", "$$(_", "$$record", "$$.", "$$Row,", "\u2581_", "$$record", "$$.", "$$Column", "$$)", "$$;"], ["\u2581com", "$$ment", "\u2581=", "\u2581null", "$$;"], ["\u2581if", "\u2581(n", "$$ull", "\u2581==", "\u2581com", "$$ment", "$$2)", "\u2581{"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581(_", "$$sheet", "$$.D", "$$raw", "$$ing", "$$P", "$$at", "$$ri", "$$arch", "\u2581as", "\u2581HSSF", "$$P", "$$at", "$$ri", "$$arch", "$$).", "$$Remove", "$$Shape", "$$(", "$$com", "$$ment", "$$2)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581remove", "$$Cell", "$$Comment", "$$()", "\u2581{"], ["\u2581HSSF", "$$Comment", "\u2581com", "$$ment", "\u2581=", "\u2581_", "$$sheet", "$$.f", "$$ind", "$$Cell", "$$Comment", "$$(_", "$$record", "$$.get", "$$Row", "$$(),", "\u2581_", "$$record", "$$.get", "$$Column", "$$())", "$$;"], ["\u2581_", "$$com", "$$ment", "\u2581=", "\u2581null", "$$;"], ["\u2581if", "\u2581(n", "$$ull", "\u2581==", "\u2581com", "$$ment", "$$)", "\u2581{"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581_", "$$sheet", "$$.get", "$$Draw", "$$ing", "$$P", "$$at", "$$ri", "$$arch", "$$()", "$$.remove", "$$Shape", "$$(", "$$com", "$$ment", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void Reset() {\n    count = 0;\n    Debug.Assert(forwardCount == 0, \"pos=\" + pos + \" forwardCount=\" + forwardCount);\n}\n", "java": "public void reset() {\n    arriving = -1;\n    leaving = -1;\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Reset", "$$()", "\u2581{"], ["\u2581count", "\u2581=", "\u25810;"], ["\u2581Debug.Assert", "$$(f", "$$or", "$$ward", "$$Count", "\u2581==", "\u25810,", "\u2581\"", "$$pos", "$$=\"", "\u2581+", "\u2581pos", "\u2581+", "\u2581\"", "\u2581for", "$$ward", "$$Count", "$$=\"", "\u2581+", "\u2581for", "$$ward", "$$Count)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581reset", "$$()", "\u2581{"], ["\u2581ar", "$$ri", "$$v", "$$ing", "\u2581=", "\u2581-1", "$$;"], ["\u2581le", "$$a", "$$v", "$$ing", "\u2581=", "\u2581-1", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ActivateUserResponse ActivateUser(ActivateUserRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ActivateUserRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ActivateUserResponseUnmarshaller.Instance;\n    return Invoke<ActivateUserResponse>(request, options);\n}\n", "java": "public ActivateUserResult activateUser(ActivateUserRequest request) {\n    request = beforeClientExecution(request);\n    return executeActivateUser(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Ac", "$$ti", "$$vate", "$$User", "$$Response", "\u2581Ac", "$$ti", "$$vate", "$$User", "$$(", "$$Acti", "$$vate", "$$User", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Ac", "$$ti", "$$vate", "$$User", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Ac", "$$ti", "$$vate", "$$User", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Acti", "$$vate", "$$User", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Ac", "$$ti", "$$vate", "$$User", "$$Result", "\u2581ac", "$$ti", "$$vate", "$$User", "$$(", "$$Acti", "$$vate", "$$User", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Acti", "$$vate", "$$User", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool isCharsetDetected() {\n    throw new System.NotSupportedException();\n}\n", "java": "public boolean isCharsetDetected() {\n    throw new UnsupportedOperationException();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581is", "$$Char", "$$set", "$$Dete", "$$c", "$$ted", "$$()", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.Not", "$$Supported", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$Char", "$$set", "$$Dete", "$$c", "$$ted", "$$()", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Un", "$$supported", "$$Operation", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ModifySnapshotCopyRetentionPeriodResponse ModifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ModifySnapshotCopyRetentionPeriodRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ModifySnapshotCopyRetentionPeriodResponseUnmarshaller.Instance;\n    return Invoke<ModifySnapshotCopyRetentionPeriodResponse>(request, options);\n}\n", "java": "public Cluster modifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request) {\n    request = beforeClientExecution(request);\n    return executeModifySnapshotCopyRetentionPeriod(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Modify", "$$Snapshot", "$$Copy", "$$Re", "$$ten", "$$tion", "$$P", "$$eri", "$$od", "$$Response", "\u2581Modify", "$$Snapshot", "$$Copy", "$$Re", "$$ten", "$$tion", "$$P", "$$eri", "$$o", "$$d(", "$$Modify", "$$Snapshot", "$$Copy", "$$Re", "$$ten", "$$tion", "$$P", "$$eri", "$$od", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Modify", "$$Snapshot", "$$Copy", "$$Re", "$$ten", "$$tion", "$$P", "$$eri", "$$od", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Modify", "$$Snapshot", "$$Copy", "$$Re", "$$ten", "$$tion", "$$P", "$$eri", "$$od", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Modify", "$$Snapshot", "$$Copy", "$$Re", "$$ten", "$$tion", "$$P", "$$eri", "$$od", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581C", "$$l", "$$uster", "\u2581modify", "$$Snapshot", "$$Copy", "$$Re", "$$ten", "$$tion", "$$P", "$$eri", "$$o", "$$d(", "$$Modify", "$$Snapshot", "$$Copy", "$$Re", "$$ten", "$$tion", "$$P", "$$eri", "$$od", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeModify", "$$Snapshot", "$$Copy", "$$Re", "$$ten", "$$tion", "$$P", "$$eri", "$$od", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteClusterSubnetGroupResponse DeleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteClusterSubnetGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteClusterSubnetGroupResponseUnmarshaller.Instance;\n    return Invoke<DeleteClusterSubnetGroupResponse>(request, options);\n}\n", "java": "public DeleteClusterSubnetGroupResult deleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteClusterSubnetGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Cluster", "$$SubnetGroup", "$$Response", "\u2581Delete", "$$Cluster", "$$SubnetGroup", "$$(Delete", "$$Cluster", "$$SubnetGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Cluster", "$$SubnetGroup", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Cluster", "$$SubnetGroup", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Cluster", "$$SubnetGroup", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Cluster", "$$SubnetGroup", "$$Result", "\u2581delete", "$$Cluster", "$$SubnetGroup", "$$(Delete", "$$Cluster", "$$SubnetGroup", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Cluster", "$$SubnetGroup", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static string Decode(byte[] buffer) {\n    return Decode(buffer, 0, buffer.Length);\n}\n", "java": "public static String decode(byte[] buffer) {\n    return decode(buffer, 0, buffer.length);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581string", "\u2581D", "$$ecode", "$$(byte[]", "\u2581buffer", "$$)", "\u2581{"], ["\u2581return", "\u2581D", "$$ecode", "$$(buffer", "$$,", "\u25810,", "\u2581buffer", "$$.Length)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581String", "\u2581decode", "$$(byte[]", "\u2581buffer", "$$)", "\u2581{"], ["\u2581return", "\u2581decode", "$$(buffer", "$$,", "\u25810,", "\u2581buffer", "$$.length)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int GetDefaultPort() {\n    return -1;\n}\n", "java": "public int getDefaultPort() {\n    return -1;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581Get", "$$Default", "$$Port", "$$()", "\u2581{"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$Default", "$$Port", "$$()", "\u2581{"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StopTaskResponse StopTask(StopTaskRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = StopTaskRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = StopTaskResponseUnmarshaller.Instance;\n    return Invoke<StopTaskResponse>(request, options);\n}\n", "java": "public StopTaskResult stopTask(StopTaskRequest request) {\n    request = beforeClientExecution(request);\n    return executeStopTask(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Stop", "$$Task", "$$Response", "\u2581Stop", "$$Task", "$$(", "$$Stop", "$$Task", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Stop", "$$Task", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Stop", "$$Task", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Stop", "$$Task", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Stop", "$$Task", "$$Result", "\u2581stop", "$$Task", "$$(", "$$Stop", "$$Task", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Stop", "$$Task", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void SeekExact(BytesRef target, TermState otherState) {\n    if (!target.Equals(term_Renamed)) {\n        state.CopyFrom(otherState);\n        term_Renamed = BytesRef.DeepCopyOf(target);\n        seekPending = true;\n    }\n}\n", "java": "public void seekExact(BytesRef target, TermState otherState) {\n    assert otherState != null && otherState instanceof BlockTermState;\n    assert !doOrd || ((BlockTermState) otherState).ord < numTerms;\n    state.copyFrom(otherState);\n    seekPending = true;\n    indexIsCurrent = false;\n    term.copyBytes(target);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581S", "$$eek", "$$Exact", "$$(BytesRef", "\u2581target", "$$,", "\u2581Term", "$$State", "\u2581other", "$$State", "$$)", "\u2581{"], ["\u2581if", "\u2581(!", "$$t", "$$arget", "$$.Equals(", "$$term", "$$_", "$$Ren", "$$ame", "$$d", "$$))", "\u2581{"], ["\u2581state", "$$.Copy", "$$From", "$$(other", "$$State", "$$)", "$$;"], ["\u2581term", "$$_", "$$Ren", "$$ame", "$$d", "\u2581=", "\u2581BytesRef", "$$.", "$$De", "$$e", "$$p", "$$Copy", "$$Of", "$$(t", "$$arget", "$$)", "$$;"], ["\u2581seek", "$$Pending", "\u2581=", "\u2581true", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581seek", "$$Exact", "$$(BytesRef", "\u2581target", "$$,", "\u2581Term", "$$State", "\u2581other", "$$State", "$$)", "\u2581{"], ["\u2581assert", "\u2581other", "$$State", "\u2581!=", "\u2581null", "\u2581&&", "\u2581other", "$$State", "\u2581instanceof", "\u2581B", "$$lock", "$$Term", "$$State", "$$;"], ["\u2581assert", "\u2581!", "$$d", "$$o", "$$Ord", "\u2581||", "\u2581((", "$$Block", "$$Term", "$$State", "$$)", "\u2581other", "$$State", "$$).", "$$ord", "\u2581<", "\u2581num", "$$Term", "$$s;"], ["\u2581state", "$$.", "$$copy", "$$From", "$$(other", "$$State", "$$)", "$$;"], ["\u2581seek", "$$Pending", "\u2581=", "\u2581true", "$$;"], ["\u2581index", "$$Is", "$$Current", "\u2581=", "\u2581false", "$$;"], ["\u2581term", "$$.", "$$copy", "$$Bytes", "$$(t", "$$arget", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public SeriesToChartGroupRecord(RecordInputStream in1) {\n    field_1_chartGroupIndex = in1.ReadShort();\n}\n", "java": "public SeriesToChartGroupRecord(RecordInputStream in) {\n    field_1_chartGroupIndex = in.readShort();\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$eries", "$$To", "$$Ch", "$$art", "$$Group", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581field_1_", "$$ch", "$$art", "$$Group", "$$Index", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$eries", "$$To", "$$Ch", "$$art", "$$Group", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581field_1_", "$$ch", "$$art", "$$Group", "$$Index", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public static void WriteUnicodeStringFlagAndData(ILittleEndianOutput out1, String value) {\n    bool is16Bit = HasMultibyte(value);\n    out1.WriteByte(is16Bit ? 0x01 : 0x00);\n    if (is16Bit) {\n        PutUnicodeLE(value, out1);\n    }\n    else {\n        PutCompressedUnicode(value, out1);\n    }\n}\n", "java": "public static void writeUnicodeStringFlagAndData(LittleEndianOutput out, String value) {\n    boolean is16Bit = hasMultibyte(value);\n    out.writeByte(is16Bit ? 0x01 : 0x00);\n    if (is16Bit) {\n        putUnicodeLE(value, out);\n    }\n    else {\n        putCompressedUnicode(value, out);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581Write", "$$Unicode", "$$String", "$$Flag", "$$And", "$$Data", "$$(ILittleEndianOutput", "\u2581out", "$$1,", "\u2581String", "\u2581value)", "\u2581{"], ["\u2581bool", "\u2581is", "$$16", "$$Bit", "\u2581=", "\u2581H", "$$as", "$$Multi", "$$byte", "$$(value", "$$)", "$$;"], ["\u2581out1.WriteByte(", "$$is", "$$16", "$$Bit", "\u2581?", "\u25810x0", "$$1", "\u2581:", "\u25810x00", "$$)", "$$;"], ["\u2581if", "\u2581(is", "$$16", "$$Bit", "$$)", "\u2581{"], ["\u2581Put", "$$Unicode", "$$LE", "$$(value", "$$,", "\u2581out1)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581Put", "$$Comp", "$$ressed", "$$Unicode", "$$(value", "$$,", "\u2581out1)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581write", "$$Unicode", "$$String", "$$Flag", "$$And", "$$Data", "$$(LittleEndianOutput", "\u2581out", "$$,", "\u2581String", "\u2581value)", "\u2581{"], ["\u2581boolean", "\u2581is", "$$16", "$$Bit", "\u2581=", "\u2581has", "$$Multi", "$$byte", "$$(value", "$$)", "$$;"], ["\u2581out.writeByte(", "$$is", "$$16", "$$Bit", "\u2581?", "\u25810x0", "$$1", "\u2581:", "\u25810x00", "$$)", "$$;"], ["\u2581if", "\u2581(is", "$$16", "$$Bit", "$$)", "\u2581{"], ["\u2581put", "$$Unicode", "$$LE", "$$(value", "$$,", "\u2581out)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581put", "$$Comp", "$$ressed", "$$Unicode", "$$(value", "$$,", "\u2581out)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual AuthorizeSecurityGroupIngressResponse AuthorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = AuthorizeSecurityGroupIngressRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = AuthorizeSecurityGroupIngressResponseUnmarshaller.Instance;\n    return Invoke<AuthorizeSecurityGroupIngressResponse>(request, options);\n}\n", "java": "public AuthorizeSecurityGroupIngressResult authorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request) {\n    request = beforeClientExecution(request);\n    return executeAuthorizeSecurityGroupIngress(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581A", "$$uthor", "$$ize", "$$SecurityGroupIngres", "$$sResponse", "\u2581A", "$$uthor", "$$ize", "$$SecurityGroupIngres", "$$s(", "$$Author", "$$ize", "$$SecurityGroupIngres", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581A", "$$uthor", "$$ize", "$$SecurityGroup", "$$In", "$$gress", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581A", "$$uthor", "$$ize", "$$SecurityGroup", "$$In", "$$gress", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Author", "$$ize", "$$SecurityGroupIngres", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581A", "$$uthor", "$$ize", "$$SecurityGroupIngres", "$$sResult", "\u2581a", "$$uthor", "$$ize", "$$SecurityGroupIngres", "$$s(", "$$Author", "$$ize", "$$SecurityGroupIngres", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Author", "$$ize", "$$SecurityGroup", "$$In", "$$gress", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void AddFile(string file) {\n    CheckFileNames(new[] { file });\n    setFiles.Add(file);\n}\n", "java": "public void addFile(String file) {\n    checkFileNames(Collections.singleton(file));\n    setFiles.add(namedForThisSegment(file));\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Add", "$$File", "$$(string", "\u2581file", "$$)", "\u2581{"], ["\u2581Check", "$$File", "$$Names", "$$(new", "$$[]", "\u2581{", "\u2581file", "\u2581}", "$$)", "$$;"], ["\u2581set", "$$Files", "$$.Add(", "$$file", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581add", "$$File", "$$(String", "\u2581file", "$$)", "\u2581{"], ["\u2581check", "$$File", "$$Names", "$$(", "$$Collections.", "$$sing", "$$l", "$$et", "$$on", "$$(", "$$file", "$$))", "$$;"], ["\u2581set", "$$Files", "$$.add(", "$$name", "$$d", "$$For", "$$Th", "$$is", "$$Segment", "$$(", "$$file", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void setSize(int width, int height) {\n    mWidth = width;\n    mHeight = height;\n}\n", "java": "public void setSize(int width, int height) {\n    mWidth = width;\n    mHeight = height;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581set", "$$Size", "$$(int", "\u2581width", "$$,", "\u2581int", "\u2581h", "$$eight", "$$)", "\u2581{"], ["\u2581m", "$$Width", "\u2581=", "\u2581width", "$$;"], ["\u2581m", "$$H", "$$eight", "\u2581=", "\u2581h", "$$eight", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Size", "$$(int", "\u2581width", "$$,", "\u2581int", "\u2581h", "$$eight", "$$)", "\u2581{"], ["\u2581m", "$$Width", "\u2581=", "\u2581width", "$$;"], ["\u2581m", "$$H", "$$eight", "\u2581=", "\u2581h", "$$eight", "$$;"], ["\u2581}"]]}, {"cs": "public void SetPrecedenceFilterSuppressed(bool value) {\n    if (value) {\n        this.reachesIntoOuterContext |= SUPPRESS_PRECEDENCE_FILTER;\n    }\n    else {\n        this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;\n    }\n}\n", "java": "public final void setPrecedenceFilterSuppressed(boolean value) {\n    if (value) {\n        this.reachesIntoOuterContext |= 0x40000000;\n    }\n    else {\n        this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Set", "$$Pre", "$$cedence", "$$Filter", "$$Supp", "$$res", "$$se", "$$d(", "$$bo", "$$ol", "\u2581value)", "\u2581{"], ["\u2581if", "\u2581(value", "$$)", "\u2581{"], ["\u2581this.", "$$re", "$$ach", "$$es", "$$In", "$$to", "$$Out", "$$er", "$$Context", "\u2581|=", "\u2581S", "$$U", "$$P", "$$P", "$$RE", "$$SS", "$$_P", "$$RE", "$$CE", "$$DE", "$$N", "$$C", "$$E_", "$$FI", "$$L", "$$TER", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581this.", "$$re", "$$ach", "$$es", "$$In", "$$to", "$$Out", "$$er", "$$Context", "\u2581&", "$$=", "\u2581", "$$~", "$$S", "$$U", "$$P", "$$P", "$$RE", "$$SS", "$$_P", "$$RE", "$$CE", "$$DE", "$$N", "$$C", "$$E_", "$$FI", "$$L", "$$TER", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581void", "\u2581set", "$$Pre", "$$cedence", "$$Filter", "$$Supp", "$$res", "$$se", "$$d(", "$$boolean", "\u2581value)", "\u2581{"], ["\u2581if", "\u2581(value", "$$)", "\u2581{"], ["\u2581this.", "$$re", "$$ach", "$$es", "$$In", "$$to", "$$Out", "$$er", "$$Context", "\u2581|=", "\u25810x", "$$4", "$$00", "$$00", "$$00", "$$0", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581this.", "$$re", "$$ach", "$$es", "$$In", "$$to", "$$Out", "$$er", "$$Context", "\u2581&", "$$=", "\u2581", "$$~", "$$S", "$$U", "$$P", "$$P", "$$RE", "$$SS", "$$_P", "$$RE", "$$CE", "$$DE", "$$N", "$$C", "$$E_", "$$FI", "$$L", "$$TER", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual IntervalSet Look(ATNState s, RuleContext ctx) {\n    return Look(s, null, ctx);\n}\n", "java": "public IntervalSet LOOK(ATNState s, RuleContext ctx) {\n    return LOOK(s, null, ctx);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581IntervalSet", "\u2581", "$$Lo", "$$ok", "$$(", "$$ATN", "$$State", "\u2581s", "$$,", "\u2581", "$$RuleContext", "\u2581ctx", "$$)", "\u2581{"], ["\u2581return", "\u2581", "$$Lo", "$$ok", "$$(s,", "\u2581null", "$$,", "\u2581ctx", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581IntervalSet", "\u2581L", "$$O", "$$OK", "$$(", "$$ATN", "$$State", "\u2581s", "$$,", "\u2581", "$$RuleContext", "\u2581ctx", "$$)", "\u2581{"], ["\u2581return", "\u2581L", "$$O", "$$OK", "$$(s,", "\u2581null", "$$,", "\u2581ctx", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort(OptionFlags);\n    out1.WriteShort(RowHeight);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort(getOptionFlags());\n    out.writeShort(getRowHeight());\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$Option", "$$Flag", "$$s)", "$$;"], ["\u2581out1.WriteShort(", "$$Row", "$$H", "$$eight", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(get", "$$Option", "$$Flag", "$$s", "$$())", "$$;"], ["\u2581out.writeShort(get", "$$Row", "$$H", "$$eight", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public Builder(bool dedup) {\n    this.dedup = dedup;\n}\n", "java": "public Builder(boolean dedup) {\n    this.dedup = dedup;\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Builder", "$$(bool", "\u2581de", "$$d", "$$up", "$$)", "\u2581{"], ["\u2581this.", "$$ded", "$$up", "\u2581=", "\u2581de", "$$d", "$$up", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Builder", "$$(boolean", "\u2581de", "$$d", "$$up", "$$)", "\u2581{"], ["\u2581this.", "$$ded", "$$up", "\u2581=", "\u2581de", "$$d", "$$up", "$$;"], ["\u2581}"]]}, {"cs": "public Hashtable(int capacity, float loadFactor) : this(capacity) {\n    if (loadFactor <= 0 || float.IsNaN(loadFactor)) {\n        throw new System.ArgumentException(\"Load factor: \" + loadFactor);\n    }\n}\n", "java": "public Hashtable(int capacity, float loadFactor) {\n    this(capacity);\n    if (loadFactor <= 0 || Float.isNaN(loadFactor)) {\n        throw new IllegalArgumentException(\"Load factor: \" + loadFactor);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581Hash", "$$table", "$$(int", "\u2581capacity", "$$,", "\u2581float", "\u2581load", "$$Fa", "$$ctor", "$$)", "\u2581:", "\u2581this", "$$(c", "$$apacity", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$load", "$$Fa", "$$ctor", "\u2581<=", "\u25810", "\u2581||", "\u2581float", "$$.Is", "$$N", "$$a", "$$N", "$$(", "$$load", "$$Fa", "$$ctor", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"", "$$Load", "\u2581fa", "$$ctor", "$$:", "\u2581\"", "\u2581+", "\u2581load", "$$Fa", "$$ctor", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Hash", "$$table", "$$(int", "\u2581capacity", "$$,", "\u2581float", "\u2581load", "$$Fa", "$$ctor", "$$)", "\u2581{"], ["\u2581this", "$$(c", "$$apacity", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$load", "$$Fa", "$$ctor", "\u2581<=", "\u25810", "\u2581||", "\u2581F", "$$loat", "$$.is", "$$N", "$$a", "$$N", "$$(", "$$load", "$$Fa", "$$ctor", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$Load", "\u2581fa", "$$ctor", "$$:", "\u2581\"", "\u2581+", "\u2581load", "$$Fa", "$$ctor", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual object Get(string key) {\n    int bucket = normalCompletion.GetBucket(key);\n    return bucket == -1 ? (long?)null : bucket;\n}\n", "java": "public Object get(CharSequence key) {\n    final int bucket = normalCompletion.getBucket(key);\n    return bucket == -1 ? null : Long.valueOf(bucket);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581object", "\u2581Get", "$$(string", "\u2581key)", "\u2581{"], ["\u2581int", "\u2581bu", "$$cket", "\u2581=", "\u2581normal", "$$Comp", "$$letion", "$$.Get", "$$Bu", "$$cket", "$$(key", "$$)", "$$;"], ["\u2581return", "\u2581bu", "$$cket", "\u2581==", "\u2581-1", "\u2581?", "\u2581(", "$$long", "$$?", "$$)", "$$null", "\u2581:", "\u2581bu", "$$cket", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Object", "\u2581get", "$$(", "$$CharSequence", "\u2581key)", "\u2581{"], ["\u2581final", "\u2581int", "\u2581bu", "$$cket", "\u2581=", "\u2581normal", "$$Comp", "$$letion", "$$.get", "$$Bu", "$$cket", "$$(key", "$$)", "$$;"], ["\u2581return", "\u2581bu", "$$cket", "\u2581==", "\u2581-1", "\u2581?", "\u2581null", "\u2581:", "\u2581Long", "$$.value", "$$Of", "$$(b", "$$u", "$$cket", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListHyperParameterTuningJobsResponse ListHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListHyperParameterTuningJobsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListHyperParameterTuningJobsResponseUnmarshaller.Instance;\n    return Invoke<ListHyperParameterTuningJobsResponse>(request, options);\n}\n", "java": "public ListHyperParameterTuningJobsResult listHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListHyperParameterTuningJobs(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$H", "$$yper", "$$Parameter", "$$T", "$$un", "$$ingJob", "$$sResponse", "\u2581List", "$$H", "$$yper", "$$Parameter", "$$T", "$$un", "$$ingJob", "$$s(List", "$$H", "$$yper", "$$Parameter", "$$T", "$$un", "$$ingJob", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$H", "$$yper", "$$Parameter", "$$T", "$$un", "$$ingJob", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$H", "$$yper", "$$Parameter", "$$T", "$$un", "$$ingJob", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$H", "$$yper", "$$Parameter", "$$T", "$$un", "$$ingJob", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$H", "$$yper", "$$Parameter", "$$T", "$$un", "$$ingJob", "$$sResult", "\u2581list", "$$H", "$$yper", "$$Parameter", "$$T", "$$un", "$$ingJob", "$$s(List", "$$H", "$$yper", "$$Parameter", "$$T", "$$un", "$$ingJob", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$H", "$$yper", "$$Parameter", "$$T", "$$un", "$$ingJob", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteTableResponse DeleteTable(string tableName) {\n    var request = new DeleteTableRequest();\n    request.TableName = tableName;\n    return DeleteTable(request);\n}\n", "java": "public DeleteTableResult deleteTable(String tableName) {\n    return deleteTable(new DeleteTableRequest().withTableName(tableName));\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Table", "$$Response", "\u2581Delete", "$$Table", "$$(string", "\u2581table", "$$Name)", "\u2581{"], ["\u2581var", "\u2581request", "\u2581=", "\u2581new", "\u2581Delete", "$$Table", "$$Request()", "$$;"], ["\u2581request", "$$.", "$$Table", "$$Name", "\u2581=", "\u2581table", "$$Name", "$$;"], ["\u2581return", "\u2581Delete", "$$Table", "$$(request", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Table", "$$Result", "\u2581delete", "$$Table", "$$(String", "\u2581table", "$$Name)", "\u2581{"], ["\u2581return", "\u2581delete", "$$Table", "$$(new", "\u2581Delete", "$$Table", "$$Request()", "$$.w", "$$ith", "$$Table", "$$Name", "$$(t", "$$able", "$$Name", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "protected internal override bool LessThan(TextFragment fragA, TextFragment fragB) {\n    if (fragA.Score == fragB.Score)return fragA.FragNum > fragB.FragNum;\n    elsereturn fragA.Score < fragB.Score;\n}\n", "java": "public final boolean lessThan(TextFragment fragA, TextFragment fragB) {\n    if (fragA.getScore() == fragB.getScore())return fragA.fragNum > fragB.fragNum;\n    elsereturn fragA.getScore() < fragB.getScore();\n}\n", "cs_t": [["\u2581pro", "$$te", "$$c", "$$ted", "\u2581inter", "$$n", "$$al", "\u2581override", "\u2581bool", "\u2581L", "$$ess", "$$Th", "$$an", "$$(", "$$Text", "$$Fra", "$$gment", "\u2581fra", "$$g", "$$A", "$$,", "\u2581", "$$Text", "$$Fra", "$$gment", "\u2581fra", "$$g", "$$B", "$$)", "\u2581{"], ["\u2581if", "\u2581(f", "$$ra", "$$g", "$$A", "$$.", "$$Score", "\u2581==", "\u2581fra", "$$g", "$$B", "$$.", "$$Score", "$$)return", "\u2581fra", "$$g", "$$A", "$$.", "$$Frag", "$$Num", "\u2581>", "\u2581fra", "$$g", "$$B", "$$.", "$$Frag", "$$Num", "$$;"], ["\u2581else", "$$return", "\u2581fra", "$$g", "$$A", "$$.", "$$Score", "\u2581<", "\u2581fra", "$$g", "$$B", "$$.", "$$Score", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581boolean", "\u2581l", "$$ess", "$$Th", "$$an", "$$(", "$$Text", "$$Fra", "$$gment", "\u2581fra", "$$g", "$$A", "$$,", "\u2581", "$$Text", "$$Fra", "$$gment", "\u2581fra", "$$g", "$$B", "$$)", "\u2581{"], ["\u2581if", "\u2581(f", "$$ra", "$$g", "$$A", "$$.get", "$$Score", "$$()", "\u2581==", "\u2581fra", "$$g", "$$B", "$$.get", "$$Score", "$$())", "$$return", "\u2581fra", "$$g", "$$A", "$$.f", "$$ra", "$$g", "$$Num", "\u2581>", "\u2581fra", "$$g", "$$B", "$$.f", "$$ra", "$$g", "$$Num", "$$;"], ["\u2581else", "$$return", "\u2581fra", "$$g", "$$A", "$$.get", "$$Score", "$$()", "\u2581<", "\u2581fra", "$$g", "$$B", "$$.get", "$$Score", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public void FreeBefore(int pos) {\n    Debug.Assert(pos >= 0);\n    Debug.Assert(pos <= nextPos);\n    int newCount = nextPos - pos;\n    Debug.Assert(newCount <= count, \"newCount=\" + newCount + \" count=\" + count);\n    Debug.Assert(newCount <= buffer.Length, \"newCount=\" + newCount + \" buf.length=\" + buffer.Length);\n    count = newCount;\n}\n", "java": "public void freeBefore(int pos) {\n    assert pos >= 0;\n    assert pos <= nextPos;\n    final int newCount = nextPos - pos;\n    assert newCount <= count: \"newCount=\" + newCount + \" count=\" + count;\n    assert newCount <= buffer.length: \"newCount=\" + newCount + \" buf.length=\" + buffer.length;\n    count = newCount;\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581F", "$$ree", "$$Be", "$$fore", "$$(int", "\u2581po", "$$s)", "\u2581{"], ["\u2581Debug.Assert(", "$$pos", "\u2581>=", "\u25810)", "$$;"], ["\u2581Debug.Assert(", "$$pos", "\u2581<=", "\u2581next", "$$Po", "$$s)", "$$;"], ["\u2581int", "\u2581new", "$$Count", "\u2581=", "\u2581next", "$$Pos", "\u2581-", "\u2581pos", "$$;"], ["\u2581Debug.Assert", "$$(new", "$$Count", "\u2581<=", "\u2581count", "$$,", "\u2581\"", "$$new", "$$Count", "$$=\"", "\u2581+", "\u2581new", "$$Count", "\u2581+", "\u2581\"", "\u2581count", "$$=\"", "\u2581+", "\u2581count)", "$$;"], ["\u2581Debug.Assert", "$$(new", "$$Count", "\u2581<=", "\u2581buffer", "$$.Length", "$$,", "\u2581\"", "$$new", "$$Count", "$$=\"", "\u2581+", "\u2581new", "$$Count", "\u2581+", "\u2581\"", "\u2581buf", "$$.length", "$$=\"", "\u2581+", "\u2581buffer", "$$.Length)", "$$;"], ["\u2581count", "\u2581=", "\u2581new", "$$Count", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581f", "$$ree", "$$Be", "$$fore", "$$(int", "\u2581po", "$$s)", "\u2581{"], ["\u2581assert", "\u2581pos", "\u2581>=", "\u25810;"], ["\u2581assert", "\u2581pos", "\u2581<=", "\u2581next", "$$Pos", "$$;"], ["\u2581final", "\u2581int", "\u2581new", "$$Count", "\u2581=", "\u2581next", "$$Pos", "\u2581-", "\u2581pos", "$$;"], ["\u2581assert", "\u2581new", "$$Count", "\u2581<=", "\u2581count", "$$:", "\u2581\"", "$$new", "$$Count", "$$=\"", "\u2581+", "\u2581new", "$$Count", "\u2581+", "\u2581\"", "\u2581count", "$$=\"", "\u2581+", "\u2581count", "$$;"], ["\u2581assert", "\u2581new", "$$Count", "\u2581<=", "\u2581buffer", "$$.length", "$$:", "\u2581\"", "$$new", "$$Count", "$$=\"", "\u2581+", "\u2581new", "$$Count", "\u2581+", "\u2581\"", "\u2581buf", "$$.length", "$$=\"", "\u2581+", "\u2581buffer", "$$.length;"], ["\u2581count", "\u2581=", "\u2581new", "$$Count", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateHITTypeOfHITResponse UpdateHITTypeOfHIT(UpdateHITTypeOfHITRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateHITTypeOfHITRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateHITTypeOfHITResponseUnmarshaller.Instance;\n    return Invoke<UpdateHITTypeOfHITResponse>(request, options);\n}\n", "java": "public UpdateHITTypeOfHITResult updateHITTypeOfHIT(UpdateHITTypeOfHITRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateHITTypeOfHIT(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$HIT", "$$Type", "$$Of", "$$HIT", "$$Response", "\u2581Update", "$$HIT", "$$Type", "$$Of", "$$HIT", "$$(Update", "$$HIT", "$$Type", "$$Of", "$$HIT", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$HIT", "$$Type", "$$Of", "$$HIT", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$HIT", "$$Type", "$$Of", "$$HIT", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$HIT", "$$Type", "$$Of", "$$HIT", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$HIT", "$$Type", "$$Of", "$$HIT", "$$Result", "\u2581update", "$$HIT", "$$Type", "$$Of", "$$HIT", "$$(Update", "$$HIT", "$$Type", "$$Of", "$$HIT", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$HIT", "$$Type", "$$Of", "$$HIT", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateRecommenderConfigurationResponse UpdateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateRecommenderConfigurationRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateRecommenderConfigurationResponseUnmarshaller.Instance;\n    return Invoke<UpdateRecommenderConfigurationResponse>(request, options);\n}\n", "java": "public UpdateRecommenderConfigurationResult updateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateRecommenderConfiguration(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$Recom", "$$m", "$$ender", "$$Configuration", "$$Response", "\u2581Update", "$$Recom", "$$m", "$$ender", "$$Configuration", "$$(Update", "$$Recom", "$$m", "$$ender", "$$ConfigurationRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$Recom", "$$m", "$$ender", "$$Configuration", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$Recom", "$$m", "$$ender", "$$Configuration", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$Recom", "$$m", "$$ender", "$$Configuration", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$Recom", "$$m", "$$ender", "$$Configuration", "$$Result", "\u2581update", "$$Recom", "$$m", "$$ender", "$$Configuration", "$$(Update", "$$Recom", "$$m", "$$ender", "$$ConfigurationRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$Recom", "$$m", "$$ender", "$$Configuration", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public int CompareTo(object other) {\n    BytesRef br = other as BytesRef;\n    Debug.Assert(br != null);\n    return utf8SortedAsUnicodeSortOrder.Compare(this, br);\n}\n", "java": "public int compareTo(BytesRef other) {\n    return Arrays.compareUnsigned(this.bytes, this.offset, this.offset + this.length,other.bytes, other.offset, other.offset + other.length);\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581Compare", "$$To", "$$(object", "\u2581other)", "\u2581{"], ["\u2581BytesRef", "\u2581b", "$$r", "\u2581=", "\u2581other", "\u2581as", "\u2581BytesRef", "$$;"], ["\u2581Debug.Assert", "$$(b", "$$r", "\u2581!=", "\u2581null)", "$$;"], ["\u2581return", "\u2581utf", "$$8", "$$S", "$$orted", "$$As", "$$Unicode", "$$Sort", "$$Ord", "$$er.", "$$Compare", "$$(this,", "\u2581b", "$$r", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581compare", "$$To(", "$$BytesRef", "\u2581other)", "\u2581{"], ["\u2581return", "\u2581Arrays.", "$$compare", "$$Un", "$$sign", "$$ed(", "$$this.", "$$bytes", "$$,", "\u2581this.", "$$offset", "$$,", "\u2581this.", "$$offset", "\u2581+", "\u2581this.", "$$length", "$$,", "$$other.", "$$bytes", "$$,", "\u2581other.", "$$offset", "$$,", "\u2581other.", "$$offset", "\u2581+", "\u2581other.", "$$length", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int Stem(char[] s, int len) {\n    if (len > 4 && s[len - 1] == 's') {\n        len--;\n    }\n    if (len > 5 && (StemmerUtil.EndsWith(s, len, \"ene\") || (StemmerUtil.EndsWith(s, len, \"ane\") && useNynorsk))) {\n        return len - 3;\n    }\n    if (len > 4 && (StemmerUtil.EndsWith(s, len, \"er\") || StemmerUtil.EndsWith(s, len, \"en\") || StemmerUtil.EndsWith(s, len, \"et\") || (StemmerUtil.EndsWith(s, len, \"ar\") && useNynorsk))) {\n        return len - 2;\n    }\n    if (len > 3) {\n        switch (s[len - 1]) {\n        case 'a':\n        case 'e':\n            return len - 1;\n        }\n    }\n    return len;\n}\n", "java": "public int stem(char s[], int len) {\n    if (len > 4 && s[len-1] == 's')len--;\n    if (len > 5 &&(endsWith(s, len, \"ene\") ||  (endsWith(s, len, \"ane\") &&useNynorsk                 )))return len - 3;\n    if (len > 4 &&(endsWith(s, len, \"er\") ||   endsWith(s, len, \"en\") ||   endsWith(s, len, \"et\") ||   (endsWith(s, len, \"ar\") &&useNynorsk                 )))return len - 2;\n    if (len > 3)switch(s[len-1]) {\n        case 'a':\n        case 'e':\n            return len - 1;\n        }\n    return len;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581S", "$$tem", "$$(char[]", "\u2581s", "$$,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581if", "\u2581(", "$$len", "\u2581>", "\u25814", "\u2581&&", "\u2581s", "$$[", "$$len", "\u2581-", "\u25811", "$$]", "\u2581==", "\u2581'", "$$s", "$$')", "\u2581{"], ["\u2581len", "$$--", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$len", "\u2581>", "\u25815", "\u2581&&", "\u2581(", "$$Stem", "$$mer", "$$Util.", "$$End", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$ene", "$$\")", "\u2581||", "\u2581(", "$$Stem", "$$mer", "$$Util.", "$$End", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$an", "$$e", "$$\")", "\u2581&&", "\u2581use", "$$N", "$$yn", "$$or", "$$sk", "$$))", "$$)", "\u2581{"], ["\u2581return", "\u2581len", "\u2581-", "\u25813", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$len", "\u2581>", "\u25814", "\u2581&&", "\u2581(", "$$Stem", "$$mer", "$$Util.", "$$End", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$er", "$$\")", "\u2581||", "\u2581S", "$$tem", "$$mer", "$$Util.", "$$End", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$en", "$$\")", "\u2581||", "\u2581S", "$$tem", "$$mer", "$$Util.", "$$End", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$et", "$$\")", "\u2581||", "\u2581(", "$$Stem", "$$mer", "$$Util.", "$$End", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$ar", "$$\")", "\u2581&&", "\u2581use", "$$N", "$$yn", "$$or", "$$sk", "$$))", "$$)", "\u2581{"], ["\u2581return", "\u2581len", "\u2581-", "\u25812", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(", "$$len", "\u2581>", "\u25813", "$$)", "\u2581{"], ["\u2581switch", "\u2581(", "$$s[", "$$len", "\u2581-", "\u25811", "$$]", "$$)", "\u2581{"], ["\u2581case", "\u2581'", "$$a", "$$'", "$$:"], ["\u2581case", "\u2581'", "$$e", "$$'", "$$:"], ["\u2581return", "\u2581len", "\u2581-", "\u25811", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581len", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581s", "$$tem", "$$(char", "\u2581s", "$$[]", "$$,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581if", "\u2581(", "$$len", "\u2581>", "\u25814", "\u2581&&", "\u2581s", "$$[", "$$len", "$$-1", "$$]", "\u2581==", "\u2581'", "$$s", "$$')", "$$len", "$$--", "$$;"], ["\u2581if", "\u2581(", "$$len", "\u2581>", "\u25815", "\u2581&&", "$$(", "$$end", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$ene", "$$\")", "\u2581||", "\u2581", "\u2581(", "$$end", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$an", "$$e", "$$\")", "\u2581&&", "$$use", "$$N", "$$yn", "$$or", "$$sk", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "$$))", "$$)return", "\u2581len", "\u2581-", "\u25813", "$$;"], ["\u2581if", "\u2581(", "$$len", "\u2581>", "\u25814", "\u2581&&", "$$(", "$$end", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$er", "$$\")", "\u2581||", "\u2581", "\u2581", "\u2581end", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$en", "$$\")", "\u2581||", "\u2581", "\u2581", "\u2581end", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$et", "$$\")", "\u2581||", "\u2581", "\u2581", "\u2581(", "$$end", "$$sWith", "$$(s,", "\u2581len", "$$,", "\u2581\"", "$$ar", "$$\")", "\u2581&&", "$$use", "$$N", "$$yn", "$$or", "$$sk", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "$$))", "$$)return", "\u2581len", "\u2581-", "\u25812", "$$;"], ["\u2581if", "\u2581(", "$$len", "\u2581>", "\u25813", "$$)", "$$s", "$$witch", "$$(", "$$s[", "$$len", "$$-1", "$$]", "$$)", "\u2581{"], ["\u2581case", "\u2581'", "$$a", "$$'", "$$:"], ["\u2581case", "\u2581'", "$$e", "$$'", "$$:"], ["\u2581return", "\u2581len", "\u2581-", "\u25811", "$$;"], ["\u2581}"], ["\u2581return", "\u2581len", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeDBSnapshotsResponse DescribeDBSnapshots(DescribeDBSnapshotsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeDBSnapshotsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeDBSnapshotsResponseUnmarshaller.Instance;\n    return Invoke<DescribeDBSnapshotsResponse>(request, options);\n}\n", "java": "public DescribeDBSnapshotsResult describeDBSnapshots(DescribeDBSnapshotsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeDBSnapshots(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581DescribeDB", "$$Snapshot", "$$sResponse", "\u2581DescribeDB", "$$Snapshot", "$$s(Describe", "$$DB", "$$Snapshot", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581DescribeDB", "$$Snapshot", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581DescribeDB", "$$Snapshot", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$DB", "$$Snapshot", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581DescribeDB", "$$Snapshot", "$$sResult", "\u2581describe", "$$DB", "$$Snapshot", "$$s(Describe", "$$DB", "$$Snapshot", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$DB", "$$Snapshot", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public SortedSetDocValuesFacetField(string dim, string label): base(\"dummy\", TYPE) {\n    FacetField.VerifyLabel(label);\n    FacetField.VerifyLabel(dim);\n    this.Dim = dim;\n    this.Label = label;\n}\n", "java": "public SortedSetDocValuesFacetField(String dim, String label) {\n    super(\"dummy\", TYPE);\n    FacetField.verifyLabel(label);\n    FacetField.verifyLabel(dim);\n    this.dim = dim;\n    this.label = label;\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$orted", "$$Set", "$$Doc", "$$Values", "$$Facet", "$$Field(", "$$string", "\u2581d", "$$im", "$$,", "\u2581string", "\u2581label", "$$):", "\u2581base(\"", "$$d", "$$um", "$$m", "$$y", "$$\",", "\u2581T", "$$YP", "$$E", "$$)", "\u2581{"], ["\u2581F", "$$acet", "$$Field", "$$.", "$$V", "$$er", "$$ify", "$$Label", "$$(", "$$l", "$$abel", "$$)", "$$;"], ["\u2581F", "$$acet", "$$Field", "$$.", "$$V", "$$er", "$$ify", "$$Label", "$$(d", "$$im", "$$)", "$$;"], ["\u2581this.", "$$D", "$$im", "\u2581=", "\u2581d", "$$im", "$$;"], ["\u2581this.", "$$Label", "\u2581=", "\u2581label", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$orted", "$$Set", "$$Doc", "$$Values", "$$Facet", "$$Field(", "$$String", "\u2581d", "$$im", "$$,", "\u2581String", "\u2581label", "$$)", "\u2581{"], ["\u2581super(\"", "$$d", "$$um", "$$m", "$$y", "$$\",", "\u2581T", "$$YP", "$$E", "$$)", "$$;"], ["\u2581F", "$$acet", "$$Field", "$$.", "$$ver", "$$ify", "$$Label", "$$(", "$$l", "$$abel", "$$)", "$$;"], ["\u2581F", "$$acet", "$$Field", "$$.", "$$ver", "$$ify", "$$Label", "$$(d", "$$im", "$$)", "$$;"], ["\u2581this.d", "$$im", "\u2581=", "\u2581d", "$$im", "$$;"], ["\u2581this.", "$$l", "$$abel", "\u2581=", "\u2581label", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateDocumentationPartResponse CreateDocumentationPart(CreateDocumentationPartRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateDocumentationPartRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateDocumentationPartResponseUnmarshaller.Instance;\n    return Invoke<CreateDocumentationPartResponse>(request, options);\n}\n", "java": "public CreateDocumentationPartResult createDocumentationPart(CreateDocumentationPartRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateDocumentationPart(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Documentation", "$$Part", "$$Response", "\u2581Create", "$$Documentation", "$$Part", "$$(Create", "$$Documentation", "$$Part", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Documentation", "$$Part", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Documentation", "$$Part", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Documentation", "$$Part", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Documentation", "$$Part", "$$Result", "\u2581create", "$$Documentation", "$$Part", "$$(Create", "$$Documentation", "$$Part", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Documentation", "$$Part", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string GetValue() {\n    return value;\n}\n", "java": "public String getValue() {\n    return value;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581Get", "$$Value", "$$()", "\u2581{"], ["\u2581return", "\u2581value", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Value", "$$()", "\u2581{"], ["\u2581return", "\u2581value", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.ShortBuffer asReadOnlyBuffer() {\n    return duplicate();\n}\n", "java": "public ShortBuffer asReadOnlyBuffer() {\n    return duplicate();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$Short", "$$Buffer", "\u2581as", "$$Read", "$$OnlyBuffer", "$$()", "\u2581{"], ["\u2581return", "\u2581d", "$$uplicate", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Sh", "$$ort", "$$Buffer", "\u2581as", "$$Read", "$$OnlyBuffer", "$$()", "\u2581{"], ["\u2581return", "\u2581d", "$$uplicate", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UpdateDataSourcePermissionsResponse UpdateDataSourcePermissions(UpdateDataSourcePermissionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UpdateDataSourcePermissionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UpdateDataSourcePermissionsResponseUnmarshaller.Instance;\n    return Invoke<UpdateDataSourcePermissionsResponse>(request, options);\n}\n", "java": "public UpdateDataSourcePermissionsResult updateDataSourcePermissions(UpdateDataSourcePermissionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeUpdateDataSourcePermissions(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Update", "$$DataSource", "$$Permission", "$$sResponse", "\u2581Update", "$$DataSource", "$$Permission", "$$s(", "$$Update", "$$DataSource", "$$Permission", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Update", "$$DataSource", "$$Permission", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Update", "$$DataSource", "$$Permission", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Update", "$$DataSource", "$$Permission", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$DataSource", "$$Permission", "$$sResult", "\u2581update", "$$DataSource", "$$Permission", "$$s(", "$$Update", "$$DataSource", "$$Permission", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeUpdate", "$$DataSource", "$$Permission", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static Record CreateSingleRecord(RecordInputStream in1) {\n    if (_recordCreatorsById.ContainsKey(in1.Sid)) {\n        I_RecordCreator constructor = _recordCreatorsById[in1.Sid];\n        return constructor.Create(in1);\n    }\n    else {\n        return new UnknownRecord(in1);\n    }\n}\n", "java": "public static org.apache.poi.hssf.record.Record createSingleRecord(RecordInputStream in) {\n    I_RecordCreator constructor = _recordCreatorsById.get(Integer.valueOf(in.getSid()));\n    if (constructor == null) {\n        return new UnknownRecord(in);\n    }\n    return constructor.create(in);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581Record", "\u2581Create", "$$Single", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581if", "\u2581(_", "$$record", "$$C", "$$re", "$$ator", "$$sBy", "$$Id", "$$.", "$$Contain", "$$sKey", "$$(in", "$$1.", "$$S", "$$id", "$$))", "\u2581{"], ["\u2581I", "$$_", "$$Record", "$$C", "$$re", "$$ator", "\u2581con", "$$str", "$$u", "$$ctor", "\u2581=", "\u2581_", "$$record", "$$C", "$$re", "$$ator", "$$sBy", "$$Id", "$$[", "$$in", "$$1.", "$$S", "$$id", "$$]", "$$;"], ["\u2581return", "\u2581con", "$$str", "$$u", "$$ctor", "$$.Create", "$$(in", "$$1)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581new", "\u2581", "$$Unknown", "$$Record(", "$$in", "$$1)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581or", "$$g", "$$.ap", "$$ache", "$$.", "$$po", "$$i.", "$$h", "$$ss", "$$f", "$$.re", "$$cord", "$$.", "$$Record", "\u2581create", "$$Single", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581I", "$$_", "$$Record", "$$C", "$$re", "$$ator", "\u2581con", "$$str", "$$u", "$$ctor", "\u2581=", "\u2581_", "$$record", "$$C", "$$re", "$$ator", "$$sBy", "$$Id", "$$.get(", "$$Integ", "$$er.", "$$value", "$$Of", "$$(in", "$$.get", "$$S", "$$id", "$$()))", "$$;"], ["\u2581if", "\u2581(", "$$con", "$$str", "$$u", "$$ctor", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581", "$$Unknown", "$$Record(", "$$in", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581con", "$$str", "$$u", "$$ctor", "$$.create", "$$(in", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override int getCount() {\n    return this._enclosing.mTabLayout.getChildCount();\n}\n", "java": "public int getCount() {\n    return mTabs.size();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int", "\u2581get", "$$Count", "$$()", "\u2581{"], ["\u2581return", "\u2581this._enclosing", "$$.", "$$m", "$$T", "$$ab", "$$L", "$$ay", "$$out", "$$.get", "$$Child", "$$Count", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$Count", "$$()", "\u2581{"], ["\u2581return", "\u2581m", "$$T", "$$ab", "$$s.size()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteApplicationReferenceDataSourceResponse DeleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteApplicationReferenceDataSourceRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteApplicationReferenceDataSourceResponseUnmarshaller.Instance;\n    return Invoke<DeleteApplicationReferenceDataSourceResponse>(request, options);\n}\n", "java": "public DeleteApplicationReferenceDataSourceResult deleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteApplicationReferenceDataSource(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Application", "$$Reference", "$$DataSource", "$$Response", "\u2581Delete", "$$Application", "$$Reference", "$$DataSource", "$$(Delete", "$$Application", "$$Reference", "$$DataSource", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Application", "$$Reference", "$$DataSource", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Application", "$$Reference", "$$DataSource", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Application", "$$Reference", "$$DataSource", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Application", "$$Reference", "$$DataSource", "$$Result", "\u2581delete", "$$Application", "$$Reference", "$$DataSource", "$$(Delete", "$$Application", "$$Reference", "$$DataSource", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Application", "$$Reference", "$$DataSource", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateProjectVersionResponse CreateProjectVersion(CreateProjectVersionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateProjectVersionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateProjectVersionResponseUnmarshaller.Instance;\n    return Invoke<CreateProjectVersionResponse>(request, options);\n}\n", "java": "public CreateProjectVersionResult createProjectVersion(CreateProjectVersionRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateProjectVersion(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Project", "$$Version", "$$Response", "\u2581Create", "$$Project", "$$Version", "$$(Create", "$$Project", "$$Version", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Project", "$$Version", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Project", "$$Version", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Project", "$$Version", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Project", "$$Version", "$$Result", "\u2581create", "$$Project", "$$Version", "$$(Create", "$$Project", "$$Version", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Project", "$$Version", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.IntBuffer slice() {\n    return new java.nio.ReadOnlyIntArrayBuffer(remaining(), backingArray, offset + _position);\n}\n", "java": "public IntBuffer slice() {\n    return new ReadOnlyIntArrayBuffer(remaining(), backingArray, offset + position);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$Int", "$$Buffer", "\u2581slice", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581java.nio.Read", "$$Only", "$$Int", "$$Array", "$$Buffer", "$$(re", "$$maining", "$$(),", "\u2581b", "$$ackingArray,", "\u2581offset", "\u2581+", "\u2581_position", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Int", "$$Buffer", "\u2581slice", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581Read", "$$Only", "$$Int", "$$Array", "$$Buffer", "$$(re", "$$maining", "$$(),", "\u2581b", "$$ackingArray,", "\u2581offset", "\u2581+", "\u2581position", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public sealed override byte get() {\n    throw new System.NotImplementedException();\n}\n", "java": "public final byte get() {\n    if (position == limit) {\n        throw new BufferUnderflowException();\n    }\n    return this.block.peekByte(offset + position++);\n}\n", "cs_t": [["\u2581public", "\u2581sealed", "\u2581override", "\u2581byte", "\u2581get", "$$()", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.NotImplemented", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581byte", "\u2581get", "$$()", "\u2581{"], ["\u2581if", "\u2581(", "$$position", "\u2581==", "\u2581limit", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Buffer", "$$Under", "$$flow", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581this.", "$$block", "$$.p", "$$eek", "$$Byte", "$$(offset", "\u2581+", "\u2581position", "$$++)", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.LongBuffer put(int index, long c) {\n    checkIndex(index);\n    backingArray[offset + index] = c;\n    return this;\n}\n", "java": "public LongBuffer put(int index, long c) {\n    checkIndex(index);\n    backingArray[offset + index] = c;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$Long", "$$Buffer", "\u2581put", "$$(int", "\u2581index,", "\u2581long", "\u2581c)", "\u2581{"], ["\u2581check", "$$Index(index", "$$)", "$$;"], ["\u2581b", "$$ackingArray", "$$[offset", "\u2581+", "\u2581index", "$$]", "\u2581=", "\u2581c", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Long", "$$Buffer", "\u2581put", "$$(int", "\u2581index,", "\u2581long", "\u2581c)", "\u2581{"], ["\u2581check", "$$Index(index", "$$)", "$$;"], ["\u2581b", "$$ackingArray", "$$[offset", "\u2581+", "\u2581index", "$$]", "\u2581=", "\u2581c", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public StoredField(string name, float value): base(name, TYPE) {\n    FieldsData = new Single(value);\n}\n", "java": "public StoredField(String name, float value) {\n    super(name, TYPE);\n    fieldsData = value;\n}\n", "cs_t": [["\u2581public", "\u2581St", "$$ore", "$$d", "$$Field(", "$$string", "\u2581name,", "\u2581float", "\u2581value)", "$$:", "\u2581base", "$$(name,", "\u2581T", "$$YP", "$$E", "$$)", "\u2581{"], ["\u2581Fields", "$$Data", "\u2581=", "\u2581new", "\u2581S", "$$ingle", "$$(value", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581St", "$$ore", "$$d", "$$Field(", "$$String", "\u2581name,", "\u2581float", "\u2581value)", "\u2581{"], ["\u2581super", "$$(name,", "\u2581T", "$$YP", "$$E", "$$)", "$$;"], ["\u2581field", "$$s", "$$Data", "\u2581=", "\u2581value", "$$;"], ["\u2581}"]]}, {"cs": "public virtual IntervalSet GetExpectedTokensWithinCurrentRule() {\n    ATN atn = Interpreter.atn;\n    ATNState s = atn.states[State];\n    return atn.NextTokens(s);\n}\n", "java": "public IntervalSet getExpectedTokensWithinCurrentRule() {\n    ATN atn = getInterpreter().atn;\n    ATNState s = atn.states.get(getState());\n    return atn.nextTokens(s);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581IntervalSet", "\u2581Get", "$$Exp", "$$ected", "$$Token", "$$sWith", "$$in", "$$Current", "$$Rule", "$$()", "\u2581{"], ["\u2581ATN", "\u2581at", "$$n", "\u2581=", "\u2581Inter", "$$pre", "$$ter", "$$.", "$$at", "$$n", "$$;"], ["\u2581ATN", "$$State", "\u2581s", "\u2581=", "\u2581at", "$$n", "$$.", "$$st", "$$ates", "$$[", "$$State", "$$]", "$$;"], ["\u2581return", "\u2581at", "$$n", "$$.N", "$$ext", "$$Token", "$$s(", "$$s)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581IntervalSet", "\u2581get", "$$Exp", "$$ected", "$$Token", "$$sWith", "$$in", "$$Current", "$$Rule", "$$()", "\u2581{"], ["\u2581ATN", "\u2581at", "$$n", "\u2581=", "\u2581get", "$$Inter", "$$pre", "$$ter", "$$().", "$$at", "$$n", "$$;"], ["\u2581ATN", "$$State", "\u2581s", "\u2581=", "\u2581at", "$$n", "$$.", "$$st", "$$ates", "$$.get", "$$(get", "$$State", "$$())", "$$;"], ["\u2581return", "\u2581at", "$$n", "$$.next", "$$Token", "$$s(", "$$s)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[FILESHARING]\\n\");\n    buffer.Append(\"    .Readonly       = \").Append(ReadOnly == 1 ? \"true\" : \"false\").Append(\"\\n\");\n    buffer.Append(\"    .password       = \").Append(StringUtil.ToHexString(Password)).Append(\"\\n\");\n    buffer.Append(\"    .username       = \").Append(Username).Append(\"\\n\");\n    buffer.Append(\"[/FILESHARING]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"[FILESHARING]\\n\");\n    buffer.append(\"    .readonly       = \").append(getReadOnly() == 1 ? \"true\" : \"false\").append(\"\\n\");\n    buffer.append(\"    .password       = \").append(Integer.toHexString(getPassword())).append(\"\\n\");\n    buffer.append(\"    .username       = \").append(getUsername()).append(\"\\n\");\n    buffer.append(\"[/FILESHARING]\\n\");\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$FI", "$$LE", "$$SH", "$$AR", "$$ING", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$Read", "$$on", "$$ly", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$Read", "$$Only", "\u2581==", "\u25811", "\u2581?", "\u2581\"", "$$t", "$$rue", "$$\"", "\u2581:", "\u2581\"", "$$f", "$$alse", "$$\")", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$p", "$$assword", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$String", "$$Util", "$$.To", "$$HexString(", "$$Password", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$user", "$$name", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$User", "$$name", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"[/", "$$FI", "$$LE", "$$SH", "$$AR", "$$ING", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(\"[", "$$FI", "$$LE", "$$SH", "$$AR", "$$ING", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581", "$$.read", "$$on", "$$ly", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$get", "$$Read", "$$Only", "$$()", "\u2581==", "\u25811", "\u2581?", "\u2581\"", "$$t", "$$rue", "$$\"", "\u2581:", "\u2581\"", "$$f", "$$alse", "$$\")", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$p", "$$assword", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$Integ", "$$er.", "$$to", "$$HexString(", "$$get", "$$Password", "$$()))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$user", "$$name", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$get", "$$User", "$$name", "$$())", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"[/", "$$FI", "$$LE", "$$SH", "$$AR", "$$ING", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "protected internal SubmoduleInitCommand(Repository repo) : base(repo) {\n    paths = new AList<string>();\n}\n", "java": "public SubmoduleInitCommand(Repository repo) {\n    super(repo);\n    paths = new ArrayList<>();\n}\n", "cs_t": [["\u2581pro", "$$te", "$$c", "$$ted", "\u2581inter", "$$n", "$$al", "\u2581Sub", "$$module", "$$Init", "$$Comm", "$$an", "$$d(", "$$Repository", "\u2581repo", "$$)", "\u2581:", "\u2581base", "$$(repo", "$$)", "\u2581{"], ["\u2581path", "$$s", "\u2581=", "\u2581new", "\u2581A", "$$List<", "$$string>", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Sub", "$$module", "$$Init", "$$Comm", "$$an", "$$d(", "$$Repository", "\u2581repo", "$$)", "\u2581{"], ["\u2581super", "$$(repo", "$$)", "$$;"], ["\u2581path", "$$s", "\u2581=", "\u2581new", "\u2581ArrayList<", "$$>", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void Include(string name, AnyObjectId id) {\n    if (!Repository.IsValidRefName(name)) {\n        throw new ArgumentException(MessageFormat.Format(JGitText.Get().invalidRefName, name));\n    }\n    if (include.ContainsKey(name)) {\n        throw new InvalidOperationException(JGitText.Get().duplicateRef + name);\n    }\n    include.Put(name, id.ToObjectId());\n}\n", "java": "public void include(String name, AnyObjectId id) {\n    boolean validRefName = Repository.isValidRefName(name) || Constants.HEAD.equals(name);\n    if (!validRefName)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidRefName, name));\n    if (include.containsKey(name))throw new IllegalStateException(JGitText.get().duplicateRef + name);\n    include.put(name, id.toObjectId());\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581In", "$$clude", "$$(string", "\u2581name,", "\u2581An", "$$y", "$$ObjectId", "\u2581id)", "\u2581{"], ["\u2581if", "\u2581(!", "$$Repository", "$$.Is", "$$Valid", "$$Ref", "$$Name", "$$(name", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$ArgumentException", "$$(", "$$MessageFormat", "$$.Format", "$$(JGitText.Get", "$$().", "$$in", "$$valid", "$$Ref", "$$Name,", "\u2581name", "$$))", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(in", "$$clude", "$$.", "$$Contain", "$$sKey", "$$(name", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581InvalidOperation", "$$Exception(", "$$JGitText", "$$.Get", "$$().", "$$d", "$$uplicate", "$$Ref", "\u2581+", "\u2581name)", "$$;"], ["\u2581}"], ["\u2581in", "$$clude", "$$.", "$$Put", "$$(name,", "\u2581id", "$$.To", "$$ObjectId", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581in", "$$clude", "$$(String", "\u2581name,", "\u2581An", "$$y", "$$ObjectId", "\u2581id)", "\u2581{"], ["\u2581boolean", "\u2581val", "$$id", "$$Ref", "$$Name", "\u2581=", "\u2581Re", "$$pository", "$$.is", "$$Valid", "$$Ref", "$$Name", "$$(name", "$$)", "\u2581||", "\u2581Constants.", "$$H", "$$EAD", "$$.equals(", "$$name", "$$)", "$$;"], ["\u2581if", "\u2581(!", "$$valid", "$$Ref", "$$Name)", "$$throw", "\u2581new", "\u2581IllegalArgumentException", "$$(", "$$MessageFormat", "$$.format", "$$(JGitText", "$$.get().", "$$in", "$$valid", "$$Ref", "$$Name,", "\u2581name", "$$))", "$$;"], ["\u2581if", "\u2581(in", "$$clude", "$$.contain", "$$sKey", "$$(name", "$$))", "$$throw", "\u2581new", "\u2581IllegalState", "$$Exception(", "$$JGitText", "$$.get().", "$$d", "$$uplicate", "$$Ref", "\u2581+", "\u2581name)", "$$;"], ["\u2581in", "$$clude", "$$.put", "$$(name,", "\u2581id", "$$.to", "$$ObjectId", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public virtual EnableSnapshotCopyResponse EnableSnapshotCopy(EnableSnapshotCopyRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = EnableSnapshotCopyRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = EnableSnapshotCopyResponseUnmarshaller.Instance;\n    return Invoke<EnableSnapshotCopyResponse>(request, options);\n}\n", "java": "public Cluster enableSnapshotCopy(EnableSnapshotCopyRequest request) {\n    request = beforeClientExecution(request);\n    return executeEnableSnapshotCopy(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Enable", "$$Snapshot", "$$Copy", "$$Response", "\u2581Enable", "$$Snapshot", "$$Copy", "$$(", "$$Enable", "$$Snapshot", "$$Copy", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Enable", "$$Snapshot", "$$Copy", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Enable", "$$Snapshot", "$$Copy", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Enable", "$$Snapshot", "$$Copy", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581C", "$$l", "$$uster", "\u2581en", "$$able", "$$Snapshot", "$$Copy", "$$(", "$$Enable", "$$Snapshot", "$$Copy", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Enable", "$$Snapshot", "$$Copy", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ValueFiller GetValueFiller() {\n    return new ValueFillerAnonymousInnerClassHelper(this);\n}\n", "java": "public ValueFiller getValueFiller() {\n    return new ValueFiller() {\n        private final MutableValueFloat mval = new MutableValueFloat();\n        @Override\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581", "$$Value", "$$Fill", "$$er", "\u2581Get", "$$Value", "$$Fill", "$$er", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581", "$$Value", "$$Fill", "$$er", "$$An", "$$on", "$$y", "$$mo", "$$us", "$$In", "$$ner", "$$Class", "$$H", "$$el", "$$per", "$$(this", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Value", "$$Fill", "$$er", "\u2581get", "$$Value", "$$Fill", "$$er", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581", "$$Value", "$$Fill", "$$er", "$$()", "\u2581{"], ["\u2581pri", "$$vate", "\u2581final", "\u2581Mutable", "$$Value", "$$Float", "\u2581m", "$$val", "\u2581=", "\u2581new", "\u2581Mutable", "$$Value", "$$Float", "$$()", "$$;"], ["\u2581@Override"]]}, {"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteByte(Pane);\n    out1.WriteShort(ActiveCellRow);\n    out1.WriteShort(ActiveCellCol);\n    out1.WriteShort(ActiveCellRef);\n    int nRefs = field_6_refs.Length;\n    out1.WriteShort(nRefs);\n    for (int i = 0; i < field_6_refs.Length; i++) {\n        field_6_refs[i].Serialize(out1);\n    }\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeByte(getPane());\n    out.writeShort(getActiveCellRow());\n    out.writeShort(getActiveCellCol());\n    out.writeShort(getActiveCellRef());\n    int nRefs = field_6_refs.length;\n    out.writeShort(nRefs);\n    for (CellRangeAddress8Bit field_6_ref : field_6_refs) {\n        field_6_ref.serialize(out);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteByte(", "$$P", "$$an", "$$e", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$Ac", "$$tive", "$$Cell", "$$Row", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$Ac", "$$tive", "$$Cell", "$$Col", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$Ac", "$$tive", "$$Cell", "$$Ref", "$$)", "$$;"], ["\u2581int", "\u2581n", "$$Ref", "$$s", "\u2581=", "\u2581field_6_", "$$ref", "$$s.Length;"], ["\u2581out1.Write", "$$Short", "$$(n", "$$Ref", "$$s)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581field_6_", "$$ref", "$$s.Length;", "\u2581i++)", "\u2581{"], ["\u2581field_6_", "$$ref", "$$s[i]", "$$.S", "$$erialize", "$$(out", "$$1)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeByte(", "$$get", "$$P", "$$an", "$$e", "$$())", "$$;"], ["\u2581out.writeShort(get", "$$Ac", "$$tive", "$$Cell", "$$Row", "$$())", "$$;"], ["\u2581out.writeShort(get", "$$Ac", "$$tive", "$$Cell", "$$Col", "$$())", "$$;"], ["\u2581out.writeShort(get", "$$Ac", "$$tive", "$$Cell", "$$Ref", "$$())", "$$;"], ["\u2581int", "\u2581n", "$$Ref", "$$s", "\u2581=", "\u2581field_6_", "$$ref", "$$s.length;"], ["\u2581out.write", "$$Short", "$$(n", "$$Ref", "$$s)", "$$;"], ["\u2581for", "\u2581(", "$$Cell", "$$RangeAddress", "$$8", "$$Bit", "\u2581field_6_", "$$ref", "\u2581:", "\u2581field_6_", "$$ref", "$$s)", "\u2581{"], ["\u2581field_6_", "$$ref", "$$.", "$$ser", "$$ial", "$$ize", "$$(out", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public static Counter NewCounter() {\n    return NewCounter(false);\n}\n", "java": "public static Counter newCounter() {\n    return newCounter(false);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581", "$$Co", "$$un", "$$ter", "\u2581N", "$$ew", "$$Co", "$$un", "$$ter", "$$()", "\u2581{"], ["\u2581return", "\u2581N", "$$ew", "$$Co", "$$un", "$$ter", "$$(f", "$$alse", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581", "$$Co", "$$un", "$$ter", "\u2581new", "$$Co", "$$un", "$$ter", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "$$Co", "$$un", "$$ter", "$$(f", "$$alse", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int Get(string name, int dflt) {\n    int[] vals;\n    object temp;\n    if (valByRound.TryGetValue(name, out temp) && temp != null) {\n        vals = (int[])temp;\n        return vals[roundNumber % vals.Length];\n    }\n    string sval;\n    if (!props.TryGetValue(name, out sval)) {\n        sval = dflt.ToString(CultureInfo.InvariantCulture);\n    }\n    if (sval.IndexOf(':') < 0) {\n        return int.Parse(sval, CultureInfo.InvariantCulture);\n    }\n    int k = sval.IndexOf(':');\n    string colName = sval.Substring(0, k - 0);\n    sval = sval.Substring(k + 1);\n    colForValByRound[name] = colName;\n    vals = PropToInt32Array(sval);\n    valByRound[name] = vals;\n    return vals[roundNumber % vals.Length];\n}\n", "java": "public boolean get(String name, boolean dflt) {\n    boolean vals[] = (boolean[]) valByRound.get(name);\n    if (vals != null) {\n        return vals[roundNumber % vals.length];\n    }\n    String sval = props.getProperty(name, \"\" + dflt);\n    if (sval.indexOf(\":\") < 0) {\n        return Boolean.valueOf(sval).booleanValue();\n    }\n    int k = sval.indexOf(\":\");\n    String colName = sval.substring(0, k);\n    sval = sval.substring(k + 1);\n    colForValByRound.put(name, colName);\n    vals = propToBooleanArray(sval);\n    valByRound.put(name, vals);\n    return vals[roundNumber % vals.length];\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581Get", "$$(string", "\u2581name,", "\u2581int", "\u2581d", "$$f", "$$l", "$$t", "$$)", "\u2581{"], ["\u2581int[]", "\u2581val", "$$s;"], ["\u2581object", "\u2581temp", "$$;"], ["\u2581if", "\u2581(", "$$val", "$$By", "$$Round", "$$.", "$$TryGet", "$$Value", "$$(name,", "\u2581out", "\u2581temp", "$$)", "\u2581&&", "\u2581temp", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581val", "$$s", "\u2581=", "\u2581(int", "$$[]", "$$)", "$$temp", "$$;"], ["\u2581return", "\u2581val", "$$s[", "$$round", "$$Number", "\u2581%", "\u2581val", "$$s.Length", "$$]", "$$;"], ["\u2581}"], ["\u2581string", "\u2581s", "$$val", "$$;"], ["\u2581if", "\u2581(!", "$$pro", "$$p", "$$s.", "$$TryGet", "$$Value", "$$(name,", "\u2581out", "\u2581s", "$$val", "$$))", "\u2581{"], ["\u2581s", "$$val", "\u2581=", "\u2581d", "$$f", "$$l", "$$t", "$$.To", "$$String(", "$$Culture", "$$Info.", "$$Inv", "$$ariant", "$$Culture", "$$)", "$$;"], ["\u2581}"], ["\u2581if", "\u2581(s", "$$val.", "$$Index", "$$Of(", "$$'", "$$:", "$$')", "\u2581<", "\u25810)", "\u2581{"], ["\u2581return", "\u2581int", "$$.", "$$Parse", "$$(s", "$$val", "$$,", "\u2581C", "$$ulture", "$$Info.", "$$Inv", "$$ariant", "$$Culture", "$$)", "$$;"], ["\u2581}"], ["\u2581int", "\u2581k", "\u2581=", "\u2581s", "$$val.", "$$Index", "$$Of(", "$$'", "$$:", "$$')", "$$;"], ["\u2581string", "\u2581col", "$$Name", "\u2581=", "\u2581s", "$$val.", "$$Sub", "$$string(", "$$0,", "\u2581k", "\u2581-", "\u25810)", "$$;"], ["\u2581s", "$$val", "\u2581=", "\u2581s", "$$val.", "$$Sub", "$$string(", "$$k", "\u2581+", "\u25811)", "$$;"], ["\u2581col", "$$For", "$$Val", "$$By", "$$Round", "$$[", "$$name", "$$]", "\u2581=", "\u2581col", "$$Name", "$$;"], ["\u2581val", "$$s", "\u2581=", "\u2581", "$$Prop", "$$To", "$$Int32", "$$Array", "$$(s", "$$val", "$$)", "$$;"], ["\u2581val", "$$By", "$$Round", "$$[", "$$name", "$$]", "\u2581=", "\u2581val", "$$s;"], ["\u2581return", "\u2581val", "$$s[", "$$round", "$$Number", "\u2581%", "\u2581val", "$$s.Length", "$$]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581get", "$$(String", "\u2581name,", "\u2581boolean", "\u2581d", "$$f", "$$l", "$$t", "$$)", "\u2581{"], ["\u2581boolean", "\u2581val", "$$s", "$$[]", "\u2581=", "\u2581(", "$$boolean", "$$[]", "$$)", "\u2581val", "$$By", "$$Round", "$$.get", "$$(name", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$val", "$$s", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581val", "$$s[", "$$round", "$$Number", "\u2581%", "\u2581val", "$$s.length", "$$]", "$$;"], ["\u2581}"], ["\u2581String", "\u2581s", "$$val", "\u2581=", "\u2581pro", "$$p", "$$s.get", "$$Property", "$$(name,", "\u2581\"", "$$\"", "\u2581+", "\u2581d", "$$f", "$$l", "$$t", "$$)", "$$;"], ["\u2581if", "\u2581(s", "$$val.", "$$index", "$$Of", "$$(\"", "$$:", "$$\")", "\u2581<", "\u25810)", "\u2581{"], ["\u2581return", "\u2581Boolean", "$$.value", "$$Of", "$$(s", "$$val", "$$).", "$$boolean", "$$Value", "$$()", "$$;"], ["\u2581}"], ["\u2581int", "\u2581k", "\u2581=", "\u2581s", "$$val.", "$$index", "$$Of", "$$(\"", "$$:", "$$\")", "$$;"], ["\u2581String", "\u2581col", "$$Name", "\u2581=", "\u2581s", "$$val.", "$$sub", "$$string(", "$$0,", "\u2581k", "$$)", "$$;"], ["\u2581s", "$$val", "\u2581=", "\u2581s", "$$val.", "$$sub", "$$string(", "$$k", "\u2581+", "\u25811)", "$$;"], ["\u2581col", "$$For", "$$Val", "$$By", "$$Round", "$$.put", "$$(name,", "\u2581col", "$$Name)", "$$;"], ["\u2581val", "$$s", "\u2581=", "\u2581pro", "$$p", "$$To", "$$Boolean", "$$Array", "$$(s", "$$val", "$$)", "$$;"], ["\u2581val", "$$By", "$$Round", "$$.put", "$$(name,", "\u2581val", "$$s)", "$$;"], ["\u2581return", "\u2581val", "$$s[", "$$round", "$$Number", "\u2581%", "\u2581val", "$$s.length", "$$]", "$$;"], ["\u2581}"]]}, {"cs": "public void PreSerialize() {\n    if (records.Tabpos > 0) {\n        TabIdRecord tir = (TabIdRecord)records[(records.Tabpos)];\n        if (tir._tabids.Length < boundsheets.Count) {\n            FixTabIdRecord();\n        }\n    }\n}\n", "java": "public void preSerialize() {\n    if(records.getTabpos() > 0) {\n        TabIdRecord tir = ( TabIdRecord ) records.get(records.getTabpos());\n        if(tir._tabids.length < boundsheets.size()) {\n            fixTabIdRecord();\n        }\n    }\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581P", "$$re", "$$S", "$$erialize", "$$()", "\u2581{"], ["\u2581if", "\u2581(re", "$$cord", "$$s.", "$$T", "$$ab", "$$pos", "\u2581>", "\u25810)", "\u2581{"], ["\u2581T", "$$ab", "$$Id", "$$Record", "\u2581", "$$ti", "$$r", "\u2581=", "\u2581(", "$$T", "$$ab", "$$Id", "$$Record)", "$$record", "$$s[", "$$(re", "$$cord", "$$s.", "$$T", "$$ab", "$$po", "$$s)", "$$]", "$$;"], ["\u2581if", "\u2581(", "$$ti", "$$r", "$$._", "$$t", "$$ab", "$$id", "$$s.Length", "\u2581<", "\u2581bo", "$$und", "$$sheet", "$$s.", "$$Count)", "\u2581{"], ["\u2581", "$$Fi", "$$x", "$$T", "$$ab", "$$Id", "$$Record", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581pre", "$$S", "$$erialize", "$$()", "\u2581{"], ["\u2581if", "$$(re", "$$cord", "$$s.get", "$$T", "$$ab", "$$pos", "$$()", "\u2581>", "\u25810)", "\u2581{"], ["\u2581T", "$$ab", "$$Id", "$$Record", "\u2581", "$$ti", "$$r", "\u2581=", "\u2581(", "\u2581T", "$$ab", "$$Id", "$$Record", "\u2581)", "\u2581record", "$$s.get", "$$(re", "$$cord", "$$s.get", "$$T", "$$ab", "$$pos", "$$())", "$$;"], ["\u2581if(", "$$ti", "$$r", "$$._", "$$t", "$$ab", "$$id", "$$s.length", "\u2581<", "\u2581bo", "$$und", "$$sheet", "$$s.", "$$size", "$$())", "\u2581{"], ["\u2581fi", "$$x", "$$T", "$$ab", "$$Id", "$$Record", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public LimitTokenCountAnalyzer(Analyzer @delegate, int maxTokenCount, bool consumeAllTokens): base(@delegate.Strategy) {\n    this.@delegate = @delegate;\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n}\n", "java": "public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {\n    super(delegate.getReuseStrategy());\n    this.delegate = delegate;\n    this.maxTokenCount = maxTokenCount;\n    this.consumeAllTokens = consumeAllTokens;\n}\n", "cs_t": [["\u2581public", "\u2581L", "$$i", "$$mit", "$$Token", "$$Count", "$$An", "$$aly", "$$z", "$$er(", "$$Analyzer", "\u2581@", "$$de", "$$legate", "$$,", "\u2581int", "\u2581max", "$$Token", "$$Count", "$$,", "\u2581bool", "\u2581con", "$$sume", "$$All", "$$Token", "$$s)", "$$:", "\u2581base", "$$(@", "$$de", "$$legate", "$$.", "$$Strategy", "$$)", "\u2581{"], ["\u2581this.", "$$@", "$$de", "$$legate", "\u2581=", "\u2581@", "$$de", "$$legate", "$$;"], ["\u2581this.", "$$max", "$$Token", "$$Count", "\u2581=", "\u2581max", "$$Token", "$$Count", "$$;"], ["\u2581this.", "$$con", "$$sume", "$$All", "$$Token", "$$s", "\u2581=", "\u2581con", "$$sume", "$$All", "$$Token", "$$s;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581L", "$$i", "$$mit", "$$Token", "$$Count", "$$An", "$$aly", "$$z", "$$er(", "$$Analyzer", "\u2581de", "$$legate", "$$,", "\u2581int", "\u2581max", "$$Token", "$$Count", "$$,", "\u2581boolean", "\u2581con", "$$sume", "$$All", "$$Token", "$$s)", "\u2581{"], ["\u2581super(", "$$de", "$$legate", "$$.get", "$$Re", "$$use", "$$Strategy", "$$())", "$$;"], ["\u2581this.", "$$de", "$$legate", "\u2581=", "\u2581de", "$$legate", "$$;"], ["\u2581this.", "$$max", "$$Token", "$$Count", "\u2581=", "\u2581max", "$$Token", "$$Count", "$$;"], ["\u2581this.", "$$con", "$$sume", "$$All", "$$Token", "$$s", "\u2581=", "\u2581con", "$$sume", "$$All", "$$Token", "$$s;"], ["\u2581}"]]}, {"cs": "public ExternalBookBlock(int numberOfSheets) {\n    _externalBookRecord = SupBookRecord.CreateInternalReferences((short)numberOfSheets);\n    _externalNameRecords = new ExternalNameRecord[0];\n    _crnBlocks = new CRNBlock[0];\n}\n", "java": "public ExternalBookBlock(int numberOfSheets) {\n    _externalBookRecord = SupBookRecord.createInternalReferences((short) numberOfSheets);\n    _externalNameRecords = new ExternalNameRecord[0];\n    _crnBlocks = new CRNBlock[0];\n}\n", "cs_t": [["\u2581public", "\u2581Ex", "$$ternal", "$$Book", "$$Block", "$$(int", "\u2581number", "$$Of", "$$Sheet", "$$s)", "\u2581{"], ["\u2581_", "$$external", "$$Book", "$$Record", "\u2581=", "\u2581S", "$$up", "$$Book", "$$Record.", "$$Create", "$$Internal", "$$Ref", "$$eren", "$$ces", "$$((", "$$short)", "$$number", "$$Of", "$$Sheet", "$$s)", "$$;"], ["\u2581_", "$$external", "$$NameRecord", "$$s", "\u2581=", "\u2581new", "\u2581Ex", "$$ternal", "$$NameRecord", "$$[0]", "$$;"], ["\u2581_c", "$$rn", "$$Block", "$$s", "\u2581=", "\u2581new", "\u2581C", "$$R", "$$N", "$$Block", "$$[0]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Ex", "$$ternal", "$$Book", "$$Block", "$$(int", "\u2581number", "$$Of", "$$Sheet", "$$s)", "\u2581{"], ["\u2581_", "$$external", "$$Book", "$$Record", "\u2581=", "\u2581S", "$$up", "$$Book", "$$Record", "$$.create", "$$Internal", "$$Ref", "$$eren", "$$ces", "$$((", "$$short)", "\u2581number", "$$Of", "$$Sheet", "$$s)", "$$;"], ["\u2581_", "$$external", "$$NameRecord", "$$s", "\u2581=", "\u2581new", "\u2581Ex", "$$ternal", "$$NameRecord", "$$[0]", "$$;"], ["\u2581_c", "$$rn", "$$Block", "$$s", "\u2581=", "\u2581new", "\u2581C", "$$R", "$$N", "$$Block", "$$[0]", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[SCENARIOPROTECT]\\n\");\n    buffer.Append(\"    .protect         = \").Append(Protect).Append(\"\\n\");\n    buffer.Append(\"[/SCENARIOPROTECT]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"[SCENARIOPROTECT]\\n\");\n    buffer.append(\"    .protect         = \").append(getProtect()).append(\"\\n\");\n    buffer.append(\"[/SCENARIOPROTECT]\\n\");\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$S", "$$C", "$$EN", "$$AR", "$$IO", "$$P", "$$RO", "$$TE", "$$CT", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$pro", "$$tect", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$Protect", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"[/", "$$S", "$$C", "$$EN", "$$AR", "$$IO", "$$P", "$$RO", "$$TE", "$$CT", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(\"[", "$$S", "$$C", "$$EN", "$$AR", "$$IO", "$$P", "$$RO", "$$TE", "$$CT", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$pro", "$$tect", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").append(", "$$get", "$$Protect", "$$())", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"[/", "$$S", "$$C", "$$EN", "$$AR", "$$IO", "$$P", "$$RO", "$$TE", "$$CT", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual NGit.Api.PushCommand SetThin(bool thin) {\n    CheckCallable();\n    this.thin = thin;\n    return this;\n}\n", "java": "public PushCommand setThin(boolean thin) {\n    checkCallable();\n    this.thin = thin;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581NGit.Api.", "$$Push", "$$Command", "\u2581Set", "$$Th", "$$in", "$$(bool", "\u2581th", "$$in", "$$)", "\u2581{"], ["\u2581Check", "$$Callable", "$$()", "$$;"], ["\u2581this.", "$$th", "$$in", "\u2581=", "\u2581th", "$$in", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$ush", "$$Command", "\u2581set", "$$Th", "$$in", "$$(boolean", "\u2581th", "$$in", "$$)", "\u2581{"], ["\u2581check", "$$Callable", "$$()", "$$;"], ["\u2581this.", "$$th", "$$in", "\u2581=", "\u2581th", "$$in", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public int CompareTo(SearcherTracker other) {\n    return other.RecordTimeSec.CompareTo(RecordTimeSec);\n}\n", "java": "public int compareTo(SearcherTracker other) {\n    return Double.compare(other.recordTimeSec, recordTimeSec);\n}\n", "cs_t": [["\u2581public", "\u2581int", "\u2581Compare", "$$To(", "$$Se", "$$archer", "$$Track", "$$er", "\u2581other)", "\u2581{"], ["\u2581return", "\u2581other.", "$$Record", "$$Time", "$$Sec", "$$.Compare", "$$To(", "$$Record", "$$Time", "$$Sec", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581compare", "$$To(", "$$Se", "$$archer", "$$Track", "$$er", "\u2581other)", "\u2581{"], ["\u2581return", "\u2581Double", "$$.compare", "$$(oth", "$$er.", "$$record", "$$Time", "$$Sec", "$$,", "\u2581record", "$$Time", "$$Sec", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override TokenStream Create(TokenStream input) {\n    return new ReverseStringFilter(m_luceneMatchVersion, input);\n}\n", "java": "public ReverseStringFilter create(TokenStream in) {\n    return new ReverseStringFilter(in);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581TokenStream", "\u2581Create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581Re", "$$verse", "$$String", "$$Filter", "$$(", "$$m_", "$$lu", "$$c", "$$ene", "$$Match", "$$Version", "$$,", "\u2581input)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Re", "$$verse", "$$String", "$$Filter", "\u2581create(TokenStream", "\u2581in)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581Re", "$$verse", "$$String", "$$Filter", "$$(in", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public BlockList() {\n    directory = NGit.Util.BlockList<T>.NewDirectory(256);\n    directory[0] = NGit.Util.BlockList<T>.NewBlock();\n    tailBlock = directory[0];\n}\n", "java": "public BlockList() {\n    directory = BlockList.<T> newDirectory(256);\n    directory[0] = BlockList.<T> newBlock();\n    tailBlock = directory[0];\n}\n", "cs_t": [["\u2581public", "\u2581B", "$$lock", "$$List", "$$()", "\u2581{"], ["\u2581directory", "\u2581=", "\u2581NGit.", "$$Util.", "$$Block", "$$List<", "$$T>", "$$.N", "$$ew", "$$Directory", "$$(", "$$2", "$$5", "$$6", "$$)", "$$;"], ["\u2581directory", "$$[0]", "\u2581=", "\u2581NGit.", "$$Util.", "$$Block", "$$List<", "$$T>", "$$.N", "$$ew", "$$Block", "$$()", "$$;"], ["\u2581t", "$$ail", "$$Block", "\u2581=", "\u2581directory", "$$[0]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581B", "$$lock", "$$List", "$$()", "\u2581{"], ["\u2581directory", "\u2581=", "\u2581B", "$$lock", "$$List", "$$.", "$$<", "$$T>", "\u2581new", "$$Directory", "$$(", "$$2", "$$5", "$$6", "$$)", "$$;"], ["\u2581directory", "$$[0]", "\u2581=", "\u2581B", "$$lock", "$$List", "$$.", "$$<", "$$T>", "\u2581new", "$$Block", "$$()", "$$;"], ["\u2581t", "$$ail", "$$Block", "\u2581=", "\u2581directory", "$$[0]", "$$;"], ["\u2581}"]]}, {"cs": "public QueryScorer(WeightedSpanTerm[] weightedTerms) {\n    this.fieldWeightedSpanTerms = new JCG.Dictionary<string, WeightedSpanTerm>(weightedTerms.Length);\n    foreach (WeightedSpanTerm t in weightedTerms) {\n        if (!fieldWeightedSpanTerms.TryGetValue(t.Term, out WeightedSpanTerm existingTerm) ||(existingTerm == null) ||(existingTerm.Weight < t.Weight)) {\n            fieldWeightedSpanTerms[t.Term] = t;\n            maxTermWeight = Math.Max(maxTermWeight, t.Weight);\n        }\n    }\n    skipInitExtractor = true;\n}\n", "java": "public QueryScorer(WeightedSpanTerm[] weightedTerms) {\n    this.fieldWeightedSpanTerms = new HashMap<>(weightedTerms.length);\n    for (int i = 0; i < weightedTerms.length; i++) {\n        WeightedSpanTerm existingTerm = fieldWeightedSpanTerms.get(weightedTerms[i].term);\n        if ((existingTerm == null) ||(existingTerm.weight < weightedTerms[i].weight)) {\n            fieldWeightedSpanTerms.put(weightedTerms[i].term, weightedTerms[i]);\n            maxTermWeight = Math.max(maxTermWeight, weightedTerms[i].getWeight());\n        }\n    }\n    skipInitExtractor = true;\n}\n", "cs_t": [["\u2581public", "\u2581Query", "$$Score", "$$r", "$$(", "$$W", "$$eighted", "$$Span", "$$Term", "$$[]", "\u2581w", "$$eighted", "$$Term", "$$s)", "\u2581{"], ["\u2581this.field", "$$W", "$$eighted", "$$Span", "$$Terms", "\u2581=", "\u2581new", "\u2581J", "$$C", "$$G", "$$.D", "$$ictionary<string,", "\u2581W", "$$eighted", "$$Span", "$$Term", "$$>", "$$(w", "$$eighted", "$$Term", "$$s.Length", "$$)", "$$;"], ["\u2581foreach", "\u2581(", "$$W", "$$eighted", "$$Span", "$$Term", "\u2581t", "\u2581in", "\u2581w", "$$eighted", "$$Term", "$$s)", "\u2581{"], ["\u2581if", "\u2581(!", "$$field", "$$W", "$$eighted", "$$Span", "$$Term", "$$s.", "$$TryGet", "$$Value", "$$(t", "$$.", "$$Term", "$$,", "\u2581out", "\u2581W", "$$eighted", "$$Span", "$$Term", "\u2581ex", "$$ist", "$$ing", "$$Term", "$$)", "\u2581||", "$$(", "$$ex", "$$ist", "$$ing", "$$Term", "\u2581==", "\u2581null)", "\u2581||", "$$(", "$$ex", "$$ist", "$$ing", "$$Term", "$$.", "$$Weight", "\u2581<", "\u2581t", "$$.", "$$Weight", "$$))", "\u2581{"], ["\u2581field", "$$W", "$$eighted", "$$Span", "$$Term", "$$s[", "$$t", "$$.", "$$Term", "$$]", "\u2581=", "\u2581t", "$$;"], ["\u2581max", "$$Term", "$$Weight", "\u2581=", "\u2581Math.", "$$Max", "$$(", "$$max", "$$Term", "$$Weight", "$$,", "\u2581t", "$$.", "$$Weight", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581skip", "$$Init", "$$Ex", "$$tra", "$$ctor", "\u2581=", "\u2581true", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Query", "$$Score", "$$r", "$$(", "$$W", "$$eighted", "$$Span", "$$Term", "$$[]", "\u2581w", "$$eighted", "$$Term", "$$s)", "\u2581{"], ["\u2581this.field", "$$W", "$$eighted", "$$Span", "$$Terms", "\u2581=", "\u2581new", "\u2581Hash", "$$Map<", "$$>", "$$(w", "$$eighted", "$$Term", "$$s.length", "$$)", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581w", "$$eighted", "$$Term", "$$s.length;", "\u2581i++)", "\u2581{"], ["\u2581W", "$$eighted", "$$Span", "$$Term", "\u2581ex", "$$ist", "$$ing", "$$Term", "\u2581=", "\u2581field", "$$W", "$$eighted", "$$Span", "$$Term", "$$s.get", "$$(w", "$$eighted", "$$Term", "$$s[i]", "$$.term", "$$)", "$$;"], ["\u2581if", "\u2581((", "$$ex", "$$ist", "$$ing", "$$Term", "\u2581==", "\u2581null)", "\u2581||", "$$(", "$$ex", "$$ist", "$$ing", "$$Term", "$$.w", "$$eight", "\u2581<", "\u2581w", "$$eighted", "$$Term", "$$s[i]", "$$.w", "$$eight", "$$))", "\u2581{"], ["\u2581field", "$$W", "$$eighted", "$$Span", "$$Term", "$$s.", "$$put", "$$(w", "$$eighted", "$$Term", "$$s[i]", "$$.term", "$$,", "\u2581w", "$$eighted", "$$Term", "$$s[i]", "$$)", "$$;"], ["\u2581max", "$$Term", "$$Weight", "\u2581=", "\u2581Math.", "$$max", "$$(", "$$max", "$$Term", "$$Weight", "$$,", "\u2581w", "$$eighted", "$$Term", "$$s[i]", "$$.get", "$$Weight", "$$())", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581skip", "$$Init", "$$Ex", "$$tra", "$$ctor", "\u2581=", "\u2581true", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Equals(object other) {\n    Debug.Assert(NeverEquals(other));\n    if (other is MergedGroup<T> otherMergedGroup) {\n        if (groupValue == null) {\n            return otherMergedGroup == null;\n        }\n        else {\n            return groupValueIsValueType ?JCG.EqualityComparer<T>.Default.Equals(groupValue, otherMergedGroup.groupValue) :J2N.Collections.StructuralEqualityComparer.Default.Equals(groupValue, otherMergedGroup.groupValue);\n        }\n    }\n    else {\n        return false;\n    }\n}\n", "java": "public boolean equals(Object _other) {\n    assert neverEquals(_other);\n    if (_other instanceof MergedGroup) {\n        MergedGroup<?> other = (MergedGroup<?>) _other;\n        if (groupValue == null) {\n            return other == null;\n        }\n        else {\n            return groupValue.equals(other);\n        }\n    }\n    else {\n        return false;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Equals(object", "\u2581other)", "\u2581{"], ["\u2581Debug.Assert(", "$$N", "$$e", "$$ver", "$$E", "$$quals(", "$$other", "$$))", "$$;"], ["\u2581if", "\u2581(", "$$other", "\u2581is", "\u2581Merge", "$$d", "$$Group", "$$<", "$$T>", "\u2581other", "$$Merge", "$$d", "$$Group", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$group", "$$Value", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581other", "$$Merge", "$$d", "$$Group", "\u2581==", "\u2581null", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581group", "$$Value", "$$Is", "$$Value", "$$Type", "\u2581?", "$$J", "$$C", "$$G", "$$.E", "$$qual", "$$ity", "$$Compare", "$$r", "$$<", "$$T>", "$$.", "$$Default", "$$.Equals(", "$$group", "$$Value", "$$,", "\u2581other", "$$Merge", "$$d", "$$Group", "$$.", "$$group", "$$Value)", "\u2581:", "$$J", "$$2", "$$N", "$$.", "$$Collections.", "$$Str", "$$uc", "$$tu", "$$r", "$$al", "$$E", "$$qual", "$$ity", "$$Compare", "$$r", "$$.", "$$Default", "$$.Equals(", "$$group", "$$Value", "$$,", "\u2581other", "$$Merge", "$$d", "$$Group", "$$.", "$$group", "$$Value)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581equals(Object", "\u2581_", "$$oth", "$$er)", "\u2581{"], ["\u2581assert", "\u2581n", "$$e", "$$ver", "$$E", "$$quals(", "$$_", "$$oth", "$$er)", "$$;"], ["\u2581if", "\u2581(_", "$$other", "\u2581instanceof", "\u2581Merge", "$$d", "$$Group", "$$)", "\u2581{"], ["\u2581Merge", "$$d", "$$Group", "$$<", "$$?", "$$>", "\u2581other", "\u2581=", "\u2581(", "$$Merge", "$$d", "$$Group", "$$<", "$$?", "$$>", "$$)", "\u2581_", "$$other", "$$;"], ["\u2581if", "\u2581(", "$$group", "$$Value", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581other", "\u2581==", "\u2581null", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581group", "$$Value", "$$.equals(", "$$oth", "$$er)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public java.nio.charset.Charset charset() {\n    return cs;\n}\n", "java": "public final Charset charset() {\n    return cs;\n}\n", "cs_t": [["\u2581public", "\u2581java.nio.", "$$char", "$$set", "$$.", "$$Char", "$$set", "\u2581char", "$$set", "$$()", "\u2581{"], ["\u2581return", "\u2581c", "$$s;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581final", "\u2581Char", "$$set", "\u2581char", "$$set", "$$()", "\u2581{"], ["\u2581return", "\u2581c", "$$s;"], ["\u2581}"]]}, {"cs": "public virtual DescribeExperimentResponse DescribeExperiment(DescribeExperimentRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeExperimentRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeExperimentResponseUnmarshaller.Instance;\n    return Invoke<DescribeExperimentResponse>(request, options);\n}\n", "java": "public DescribeExperimentResult describeExperiment(DescribeExperimentRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeExperiment(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Ex", "$$per", "$$i", "$$ment", "$$Response", "\u2581Describe", "$$Ex", "$$per", "$$i", "$$ment", "$$(Describe", "$$Ex", "$$per", "$$i", "$$ment", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Ex", "$$per", "$$i", "$$ment", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Ex", "$$per", "$$i", "$$ment", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Ex", "$$per", "$$i", "$$ment", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Ex", "$$per", "$$i", "$$ment", "$$Result", "\u2581describe", "$$Ex", "$$per", "$$i", "$$ment", "$$(Describe", "$$Ex", "$$per", "$$i", "$$ment", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Ex", "$$per", "$$i", "$$ment", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel) {\n    this.escherGroup = escherGroup;\n    this.workbook = workbook;\n    this.verticalPointsPerPixel = verticalPointsPerPixel;\n    this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;\n    this.font = new Font(\"Arial\", 10);\n    this.foreground = forecolor;\n}\n", "java": "public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel ) {\n    this.escherGroup = escherGroup;\n    this.workbook = workbook;\n    this.verticalPointsPerPixel = verticalPointsPerPixel;\n    this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;\n    this.font = new Font(\"Arial\", 0, 10);\n    this.foreground = forecolor;\n}\n", "cs_t": [["\u2581public", "\u2581Escher", "$$G", "$$raph", "$$ic", "$$s(", "$$HSSF", "$$Shape", "$$Group", "\u2581escher", "$$Group", "$$,", "\u2581HSSF", "$$Workbook", "\u2581work", "$$book", "$$,", "\u2581", "$$Color", "\u2581fore", "$$color", "$$,", "\u2581float", "\u2581v", "$$erti", "$$cal", "$$Point", "$$s", "$$Per", "$$P", "$$i", "$$x", "$$el", "$$)", "\u2581{"], ["\u2581this.", "$$escher", "$$Group", "\u2581=", "\u2581escher", "$$Group", "$$;"], ["\u2581this.", "$$workbook", "\u2581=", "\u2581work", "$$book", "$$;"], ["\u2581this.", "$$ver", "$$tic", "$$al", "$$Point", "$$s", "$$Per", "$$P", "$$i", "$$x", "$$el", "\u2581=", "\u2581v", "$$erti", "$$cal", "$$Point", "$$s", "$$Per", "$$P", "$$i", "$$x", "$$el", "$$;"], ["\u2581this.", "$$ver", "$$tic", "$$al", "$$P", "$$i", "$$x", "$$el", "$$s", "$$Per", "$$Point", "\u2581=", "\u25811", "\u2581/", "\u2581v", "$$erti", "$$cal", "$$Point", "$$s", "$$Per", "$$P", "$$i", "$$x", "$$el", "$$;"], ["\u2581this.", "$$font", "\u2581=", "\u2581new", "\u2581F", "$$ont", "$$(\"", "$$A", "$$ri", "$$al", "$$\",", "\u25811", "$$0)", "$$;"], ["\u2581this.", "$$fore", "$$ground", "\u2581=", "\u2581fore", "$$color", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Escher", "$$G", "$$raph", "$$ic", "$$s(", "$$HSSF", "$$Shape", "$$Group", "\u2581escher", "$$Group", "$$,", "\u2581HSSF", "$$Workbook", "\u2581work", "$$book", "$$,", "\u2581", "$$Color", "\u2581fore", "$$color", "$$,", "\u2581float", "\u2581v", "$$erti", "$$cal", "$$Point", "$$s", "$$Per", "$$P", "$$i", "$$x", "$$el", "\u2581)", "\u2581{"], ["\u2581this.", "$$escher", "$$Group", "\u2581=", "\u2581escher", "$$Group", "$$;"], ["\u2581this.", "$$workbook", "\u2581=", "\u2581work", "$$book", "$$;"], ["\u2581this.", "$$ver", "$$tic", "$$al", "$$Point", "$$s", "$$Per", "$$P", "$$i", "$$x", "$$el", "\u2581=", "\u2581v", "$$erti", "$$cal", "$$Point", "$$s", "$$Per", "$$P", "$$i", "$$x", "$$el", "$$;"], ["\u2581this.", "$$ver", "$$tic", "$$al", "$$P", "$$i", "$$x", "$$el", "$$s", "$$Per", "$$Point", "\u2581=", "\u25811", "\u2581/", "\u2581v", "$$erti", "$$cal", "$$Point", "$$s", "$$Per", "$$P", "$$i", "$$x", "$$el", "$$;"], ["\u2581this.", "$$font", "\u2581=", "\u2581new", "\u2581F", "$$ont", "$$(\"", "$$A", "$$ri", "$$al", "$$\",", "\u25810,", "\u25811", "$$0)", "$$;"], ["\u2581this.", "$$fore", "$$ground", "\u2581=", "\u2581fore", "$$color", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string Pattern() {\n    return patternText;\n}\n", "java": "public String pattern() {\n    return patternText;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581P", "$$attern", "$$()", "\u2581{"], ["\u2581return", "\u2581pattern", "$$Text", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581pattern", "$$()", "\u2581{"], ["\u2581return", "\u2581pattern", "$$Text", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteRouteTableResponse DeleteRouteTable(DeleteRouteTableRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteRouteTableRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteRouteTableResponseUnmarshaller.Instance;\n    return Invoke<DeleteRouteTableResponse>(request, options);\n}\n", "java": "public DeleteRouteTableResult deleteRouteTable(DeleteRouteTableRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteRouteTable(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$RouteTable", "$$Response", "\u2581Delete", "$$RouteTable", "$$(Delete", "$$RouteTable", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$RouteTable", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$RouteTable", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$RouteTable", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$RouteTable", "$$Result", "\u2581delete", "$$RouteTable", "$$(Delete", "$$RouteTable", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$RouteTable", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual AssociateVPCWithHostedZoneResponse AssociateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = AssociateVPCWithHostedZoneRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = AssociateVPCWithHostedZoneResponseUnmarshaller.Instance;\n    return Invoke<AssociateVPCWithHostedZoneResponse>(request, options);\n}\n", "java": "public AssociateVPCWithHostedZoneResult associateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request) {\n    request = beforeClientExecution(request);\n    return executeAssociateVPCWithHostedZone(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Associate", "$$V", "$$P", "$$C", "$$With", "$$HostedZone", "$$Response", "\u2581Associate", "$$V", "$$P", "$$C", "$$With", "$$HostedZone", "$$(", "$$Associate", "$$V", "$$P", "$$C", "$$With", "$$HostedZone", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Associate", "$$V", "$$P", "$$C", "$$With", "$$HostedZone", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Associate", "$$V", "$$P", "$$C", "$$With", "$$HostedZone", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Associate", "$$V", "$$P", "$$C", "$$With", "$$HostedZone", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Associate", "$$V", "$$P", "$$C", "$$With", "$$HostedZone", "$$Result", "\u2581", "$$associate", "$$V", "$$P", "$$C", "$$With", "$$HostedZone", "$$(", "$$Associate", "$$V", "$$P", "$$C", "$$With", "$$HostedZone", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Associate", "$$V", "$$P", "$$C", "$$With", "$$HostedZone", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual PutIntegrationResponse PutIntegration(PutIntegrationRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = PutIntegrationRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = PutIntegrationResponseUnmarshaller.Instance;\n    return Invoke<PutIntegrationResponse>(request, options);\n}\n", "java": "public PutIntegrationResult putIntegration(PutIntegrationRequest request) {\n    request = beforeClientExecution(request);\n    return executePutIntegration(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Put", "$$Integration", "$$Response", "\u2581Put", "$$Integration", "$$(Put", "$$Integration", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Put", "$$Integration", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Put", "$$Integration", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Put", "$$Integration", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Put", "$$Integration", "$$Result", "\u2581put", "$$Integration", "$$(Put", "$$Integration", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executePut", "$$Integration", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public SimpleEntry(K theKey, V theValue) {\n    key = theKey;\n    value = theValue;\n}\n", "java": "public SimpleEntry(K theKey, V theValue) {\n    key = theKey;\n    value = theValue;\n}\n", "cs_t": [["\u2581public", "\u2581Simple", "$$Entry", "$$(", "$$K", "\u2581the", "$$Key", "$$,", "\u2581V", "\u2581the", "$$Value)", "\u2581{"], ["\u2581key", "\u2581=", "\u2581the", "$$Key", "$$;"], ["\u2581value", "\u2581=", "\u2581the", "$$Value", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Simple", "$$Entry", "$$(", "$$K", "\u2581the", "$$Key", "$$,", "\u2581V", "\u2581the", "$$Value)", "\u2581{"], ["\u2581key", "\u2581=", "\u2581the", "$$Key", "$$;"], ["\u2581value", "\u2581=", "\u2581the", "$$Value", "$$;"], ["\u2581}"]]}, {"cs": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {\n    for (int i = 0; i < iterations; ++i) {\n        int byte0 = blocks[blocksOffset++] & 0xFF;\n        int byte1 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte0 << 4) | ((int)((uint)byte1 >> 4));\n        int byte2 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;\n    }\n}\n", "java": "public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {\n    for (int i = 0; i < iterations; ++i) {\n        final long byte0 = blocks[blocksOffset++] & 0xFF;\n        final long byte1 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = (byte0 << 4) | (byte1 >>> 4);\n        final long byte2 = blocks[blocksOffset++] & 0xFF;\n        values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581D", "$$ecode", "$$(byte[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581int[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581iterations;", "\u2581++i)", "\u2581{"], ["\u2581int", "\u2581byte", "$$0", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581int", "\u2581byte", "$$1", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(byte", "$$0", "\u2581<<", "\u25814)", "\u2581|", "\u2581((int)((", "$$uint)", "$$byte", "$$1", "\u2581>>", "\u25814", "$$))", "$$;"], ["\u2581int", "\u2581byte", "$$2", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((byte", "$$1", "\u2581&", "\u25811", "$$5", "$$)", "\u2581<<", "\u25818)", "\u2581|", "\u2581byte", "$$2", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581decode", "$$(byte[]", "\u2581blocks,", "\u2581int", "\u2581blocksOffset,", "\u2581long[]", "\u2581values,", "\u2581int", "\u2581valuesOffset,", "\u2581int", "\u2581iterations)", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581iterations;", "\u2581++i)", "\u2581{"], ["\u2581final", "\u2581long", "\u2581byte", "$$0", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581final", "\u2581long", "\u2581byte", "$$1", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581(byte", "$$0", "\u2581<<", "\u25814)", "\u2581|", "\u2581(byte", "$$1", "\u2581>>>", "\u25814)", "$$;"], ["\u2581final", "\u2581long", "\u2581byte", "$$2", "\u2581=", "\u2581blocks[blocksOffset++]", "\u2581&", "\u25810xFF", "$$;"], ["\u2581values[valuesOffset++]", "\u2581=", "\u2581((byte", "$$1", "\u2581&", "\u25811", "$$5", "$$)", "\u2581<<", "\u25818)", "\u2581|", "\u2581byte", "$$2", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual DisassociateConnectionFromLagResponse DisassociateConnectionFromLag(DisassociateConnectionFromLagRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DisassociateConnectionFromLagRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DisassociateConnectionFromLagResponseUnmarshaller.Instance;\n    return Invoke<DisassociateConnectionFromLagResponse>(request, options);\n}\n", "java": "public DisassociateConnectionFromLagResult disassociateConnectionFromLag(DisassociateConnectionFromLagRequest request) {\n    request = beforeClientExecution(request);\n    return executeDisassociateConnectionFromLag(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Disassociate", "$$Connection", "$$From", "$$L", "$$ag", "$$Response", "\u2581Disassociate", "$$Connection", "$$From", "$$L", "$$ag", "$$(", "$$Disassociate", "$$Connection", "$$From", "$$L", "$$ag", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Disassociate", "$$Connection", "$$From", "$$L", "$$ag", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Disassociate", "$$Connection", "$$From", "$$L", "$$ag", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Disassociate", "$$Connection", "$$From", "$$L", "$$ag", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Disassociate", "$$Connection", "$$From", "$$L", "$$ag", "$$Result", "\u2581dis", "$$associate", "$$Connection", "$$From", "$$L", "$$ag", "$$(", "$$Disassociate", "$$Connection", "$$From", "$$L", "$$ag", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Disassociate", "$$Connection", "$$From", "$$L", "$$ag", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual FileMode GetOldMode() {\n    return oldMode;\n}\n", "java": "public FileMode getOldMode() {\n    return oldMode;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581File", "$$Mode", "\u2581Get", "$$Old", "$$Mode", "$$()", "\u2581{"], ["\u2581return", "\u2581old", "$$Mode", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581File", "$$Mode", "\u2581get", "$$Old", "$$Mode", "$$()", "\u2581{"], ["\u2581return", "\u2581old", "$$Mode", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return mapEntry.ToString();\n}\n", "java": "@Override public String toString() {\n    return m.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581map", "$$Entry", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581@Override", "\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581m", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StopKeyPhrasesDetectionJobResponse StopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = StopKeyPhrasesDetectionJobRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = StopKeyPhrasesDetectionJobResponseUnmarshaller.Instance;\n    return Invoke<StopKeyPhrasesDetectionJobResponse>(request, options);\n}\n", "java": "public StopKeyPhrasesDetectionJobResult stopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request) {\n    request = beforeClientExecution(request);\n    return executeStopKeyPhrasesDetectionJob(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Stop", "$$Key", "$$Ph", "$$ra", "$$ses", "$$DetectionJob", "$$Response", "\u2581Stop", "$$Key", "$$Ph", "$$ra", "$$ses", "$$DetectionJob", "$$(", "$$Stop", "$$Key", "$$Ph", "$$ra", "$$ses", "$$DetectionJob", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Stop", "$$Key", "$$Ph", "$$ra", "$$ses", "$$DetectionJob", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Stop", "$$Key", "$$Ph", "$$ra", "$$ses", "$$DetectionJob", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Stop", "$$Key", "$$Ph", "$$ra", "$$ses", "$$DetectionJob", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Stop", "$$Key", "$$Ph", "$$ra", "$$ses", "$$DetectionJob", "$$Result", "\u2581stop", "$$Key", "$$Ph", "$$ra", "$$ses", "$$DetectionJob", "$$(", "$$Stop", "$$Key", "$$Ph", "$$ra", "$$ses", "$$DetectionJob", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Stop", "$$Key", "$$Ph", "$$ra", "$$ses", "$$DetectionJob", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder(\"[Array Formula or Shared Formula]\\n\");\n    buffer.Append(\"row = \").Append(Row).Append(\"\\n\");\n    buffer.Append(\"col = \").Append(Column).Append(\"\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    return \"[Array Formula or Shared Formula]\\n\" + \"row = \" + getRow() + \"\\n\" + \"col = \" + getColumn() + \"\\n\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$(\"", "$$[", "$$Array", "\u2581Formula", "\u2581or", "\u2581Sh", "$$ared", "\u2581Formula", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "$$row", "\u2581=", "\u2581\").Append(", "$$Row", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "$$col", "\u2581=", "\u2581\").Append(", "$$Column", "$$)", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$[", "$$Array", "\u2581Formula", "\u2581or", "\u2581Sh", "$$ared", "\u2581Formula", "$$]", "$$\\n", "$$\"", "\u2581+", "\u2581\"", "$$row", "\u2581=", "\u2581\"", "\u2581+", "\u2581get", "$$Row", "$$()", "\u2581+", "\u2581\"", "$$\\n", "$$\"", "\u2581+", "\u2581\"", "$$col", "\u2581=", "\u2581\"", "\u2581+", "\u2581get", "$$Column", "$$()", "\u2581+", "\u2581\"", "$$\\n", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListDominantLanguageDetectionJobsResponse ListDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListDominantLanguageDetectionJobsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListDominantLanguageDetectionJobsResponseUnmarshaller.Instance;\n    return Invoke<ListDominantLanguageDetectionJobsResponse>(request, options);\n}\n", "java": "public ListDominantLanguageDetectionJobsResult listDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request) {\n    request = beforeClientExecution(request);\n    return executeListDominantLanguageDetectionJobs(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$sResponse", "\u2581List", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$s(List", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$sResult", "\u2581list", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$s(List", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return \"slice start=\" + Start + \" length=\" + Length + \" readerIndex=\" + ReaderIndex;\n}\n", "java": "public String toString() {\n    return \"slice start=\" + start + \" length=\" + length + \" readerIndex=\" + readerIndex;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$s", "$$lice", "\u2581start", "$$=\"", "\u2581+", "\u2581Start", "\u2581+", "\u2581\"", "\u2581length", "$$=\"", "\u2581+", "\u2581", "$$Length", "\u2581+", "\u2581\"", "\u2581read", "$$er", "$$Index", "$$=\"", "\u2581+", "\u2581", "$$Reader", "$$Index", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$s", "$$lice", "\u2581start", "$$=\"", "\u2581+", "\u2581start", "\u2581+", "\u2581\"", "\u2581length", "$$=\"", "\u2581+", "\u2581length", "\u2581+", "\u2581\"", "\u2581read", "$$er", "$$Index", "$$=\"", "\u2581+", "\u2581read", "$$er", "$$Index", "$$;"], ["\u2581}"]]}, {"cs": "public static int ParseHexInt4(byte digit) {\n    sbyte r = digits16[digit];\n    if (r < 0) {\n        throw new IndexOutOfRangeException();\n    }\n    return r;\n}\n", "java": "public static final int parseHexInt4(final byte digit) {\n    final byte r = digits16[digit];\n    if (r < 0)throw new ArrayIndexOutOfBoundsException();\n    return r;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581Parse", "$$Hex", "$$Int", "$$4", "$$(byte", "\u2581d", "$$ig", "$$it", "$$)", "\u2581{"], ["\u2581sb", "$$yte", "\u2581r", "\u2581=", "\u2581d", "$$ig", "$$its", "$$16", "$$[", "$$d", "$$ig", "$$it", "$$]", "$$;"], ["\u2581if", "\u2581(r", "\u2581<", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Index", "$$OutOf", "$$Range", "$$Exception", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581r", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581final", "\u2581int", "\u2581par", "$$se", "$$Hex", "$$Int", "$$4", "$$(f", "$$inal", "\u2581byte", "\u2581d", "$$ig", "$$it", "$$)", "\u2581{"], ["\u2581final", "\u2581byte", "\u2581r", "\u2581=", "\u2581d", "$$ig", "$$its", "$$16", "$$[", "$$d", "$$ig", "$$it", "$$]", "$$;"], ["\u2581if", "\u2581(r", "\u2581<", "\u25810)", "$$throw", "\u2581new", "\u2581Array", "$$IndexOutOf", "$$Bounds", "$$Exception", "$$()", "$$;"], ["\u2581return", "\u2581r", "$$;"], ["\u2581}"]]}, {"cs": "public Attribute(string name, string value) {\n    _name = name;\n    _value = value;\n}\n", "java": "public Attribute(String name, String value) {\n    setName(name);\n    setValue(value);\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Attribute", "$$(string", "\u2581name,", "\u2581string", "\u2581value)", "\u2581{"], ["\u2581_", "$$name", "\u2581=", "\u2581name", "$$;"], ["\u2581_", "$$value", "\u2581=", "\u2581value", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Attribute", "$$(String", "\u2581name,", "\u2581String", "\u2581value)", "\u2581{"], ["\u2581set", "$$Name", "$$(name", "$$)", "$$;"], ["\u2581set", "$$Value(", "$$value", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeStackSetOperationResponse DescribeStackSetOperation(DescribeStackSetOperationRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeStackSetOperationRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeStackSetOperationResponseUnmarshaller.Instance;\n    return Invoke<DescribeStackSetOperationResponse>(request, options);\n}\n", "java": "public DescribeStackSetOperationResult describeStackSetOperation(DescribeStackSetOperationRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeStackSetOperation(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$StackSet", "$$Operation", "$$Response", "\u2581Describe", "$$StackSet", "$$Operation", "$$(Describe", "$$StackSet", "$$Operation", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$StackSet", "$$Operation", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$StackSet", "$$Operation", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$StackSet", "$$Operation", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$StackSet", "$$Operation", "$$Result", "\u2581describe", "$$StackSet", "$$Operation", "$$(Describe", "$$StackSet", "$$Operation", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$StackSet", "$$Operation", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ICell GetCell(short cellnum) {\n    int ushortCellNum = cellnum & 0x0000FFFF;\n    return GetCell(ushortCellNum);\n}\n", "java": "public HSSFCell getCell(int cellnum) {\n    return getCell(cellnum, book.getMissingCellPolicy());\n}\n", "cs_t": [["\u2581public", "\u2581I", "$$Cell", "\u2581Get", "$$Cell(", "$$short", "\u2581cell", "$$num", "$$)", "\u2581{"], ["\u2581int", "\u2581u", "$$short", "$$Cell", "$$Num", "\u2581=", "\u2581cell", "$$num", "\u2581&", "\u25810x00", "$$00", "$$FF", "$$FF", "$$;"], ["\u2581return", "\u2581Get", "$$Cell(", "$$u", "$$short", "$$Cell", "$$Num", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581HSSF", "$$Cell", "\u2581get", "$$Cell", "$$(int", "\u2581cell", "$$num", "$$)", "\u2581{"], ["\u2581return", "\u2581get", "$$Cell(", "$$cell", "$$num", "$$,", "\u2581bo", "$$ok", "$$.get", "$$M", "$$issing", "$$Cell", "$$Policy", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public void Write(byte[] b) {\n    WriteContinueIfRequired(b.Length);\n    _ulrOutput.Write(b);\n}\n", "java": "public void write(byte[] b) {\n    writeContinueIfRequired(b.length);\n    _ulrOutput.write(b);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Write", "$$(byte[]", "\u2581b)", "\u2581{"], ["\u2581Write", "$$Cont", "$$inue", "$$If", "$$Re", "$$quire", "$$d(", "$$b", "$$.Length)", "$$;"], ["\u2581_", "$$ul", "$$r", "$$Output", "$$.Write", "$$(b", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581write", "$$(byte[]", "\u2581b)", "\u2581{"], ["\u2581write", "$$Cont", "$$inue", "$$If", "$$Re", "$$quire", "$$d(", "$$b", "$$.length)", "$$;"], ["\u2581_", "$$ul", "$$r", "$$Output", "$$.write", "$$(b", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ResetImageAttributeRequest(string imageId, ResetImageAttributeName attribute) {\n    _imageId = imageId;\n    _attribute = attribute;\n}\n", "java": "public ResetImageAttributeRequest(String imageId, ResetImageAttributeName attribute) {\n    setImageId(imageId);\n    setAttribute(attribute.toString());\n}\n", "cs_t": [["\u2581public", "\u2581Reset", "$$ImageAttribute", "$$Request(string", "\u2581i", "$$ma", "$$ge", "$$Id,", "\u2581Reset", "$$ImageAttribute", "$$Name", "\u2581at", "$$tribute", "$$)", "\u2581{"], ["\u2581_", "$$i", "$$ma", "$$ge", "$$Id", "\u2581=", "\u2581i", "$$ma", "$$ge", "$$Id", "$$;"], ["\u2581_", "$$at", "$$tribute", "\u2581=", "\u2581at", "$$tribute", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Reset", "$$ImageAttribute", "$$Request(String", "\u2581i", "$$ma", "$$ge", "$$Id,", "\u2581Reset", "$$ImageAttribute", "$$Name", "\u2581at", "$$tribute", "$$)", "\u2581{"], ["\u2581set", "$$Image", "$$Id(", "$$i", "$$ma", "$$ge", "$$Id)", "$$;"], ["\u2581set", "$$Attribute", "$$(", "$$at", "$$tribute", "$$.toString()", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void DiscardResultContents() {\n    resultContents = null;\n}\n", "java": "public void discardResultContents() {\n    resultContents = null;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Dis", "$$c", "$$ard", "$$Result", "$$Content", "$$s()", "\u2581{"], ["\u2581result", "$$Content", "$$s", "\u2581=", "\u2581null", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581dis", "$$c", "$$ard", "$$Result", "$$Content", "$$s()", "\u2581{"], ["\u2581result", "$$Content", "$$s", "\u2581=", "\u2581null", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ObjectId GetPeeledObjectId() {\n    return GetLeaf().GetPeeledObjectId();\n}\n", "java": "public ObjectId getPeeledObjectId() {\n    return getLeaf().getPeeledObjectId();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581ObjectId", "\u2581Get", "$$P", "$$ee", "$$led", "$$ObjectId", "$$()", "\u2581{"], ["\u2581return", "\u2581Get", "$$Le", "$$af", "$$()", "$$.Get", "$$P", "$$ee", "$$led", "$$ObjectId", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ObjectId", "\u2581get", "$$P", "$$ee", "$$led", "$$ObjectId", "$$()", "\u2581{"], ["\u2581return", "\u2581get", "$$Le", "$$af", "$$().get", "$$P", "$$ee", "$$led", "$$ObjectId", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual UndeprecateDomainResponse UndeprecateDomain(UndeprecateDomainRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = UndeprecateDomainRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = UndeprecateDomainResponseUnmarshaller.Instance;\n    return Invoke<UndeprecateDomainResponse>(request, options);\n}\n", "java": "public void undeprecateDomain(UndeprecateDomainRequest request) {\n    request = beforeClientExecution(request);\n    executeUndeprecateDomain(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Un", "$$de", "$$pre", "$$cate", "$$Domain", "$$Response", "\u2581Un", "$$de", "$$pre", "$$cate", "$$Domain", "$$(", "$$Un", "$$de", "$$pre", "$$cate", "$$Domain", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Un", "$$de", "$$pre", "$$cate", "$$Domain", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Un", "$$de", "$$pre", "$$cate", "$$Domain", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Un", "$$de", "$$pre", "$$cate", "$$Domain", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581un", "$$de", "$$pre", "$$cate", "$$Domain", "$$(", "$$Un", "$$de", "$$pre", "$$cate", "$$Domain", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581execute", "$$Un", "$$de", "$$pre", "$$cate", "$$Domain", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Write(ILittleEndianOutput out1) {\n    out1.WriteByte(sid + PtgClass);\n    out1.WriteByte(field_3_string.Length);\n    out1.WriteByte(_is16bitUnicode ? 0x01 : 0x00);\n    if (_is16bitUnicode) {\n        StringUtil.PutUnicodeLE(field_3_string, out1);\n    }\n    else {\n        StringUtil.PutCompressedUnicode(field_3_string, out1);\n    }\n}\n", "java": "public void write(LittleEndianOutput out) {\n    out.writeByte(sid + getPtgClass());\n    out.writeByte(field_3_string.length());\n    out.writeByte(_is16bitUnicode ? 0x01 : 0x00);\n    if (_is16bitUnicode) {\n        StringUtil.putUnicodeLE(field_3_string, out);\n    }\n    else {\n        StringUtil.putCompressedUnicode(field_3_string, out);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Write", "$$(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteByte(", "$$sid", "\u2581+", "\u2581Ptg", "$$Clas", "$$s)", "$$;"], ["\u2581out1.WriteByte(", "$$field_3_", "$$string", "$$.Length)", "$$;"], ["\u2581out1.Write", "$$Byte", "$$(_", "$$is", "$$16", "$$bit", "$$Unicode", "\u2581?", "\u25810x0", "$$1", "\u2581:", "\u25810x00", "$$)", "$$;"], ["\u2581if", "\u2581(_", "$$is", "$$16", "$$bit", "$$Unicode", "$$)", "\u2581{"], ["\u2581StringUtil.", "$$Put", "$$Unicode", "$$LE", "$$(", "$$field_3_", "$$string", "$$,", "\u2581out1)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581StringUtil.", "$$Put", "$$Comp", "$$ressed", "$$Unicode", "$$(", "$$field_3_", "$$string", "$$,", "\u2581out1)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581write", "$$(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeByte(", "$$sid", "\u2581+", "\u2581get", "$$Ptg", "$$Class", "$$())", "$$;"], ["\u2581out.writeByte(", "$$field_3_", "$$string", "$$.length", "$$())", "$$;"], ["\u2581out.write", "$$Byte", "$$(_", "$$is", "$$16", "$$bit", "$$Unicode", "\u2581?", "\u25810x0", "$$1", "\u2581:", "\u25810x00", "$$)", "$$;"], ["\u2581if", "\u2581(_", "$$is", "$$16", "$$bit", "$$Unicode", "$$)", "\u2581{"], ["\u2581StringUtil.", "$$put", "$$Unicode", "$$LE", "$$(", "$$field_3_", "$$string", "$$,", "\u2581out)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581StringUtil.", "$$put", "$$Comp", "$$ressed", "$$Unicode", "$$(", "$$field_3_", "$$string", "$$,", "\u2581out)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual DeleteQueueResponse DeleteQueue(string queueUrl) {\n    var request = new DeleteQueueRequest();\n    request.QueueUrl = queueUrl;\n    return DeleteQueue(request);\n}\n", "java": "public DeleteQueueResult deleteQueue(String queueUrl) {\n    return deleteQueue(new DeleteQueueRequest().withQueueUrl(queueUrl));\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Queue", "$$Response", "\u2581Delete", "$$Queue", "$$(string", "\u2581queue", "$$Url", "$$)", "\u2581{"], ["\u2581var", "\u2581request", "\u2581=", "\u2581new", "\u2581Delete", "$$Queue", "$$Request()", "$$;"], ["\u2581request", "$$.", "$$Queue", "$$Url", "\u2581=", "\u2581queue", "$$Url", "$$;"], ["\u2581return", "\u2581Delete", "$$Queue", "$$(request", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Queue", "$$Result", "\u2581delete", "$$Queue", "$$(String", "\u2581queue", "$$Url", "$$)", "\u2581{"], ["\u2581return", "\u2581delete", "$$Queue", "$$(new", "\u2581Delete", "$$Queue", "$$Request()", "$$.w", "$$ith", "$$Queue", "$$Url", "$$(", "$$qu", "$$eue", "$$Url", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetCheckEofAfterPackFooter(bool b) {\n    checkEofAfterPackFooter = b;\n}\n", "java": "public void setCheckEofAfterPackFooter(boolean b) {\n    checkEofAfterPackFooter = b;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Check", "$$E", "$$of", "$$A", "$$fter", "$$Pack", "$$Footer", "$$(bool", "\u2581b)", "\u2581{"], ["\u2581check", "$$E", "$$of", "$$A", "$$fter", "$$Pack", "$$Footer", "\u2581=", "\u2581b", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Check", "$$E", "$$of", "$$A", "$$fter", "$$Pack", "$$Footer", "$$(boolean", "\u2581b)", "\u2581{"], ["\u2581check", "$$E", "$$of", "$$A", "$$fter", "$$Pack", "$$Footer", "\u2581=", "\u2581b", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void Swap() {\n    int sBegin = beginA;\n    int sEnd = endA;\n    beginA = beginB;\n    endA = endB;\n    beginB = sBegin;\n    endB = sEnd;\n}\n", "java": "public void swap() {\n    final int sBegin = beginA;\n    final int sEnd = endA;\n    beginA = beginB;\n    endA = endB;\n    beginB = sBegin;\n    endB = sEnd;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581S", "$$w", "$$ap", "$$()", "\u2581{"], ["\u2581int", "\u2581s", "$$Be", "$$gin", "\u2581=", "\u2581be", "$$gin", "$$A", "$$;"], ["\u2581int", "\u2581s", "$$End", "\u2581=", "\u2581end", "$$A", "$$;"], ["\u2581be", "$$gin", "$$A", "\u2581=", "\u2581be", "$$gin", "$$B", "$$;"], ["\u2581end", "$$A", "\u2581=", "\u2581end", "$$B", "$$;"], ["\u2581be", "$$gin", "$$B", "\u2581=", "\u2581s", "$$Be", "$$gin", "$$;"], ["\u2581end", "$$B", "\u2581=", "\u2581s", "$$End", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581s", "$$w", "$$ap", "$$()", "\u2581{"], ["\u2581final", "\u2581int", "\u2581s", "$$Be", "$$gin", "\u2581=", "\u2581be", "$$gin", "$$A", "$$;"], ["\u2581final", "\u2581int", "\u2581s", "$$End", "\u2581=", "\u2581end", "$$A", "$$;"], ["\u2581be", "$$gin", "$$A", "\u2581=", "\u2581be", "$$gin", "$$B", "$$;"], ["\u2581end", "$$A", "\u2581=", "\u2581end", "$$B", "$$;"], ["\u2581be", "$$gin", "$$B", "\u2581=", "\u2581s", "$$Be", "$$gin", "$$;"], ["\u2581end", "$$B", "\u2581=", "\u2581s", "$$End", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int GetPackedGitWindowSize() {\n    return packedGitWindowSize;\n}\n", "java": "public int getPackedGitWindowSize() {\n    return packedGitWindowSize;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581Get", "$$Pack", "$$ed", "$$Git", "$$W", "$$indow", "$$Size()", "\u2581{"], ["\u2581return", "\u2581p", "$$acked", "$$Git", "$$W", "$$indow", "$$Size", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get", "$$Pack", "$$ed", "$$Git", "$$W", "$$indow", "$$Size()", "\u2581{"], ["\u2581return", "\u2581p", "$$acked", "$$Git", "$$W", "$$indow", "$$Size", "$$;"], ["\u2581}"]]}, {"cs": "public virtual PutMetricDataResponse PutMetricData(PutMetricDataRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = PutMetricDataRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = PutMetricDataResponseUnmarshaller.Instance;\n    return Invoke<PutMetricDataResponse>(request, options);\n}\n", "java": "public PutMetricDataResult putMetricData(PutMetricDataRequest request) {\n    request = beforeClientExecution(request);\n    return executePutMetricData(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Put", "$$Metric", "$$Data", "$$Response", "\u2581Put", "$$Metric", "$$Data", "$$(Put", "$$Metric", "$$Data", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Put", "$$Metric", "$$Data", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Put", "$$Metric", "$$Data", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Put", "$$Metric", "$$Data", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Put", "$$Metric", "$$Data", "$$Result", "\u2581put", "$$Metric", "$$Data", "$$(Put", "$$Metric", "$$Data", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executePut", "$$Metric", "$$Data", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetCelebrityRecognitionResponse GetCelebrityRecognition(GetCelebrityRecognitionRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetCelebrityRecognitionRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetCelebrityRecognitionResponseUnmarshaller.Instance;\n    return Invoke<GetCelebrityRecognitionResponse>(request, options);\n}\n", "java": "public GetCelebrityRecognitionResult getCelebrityRecognition(GetCelebrityRecognitionRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetCelebrityRecognition(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$C", "$$e", "$$le", "$$b", "$$rity", "$$Recogn", "$$ition", "$$Response", "\u2581Get", "$$C", "$$e", "$$le", "$$b", "$$rity", "$$Recogn", "$$ition", "$$(Get", "$$C", "$$e", "$$le", "$$b", "$$rity", "$$Recogn", "$$ition", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$C", "$$e", "$$le", "$$b", "$$rity", "$$Recogn", "$$ition", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$C", "$$e", "$$le", "$$b", "$$rity", "$$Recogn", "$$ition", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$C", "$$e", "$$le", "$$b", "$$rity", "$$Recogn", "$$ition", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$C", "$$e", "$$le", "$$b", "$$rity", "$$Recogn", "$$ition", "$$Result", "\u2581get", "$$C", "$$e", "$$le", "$$b", "$$rity", "$$Recogn", "$$ition", "$$(Get", "$$C", "$$e", "$$le", "$$b", "$$rity", "$$Recogn", "$$ition", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$C", "$$e", "$$le", "$$b", "$$rity", "$$Recogn", "$$ition", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public CreateQueueRequest(string queueName) {\n    _queueName = queueName;\n}\n", "java": "public CreateQueueRequest(String queueName) {\n    setQueueName(queueName);\n}\n", "cs_t": [["\u2581public", "\u2581Create", "$$Queue", "$$Request(string", "\u2581queue", "$$Name)", "\u2581{"], ["\u2581_", "$$qu", "$$eue", "$$Name", "\u2581=", "\u2581queue", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Queue", "$$Request(String", "\u2581queue", "$$Name)", "\u2581{"], ["\u2581set", "$$Queue", "$$Name(", "$$qu", "$$eue", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef): base(arearef) {\n    this.externalWorkbookNumber = externalWorkbookNumber;\n    this.firstSheetName = sheetName.SheetId.Name;\n    if (sheetName is SheetRangeIdentifier) {\n        this.lastSheetName = ((SheetRangeIdentifier)sheetName).LastSheetIdentifier.Name;\n    }\n    else {\n        this.lastSheetName = null;\n    }\n}\n", "java": "public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef) {\n    super(arearef);\n    this.externalWorkbookNumber = externalWorkbookNumber;\n    this.firstSheetName = sheetName.getSheetIdentifier().getName();\n    if (sheetName instanceof SheetRangeIdentifier) {\n        this.lastSheetName = ((SheetRangeIdentifier)sheetName).getLastSheetIdentifier().getName();\n    }\n    else {\n        this.lastSheetName = null;\n    }\n}\n", "cs_t": [["\u2581public", "\u2581A", "$$rea", "$$3D", "$$P", "$$x", "$$g", "$$(int", "\u2581ex", "$$ternal", "$$Workbook", "$$Number", "$$,", "\u2581Sheet", "$$Identifier", "\u2581sheet", "$$Name,", "\u2581A", "$$rea", "$$Reference", "\u2581a", "$$rea", "$$ref", "$$):", "\u2581base", "$$(a", "$$rea", "$$ref", "$$)", "\u2581{"], ["\u2581this.", "$$external", "$$Workbook", "$$Number", "\u2581=", "\u2581ex", "$$ternal", "$$Workbook", "$$Number", "$$;"], ["\u2581this.", "$$first", "$$SheetName", "\u2581=", "\u2581sheet", "$$Name", "$$.", "$$Sheet", "$$Id", "$$.", "$$Name", "$$;"], ["\u2581if", "\u2581(", "$$sheet", "$$Name", "\u2581is", "\u2581Sheet", "$$Range", "$$Identifier", "$$)", "\u2581{"], ["\u2581this.", "$$last", "$$SheetName", "\u2581=", "\u2581((", "$$Sheet", "$$Range", "$$Identifier", "$$)", "$$sheet", "$$Name)", "$$.", "$$Last", "$$Sheet", "$$Identi", "$$fi", "$$er.", "$$Name", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581this.", "$$last", "$$SheetName", "\u2581=", "\u2581null", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581A", "$$rea", "$$3D", "$$P", "$$x", "$$g", "$$(int", "\u2581ex", "$$ternal", "$$Workbook", "$$Number", "$$,", "\u2581Sheet", "$$Identifier", "\u2581sheet", "$$Name,", "\u2581A", "$$rea", "$$Reference", "\u2581a", "$$rea", "$$ref", "$$)", "\u2581{"], ["\u2581super(", "$$a", "$$rea", "$$ref", "$$)", "$$;"], ["\u2581this.", "$$external", "$$Workbook", "$$Number", "\u2581=", "\u2581ex", "$$ternal", "$$Workbook", "$$Number", "$$;"], ["\u2581this.", "$$first", "$$SheetName", "\u2581=", "\u2581sheet", "$$Name", "$$.get", "$$Sheet", "$$Identifier", "$$().get", "$$Name()", "$$;"], ["\u2581if", "\u2581(", "$$sheet", "$$Name", "\u2581instanceof", "\u2581Sheet", "$$Range", "$$Identifier", "$$)", "\u2581{"], ["\u2581this.", "$$last", "$$SheetName", "\u2581=", "\u2581((", "$$Sheet", "$$Range", "$$Identifier", "$$)", "$$sheet", "$$Name)", "$$.get", "$$Last", "$$Sheet", "$$Identifier", "$$().get", "$$Name()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581this.", "$$last", "$$SheetName", "\u2581=", "\u2581null", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual void SetBaseline(long clockTime) {\n    t0 = clockTime;\n    timeout = t0 + ticksAllowed;\n}\n", "java": "public void setBaseline(long clockTime) {\n    t0 = clockTime;\n    timeout = t0 + ticksAllowed;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Base", "$$line", "$$(long", "\u2581c", "$$lock", "$$Time", "$$)", "\u2581{"], ["\u2581t", "$$0", "\u2581=", "\u2581c", "$$lock", "$$Time", "$$;"], ["\u2581", "$$time", "$$out", "\u2581=", "\u2581t", "$$0", "\u2581+", "\u2581", "$$ti", "$$ck", "$$s", "$$Al", "$$low", "$$ed", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Base", "$$line", "$$(long", "\u2581c", "$$lock", "$$Time", "$$)", "\u2581{"], ["\u2581t", "$$0", "\u2581=", "\u2581c", "$$lock", "$$Time", "$$;"], ["\u2581", "$$time", "$$out", "\u2581=", "\u2581t", "$$0", "\u2581+", "\u2581", "$$ti", "$$ck", "$$s", "$$Al", "$$low", "$$ed", "$$;"], ["\u2581}"]]}, {"cs": "public virtual MoveAddressToVpcResponse MoveAddressToVpc(MoveAddressToVpcRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = MoveAddressToVpcRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = MoveAddressToVpcResponseUnmarshaller.Instance;\n    return Invoke<MoveAddressToVpcResponse>(request, options);\n}\n", "java": "public MoveAddressToVpcResult moveAddressToVpc(MoveAddressToVpcRequest request) {\n    request = beforeClientExecution(request);\n    return executeMoveAddressToVpc(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581M", "$$o", "$$ve", "$$Address", "$$To", "$$Vpc", "$$Response", "\u2581M", "$$o", "$$ve", "$$Address", "$$To", "$$Vpc", "$$(", "$$Mo", "$$ve", "$$Address", "$$To", "$$Vpc", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581M", "$$o", "$$ve", "$$Address", "$$To", "$$Vpc", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581M", "$$o", "$$ve", "$$Address", "$$To", "$$Vpc", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Mo", "$$ve", "$$Address", "$$To", "$$Vpc", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581M", "$$o", "$$ve", "$$Address", "$$To", "$$Vpc", "$$Result", "\u2581m", "$$o", "$$ve", "$$Address", "$$To", "$$Vpc", "$$(", "$$Mo", "$$ve", "$$Address", "$$To", "$$Vpc", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Mo", "$$ve", "$$Address", "$$To", "$$Vpc", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    string coll = m_collectionModel.GetName();\n    if (coll != null) {\n        return string.Format(\"LM {0} - {1}\", GetName(), coll);\n    }\n    else {\n        return string.Format(\"LM {0}\", GetName());\n    }\n}\n", "java": "public String toString() {\n    String coll = collectionModel.getName();\n    if (coll != null) {\n        return String.format(Locale.ROOT, \"LM %s - %s\", getName(), coll);\n    }\n    else {\n        return String.format(Locale.ROOT, \"LM %s\", getName());\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581string", "\u2581col", "$$l", "\u2581=", "\u2581m_", "$$col", "$$lection", "$$Model", "$$.Get", "$$Name()", "$$;"], ["\u2581if", "\u2581(c", "$$ol", "$$l", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581string", "$$.Format", "$$(\"", "$$L", "$$M", "\u2581{", "$$0", "$$}", "\u2581-", "\u2581{", "$$1", "$$}", "$$\",", "\u2581Get", "$$Name", "$$(),", "\u2581col", "$$l", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581string", "$$.Format", "$$(\"", "$$L", "$$M", "\u2581{", "$$0", "$$}", "$$\",", "\u2581Get", "$$Name", "$$())", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581String", "\u2581col", "$$l", "\u2581=", "\u2581col", "$$lection", "$$Model", "$$.get", "$$Name()", "$$;"], ["\u2581if", "\u2581(c", "$$ol", "$$l", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581String", "$$.format", "$$(", "$$Local", "$$e", "$$.", "$$RO", "$$O", "$$T", "$$,", "\u2581\"", "$$L", "$$M", "\u2581%", "$$s", "\u2581-", "\u2581%", "$$s\",", "\u2581get", "$$Name", "$$(),", "\u2581col", "$$l", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581String", "$$.format", "$$(", "$$Local", "$$e", "$$.", "$$RO", "$$O", "$$T", "$$,", "\u2581\"", "$$L", "$$M", "\u2581%", "$$s\",", "\u2581get", "$$Name", "$$())", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual DescribeLagsResponse DescribeLags(DescribeLagsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeLagsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeLagsResponseUnmarshaller.Instance;\n    return Invoke<DescribeLagsResponse>(request, options);\n}\n", "java": "public DescribeLagsResult describeLags(DescribeLagsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeLags(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$L", "$$ag", "$$sResponse", "\u2581Describe", "$$L", "$$ag", "$$s(Describe", "$$L", "$$ag", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$L", "$$ag", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$L", "$$ag", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$L", "$$ag", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$L", "$$ag", "$$sResult", "\u2581describe", "$$L", "$$ag", "$$s(Describe", "$$L", "$$ag", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$L", "$$ag", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public AreaEval Offset(int relFirstRowIx, int relLastRowIx,int relFirstColIx, int relLastColIx) {\n    if (_refEval == null) {\n        return _areaEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);\n    }\n    return _refEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);\n}\n", "java": "public AreaEval offset(int relFirstRowIx, int relLastRowIx,int relFirstColIx, int relLastColIx) {\n    if (_refEval == null) {\n        return _areaEval.offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);\n    }\n    return _refEval.offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);\n}\n", "cs_t": [["\u2581public", "\u2581A", "$$rea", "$$Eval", "\u2581", "$$Offset", "$$(int", "\u2581re", "$$l", "$$FirstRow", "$$Ix,", "\u2581int", "\u2581re", "$$l", "$$LastRow", "$$Ix,", "$$int", "\u2581re", "$$l", "$$First", "$$Col", "$$Ix,", "\u2581int", "\u2581re", "$$l", "$$Last", "$$Col", "$$Ix", "$$)", "\u2581{"], ["\u2581if", "\u2581(_", "$$ref", "$$Eval", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581_", "$$a", "$$rea", "$$Eval.", "$$Offset", "$$(re", "$$l", "$$FirstRow", "$$Ix,", "\u2581re", "$$l", "$$LastRow", "$$Ix,", "\u2581re", "$$l", "$$First", "$$Col", "$$Ix,", "\u2581re", "$$l", "$$Last", "$$Col", "$$Ix", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581_", "$$ref", "$$Eval.", "$$Offset", "$$(re", "$$l", "$$FirstRow", "$$Ix,", "\u2581re", "$$l", "$$LastRow", "$$Ix,", "\u2581re", "$$l", "$$First", "$$Col", "$$Ix,", "\u2581re", "$$l", "$$Last", "$$Col", "$$Ix", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581A", "$$rea", "$$Eval", "\u2581offset", "$$(int", "\u2581re", "$$l", "$$FirstRow", "$$Ix,", "\u2581int", "\u2581re", "$$l", "$$LastRow", "$$Ix,", "$$int", "\u2581re", "$$l", "$$First", "$$Col", "$$Ix,", "\u2581int", "\u2581re", "$$l", "$$Last", "$$Col", "$$Ix", "$$)", "\u2581{"], ["\u2581if", "\u2581(_", "$$ref", "$$Eval", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581_", "$$a", "$$rea", "$$Eval.", "$$offset", "$$(re", "$$l", "$$FirstRow", "$$Ix,", "\u2581re", "$$l", "$$LastRow", "$$Ix,", "\u2581re", "$$l", "$$First", "$$Col", "$$Ix,", "\u2581re", "$$l", "$$Last", "$$Col", "$$Ix", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581_", "$$ref", "$$Eval.", "$$offset", "$$(re", "$$l", "$$FirstRow", "$$Ix,", "\u2581re", "$$l", "$$LastRow", "$$Ix,", "\u2581re", "$$l", "$$First", "$$Col", "$$Ix,", "\u2581re", "$$l", "$$Last", "$$Col", "$$Ix", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.ShortBuffer put(short[] src, int srcOffset, int shortCount) {\n    byteBuffer.limit(_limit * libcore.io.SizeOf.SHORT);\n    byteBuffer.position(_position * libcore.io.SizeOf.SHORT);\n    if (byteBuffer is java.nio.ReadWriteDirectByteBuffer) {\n        ((java.nio.ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, shortCount);\n    }\n    else {\n        ((java.nio.ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, shortCount);\n    }\n    this._position += shortCount;\n    return this;\n}\n", "java": "public ShortBuffer put(short[] src, int srcOffset, int shortCount) {\n    byteBuffer.limit(limit * SizeOf.SHORT);\n    byteBuffer.position(position * SizeOf.SHORT);\n    if (byteBuffer instanceof ReadWriteDirectByteBuffer) {\n        ((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, shortCount);\n    }\n    else {\n        ((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, shortCount);\n    }\n    this.position += shortCount;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$Short", "$$Buffer", "\u2581put", "$$(short", "$$[]", "\u2581src", "$$,", "\u2581int", "\u2581srcOffset,", "\u2581int", "\u2581short", "$$Count)", "\u2581{"], ["\u2581byteBuffer.", "$$limit", "$$(_", "$$limit", "\u2581*", "\u2581libcore.io.SizeOf", "$$.S", "$$H", "$$OR", "$$T", "$$)", "$$;"], ["\u2581byteBuffer.", "$$position", "$$(_", "$$position", "\u2581*", "\u2581libcore.io.SizeOf", "$$.S", "$$H", "$$OR", "$$T", "$$)", "$$;"], ["\u2581if", "\u2581(byte", "$$Buffer", "\u2581is", "\u2581java.nio.Read", "$$Write", "$$Direct", "$$ByteBuffer", "$$)", "\u2581{"], ["\u2581((", "$$java.", "$$nio.", "$$Read", "$$Write", "$$Direct", "$$ByteBuffer", "$$)", "$$byte", "$$Buffer", "$$).", "$$put", "$$(src", "$$,", "\u2581srcOffset,", "\u2581short", "$$Count)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581((", "$$java.", "$$nio.", "$$Read", "$$Write", "$$He", "$$ap", "$$ByteBuffer", "$$)", "$$byte", "$$Buffer", "$$).", "$$put", "$$(src", "$$,", "\u2581srcOffset,", "\u2581short", "$$Count)", "$$;"], ["\u2581}"], ["\u2581this._", "$$position", "\u2581+=", "\u2581short", "$$Count", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Sh", "$$ort", "$$Buffer", "\u2581put", "$$(short", "$$[]", "\u2581src", "$$,", "\u2581int", "\u2581srcOffset,", "\u2581int", "\u2581short", "$$Count)", "\u2581{"], ["\u2581byteBuffer.", "$$limit", "$$(", "$$limit", "\u2581*", "\u2581SizeOf", "$$.S", "$$H", "$$OR", "$$T", "$$)", "$$;"], ["\u2581byteBuffer.", "$$position", "$$(", "$$position", "\u2581*", "\u2581SizeOf", "$$.S", "$$H", "$$OR", "$$T", "$$)", "$$;"], ["\u2581if", "\u2581(byte", "$$Buffer", "\u2581instanceof", "\u2581Read", "$$Write", "$$Direct", "$$ByteBuffer", "$$)", "\u2581{"], ["\u2581((", "$$Read", "$$Write", "$$Direct", "$$ByteBuffer", "$$)", "\u2581byteBuffer", "$$).", "$$put", "$$(src", "$$,", "\u2581srcOffset,", "\u2581short", "$$Count)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581((", "$$Read", "$$Write", "$$He", "$$ap", "$$ByteBuffer", "$$)", "\u2581byteBuffer", "$$).", "$$put", "$$(src", "$$,", "\u2581srcOffset,", "\u2581short", "$$Count)", "$$;"], ["\u2581}"], ["\u2581this.", "$$position", "\u2581+=", "\u2581short", "$$Count", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public override void Initialize(String cat) {\n    this._cat = cat;\n}\n", "java": "public void initialize(final String cat) {\n    this._cat=cat;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581In", "$$itial", "$$ize", "$$(String", "\u2581c", "$$at", "$$)", "\u2581{"], ["\u2581this._", "$$c", "$$at", "\u2581=", "\u2581c", "$$at", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581in", "$$itial", "$$ize", "$$(f", "$$inal", "\u2581String", "\u2581c", "$$at", "$$)", "\u2581{"], ["\u2581this._", "$$c", "$$at", "$$=", "$$c", "$$at", "$$;"], ["\u2581}"]]}, {"cs": "public override void write(int oneByte) {\n    throw new System.NotImplementedException();\n}\n", "java": "public void write(int oneByte) throws IOException {\n    out.write(oneByte);\n    written++;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581write", "$$(int", "\u2581", "$$one", "$$Byte", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.NotImplemented", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581write", "$$(int", "\u2581", "$$one", "$$Byte", "$$)", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581out.write", "$$(", "$$one", "$$Byte", "$$)", "$$;"], ["\u2581w", "$$ritten", "$$++", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeImportImageTasksResponse DescribeImportImageTasks(DescribeImportImageTasksRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeImportImageTasksRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeImportImageTasksResponseUnmarshaller.Instance;\n    return Invoke<DescribeImportImageTasksResponse>(request, options);\n}\n", "java": "public DescribeImportImageTasksResult describeImportImageTasks(DescribeImportImageTasksRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeImportImageTasks(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Import", "$$Image", "$$Task", "$$sResponse", "\u2581Describe", "$$Import", "$$Image", "$$Task", "$$s(Describe", "$$Import", "$$Image", "$$Task", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Import", "$$Image", "$$Task", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Import", "$$Image", "$$Task", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Import", "$$Image", "$$Task", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Import", "$$Image", "$$Task", "$$sResult", "\u2581describe", "$$Import", "$$Image", "$$Task", "$$s(Describe", "$$Import", "$$Image", "$$Task", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Import", "$$Image", "$$Task", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ColumnInfoRecord(RecordInputStream in1) {\n    _first_col = in1.ReadUShort();\n    _last_col = in1.ReadUShort();\n    _col_width = in1.ReadUShort();\n    _xf_index = in1.ReadUShort();\n    _options = in1.ReadUShort();\n    switch (in1.Remaining) {\n    case 2:\n        field_6_reserved = in1.ReadUShort();\n        break;\n    case 1:\n        field_6_reserved = in1.ReadByte();\n        break;\n    case 0:\n        field_6_reserved = 0;\n        break;\n    default:\n        throw new Exception(\"Unusual record size remaining=(\" + in1.Remaining + \")\");\n    }\n}\n", "java": "public ColumnInfoRecord(RecordInputStream in) {\n    _firstCol = in.readUShort();\n    _lastCol  = in.readUShort();\n    _colWidth = in.readUShort();\n    _xfIndex  = in.readUShort();\n    _options   = in.readUShort();\n    switch(in.remaining()) {\n    case 2:\n        field_6_reserved  = in.readUShort();\n        break;\n    case 1:\n        field_6_reserved  = in.readByte();\n        break;\n    case 0:\n        field_6_reserved  = 0;\n        break;\n    default:\n        throw new RuntimeException(\"Unusual record size remaining=(\" + in.remaining() + \")\");\n    }\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Column", "$$Info", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581_first", "$$_col", "\u2581=", "\u2581in1.Read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581_last", "$$_col", "\u2581=", "\u2581in1.Read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581_", "$$col", "$$_", "$$w", "$$idth", "\u2581=", "\u2581in1.Read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581_", "$$x", "$$f", "$$_index", "\u2581=", "\u2581in1.Read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581_", "$$options", "\u2581=", "\u2581in1.Read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581switch", "\u2581(in", "$$1.", "$$Remaining", "$$)", "\u2581{"], ["\u2581case", "\u25812", "$$:"], ["\u2581field_6_", "$$reserved", "\u2581=", "\u2581in1.Read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u25811", "$$:"], ["\u2581field_6_", "$$reserved", "\u2581=", "\u2581in1.Read", "$$Byte", "$$()", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u25810", "$$:"], ["\u2581field_6_", "$$reserved", "\u2581=", "\u25810;"], ["\u2581break", "$$;"], ["\u2581default", "$$:"], ["\u2581throw", "\u2581new", "\u2581Exception(\"", "$$Un", "$$us", "$$u", "$$al", "\u2581record", "\u2581size", "\u2581remaining", "$$=", "$$(\"", "\u2581+", "\u2581in", "$$1.", "$$Remaining", "\u2581+", "\u2581\")", "$$\")", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Column", "$$Info", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581_first", "$$Col", "\u2581=", "\u2581in.read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581_last", "$$Col", "\u2581", "\u2581=", "\u2581in.read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581_", "$$col", "$$Width", "\u2581=", "\u2581in.read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581_", "$$x", "$$f", "$$Index", "\u2581", "\u2581=", "\u2581in.read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581_", "$$options", "\u2581", "\u2581", "\u2581=", "\u2581in.read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581switch", "$$(in", "$$.remaining", "$$())", "\u2581{"], ["\u2581case", "\u25812", "$$:"], ["\u2581field_6_", "$$reserved", "\u2581", "\u2581=", "\u2581in.read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u25811", "$$:"], ["\u2581field_6_", "$$reserved", "\u2581", "\u2581=", "\u2581in.read", "$$Byte", "$$()", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u25810", "$$:"], ["\u2581field_6_", "$$reserved", "\u2581", "\u2581=", "\u25810;"], ["\u2581break", "$$;"], ["\u2581default", "$$:"], ["\u2581throw", "\u2581new", "\u2581RuntimeException(\"", "$$Un", "$$us", "$$u", "$$al", "\u2581record", "\u2581size", "\u2581remaining", "$$=", "$$(\"", "\u2581+", "\u2581in", "$$.remaining", "$$()", "\u2581+", "\u2581\")", "$$\")", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public Status(IndexDiff diff) : base() {\n    this.diff = diff;\n    clean = diff.GetAdded().IsEmpty() && diff.GetChanged().IsEmpty() && diff.GetRemoved().IsEmpty() && diff.GetMissing().IsEmpty() && diff.GetModified().IsEmpty() && diff.GetUntracked().IsEmpty() && diff.GetConflicting().IsEmpty();\n}\n", "java": "public Status(IndexDiff diff) {\n    super();\n    this.diff = diff;\n    hasUncommittedChanges = !diff.getAdded().isEmpty() || !diff.getChanged().isEmpty() || !diff.getRemoved().isEmpty() || !diff.getMissing().isEmpty() || !diff.getModified().isEmpty() || !diff.getConflicting().isEmpty();\n    clean = !hasUncommittedChanges && diff.getUntracked().isEmpty();\n}\n", "cs_t": [["\u2581public", "\u2581St", "$$atu", "$$s(", "$$Index", "$$D", "$$iff", "\u2581d", "$$iff", "$$)", "\u2581:", "\u2581base", "$$()", "\u2581{"], ["\u2581this.d", "$$iff", "\u2581=", "\u2581d", "$$iff", "$$;"], ["\u2581c", "$$le", "$$an", "\u2581=", "\u2581d", "$$iff", "$$.Get", "$$Ad", "$$ded", "$$().", "$$Is", "$$Empty", "$$()", "\u2581&&", "\u2581d", "$$iff", "$$.Get", "$$Changed", "$$().", "$$Is", "$$Empty", "$$()", "\u2581&&", "\u2581d", "$$iff", "$$.Get", "$$Re", "$$mo", "$$ved", "$$().", "$$Is", "$$Empty", "$$()", "\u2581&&", "\u2581d", "$$iff", "$$.Get", "$$M", "$$issing", "$$().", "$$Is", "$$Empty", "$$()", "\u2581&&", "\u2581d", "$$iff", "$$.Get", "$$Mod", "$$ified", "$$().", "$$Is", "$$Empty", "$$()", "\u2581&&", "\u2581d", "$$iff", "$$.Get", "$$Un", "$$tra", "$$ck", "$$ed", "$$().", "$$Is", "$$Empty", "$$()", "\u2581&&", "\u2581d", "$$iff", "$$.Get", "$$Con", "$$f", "$$lic", "$$ting", "$$().", "$$Is", "$$Empty", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581St", "$$atu", "$$s(", "$$Index", "$$D", "$$iff", "\u2581d", "$$iff", "$$)", "\u2581{"], ["\u2581super", "$$()", "$$;"], ["\u2581this.d", "$$iff", "\u2581=", "\u2581d", "$$iff", "$$;"], ["\u2581has", "$$Un", "$$com", "$$mit", "$$ted", "$$Ch", "$$anges", "\u2581=", "\u2581!", "$$d", "$$iff", "$$.get", "$$Ad", "$$ded", "$$().", "$$isEmpty", "$$()", "\u2581||", "\u2581!", "$$d", "$$iff", "$$.get", "$$Changed", "$$().", "$$isEmpty", "$$()", "\u2581||", "\u2581!", "$$d", "$$iff", "$$.get", "$$Re", "$$mo", "$$ved", "$$().", "$$isEmpty", "$$()", "\u2581||", "\u2581!", "$$d", "$$iff", "$$.get", "$$M", "$$issing", "$$().", "$$isEmpty", "$$()", "\u2581||", "\u2581!", "$$d", "$$iff", "$$.get", "$$Mod", "$$ified", "$$().", "$$isEmpty", "$$()", "\u2581||", "\u2581!", "$$d", "$$iff", "$$.get", "$$Con", "$$f", "$$lic", "$$ting", "$$().", "$$isEmpty", "$$()", "$$;"], ["\u2581c", "$$le", "$$an", "\u2581=", "\u2581!", "$$has", "$$Un", "$$com", "$$mit", "$$ted", "$$Ch", "$$anges", "\u2581&&", "\u2581d", "$$iff", "$$.get", "$$Un", "$$tra", "$$ck", "$$ed", "$$().", "$$isEmpty", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateExperimentResponse CreateExperiment(CreateExperimentRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateExperimentRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateExperimentResponseUnmarshaller.Instance;\n    return Invoke<CreateExperimentResponse>(request, options);\n}\n", "java": "public CreateExperimentResult createExperiment(CreateExperimentRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateExperiment(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Ex", "$$per", "$$i", "$$ment", "$$Response", "\u2581Create", "$$Ex", "$$per", "$$i", "$$ment", "$$(Create", "$$Ex", "$$per", "$$i", "$$ment", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Ex", "$$per", "$$i", "$$ment", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Ex", "$$per", "$$i", "$$ment", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Ex", "$$per", "$$i", "$$ment", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Ex", "$$per", "$$i", "$$ment", "$$Result", "\u2581create", "$$Ex", "$$per", "$$i", "$$ment", "$$(Create", "$$Ex", "$$per", "$$i", "$$ment", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Ex", "$$per", "$$i", "$$ment", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override Object Clone() {\n    return this;\n}\n", "java": "public UnknownRecord clone() {\n    return copy();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581Object", "\u2581Clone()", "\u2581{"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Unknown", "$$Record", "\u2581clone()", "\u2581{"], ["\u2581return", "\u2581copy", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.FloatBuffer slice() {\n    byteBuffer.limit(_limit * libcore.io.SizeOf.FLOAT);\n    byteBuffer.position(_position * libcore.io.SizeOf.FLOAT);\n    java.nio.ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());\n    java.nio.FloatBuffer result = new java.nio.FloatToByteBufferAdapter(bb);\n    byteBuffer.clear();\n    return result;\n}\n", "java": "public FloatBuffer slice() {\n    byteBuffer.limit(limit * SizeOf.FLOAT);\n    byteBuffer.position(position * SizeOf.FLOAT);\n    ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());\n    FloatBuffer result = new FloatToByteBufferAdapter(bb);\n    byteBuffer.clear();\n    return result;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$Float", "$$Buffer", "\u2581slice", "$$()", "\u2581{"], ["\u2581byteBuffer.", "$$limit", "$$(_", "$$limit", "\u2581*", "\u2581libcore.io.SizeOf", "$$.", "$$F", "$$LO", "$$AT", "$$)", "$$;"], ["\u2581byteBuffer.", "$$position", "$$(_", "$$position", "\u2581*", "\u2581libcore.io.SizeOf", "$$.", "$$F", "$$LO", "$$AT", "$$)", "$$;"], ["\u2581java.nio.ByteBuffer", "\u2581b", "$$b", "\u2581=", "\u2581byteBuffer.", "$$s", "$$lice", "$$().", "$$order", "$$(byte", "$$Buffer.", "$$order", "$$())", "$$;"], ["\u2581java.nio.", "$$Float", "$$Buffer", "\u2581result", "\u2581=", "\u2581new", "\u2581java.nio.", "$$Float", "$$To", "$$ByteBuffer", "$$Adapter", "$$(b", "$$b", "$$)", "$$;"], ["\u2581byteBuffer", "$$.c", "$$lear()", "$$;"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581F", "$$loat", "$$Buffer", "\u2581slice", "$$()", "\u2581{"], ["\u2581byteBuffer.", "$$limit", "$$(", "$$limit", "\u2581*", "\u2581SizeOf", "$$.", "$$F", "$$LO", "$$AT", "$$)", "$$;"], ["\u2581byteBuffer.", "$$position", "$$(", "$$position", "\u2581*", "\u2581SizeOf", "$$.", "$$F", "$$LO", "$$AT", "$$)", "$$;"], ["\u2581ByteBuffer", "\u2581b", "$$b", "\u2581=", "\u2581byteBuffer.", "$$s", "$$lice", "$$().", "$$order", "$$(byte", "$$Buffer.", "$$order", "$$())", "$$;"], ["\u2581F", "$$loat", "$$Buffer", "\u2581result", "\u2581=", "\u2581new", "\u2581F", "$$loat", "$$To", "$$ByteBuffer", "$$Adapter", "$$(b", "$$b", "$$)", "$$;"], ["\u2581byteBuffer", "$$.c", "$$lear()", "$$;"], ["\u2581return", "\u2581result", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeSnapshotSchedulesResponse DescribeSnapshotSchedules(DescribeSnapshotSchedulesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeSnapshotSchedulesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeSnapshotSchedulesResponseUnmarshaller.Instance;\n    return Invoke<DescribeSnapshotSchedulesResponse>(request, options);\n}\n", "java": "public DescribeSnapshotSchedulesResult describeSnapshotSchedules(DescribeSnapshotSchedulesRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeSnapshotSchedules(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Snapshot", "$$Sched", "$$ules", "$$Response", "\u2581Describe", "$$Snapshot", "$$Sched", "$$ules", "$$(Describe", "$$Snapshot", "$$Sched", "$$ules", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Snapshot", "$$Sched", "$$ules", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Snapshot", "$$Sched", "$$ules", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Snapshot", "$$Sched", "$$ules", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Snapshot", "$$Sched", "$$ules", "$$Result", "\u2581describe", "$$Snapshot", "$$Sched", "$$ules", "$$(Describe", "$$Snapshot", "$$Sched", "$$ules", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Snapshot", "$$Sched", "$$ules", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ListImagesResponse ListImages(ListImagesRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = ListImagesRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = ListImagesResponseUnmarshaller.Instance;\n    return Invoke<ListImagesResponse>(request, options);\n}\n", "java": "public ListImagesResult listImages(ListImagesRequest request) {\n    request = beforeClientExecution(request);\n    return executeListImages(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581List", "$$Ima", "$$ges", "$$Response", "\u2581List", "$$Ima", "$$ges", "$$(List", "$$Ima", "$$ges", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581List", "$$Ima", "$$ges", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581List", "$$Ima", "$$ges", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<List", "$$Ima", "$$ges", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Ima", "$$ges", "$$Result", "\u2581list", "$$Ima", "$$ges", "$$(List", "$$Ima", "$$ges", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeList", "$$Ima", "$$ges", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public Diff(int ins, int del, int rep, int noop) {\n    INSERT = ins;\n    DELETE = del;\n    REPLACE = rep;\n    NOOP = noop;\n}\n", "java": "public Diff(int ins, int del, int rep, int noop) {\n    INSERT = ins;\n    DELETE = del;\n    REPLACE = rep;\n    NOOP = noop;\n}\n", "cs_t": [["\u2581public", "\u2581D", "$$iff", "$$(int", "\u2581in", "$$s,", "\u2581int", "\u2581d", "$$el", "$$,", "\u2581int", "\u2581re", "$$p", "$$,", "\u2581int", "\u2581n", "$$o", "$$op", "$$)", "\u2581{"], ["\u2581I", "$$N", "$$S", "$$ER", "$$T", "\u2581=", "\u2581in", "$$s;"], ["\u2581DE", "$$LE", "$$TE", "\u2581=", "\u2581d", "$$el", "$$;"], ["\u2581R", "$$E", "$$P", "$$LA", "$$CE", "\u2581=", "\u2581re", "$$p", "$$;"], ["\u2581N", "$$O", "$$O", "$$P", "\u2581=", "\u2581n", "$$o", "$$op", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581D", "$$iff", "$$(int", "\u2581in", "$$s,", "\u2581int", "\u2581d", "$$el", "$$,", "\u2581int", "\u2581re", "$$p", "$$,", "\u2581int", "\u2581n", "$$o", "$$op", "$$)", "\u2581{"], ["\u2581I", "$$N", "$$S", "$$ER", "$$T", "\u2581=", "\u2581in", "$$s;"], ["\u2581DE", "$$LE", "$$TE", "\u2581=", "\u2581d", "$$el", "$$;"], ["\u2581R", "$$E", "$$P", "$$LA", "$$CE", "\u2581=", "\u2581re", "$$p", "$$;"], ["\u2581N", "$$O", "$$O", "$$P", "\u2581=", "\u2581n", "$$o", "$$op", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToFormulaString(String[] operands) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(operands[0]);\n    buffer.Append(\",\");\n    buffer.Append(operands[1]);\n    return buffer.ToString();\n}\n", "java": "public String toFormulaString(String[] operands) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(operands[ 0 ]);\n    buffer.append(\",\");\n    buffer.append(operands[ 1 ]);\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581To", "$$Formula", "$$String(String", "$$[]", "\u2581operand", "$$s)", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(", "$$operand", "$$s[0]", "$$)", "$$;"], ["\u2581buffer.Append(\"", "$$,", "$$\")", "$$;"], ["\u2581buffer.Append(", "$$operand", "$$s[", "$$1", "$$]", "$$)", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581to", "$$Formula", "$$String(String", "$$[]", "\u2581operand", "$$s)", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(", "$$operand", "$$s[", "\u25810", "\u2581", "$$]", "$$)", "$$;"], ["\u2581buffer.append(\"", "$$,", "$$\")", "$$;"], ["\u2581buffer.append(", "$$operand", "$$s[", "\u25811", "\u2581", "$$]", "$$)", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public static void SetupEnvironment(String[] workbookNames, ForkedEvaluator[] Evaluators) {\n    WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[Evaluators.Length];\n    for (int i = 0; i < wbEvals.Length; i++) {\n        wbEvals[i] = Evaluators[i]._evaluator;\n    }\n    CollaboratingWorkbooksEnvironment.Setup(workbookNames, wbEvals);\n}\n", "java": "public static void setupEnvironment(String[] workbookNames, ForkedEvaluator[] evaluators) {\n    WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[evaluators.length];\n    for (int i = 0; i < wbEvals.length; i++) {\n        wbEvals[i] = evaluators[i]._evaluator;\n    }\n    CollaboratingWorkbooksEnvironment.setup(workbookNames, wbEvals);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581Set", "$$up", "$$Environment", "$$(String", "$$[]", "\u2581work", "$$book", "$$Names", "$$,", "\u2581F", "$$ork", "$$ed", "$$Evaluator", "$$[]", "\u2581", "$$Evaluator", "$$s)", "\u2581{"], ["\u2581", "$$Workbook", "$$Evaluator", "$$[]", "\u2581w", "$$b", "$$Eval", "$$s", "\u2581=", "\u2581new", "\u2581", "$$Workbook", "$$Evaluator", "$$[", "$$Evaluator", "$$s.Length", "$$]", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581w", "$$b", "$$Eval", "$$s.Length;", "\u2581i++)", "\u2581{"], ["\u2581w", "$$b", "$$Eval", "$$s[i]", "\u2581=", "\u2581", "$$Evaluator", "$$s[i]", "$$._", "$$e", "$$valu", "$$ator", "$$;"], ["\u2581}"], ["\u2581", "$$Col", "$$l", "$$ab", "$$or", "$$at", "$$ing", "$$Workbook", "$$s", "$$Environment", "$$.Set", "$$up", "$$(", "$$workbook", "$$Names", "$$,", "\u2581w", "$$b", "$$Eval", "$$s)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581void", "\u2581set", "$$up", "$$Environment", "$$(String", "$$[]", "\u2581work", "$$book", "$$Names", "$$,", "\u2581F", "$$ork", "$$ed", "$$Evaluator", "$$[]", "\u2581e", "$$valu", "$$ator", "$$s)", "\u2581{"], ["\u2581", "$$Workbook", "$$Evaluator", "$$[]", "\u2581w", "$$b", "$$Eval", "$$s", "\u2581=", "\u2581new", "\u2581", "$$Workbook", "$$Evaluator", "$$[", "$$e", "$$valu", "$$ator", "$$s.length", "$$]", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581w", "$$b", "$$Eval", "$$s.length;", "\u2581i++)", "\u2581{"], ["\u2581w", "$$b", "$$Eval", "$$s[i]", "\u2581=", "\u2581e", "$$valu", "$$ator", "$$s[i]", "$$._", "$$e", "$$valu", "$$ator", "$$;"], ["\u2581}"], ["\u2581", "$$Col", "$$l", "$$ab", "$$or", "$$at", "$$ing", "$$Workbook", "$$s", "$$Environment", "$$.set", "$$up", "$$(", "$$workbook", "$$Names", "$$,", "\u2581w", "$$b", "$$Eval", "$$s)", "$$;"], ["\u2581}"]]}, {"cs": "public ListPhotoTagsRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"ListPhotoTags\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public ListPhotoTagsRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"ListPhotoTags\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581List", "$$Photo", "$$Tag", "$$sRequest", "$$():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$List", "$$Photo", "$$Tag", "$$s\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Photo", "$$Tag", "$$sRequest", "$$()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$List", "$$Photo", "$$Tag", "$$s\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public RandomSamplingFacetsCollector(int sampleSize, long seed): base(false) {\n    this.sampleSize = sampleSize;\n    this.random = new XORShift64Random(seed);\n    this.sampledDocs = null;\n}\n", "java": "public RandomSamplingFacetsCollector(int sampleSize, long seed) {\n    super(false);\n    this.sampleSize = sampleSize;\n    this.random = new XORShift64Random(seed);\n    this.sampledDocs = null;\n}\n", "cs_t": [["\u2581public", "\u2581R", "$$and", "$$om", "$$S", "$$am", "$$p", "$$l", "$$ing", "$$Facet", "$$s", "$$Col", "$$lector", "$$(int", "\u2581s", "$$am", "$$p", "$$le", "$$Size,", "\u2581long", "\u2581se", "$$ed", "$$):", "\u2581base", "$$(f", "$$alse", "$$)", "\u2581{"], ["\u2581this.", "$$s", "$$am", "$$p", "$$le", "$$Size", "\u2581=", "\u2581s", "$$am", "$$p", "$$le", "$$Size", "$$;"], ["\u2581this.", "$$r", "$$and", "$$om", "\u2581=", "\u2581new", "\u2581", "$$X", "$$OR", "$$Sh", "$$ift", "$$64", "$$R", "$$and", "$$om", "$$(", "$$se", "$$ed", "$$)", "$$;"], ["\u2581this.", "$$s", "$$am", "$$p", "$$led", "$$Docs", "\u2581=", "\u2581null", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581R", "$$and", "$$om", "$$S", "$$am", "$$p", "$$l", "$$ing", "$$Facet", "$$s", "$$Col", "$$lector", "$$(int", "\u2581s", "$$am", "$$p", "$$le", "$$Size,", "\u2581long", "\u2581se", "$$ed", "$$)", "\u2581{"], ["\u2581super(", "$$f", "$$alse", "$$)", "$$;"], ["\u2581this.", "$$s", "$$am", "$$p", "$$le", "$$Size", "\u2581=", "\u2581s", "$$am", "$$p", "$$le", "$$Size", "$$;"], ["\u2581this.", "$$r", "$$and", "$$om", "\u2581=", "\u2581new", "\u2581", "$$X", "$$OR", "$$Sh", "$$ift", "$$64", "$$R", "$$and", "$$om", "$$(", "$$se", "$$ed", "$$)", "$$;"], ["\u2581this.", "$$s", "$$am", "$$p", "$$led", "$$Docs", "\u2581=", "\u2581null", "$$;"], ["\u2581}"]]}, {"cs": "public virtual AllocateStaticIpResponse AllocateStaticIp(AllocateStaticIpRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = AllocateStaticIpRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = AllocateStaticIpResponseUnmarshaller.Instance;\n    return Invoke<AllocateStaticIpResponse>(request, options);\n}\n", "java": "public AllocateStaticIpResult allocateStaticIp(AllocateStaticIpRequest request) {\n    request = beforeClientExecution(request);\n    return executeAllocateStaticIp(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581A", "$$l", "$$locate", "$$St", "$$atic", "$$Ip", "$$Response", "\u2581A", "$$l", "$$locate", "$$St", "$$atic", "$$Ip", "$$(", "$$Al", "$$locate", "$$St", "$$atic", "$$Ip", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581A", "$$l", "$$locate", "$$St", "$$atic", "$$Ip", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581A", "$$l", "$$locate", "$$St", "$$atic", "$$Ip", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Al", "$$locate", "$$St", "$$atic", "$$Ip", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581A", "$$l", "$$locate", "$$St", "$$atic", "$$Ip", "$$Result", "\u2581all", "$$oc", "$$ate", "$$St", "$$atic", "$$Ip", "$$(", "$$Al", "$$locate", "$$St", "$$atic", "$$Ip", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Al", "$$locate", "$$St", "$$atic", "$$Ip", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public FeatRecord(RecordInputStream in1) {\n    futureHeader = new FtrHeader(in1);\n    isf_sharedFeatureType = in1.ReadShort();\n    reserved1 = (byte)in1.ReadByte();\n    reserved2 = in1.ReadInt();\n    int cref = in1.ReadUShort();\n    cbFeatData = in1.ReadInt();\n    reserved3 = in1.ReadShort();\n    cellRefs = new CellRangeAddress[cref];\n    for (int i = 0; i < cellRefs.Length; i++) {\n        cellRefs[i] = new CellRangeAddress(in1);\n    }\n    switch (isf_sharedFeatureType) {\n    case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:\n        sharedFeature = new FeatProtection(in1);\n        break;\n    case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:\n        sharedFeature = new FeatFormulaErr2(in1);\n        break;\n    case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:\n        sharedFeature = new FeatSmartTag(in1);\n        break;\n    default:\n        logger.Log(POILogger.ERROR, \"Unknown Shared Feature \" + isf_sharedFeatureType + \" found!\");\n        break;\n    }\n}\n", "java": "public FeatRecord(RecordInputStream in) {\n    futureHeader = new FtrHeader(in);\n    isf_sharedFeatureType = in.readShort();\n    reserved1 = in.readByte();\n    reserved2 = in.readInt();\n    int cref = in.readUShort();\n    cbFeatData = in.readInt();\n    reserved3 = in.readShort();\n    cellRefs = new CellRangeAddress[cref];\n    for(int i=0; i<cellRefs.length; i++) {\n        cellRefs[i] = new CellRangeAddress(in);\n    }\n    switch(isf_sharedFeatureType) {\n    case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:\n        sharedFeature = new FeatProtection(in);\n        break;\n    case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:\n        sharedFeature = new FeatFormulaErr2(in);\n        break;\n    case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:\n        sharedFeature = new FeatSmartTag(in);\n        break;\n    default:\n        logger.log( POILogger.ERROR, \"Unknown Shared Feature \" + isf_sharedFeatureType + \" found!\");\n    }\n}\n", "cs_t": [["\u2581public", "\u2581F", "$$e", "$$at", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581f", "$$u", "$$ture", "$$Header", "\u2581=", "\u2581new", "\u2581F", "$$tr", "$$Head", "$$er(", "$$in", "$$1)", "$$;"], ["\u2581is", "$$f", "$$_", "$$sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "$$Type", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581res", "$$erved", "$$1", "\u2581=", "\u2581(byte)", "$$in", "$$1.Read", "$$Byte", "$$()", "$$;"], ["\u2581res", "$$erved", "$$2", "\u2581=", "\u2581in1.Read", "$$Int", "$$()", "$$;"], ["\u2581int", "\u2581c", "$$ref", "\u2581=", "\u2581in1.Read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581c", "$$b", "$$F", "$$e", "$$at", "$$Data", "\u2581=", "\u2581in1.Read", "$$Int", "$$()", "$$;"], ["\u2581res", "$$erved", "$$3", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581cell", "$$Ref", "$$s", "\u2581=", "\u2581new", "\u2581Cell", "$$Range", "$$Addres", "$$s[", "$$c", "$$ref", "$$]", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581cell", "$$Ref", "$$s.Length;", "\u2581i++)", "\u2581{"], ["\u2581cell", "$$Ref", "$$s[i]", "\u2581=", "\u2581new", "\u2581Cell", "$$Range", "$$Addres", "$$s(", "$$in", "$$1)", "$$;"], ["\u2581}"], ["\u2581switch", "\u2581(is", "$$f", "$$_", "$$sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "$$Type", "$$)", "\u2581{"], ["\u2581case", "\u2581F", "$$e", "$$at", "$$H", "$$d", "$$r", "$$Record.", "$$SH", "$$A", "$$RE", "$$D", "$$F", "$$E", "$$AT", "$$U", "$$RE", "$$S_", "$$I", "$$S", "$$F", "$$P", "$$RO", "$$TE", "$$CTION", "$$:"], ["\u2581sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "\u2581=", "\u2581new", "\u2581F", "$$e", "$$at", "$$Pro", "$$te", "$$ction", "$$(in", "$$1)", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581F", "$$e", "$$at", "$$H", "$$d", "$$r", "$$Record.", "$$SH", "$$A", "$$RE", "$$D", "$$F", "$$E", "$$AT", "$$U", "$$RE", "$$S_", "$$I", "$$S", "$$FF", "$$EC", "$$2", "$$:"], ["\u2581sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "\u2581=", "\u2581new", "\u2581F", "$$e", "$$at", "$$Formula", "$$E", "$$rr", "$$2", "$$(in", "$$1)", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581F", "$$e", "$$at", "$$H", "$$d", "$$r", "$$Record.", "$$SH", "$$A", "$$RE", "$$D", "$$F", "$$E", "$$AT", "$$U", "$$RE", "$$S_", "$$I", "$$S", "$$FF", "$$A", "$$CT", "$$O", "$$ID", "$$:"], ["\u2581sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "\u2581=", "\u2581new", "\u2581F", "$$e", "$$at", "$$Sm", "$$art", "$$Tag", "$$(in", "$$1)", "$$;"], ["\u2581break", "$$;"], ["\u2581default", "$$:"], ["\u2581lo", "$$gg", "$$er.", "$$Log", "$$(", "$$POI", "$$Logger.", "$$ERROR", "$$,", "\u2581\"", "$$Unknown", "\u2581Sh", "$$ared", "\u2581F", "$$e", "$$atu", "$$re", "\u2581\"", "\u2581+", "\u2581is", "$$f", "$$_", "$$sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "$$Type", "\u2581+", "\u2581\"", "\u2581f", "$$ound", "$$!", "$$\")", "$$;"], ["\u2581break", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581F", "$$e", "$$at", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581f", "$$u", "$$ture", "$$Header", "\u2581=", "\u2581new", "\u2581F", "$$tr", "$$Head", "$$er(", "$$in", "$$)", "$$;"], ["\u2581is", "$$f", "$$_", "$$sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "$$Type", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581res", "$$erved", "$$1", "\u2581=", "\u2581in.read", "$$Byte", "$$()", "$$;"], ["\u2581res", "$$erved", "$$2", "\u2581=", "\u2581in.read", "$$Int", "$$()", "$$;"], ["\u2581int", "\u2581c", "$$ref", "\u2581=", "\u2581in.read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581c", "$$b", "$$F", "$$e", "$$at", "$$Data", "\u2581=", "\u2581in.read", "$$Int", "$$()", "$$;"], ["\u2581res", "$$erved", "$$3", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581cell", "$$Ref", "$$s", "\u2581=", "\u2581new", "\u2581Cell", "$$Range", "$$Addres", "$$s[", "$$c", "$$ref", "$$]", "$$;"], ["\u2581for", "$$(int", "\u2581i", "$$=0", "$$;", "\u2581i", "$$<", "$$cell", "$$Ref", "$$s.length;", "\u2581i++)", "\u2581{"], ["\u2581cell", "$$Ref", "$$s[i]", "\u2581=", "\u2581new", "\u2581Cell", "$$Range", "$$Addres", "$$s(", "$$in", "$$)", "$$;"], ["\u2581}"], ["\u2581switch", "$$(", "$$is", "$$f", "$$_", "$$sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "$$Type", "$$)", "\u2581{"], ["\u2581case", "\u2581F", "$$e", "$$at", "$$H", "$$d", "$$r", "$$Record.", "$$SH", "$$A", "$$RE", "$$D", "$$F", "$$E", "$$AT", "$$U", "$$RE", "$$S_", "$$I", "$$S", "$$F", "$$P", "$$RO", "$$TE", "$$CTION", "$$:"], ["\u2581sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "\u2581=", "\u2581new", "\u2581F", "$$e", "$$at", "$$Pro", "$$te", "$$ction", "$$(in", "$$)", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581F", "$$e", "$$at", "$$H", "$$d", "$$r", "$$Record.", "$$SH", "$$A", "$$RE", "$$D", "$$F", "$$E", "$$AT", "$$U", "$$RE", "$$S_", "$$I", "$$S", "$$FF", "$$EC", "$$2", "$$:"], ["\u2581sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "\u2581=", "\u2581new", "\u2581F", "$$e", "$$at", "$$Formula", "$$E", "$$rr", "$$2", "$$(in", "$$)", "$$;"], ["\u2581break", "$$;"], ["\u2581case", "\u2581F", "$$e", "$$at", "$$H", "$$d", "$$r", "$$Record.", "$$SH", "$$A", "$$RE", "$$D", "$$F", "$$E", "$$AT", "$$U", "$$RE", "$$S_", "$$I", "$$S", "$$FF", "$$A", "$$CT", "$$O", "$$ID", "$$:"], ["\u2581sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "\u2581=", "\u2581new", "\u2581F", "$$e", "$$at", "$$Sm", "$$art", "$$Tag", "$$(in", "$$)", "$$;"], ["\u2581break", "$$;"], ["\u2581default", "$$:"], ["\u2581lo", "$$gg", "$$er.", "$$log", "$$(", "\u2581P", "$$O", "$$I", "$$Logger.", "$$ERROR", "$$,", "\u2581\"", "$$Unknown", "\u2581Sh", "$$ared", "\u2581F", "$$e", "$$atu", "$$re", "\u2581\"", "\u2581+", "\u2581is", "$$f", "$$_", "$$sh", "$$ared", "$$F", "$$e", "$$atu", "$$re", "$$Type", "\u2581+", "\u2581\"", "\u2581f", "$$ound", "$$!", "$$\")", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public virtual RevCommit TryFastForward(RevCommit newCommit) {\n    Ref head = repo.GetRef(Constants.HEAD);\n    if (head == null || head.GetObjectId() == null) {\n        throw new RefNotFoundException(MessageFormat.Format(JGitText.Get().refNotResolved, Constants.HEAD));\n    }\n    ObjectId headId = head.GetObjectId();\n    if (headId == null) {\n        throw new RefNotFoundException(MessageFormat.Format(JGitText.Get().refNotResolved, Constants.HEAD));\n    }\n    RevCommit headCommit = walk.LookupCommit(headId);\n    if (walk.IsMergedInto(newCommit, headCommit)) {\n        return newCommit;\n    }\n    string headName;\n    if (head.IsSymbolic()) {\n        headName = head.GetTarget().GetName();\n    }\n    else {\n        headName = \"detached HEAD\";\n    }\n    return TryFastForward(headName, headCommit, newCommit);\n}\n", "java": "public RevCommit tryFastForward(RevCommit newCommit) throws IOException,GitAPIException {\n    Ref head = getHead();\n    ObjectId headId = head.getObjectId();\n    if (headId == null)throw new RefNotFoundException(MessageFormat.format(JGitText.get().refNotResolved, Constants.HEAD));\n    RevCommit headCommit = walk.lookupCommit(headId);\n    if (walk.isMergedInto(newCommit, headCommit))return newCommit;\n    String headName = getHeadName(head);\n    return tryFastForward(headName, headCommit, newCommit);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Rev", "$$Commit", "\u2581T", "$$ry", "$$F", "$$ast", "$$For", "$$w", "$$ar", "$$d(", "$$Rev", "$$Commit", "\u2581new", "$$Commit", "$$)", "\u2581{"], ["\u2581Ref", "\u2581head", "\u2581=", "\u2581repo", "$$.Get", "$$Ref", "$$(", "$$Constants.", "$$H", "$$EAD", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$head", "\u2581==", "\u2581null", "\u2581||", "\u2581head", "$$.Get", "$$ObjectId", "$$()", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Ref", "$$Not", "$$Found", "$$Exception(", "$$MessageFormat", "$$.Format", "$$(JGitText.Get", "$$()", "$$.re", "$$f", "$$Not", "$$Resol", "$$ved", "$$,", "\u2581Constants.", "$$H", "$$EAD", "$$))", "$$;"], ["\u2581}"], ["\u2581ObjectId", "\u2581head", "$$Id", "\u2581=", "\u2581head", "$$.Get", "$$ObjectId", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$head", "$$Id", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Ref", "$$Not", "$$Found", "$$Exception(", "$$MessageFormat", "$$.Format", "$$(JGitText.Get", "$$()", "$$.re", "$$f", "$$Not", "$$Resol", "$$ved", "$$,", "\u2581Constants.", "$$H", "$$EAD", "$$))", "$$;"], ["\u2581}"], ["\u2581Rev", "$$Commit", "\u2581head", "$$Commit", "\u2581=", "\u2581walk", "$$.", "$$Lookup", "$$Commit", "$$(", "$$head", "$$Id)", "$$;"], ["\u2581if", "\u2581(", "$$w", "$$alk", "$$.Is", "$$Merge", "$$d", "$$In", "$$to", "$$(new", "$$Commit", "$$,", "\u2581head", "$$Commit", "$$))", "\u2581{"], ["\u2581return", "\u2581new", "$$Commit", "$$;"], ["\u2581}"], ["\u2581string", "\u2581head", "$$Name", "$$;"], ["\u2581if", "\u2581(", "$$head", "$$.Is", "$$S", "$$ym", "$$bo", "$$lic", "$$())", "\u2581{"], ["\u2581head", "$$Name", "\u2581=", "\u2581head", "$$.Get", "$$Target", "$$()", "$$.Get", "$$Name()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581head", "$$Name", "\u2581=", "\u2581\"", "$$d", "$$et", "$$ached", "\u2581H", "$$EAD", "$$\"", "$$;"], ["\u2581}"], ["\u2581return", "\u2581T", "$$ry", "$$F", "$$ast", "$$For", "$$w", "$$ar", "$$d(", "$$head", "$$Name,", "\u2581head", "$$Commit", "$$,", "\u2581new", "$$Commit", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Rev", "$$Commit", "\u2581try", "$$F", "$$ast", "$$For", "$$w", "$$ar", "$$d(", "$$Rev", "$$Commit", "\u2581new", "$$Commit", "$$)", "\u2581throws", "\u2581IOException", "$$,", "$$Git", "$$API", "$$Exception", "\u2581{"], ["\u2581Ref", "\u2581head", "\u2581=", "\u2581get", "$$Head", "$$()", "$$;"], ["\u2581ObjectId", "\u2581head", "$$Id", "\u2581=", "\u2581head", "$$.get", "$$ObjectId", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$head", "$$Id", "\u2581==", "\u2581null)", "$$throw", "\u2581new", "\u2581Ref", "$$Not", "$$Found", "$$Exception(", "$$MessageFormat", "$$.format", "$$(JGitText", "$$.get", "$$()", "$$.re", "$$f", "$$Not", "$$Resol", "$$ved", "$$,", "\u2581Constants.", "$$H", "$$EAD", "$$))", "$$;"], ["\u2581Rev", "$$Commit", "\u2581head", "$$Commit", "\u2581=", "\u2581walk", "$$.", "$$lo", "$$okup", "$$Commit", "$$(", "$$head", "$$Id)", "$$;"], ["\u2581if", "\u2581(", "$$w", "$$alk", "$$.is", "$$Merge", "$$d", "$$In", "$$to", "$$(new", "$$Commit", "$$,", "\u2581head", "$$Commit", "$$))return", "\u2581new", "$$Commit", "$$;"], ["\u2581String", "\u2581head", "$$Name", "\u2581=", "\u2581get", "$$Head", "$$Name(", "$$head", "$$)", "$$;"], ["\u2581return", "\u2581try", "$$F", "$$ast", "$$For", "$$w", "$$ar", "$$d(", "$$head", "$$Name,", "\u2581head", "$$Commit", "$$,", "\u2581new", "$$Commit", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateSnapshotScheduleResponse CreateSnapshotSchedule(CreateSnapshotScheduleRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateSnapshotScheduleRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateSnapshotScheduleResponseUnmarshaller.Instance;\n    return Invoke<CreateSnapshotScheduleResponse>(request, options);\n}\n", "java": "public CreateSnapshotScheduleResult createSnapshotSchedule(CreateSnapshotScheduleRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateSnapshotSchedule(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Snapshot", "$$Schedule", "$$Response", "\u2581Create", "$$Snapshot", "$$Schedule", "$$(Create", "$$Snapshot", "$$Schedule", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Snapshot", "$$Schedule", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Snapshot", "$$Schedule", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Snapshot", "$$Schedule", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Snapshot", "$$Schedule", "$$Result", "\u2581create", "$$Snapshot", "$$Schedule", "$$(Create", "$$Snapshot", "$$Schedule", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Snapshot", "$$Schedule", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public Record GetNext() {\n    if (_nextIndex >= _list.Count) {\n        throw new Exception(\"Attempt to Read past end of record stream\");\n    }\n    _countRead++;\n    return (Record)_list[_nextIndex++];\n}\n", "java": "public Record getNext() {\n    if(!hasNext()) {\n        throw new RuntimeException(\"Attempt to read past end of record stream\");\n    }\n    _countRead ++;\n    return _list.get(_nextIndex++);\n}\n", "cs_t": [["\u2581public", "\u2581Record", "\u2581Get", "$$Next()", "\u2581{"], ["\u2581if", "\u2581(_", "$$next", "$$Index", "\u2581>=", "\u2581_", "$$list", "$$.", "$$Count)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Exception(\"", "$$At", "$$temp", "$$t", "\u2581to", "\u2581Read", "\u2581p", "$$ast", "\u2581end", "\u2581of", "\u2581record", "\u2581stream", "$$\")", "$$;"], ["\u2581}"], ["\u2581_", "$$count", "$$Read", "$$++", "$$;"], ["\u2581return", "\u2581(", "$$Record)", "$$_", "$$list", "$$[", "$$_", "$$next", "$$Index", "$$++]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Record", "\u2581get", "$$Next()", "\u2581{"], ["\u2581if(", "$$!", "$$has", "$$Next())", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581RuntimeException(\"", "$$At", "$$temp", "$$t", "\u2581to", "\u2581read", "\u2581p", "$$ast", "\u2581end", "\u2581of", "\u2581record", "\u2581stream", "$$\")", "$$;"], ["\u2581}"], ["\u2581_", "$$count", "$$Read", "\u2581++", "$$;"], ["\u2581return", "\u2581_", "$$list", "$$.get", "$$(_", "$$next", "$$Index", "$$++)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return RawParseUtils.Decode(buf.ToByteArray());\n}\n", "java": "public String toString() {\n    return RawParseUtils.decode(buf.toByteArray());\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581RawParseUtils.", "$$D", "$$ecode", "$$(b", "$$uf", "$$.To", "$$ByteArray", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581RawParseUtils.", "$$d", "$$ecode", "$$(b", "$$uf", "$$.to", "$$ByteArray", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public ListTablesRequest(string exclusiveStartTableName) {\n    _exclusiveStartTableName = exclusiveStartTableName;\n}\n", "java": "public ListTablesRequest(String exclusiveStartTableName) {\n    setExclusiveStartTableName(exclusiveStartTableName);\n}\n", "cs_t": [["\u2581public", "\u2581List", "$$Tables", "$$Request(string", "\u2581ex", "$$clusive", "$$Start", "$$Table", "$$Name)", "\u2581{"], ["\u2581_", "$$ex", "$$clusive", "$$Start", "$$Table", "$$Name", "\u2581=", "\u2581ex", "$$clusive", "$$Start", "$$Table", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Tables", "$$Request(String", "\u2581ex", "$$clusive", "$$Start", "$$Table", "$$Name)", "\u2581{"], ["\u2581set", "$$Ex", "$$clusive", "$$Start", "$$Table", "$$Name(", "$$ex", "$$clusive", "$$Start", "$$Table", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual EnableAlarmActionsResponse EnableAlarmActions(EnableAlarmActionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = EnableAlarmActionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = EnableAlarmActionsResponseUnmarshaller.Instance;\n    return Invoke<EnableAlarmActionsResponse>(request, options);\n}\n", "java": "public EnableAlarmActionsResult enableAlarmActions(EnableAlarmActionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeEnableAlarmActions(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Enable", "$$Alarm", "$$Action", "$$sResponse", "\u2581Enable", "$$Alarm", "$$Action", "$$s(", "$$Enable", "$$Alarm", "$$Action", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Enable", "$$Alarm", "$$Action", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Enable", "$$Alarm", "$$Action", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Enable", "$$Alarm", "$$Action", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Enable", "$$Alarm", "$$Action", "$$sResult", "\u2581en", "$$able", "$$Alarm", "$$Action", "$$s(", "$$Enable", "$$Alarm", "$$Action", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Enable", "$$Alarm", "$$Action", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public Builder(): base() {\n    lastDocID = -1;\n    wordNum = -1;\n    word = 0;\n}\n", "java": "public Builder() {\n    this(true);\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Builder", "$$():", "\u2581base", "$$()", "\u2581{"], ["\u2581last", "$$Doc", "$$ID", "\u2581=", "\u2581-1", "$$;"], ["\u2581word", "$$Num", "\u2581=", "\u2581-1", "$$;"], ["\u2581word", "\u2581=", "\u25810;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Builder", "$$()", "\u2581{"], ["\u2581this", "$$(t", "$$rue", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override bool Equals(object obj) {\n    State other = (State)obj;\n    return is_final == other.is_final && Arrays.Equals(this.labels, other.labels) && ReferenceEquals(this.states, other.states);\n}\n", "java": "public boolean equals(Object obj) {\n    final State other = (State) obj;\n    return is_final == other.is_final&& Arrays.equals(this.labels, other.labels)&& referenceEquals(this.states, other.states);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Equals(object", "\u2581obj)", "\u2581{"], ["\u2581", "$$State", "\u2581other", "\u2581=", "\u2581(", "$$State", "$$)", "$$obj", "$$;"], ["\u2581return", "\u2581is", "$$_", "$$f", "$$inal", "\u2581==", "\u2581other.", "$$is", "$$_", "$$f", "$$inal", "\u2581&&", "\u2581Arrays.", "$$E", "$$quals(", "$$this.", "$$l", "$$abel", "$$s,", "\u2581other.", "$$l", "$$abel", "$$s)", "\u2581&&", "\u2581Ref", "$$erence", "$$E", "$$quals(", "$$this.", "$$st", "$$ates", "$$,", "\u2581other.", "$$st", "$$ates", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581equals(Object", "\u2581obj)", "\u2581{"], ["\u2581final", "\u2581", "$$State", "\u2581other", "\u2581=", "\u2581(", "$$State", "$$)", "\u2581obj", "$$;"], ["\u2581return", "\u2581is", "$$_", "$$f", "$$inal", "\u2581==", "\u2581other.", "$$is", "$$_", "$$f", "$$inal", "$$&&", "\u2581Arrays.", "$$equals(", "$$this.", "$$l", "$$abel", "$$s,", "\u2581other.", "$$l", "$$abel", "$$s)", "$$&&", "\u2581ref", "$$erence", "$$E", "$$quals(", "$$this.", "$$st", "$$ates", "$$,", "\u2581other.", "$$st", "$$ates", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override TokenStream Create(TokenStream input) {\n    return new EnglishPossessiveFilter(m_luceneMatchVersion, input);\n}\n", "java": "public TokenStream create(TokenStream input) {\n    return new EnglishPossessiveFilter(input);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581TokenStream", "\u2581Create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581", "$$Eng", "$$lish", "$$Po", "$$ss", "$$es", "$$sive", "$$Filter", "$$(", "$$m_", "$$lu", "$$c", "$$ene", "$$Match", "$$Version", "$$,", "\u2581input)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581TokenStream", "\u2581create(TokenStream", "\u2581input)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581", "$$Eng", "$$lish", "$$Po", "$$ss", "$$es", "$$sive", "$$Filter(input", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void ClearFormatting() {\n    _string = CloneStringIfRequired();\n    _string.ClearFormatting();\n    AddToSSTIfRequired();\n}\n", "java": "public void clearFormatting() {\n    _string = cloneStringIfRequired();\n    _string.clearFormatting();\n    addToSSTIfRequired();\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581C", "$$lear", "$$Formatting", "$$()", "\u2581{"], ["\u2581_", "$$string", "\u2581=", "\u2581C", "$$lone", "$$String", "$$If", "$$Re", "$$qu", "$$ired", "$$()", "$$;"], ["\u2581_", "$$string", "$$.C", "$$lear", "$$Formatting", "$$()", "$$;"], ["\u2581Add", "$$To", "$$SS", "$$T", "$$If", "$$Re", "$$qu", "$$ired", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581c", "$$lear", "$$Formatting", "$$()", "\u2581{"], ["\u2581_", "$$string", "\u2581=", "\u2581clone", "$$String", "$$If", "$$Re", "$$qu", "$$ired", "$$()", "$$;"], ["\u2581_", "$$string", "$$.c", "$$lear", "$$Formatting", "$$()", "$$;"], ["\u2581add", "$$To", "$$SS", "$$T", "$$If", "$$Re", "$$qu", "$$ired", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public override int Get(int index, long[] arr, int off, int len) {\n    Debug.Assert(len > 0, \"len must be > 0 (got \" + len + \")\");\n    Debug.Assert(index >= 0 && index < valueCount);\n    len = Math.Min(len, valueCount - index);\n    Arrays.Fill(arr, off, off + len, 0);\n    return len;\n}\n", "java": "public int get(int index, long[] arr, int off, int len) {\n    assert len > 0 : \"len must be > 0 (got \" + len + \")\";\n    assert index >= 0 && index < valueCount;\n    len = Math.min(len, valueCount - index);\n    Arrays.fill(arr, off, off + len, 0);\n    return len;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int", "\u2581Get", "$$(int", "\u2581index,", "\u2581long[]", "\u2581arr", "$$,", "\u2581int", "\u2581off,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581Debug.Assert(", "$$len", "\u2581>", "\u25810,", "\u2581\"", "$$len", "\u2581must", "\u2581be", "\u2581>", "\u25810", "\u2581(", "$$g", "$$ot", "\u2581\"", "\u2581+", "\u2581len", "\u2581+", "\u2581\")", "$$\")", "$$;"], ["\u2581Debug.Assert", "$$(index", "\u2581>=", "\u25810", "\u2581&&", "\u2581index", "\u2581<", "\u2581value", "$$Count)", "$$;"], ["\u2581len", "\u2581=", "\u2581Math.", "$$Min", "$$(", "$$len", "$$,", "\u2581value", "$$Count", "\u2581-", "\u2581index)", "$$;"], ["\u2581Arrays.", "$$Fill", "$$(", "$$ar", "$$r", "$$,", "\u2581off,", "\u2581off", "\u2581+", "\u2581len", "$$,", "\u25810)", "$$;"], ["\u2581return", "\u2581len", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581get(int", "\u2581index,", "\u2581long[]", "\u2581arr", "$$,", "\u2581int", "\u2581off,", "\u2581int", "\u2581len)", "\u2581{"], ["\u2581assert", "\u2581len", "\u2581>", "\u25810", "\u2581:", "\u2581\"", "$$len", "\u2581must", "\u2581be", "\u2581>", "\u25810", "\u2581(", "$$g", "$$ot", "\u2581\"", "\u2581+", "\u2581len", "\u2581+", "\u2581\")", "$$\"", "$$;"], ["\u2581assert", "\u2581index", "\u2581>=", "\u25810", "\u2581&&", "\u2581index", "\u2581<", "\u2581value", "$$Count", "$$;"], ["\u2581len", "\u2581=", "\u2581Math.", "$$min", "$$(", "$$len", "$$,", "\u2581value", "$$Count", "\u2581-", "\u2581index)", "$$;"], ["\u2581Arrays.", "$$fill", "$$(", "$$ar", "$$r", "$$,", "\u2581off,", "\u2581off", "\u2581+", "\u2581len", "$$,", "\u25810)", "$$;"], ["\u2581return", "\u2581len", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteRouteResponseResponse DeleteRouteResponse(DeleteRouteResponseRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteRouteResponseRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteRouteResponseResponseUnmarshaller.Instance;\n    return Invoke<DeleteRouteResponseResponse>(request, options);\n}\n", "java": "public DeleteRouteResponseResult deleteRouteResponse(DeleteRouteResponseRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteRouteResponse(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$Route", "$$Response", "$$Response", "\u2581Delete", "$$Route", "$$Response", "$$(Delete", "$$Route", "$$Response", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$Route", "$$Response", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$Route", "$$Response", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$Route", "$$Response", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Route", "$$Response", "$$Result", "\u2581delete", "$$Route", "$$Response", "$$(Delete", "$$Route", "$$Response", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$Route", "$$Response", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string ToPrivateString() {\n    return Format(true, false);\n}\n", "java": "public String toPrivateString() {\n    return format(true, false);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581To", "$$Private", "$$String()", "\u2581{"], ["\u2581return", "\u2581Format", "$$(t", "$$rue", "$$,", "\u2581false", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581to", "$$Private", "$$String()", "\u2581{"], ["\u2581return", "\u2581format", "$$(t", "$$rue", "$$,", "\u2581false", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreatePresignedDomainUrlResponse CreatePresignedDomainUrl(CreatePresignedDomainUrlRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreatePresignedDomainUrlRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreatePresignedDomainUrlResponseUnmarshaller.Instance;\n    return Invoke<CreatePresignedDomainUrlResponse>(request, options);\n}\n", "java": "public CreatePresignedDomainUrlResult createPresignedDomainUrl(CreatePresignedDomainUrlRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreatePresignedDomainUrl(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$P", "$$res", "$$ign", "$$ed", "$$Domain", "$$Url", "$$Response", "\u2581Create", "$$P", "$$res", "$$ign", "$$ed", "$$Domain", "$$Url", "$$(Create", "$$P", "$$res", "$$ign", "$$ed", "$$Domain", "$$Url", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$P", "$$res", "$$ign", "$$ed", "$$Domain", "$$Url", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$P", "$$res", "$$ign", "$$ed", "$$Domain", "$$Url", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$P", "$$res", "$$ign", "$$ed", "$$Domain", "$$Url", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$P", "$$res", "$$ign", "$$ed", "$$Domain", "$$Url", "$$Result", "\u2581create", "$$P", "$$res", "$$ign", "$$ed", "$$Domain", "$$Url", "$$(Create", "$$P", "$$res", "$$ign", "$$ed", "$$Domain", "$$Url", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$P", "$$res", "$$ign", "$$ed", "$$Domain", "$$Url", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void write(int oneChar) {\n    doWrite(new char[] { (char)oneChar }, 0, 1);\n}\n", "java": "public void write(int oneChar) {\n    doWrite(new char[] { (char) oneChar }, 0, 1);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581write", "$$(int", "\u2581", "$$one", "$$Char", "$$)", "\u2581{"], ["\u2581do", "$$Write", "$$(new", "\u2581char[]", "\u2581{", "\u2581(char", "$$)", "$$one", "$$Char", "\u2581}", "$$,", "\u25810,", "\u25811)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581write", "$$(int", "\u2581", "$$one", "$$Char", "$$)", "\u2581{"], ["\u2581do", "$$Write", "$$(new", "\u2581char[]", "\u2581{", "\u2581(char", "$$)", "\u2581", "$$one", "$$Char", "\u2581}", "$$,", "\u25810,", "\u25811)", "$$;"], ["\u2581}"]]}, {"cs": "public SSTRecord GetSSTRecord() {\n    return sstRecord;\n}\n", "java": "public SSTRecord getSSTRecord() {\n    return sstRecord;\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$ST", "$$Record", "\u2581Get", "$$SS", "$$T", "$$Record", "$$()", "\u2581{"], ["\u2581return", "\u2581s", "$$st", "$$Record", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$ST", "$$Record", "\u2581get", "$$SS", "$$T", "$$Record", "$$()", "\u2581{"], ["\u2581return", "\u2581s", "$$st", "$$Record", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return \"term=\" + term + \",field=\" + field + \",value=\" + value;\n}\n", "java": "public String toString() {\n    return \"term=\" + term + \",field=\" + field + \",value=\" + valueToString() + \",docIDUpto=\" + docIDUpto;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$term", "$$=\"", "\u2581+", "\u2581term", "\u2581+", "\u2581\",", "$$field", "$$=\"", "\u2581+", "\u2581field", "\u2581+", "\u2581\",", "$$value", "$$=\"", "\u2581+", "\u2581value", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$term", "$$=\"", "\u2581+", "\u2581term", "\u2581+", "\u2581\",", "$$field", "$$=\"", "\u2581+", "\u2581field", "\u2581+", "\u2581\",", "$$value", "$$=\"", "\u2581+", "\u2581value", "$$To", "$$String()", "\u2581+", "\u2581\",", "$$d", "$$oc", "$$ID", "$$Upto", "$$=\"", "\u2581+", "\u2581doc", "$$ID", "$$Upto", "$$;"], ["\u2581}"]]}, {"cs": "public override bool IsSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo) {\n    return bloomFilter.GetSaturation() > 0.9f;\n}\n", "java": "public boolean isSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo) {\n    return bloomFilter.getSaturation() > 0.9f;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581Is", "$$S", "$$atu", "$$r", "$$ate", "$$d(", "$$F", "$$u", "$$zz", "$$y", "$$Set", "\u2581b", "$$lo", "$$om", "$$Filter", "$$,", "\u2581Field", "$$Info", "\u2581field", "$$Info", "$$)", "\u2581{"], ["\u2581return", "\u2581b", "$$lo", "$$om", "$$Filter", "$$.Get", "$$S", "$$atu", "$$ration", "$$()", "\u2581>", "\u25810", "$$.", "$$9", "$$f", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$S", "$$atu", "$$r", "$$ate", "$$d(", "$$F", "$$u", "$$zz", "$$y", "$$Set", "\u2581b", "$$lo", "$$om", "$$Filter", "$$,", "\u2581Field", "$$Info", "\u2581field", "$$Info", "$$)", "\u2581{"], ["\u2581return", "\u2581b", "$$lo", "$$om", "$$Filter", "$$.get", "$$S", "$$atu", "$$ration", "$$()", "\u2581>", "\u25810", "$$.", "$$9", "$$f", "$$;"], ["\u2581}"]]}, {"cs": "public Builder(bool ignoreCase) {\n    this.ignoreCase = ignoreCase;\n}\n", "java": "public Builder(boolean ignoreCase) {\n    this.ignoreCase = ignoreCase;\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Builder", "$$(bool", "\u2581i", "$$gnoreCase", "$$)", "\u2581{"], ["\u2581this.", "$$ign", "$$oreCase", "\u2581=", "\u2581i", "$$gnoreCase", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581", "$$Builder", "$$(boolean", "\u2581i", "$$gnoreCase", "$$)", "\u2581{"], ["\u2581this.", "$$ign", "$$oreCase", "\u2581=", "\u2581i", "$$gnoreCase", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return GetType().Name+ \"(maxBasicQueries: \" + maxBasicQueries+ \", queriesMade: \" + queriesMade+ \")\";\n}\n", "java": "public String toString() {\n    return getClass().getName()+ \"(maxBasicQueries: \" + maxBasicQueries+ \", queriesMade: \" + queriesMade+ \")\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581Get", "$$Type().", "$$Name", "$$+", "\u2581\"", "$$(", "$$max", "$$B", "$$asic", "$$Qu", "$$eries", "$$:", "\u2581\"", "\u2581+", "\u2581max", "$$B", "$$asic", "$$Qu", "$$eries", "$$+", "\u2581\",", "\u2581qu", "$$eries", "$$Ma", "$$de", "$$:", "\u2581\"", "\u2581+", "\u2581qu", "$$eries", "$$Ma", "$$de", "$$+", "\u2581\")", "$$\"", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581get", "$$Class().get", "$$Name()", "$$+", "\u2581\"", "$$(", "$$max", "$$B", "$$asic", "$$Qu", "$$eries", "$$:", "\u2581\"", "\u2581+", "\u2581max", "$$B", "$$asic", "$$Qu", "$$eries", "$$+", "\u2581\",", "\u2581qu", "$$eries", "$$Ma", "$$de", "$$:", "\u2581\"", "\u2581+", "\u2581qu", "$$eries", "$$Ma", "$$de", "$$+", "\u2581\")", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeleteDataSourceResponse DeleteDataSource(DeleteDataSourceRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeleteDataSourceRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeleteDataSourceResponseUnmarshaller.Instance;\n    return Invoke<DeleteDataSourceResponse>(request, options);\n}\n", "java": "public DeleteDataSourceResult deleteDataSource(DeleteDataSourceRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeleteDataSource(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Delete", "$$DataSource", "$$Response", "\u2581Delete", "$$DataSource", "$$(Delete", "$$DataSource", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Delete", "$$DataSource", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Delete", "$$DataSource", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Delete", "$$DataSource", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$DataSource", "$$Result", "\u2581delete", "$$DataSource", "$$(Delete", "$$DataSource", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDelete", "$$DataSource", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual RebootNodeResponse RebootNode(RebootNodeRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = RebootNodeRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = RebootNodeResponseUnmarshaller.Instance;\n    return Invoke<RebootNodeResponse>(request, options);\n}\n", "java": "public RebootNodeResult rebootNode(RebootNodeRequest request) {\n    request = beforeClientExecution(request);\n    return executeRebootNode(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Re", "$$boot", "$$Node", "$$Response", "\u2581Re", "$$boot", "$$Node", "$$(Re", "$$boot", "$$Node", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Re", "$$boot", "$$Node", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Re", "$$boot", "$$Node", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Re", "$$boot", "$$Node", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Re", "$$boot", "$$Node", "$$Result", "\u2581re", "$$boot", "$$Node", "$$(Re", "$$boot", "$$Node", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Re", "$$boot", "$$Node", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void ProcessChildRecords() {\n    ConvertRawBytesToEscherRecords();\n}\n", "java": "public void processChildRecords() {\n    convertRawBytesToEscherRecords();\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581", "$$Process", "$$Child", "$$Record", "$$s()", "\u2581{"], ["\u2581Con", "$$vert", "$$Raw", "$$Bytes", "$$To", "$$Escher", "$$Record", "$$s()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581pro", "$$cess", "$$Child", "$$Record", "$$s()", "\u2581{"], ["\u2581con", "$$vert", "$$Raw", "$$Bytes", "$$To", "$$Escher", "$$Record", "$$s()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateOrUpdateTagsResponse CreateOrUpdateTags(CreateOrUpdateTagsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateOrUpdateTagsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateOrUpdateTagsResponseUnmarshaller.Instance;\n    return Invoke<CreateOrUpdateTagsResponse>(request, options);\n}\n", "java": "public CreateOrUpdateTagsResult createOrUpdateTags(CreateOrUpdateTagsRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateOrUpdateTags(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Or", "$$Update", "$$Tag", "$$sResponse", "\u2581Create", "$$Or", "$$Update", "$$Tag", "$$s(", "$$Create", "$$Or", "$$Update", "$$Tag", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Or", "$$Update", "$$Tag", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Or", "$$Update", "$$Tag", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Or", "$$Update", "$$Tag", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Or", "$$Update", "$$Tag", "$$sResult", "\u2581create", "$$Or", "$$Update", "$$Tag", "$$s(", "$$Create", "$$Or", "$$Update", "$$Tag", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Or", "$$Update", "$$Tag", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public FileSnapshot GetSnapShot() {\n    return snapShot;\n}\n", "java": "public FileSnapshot getSnapShot() {\n    return snapShot;\n}\n", "cs_t": [["\u2581public", "\u2581File", "$$Snapshot", "\u2581Get", "$$S", "$$nap", "$$Sh", "$$ot", "$$()", "\u2581{"], ["\u2581return", "\u2581s", "$$nap", "$$Sh", "$$ot", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581File", "$$Snapshot", "\u2581get", "$$S", "$$nap", "$$Sh", "$$ot", "$$()", "\u2581{"], ["\u2581return", "\u2581s", "$$nap", "$$Sh", "$$ot", "$$;"], ["\u2581}"]]}, {"cs": "public Stream OpenResource(string resource) {\n    Stream stream = this.clazz.GetTypeInfo().Assembly.FindAndGetManifestResourceStream(clazz, resource);\n    if (stream == null) {\n        throw new IOException(\"Resource not found: \" + resource);\n    }\n    return stream;\n}\n", "java": "public InputStream openResource(String resource) throws IOException {\n    final InputStream stream = (clazz != null) ?clazz.getResourceAsStream(resource) :loader.getResourceAsStream(resource);\n    if (stream == null)throw new IOException(\"Resource not found: \" + resource);\n    return stream;\n}\n", "cs_t": [["\u2581public", "\u2581", "$$Stream", "\u2581", "$$Open", "$$Resource", "$$(string", "\u2581res", "$$ource", "$$)", "\u2581{"], ["\u2581", "$$Stream", "\u2581stream", "\u2581=", "\u2581this.", "$$c", "$$la", "$$zz", "$$.Get", "$$Type", "$$Info", "$$()", "$$.As", "$$se", "$$m", "$$b", "$$ly", "$$.", "$$Find", "$$And", "$$Get", "$$Man", "$$if", "$$est", "$$Resource", "$$Stream", "$$(c", "$$la", "$$zz", "$$,", "\u2581res", "$$ource", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$stream", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IO", "$$Exception(\"", "$$Resource", "\u2581not", "\u2581f", "$$ound", "$$:", "\u2581\"", "\u2581+", "\u2581res", "$$ource", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581stream", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581In", "$$put", "$$Stream", "\u2581o", "$$pen", "$$Resource", "$$(String", "\u2581res", "$$ource", "$$)", "\u2581throws", "\u2581IOException", "\u2581{"], ["\u2581final", "\u2581In", "$$put", "$$Stream", "\u2581stream", "\u2581=", "\u2581(c", "$$la", "$$zz", "\u2581!=", "\u2581null)", "\u2581?", "$$c", "$$la", "$$zz", "$$.get", "$$Resource", "$$As", "$$Stream", "$$(", "$$res", "$$ource", "$$)", "\u2581:", "$$load", "$$er", "$$.get", "$$Resource", "$$As", "$$Stream", "$$(", "$$res", "$$ource", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$stream", "\u2581==", "\u2581null)", "$$throw", "\u2581new", "\u2581IO", "$$Exception(\"", "$$Resource", "\u2581not", "\u2581f", "$$ound", "$$:", "\u2581\"", "\u2581+", "\u2581res", "$$ource", "$$)", "$$;"], ["\u2581return", "\u2581stream", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder sb = new StringBuilder(64);\n    sb.Append(GetType().Name).Append(\" [\");\n    sb.Append(\"sid=\").Append(HexDump.ShortToHex(_sid));\n    sb.Append(\" size=\").Append(_data.Length);\n    sb.Append(\" : \").Append(HexDump.ToHex(_data));\n    sb.Append(\"]\\n\");\n    return sb.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder sb = new StringBuilder(64);\n    sb.append(getClass().getName()).append(\" [\");\n    sb.append(\"sid=\").append(HexDump.shortToHex(_sid));\n    sb.append(\" size=\").append(_data.length);\n    sb.append(\" : \").append(HexDump.toHex(_data));\n    sb.append(\"]\\n\");\n    return sb.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder(", "$$64", "$$)", "$$;"], ["\u2581sb.Append(", "$$Get", "$$Type().", "$$Name)", "$$.Append(\"", "\u2581[", "$$\")", "$$;"], ["\u2581sb.Append(\"", "$$sid", "$$=", "$$\").Append(", "$$HexDump.Short", "$$ToHex", "$$(_", "$$sid", "$$))", "$$;"], ["\u2581sb.Append(\"", "\u2581size", "$$=", "$$\").Append(", "$$_", "$$d", "$$ata", "$$.Length)", "$$;"], ["\u2581sb.Append(\"", "\u2581:", "\u2581\").Append(", "$$HexDump", "$$.To", "$$Hex", "$$(_", "$$d", "$$ata", "$$))", "$$;"], ["\u2581sb.Append(\"", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder(", "$$64", "$$)", "$$;"], ["\u2581sb.append(", "$$get", "$$Class().get", "$$Name", "$$())", "$$.append(\"", "\u2581[", "$$\")", "$$;"], ["\u2581sb.append(\"", "$$sid", "$$=\").append(", "$$HexDump.short", "$$ToHex", "$$(_", "$$sid", "$$))", "$$;"], ["\u2581sb.append(\"", "\u2581size", "$$=\").append(", "$$_", "$$d", "$$ata", "$$.length)", "$$;"], ["\u2581sb.append(\"", "\u2581:", "\u2581\").append(", "$$HexDump", "$$.to", "$$Hex", "$$(_", "$$d", "$$ata", "$$))", "$$;"], ["\u2581sb.append(\"", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int nextIndex() {\n    return index;\n}\n", "java": "public int nextIndex() {\n    return index;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581next", "$$Index", "$$()", "\u2581{"], ["\u2581return", "\u2581index", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581next", "$$Index", "$$()", "\u2581{"], ["\u2581return", "\u2581index", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToQueryString(IEscapeQuerySyntax escaper) {\n    if (IsDefaultField(this.m_field)) {\n        return \"\\\"\" + GetTermEscapeQuoted(escaper) + \"\\\"\";\n    }\n    else {\n        return this.m_field + \":\" + \"\\\"\" + GetTermEscapeQuoted(escaper) + \"\\\"\";\n    }\n}\n", "java": "public CharSequence toQueryString(EscapeQuerySyntax escaper) {\n    if (isDefaultField(this.field)) {\n        return \"\\\"\" + getTermEscapeQuoted(escaper) + \"\\\"\";\n    }\n    else {\n        return this.field + \":\" + \"\\\"\" + getTermEscapeQuoted(escaper) + \"\\\"\";\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581To", "$$Query", "$$String(", "$$I", "$$Escape", "$$Query", "$$Syntax", "\u2581", "$$esc", "$$ap", "$$er)", "\u2581{"], ["\u2581if", "\u2581(", "$$Is", "$$Default", "$$Field(", "$$this.", "$$m_", "$$field", "$$))", "\u2581{"], ["\u2581return", "\u2581\"", "$$\\\"", "$$\"", "\u2581+", "\u2581Get", "$$Term", "$$Escape", "$$Qu", "$$ote", "$$d(", "$$esc", "$$ap", "$$er)", "\u2581+", "\u2581\"", "$$\\\"", "$$\"", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581this.m_", "$$field", "\u2581+", "\u2581\":", "$$\"", "\u2581+", "\u2581\"", "$$\\\"", "$$\"", "\u2581+", "\u2581Get", "$$Term", "$$Escape", "$$Qu", "$$ote", "$$d(", "$$esc", "$$ap", "$$er)", "\u2581+", "\u2581\"", "$$\\\"", "$$\"", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Char", "$$Sequence", "\u2581to", "$$Query", "$$String(", "$$Escape", "$$Query", "$$Syntax", "\u2581", "$$esc", "$$ap", "$$er)", "\u2581{"], ["\u2581if", "\u2581(is", "$$Default", "$$Field(", "$$this.", "$$field", "$$))", "\u2581{"], ["\u2581return", "\u2581\"", "$$\\\"", "$$\"", "\u2581+", "\u2581get", "$$Term", "$$Escape", "$$Qu", "$$ote", "$$d(", "$$esc", "$$ap", "$$er)", "\u2581+", "\u2581\"", "$$\\\"", "$$\"", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581this.field", "\u2581+", "\u2581\":", "$$\"", "\u2581+", "\u2581\"", "$$\\\"", "$$\"", "\u2581+", "\u2581get", "$$Term", "$$Escape", "$$Qu", "$$ote", "$$d(", "$$esc", "$$ap", "$$er)", "\u2581+", "\u2581\"", "$$\\\"", "$$\"", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override Object Clone() {\n    CalcModeRecord rec = new CalcModeRecord();\n    rec.field_1_calcmode = field_1_calcmode;\n    return rec;\n}\n", "java": "public CalcModeRecord clone() {\n    return copy();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581Object", "\u2581Clone()", "\u2581{"], ["\u2581C", "$$al", "$$c", "$$Mode", "$$Record", "\u2581rec", "\u2581=", "\u2581new", "\u2581C", "$$al", "$$c", "$$Mode", "$$Record", "$$()", "$$;"], ["\u2581rec", "$$.", "$$field_1_", "$$cal", "$$c", "$$m", "$$ode", "\u2581=", "\u2581field_1_", "$$cal", "$$c", "$$m", "$$ode", "$$;"], ["\u2581return", "\u2581rec", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581C", "$$al", "$$c", "$$Mode", "$$Record", "\u2581clone()", "\u2581{"], ["\u2581return", "\u2581copy", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool IsOutput() {\n    return output;\n}\n", "java": "public boolean isOutput() {\n    return output;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581Is", "$$Output", "$$()", "\u2581{"], ["\u2581return", "\u2581output", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$Output", "$$()", "\u2581{"], ["\u2581return", "\u2581output", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateNetworkInterfaceResponse CreateNetworkInterface(CreateNetworkInterfaceRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateNetworkInterfaceRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateNetworkInterfaceResponseUnmarshaller.Instance;\n    return Invoke<CreateNetworkInterfaceResponse>(request, options);\n}\n", "java": "public CreateNetworkInterfaceResult createNetworkInterface(CreateNetworkInterfaceRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateNetworkInterface(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$NetworkInterface", "$$Response", "\u2581Create", "$$NetworkInterface", "$$(Create", "$$NetworkInterface", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$NetworkInterface", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$NetworkInterface", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$NetworkInterface", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$NetworkInterface", "$$Result", "\u2581create", "$$NetworkInterface", "$$(Create", "$$NetworkInterface", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$NetworkInterface", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort(field_1_password);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort(field_1_password);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$field_1_", "$$p", "$$assword", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(", "$$field_1_", "$$p", "$$assword", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual StopDominantLanguageDetectionJobResponse StopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = StopDominantLanguageDetectionJobRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = StopDominantLanguageDetectionJobResponseUnmarshaller.Instance;\n    return Invoke<StopDominantLanguageDetectionJobResponse>(request, options);\n}\n", "java": "public StopDominantLanguageDetectionJobResult stopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request) {\n    request = beforeClientExecution(request);\n    return executeStopDominantLanguageDetectionJob(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Stop", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$Response", "\u2581Stop", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$(", "$$Stop", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Stop", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Stop", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Stop", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Stop", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$Result", "\u2581stop", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$(", "$$Stop", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Stop", "$$D", "$$omin", "$$ant", "$$L", "$$ang", "$$u", "$$age", "$$DetectionJob", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void WithConnectionTimeout(int milliseconds) {\n    connectionTimeoutInMilliseconds = milliseconds;\n}\n", "java": "public ECSMetadataServiceCredentialsFetcher withConnectionTimeout(int milliseconds) {\n    this.connectionTimeoutInMilliseconds = milliseconds;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581", "$$With", "$$Connection", "$$Time", "$$out", "$$(int", "\u2581m", "$$illi", "$$se", "$$cond", "$$s)", "\u2581{"], ["\u2581con", "$$n", "$$ection", "$$Time", "$$out", "$$In", "$$M", "$$illi", "$$se", "$$cond", "$$s", "\u2581=", "\u2581m", "$$illi", "$$se", "$$cond", "$$s;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581E", "$$C", "$$S", "$$Metadata", "$$Service", "$$Credentials", "$$F", "$$et", "$$cher", "\u2581w", "$$ith", "$$Connection", "$$Time", "$$out", "$$(int", "\u2581m", "$$illi", "$$se", "$$cond", "$$s)", "\u2581{"], ["\u2581this.", "$$con", "$$n", "$$ection", "$$Time", "$$out", "$$In", "$$M", "$$illi", "$$se", "$$cond", "$$s", "\u2581=", "\u2581m", "$$illi", "$$se", "$$cond", "$$s;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetGatewayGroupResponse GetGatewayGroup(GetGatewayGroupRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetGatewayGroupRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetGatewayGroupResponseUnmarshaller.Instance;\n    return Invoke<GetGatewayGroupResponse>(request, options);\n}\n", "java": "public GetGatewayGroupResult getGatewayGroup(GetGatewayGroupRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetGatewayGroup(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Gateway", "$$Group", "$$Response", "\u2581Get", "$$Gateway", "$$Group", "$$(Get", "$$Gateway", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Gateway", "$$Group", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Gateway", "$$Group", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Gateway", "$$Group", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Gateway", "$$Group", "$$Result", "\u2581get", "$$Gateway", "$$Group", "$$(Get", "$$Gateway", "$$GroupRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Gateway", "$$Group", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.FloatBuffer slice() {\n    return new java.nio.ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset +_position);\n}\n", "java": "public FloatBuffer slice() {\n    return new ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset + position);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$Float", "$$Buffer", "\u2581slice", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581java.nio.Read", "$$Only", "$$Float", "$$Array", "$$Buffer", "$$(re", "$$maining", "$$(),", "\u2581b", "$$ackingArray,", "\u2581offset", "\u2581+", "$$_", "$$position", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581F", "$$loat", "$$Buffer", "\u2581slice", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581Read", "$$Only", "$$Float", "$$Array", "$$Buffer", "$$(re", "$$maining", "$$(),", "\u2581b", "$$ackingArray,", "\u2581offset", "\u2581+", "\u2581position", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static string Join(ICollection<string> parts, string separator, string lastSeparator) {\n    StringBuilder sb = new StringBuilder();\n    int i = 0;\n    int lastIndex = parts.Count - 1;\n    foreach (string part in parts) {\n        sb.Append(part);\n        if (i == lastIndex - 1) {\n            sb.Append(lastSeparator);\n        }\n        else {\n            if (i != lastIndex) {\n                sb.Append(separator);\n            }\n        }\n        i++;\n    }\n    return sb.ToString();\n}\n", "java": "public static String join(Collection<String> parts, String separator,String lastSeparator) {\n    StringBuilder sb = new StringBuilder();\n    int i = 0;\n    int lastIndex = parts.size() - 1;\n    for (String part : parts) {\n        sb.append(part);\n        if (i == lastIndex - 1) {\n            sb.append(lastSeparator);\n        }\n        else if (i != lastIndex) {\n            sb.append(separator);\n        }\n        i++;\n    }\n    return sb.toString();\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581string", "\u2581", "$$Jo", "$$in", "$$(I", "$$Collection", "$$<string", "$$>", "\u2581part", "$$s,", "\u2581string", "\u2581se", "$$parator", "$$,", "\u2581string", "\u2581last", "$$Se", "$$parator", "$$)", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581int", "\u2581i", "\u2581=", "\u25810;"], ["\u2581int", "\u2581last", "$$Index", "\u2581=", "\u2581part", "$$s.Count", "\u2581-", "\u25811", "$$;"], ["\u2581foreach", "\u2581(", "$$string", "\u2581part", "\u2581in", "\u2581part", "$$s)", "\u2581{"], ["\u2581sb.Append(", "$$p", "$$art", "$$)", "$$;"], ["\u2581if", "\u2581(i", "\u2581==", "\u2581last", "$$Index", "\u2581-", "\u25811)", "\u2581{"], ["\u2581sb.Append(", "$$last", "$$Se", "$$parator", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581if", "\u2581(i", "\u2581!=", "\u2581last", "$$Index)", "\u2581{"], ["\u2581sb.Append(", "$$se", "$$parator", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581i", "$$++", "$$;"], ["\u2581}"], ["\u2581return", "\u2581sb", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581String", "\u2581j", "$$o", "$$in", "$$(", "$$Collection<", "$$String>", "\u2581part", "$$s,", "\u2581String", "\u2581se", "$$parator", "$$,", "$$String", "\u2581last", "$$Se", "$$parator", "$$)", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581int", "\u2581i", "\u2581=", "\u25810;"], ["\u2581int", "\u2581last", "$$Index", "\u2581=", "\u2581part", "$$s.size()", "\u2581-", "\u25811", "$$;"], ["\u2581for", "\u2581(", "$$String", "\u2581part", "\u2581:", "\u2581part", "$$s)", "\u2581{"], ["\u2581sb.append(", "$$p", "$$art", "$$)", "$$;"], ["\u2581if", "\u2581(i", "\u2581==", "\u2581last", "$$Index", "\u2581-", "\u25811)", "\u2581{"], ["\u2581sb.append(", "$$last", "$$Se", "$$parator", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(i", "\u2581!=", "\u2581last", "$$Index)", "\u2581{"], ["\u2581sb.append(", "$$se", "$$parator", "$$)", "$$;"], ["\u2581}"], ["\u2581i", "$$++", "$$;"], ["\u2581}"], ["\u2581return", "\u2581sb", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    return \"(\" + a.ToString() + \" AND \" + b.ToString() + \")\";\n}\n", "java": "public String toString() {\n    return \"(\" + a.toString() + \" AND \" + b.toString() + \")\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$(\"", "\u2581+", "\u2581a", "$$.ToString()", "\u2581+", "\u2581\"", "\u2581A", "$$N", "$$D", "\u2581\"", "\u2581+", "\u2581b", "$$.ToString()", "\u2581+", "\u2581\")", "$$\"", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581return", "\u2581\"", "$$(\"", "\u2581+", "\u2581a", "$$.toString()", "\u2581+", "\u2581\"", "\u2581A", "$$N", "$$D", "\u2581\"", "\u2581+", "\u2581b", "$$.toString()", "\u2581+", "\u2581\")", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public ListSubscriptionsByTopicRequest(string topicArn, string nextToken) {\n    _topicArn = topicArn;\n    _nextToken = nextToken;\n}\n", "java": "public ListSubscriptionsByTopicRequest(String topicArn, String nextToken) {\n    setTopicArn(topicArn);\n    setNextToken(nextToken);\n}\n", "cs_t": [["\u2581public", "\u2581List", "$$Subsc", "$$riptions", "$$By", "$$To", "$$pic", "$$Request(string", "\u2581to", "$$pic", "$$Arn", "$$,", "\u2581string", "\u2581next", "$$Token", "$$)", "\u2581{"], ["\u2581_", "$$to", "$$pic", "$$Arn", "\u2581=", "\u2581to", "$$pic", "$$Arn", "$$;"], ["\u2581_", "$$next", "$$Token", "\u2581=", "\u2581next", "$$Token", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581List", "$$Subsc", "$$riptions", "$$By", "$$To", "$$pic", "$$Request(String", "\u2581to", "$$pic", "$$Arn", "$$,", "\u2581String", "\u2581next", "$$Token", "$$)", "\u2581{"], ["\u2581set", "$$To", "$$pic", "$$Arn", "$$(", "$$to", "$$pic", "$$Arn", "$$)", "$$;"], ["\u2581set", "$$Next", "$$Token", "$$(n", "$$ext", "$$Token", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override byte ReadByte() {\n    return bytes[pos--];\n}\n", "java": "public byte readByte() {\n    return bytes[pos--];\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581byte", "\u2581Read", "$$Byte", "$$()", "\u2581{"], ["\u2581return", "\u2581bytes", "$$[", "$$pos", "$$--", "$$]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581byte", "\u2581read", "$$Byte", "$$()", "\u2581{"], ["\u2581return", "\u2581bytes", "$$[", "$$pos", "$$--", "$$]", "$$;"], ["\u2581}"]]}, {"cs": "public virtual TerminateClientVpnConnectionsResponse TerminateClientVpnConnections(TerminateClientVpnConnectionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = TerminateClientVpnConnectionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = TerminateClientVpnConnectionsResponseUnmarshaller.Instance;\n    return Invoke<TerminateClientVpnConnectionsResponse>(request, options);\n}\n", "java": "public TerminateClientVpnConnectionsResult terminateClientVpnConnections(TerminateClientVpnConnectionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeTerminateClientVpnConnections(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Term", "$$inate", "$$ClientVpn", "$$Connection", "$$sResponse", "\u2581Term", "$$inate", "$$ClientVpn", "$$Connection", "$$s(", "$$Term", "$$inate", "$$ClientVpn", "$$Connection", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Term", "$$inate", "$$ClientVpn", "$$Connection", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Term", "$$inate", "$$ClientVpn", "$$Connection", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Term", "$$inate", "$$ClientVpn", "$$Connection", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Term", "$$inate", "$$ClientVpn", "$$Connection", "$$sResult", "\u2581term", "$$inate", "$$ClientVpn", "$$Connection", "$$s(", "$$Term", "$$inate", "$$ClientVpn", "$$Connection", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Term", "$$inate", "$$ClientVpn", "$$Connection", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ReceiveMessageRequest(string queueUrl) {\n    _queueUrl = queueUrl;\n}\n", "java": "public ReceiveMessageRequest(String queueUrl) {\n    setQueueUrl(queueUrl);\n}\n", "cs_t": [["\u2581public", "\u2581Re", "$$cei", "$$ve", "$$Message", "$$Request(string", "\u2581queue", "$$Url", "$$)", "\u2581{"], ["\u2581_", "$$qu", "$$eue", "$$Url", "\u2581=", "\u2581queue", "$$Url", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Re", "$$cei", "$$ve", "$$Message", "$$Request(String", "\u2581queue", "$$Url", "$$)", "\u2581{"], ["\u2581set", "$$Queue", "$$Url", "$$(", "$$qu", "$$eue", "$$Url", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort(field_1_barSpace);\n    out1.WriteShort(field_2_categorySpace);\n    out1.WriteShort(field_3_formatFlags);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort(field_1_barSpace);\n    out.writeShort(field_2_categorySpace);\n    out.writeShort(field_3_formatFlags);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$field_1_", "$$b", "$$ar", "$$S", "$$pace", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$field_2_", "$$c", "$$ateg", "$$ory", "$$S", "$$pace", "$$)", "$$;"], ["\u2581out1.WriteShort(", "$$field_3_", "$$format", "$$Flag", "$$s)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(", "$$field_1_", "$$b", "$$ar", "$$S", "$$pace", "$$)", "$$;"], ["\u2581out.writeShort(", "$$field_2_", "$$c", "$$ateg", "$$ory", "$$S", "$$pace", "$$)", "$$;"], ["\u2581out.writeShort(", "$$field_3_", "$$format", "$$Flag", "$$s)", "$$;"], ["\u2581}"]]}, {"cs": "public override object Common(object output1, object output2) {\n    return outputs.Common((T)output1, (T)output2);\n}\n", "java": "public Object common(Object output1, Object output2) {\n    return outputs.common((T) output1, (T) output2);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581object", "\u2581", "$$Common", "$$(object", "\u2581output", "$$1,", "\u2581object", "\u2581output", "$$2)", "\u2581{"], ["\u2581return", "\u2581output", "$$s.", "$$Common", "$$((", "$$T", "$$)", "$$output", "$$1,", "\u2581(", "$$T", "$$)", "$$output", "$$2)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Object", "\u2581com", "$$m", "$$on", "$$(Object", "\u2581output", "$$1,", "\u2581Object", "\u2581output", "$$2)", "\u2581{"], ["\u2581return", "\u2581output", "$$s.", "$$com", "$$m", "$$on", "$$((", "$$T", "$$)", "\u2581output", "$$1,", "\u2581(", "$$T", "$$)", "\u2581output", "$$2)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateVariableResponse CreateVariable(CreateVariableRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateVariableRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateVariableResponseUnmarshaller.Instance;\n    return Invoke<CreateVariableResponse>(request, options);\n}\n", "java": "public CreateVariableResult createVariable(CreateVariableRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateVariable(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$V", "$$ar", "$$iable", "$$Response", "\u2581Create", "$$V", "$$ar", "$$iable", "$$(Create", "$$V", "$$ar", "$$iable", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$V", "$$ar", "$$iable", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$V", "$$ar", "$$iable", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$V", "$$ar", "$$iable", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$V", "$$ar", "$$iable", "$$Result", "\u2581create", "$$V", "$$ar", "$$iable", "$$(Create", "$$V", "$$ar", "$$iable", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$V", "$$ar", "$$iable", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public static int Match(byte[] b, int ptr, byte[] src) {\n    if (ptr + src.Length > b.Length) {\n        return -1;\n    }\n    for (int i = 0; i < src.Length; i++, ptr++) {\n        if (b[ptr] != src[i]) {\n            return -1;\n        }\n    }\n    return ptr;\n}\n", "java": "public static final int match(byte[] b, int ptr, byte[] src) {\n    if (ptr + src.length > b.length)return -1;\n    for (int i = 0; i < src.length; i++, ptr++)if (b[ptr] != src[i])return -1;\n    return ptr;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581int", "\u2581Match", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581ptr", "$$,", "\u2581byte[]", "\u2581src", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$ptr", "\u2581+", "\u2581src", "$$.Length", "\u2581>", "\u2581b", "$$.Length)", "\u2581{"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581src", "$$.Length;", "\u2581i", "$$++", "$$,", "\u2581ptr", "$$++)", "\u2581{"], ["\u2581if", "\u2581(b", "$$[", "$$ptr", "$$]", "\u2581!=", "\u2581src", "$$[i]", "$$)", "\u2581{"], ["\u2581return", "\u2581-1", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581ptr", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581final", "\u2581int", "\u2581match", "$$(byte[]", "\u2581b,", "\u2581int", "\u2581ptr", "$$,", "\u2581byte[]", "\u2581src", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$ptr", "\u2581+", "\u2581src", "$$.length", "\u2581>", "\u2581b", "$$.length", "$$)return", "\u2581-1", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581src", "$$.length;", "\u2581i", "$$++", "$$,", "\u2581ptr", "$$++)", "$$if", "\u2581(b", "$$[", "$$ptr", "$$]", "\u2581!=", "\u2581src", "$$[i]", "$$)return", "\u2581-1", "$$;"], ["\u2581return", "\u2581ptr", "$$;"], ["\u2581}"]]}, {"cs": "public override int FillFields(byte[] data, int offset, IEscherRecordFactory recordFactory) {\n    int bytesRemaining = ReadHeader(data, offset);\n    int pos = offset + 8;\n    int size = 0;\n    field_1_rectX1 = LittleEndian.GetInt(data, pos + size);\n    size += 4;\n    field_2_rectY1 = LittleEndian.GetInt(data, pos + size);\n    size += 4;\n    field_3_rectX2 = LittleEndian.GetInt(data, pos + size);\n    size += 4;\n    field_4_rectY2 = LittleEndian.GetInt(data, pos + size);\n    size += 4;\n    bytesRemaining -= size;\n    if (bytesRemaining != 0) throw new RecordFormatException(\"Expected no remaining bytes but got \" + bytesRemaining);\n    return 8 + size + bytesRemaining;\n}\n", "java": "public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {\n    int bytesRemaining = readHeader( data, offset );\n    int pos            = offset + 8;\n    int size           = 0;\n    field_1_rectX1 =  LittleEndian.getInt( data, pos + size );\n    size+=4;\n    field_2_rectY1 =  LittleEndian.getInt( data, pos + size );\n    size+=4;\n    field_3_rectX2 =  LittleEndian.getInt( data, pos + size );\n    size+=4;\n    field_4_rectY2 =  LittleEndian.getInt( data, pos + size );\n    size+=4;\n    bytesRemaining -= size;\n    if (bytesRemaining != 0) {\n        throw new RecordFormatException(\"Expected no remaining bytes but got \" + bytesRemaining);\n    }\n    return 8 + size + bytesRemaining;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581int", "\u2581", "$$Fill", "$$Field", "$$s(", "$$byte[]", "\u2581data,", "\u2581int", "\u2581offset,", "\u2581I", "$$Escher", "$$Record", "$$Factory", "\u2581record", "$$Factory", "$$)", "\u2581{"], ["\u2581int", "\u2581bytesRemaining", "\u2581=", "\u2581Read", "$$Header", "$$(data,", "\u2581offset", "$$)", "$$;"], ["\u2581int", "\u2581pos", "\u2581=", "\u2581offset", "\u2581+", "\u25818", "$$;"], ["\u2581int", "\u2581size", "\u2581=", "\u25810;"], ["\u2581field_1_", "$$re", "$$ct", "$$X", "$$1", "\u2581=", "\u2581LittleEndian", "$$.Get", "$$Int(data,", "\u2581pos", "\u2581+", "\u2581size)", "$$;"], ["\u2581size", "\u2581+=", "\u25814", "$$;"], ["\u2581field_2_", "$$re", "$$ct", "$$Y", "$$1", "\u2581=", "\u2581LittleEndian", "$$.Get", "$$Int(data,", "\u2581pos", "\u2581+", "\u2581size)", "$$;"], ["\u2581size", "\u2581+=", "\u25814", "$$;"], ["\u2581field_3_", "$$re", "$$ct", "$$X", "$$2", "\u2581=", "\u2581LittleEndian", "$$.Get", "$$Int(data,", "\u2581pos", "\u2581+", "\u2581size)", "$$;"], ["\u2581size", "\u2581+=", "\u25814", "$$;"], ["\u2581field_4_", "$$re", "$$ct", "$$Y", "$$2", "\u2581=", "\u2581LittleEndian", "$$.Get", "$$Int(data,", "\u2581pos", "\u2581+", "\u2581size)", "$$;"], ["\u2581size", "\u2581+=", "\u25814", "$$;"], ["\u2581bytesRemaining", "\u2581-=", "\u2581size", "$$;"], ["\u2581if", "\u2581(b", "$$ytes", "$$Remaining", "\u2581!=", "\u25810)", "\u2581throw", "\u2581new", "\u2581Record", "$$Format", "$$Exception(\"", "$$Exp", "$$ected", "\u2581n", "$$o", "\u2581remaining", "\u2581bytes", "\u2581b", "$$ut", "\u2581g", "$$ot", "\u2581\"", "\u2581+", "\u2581bytesRemaining", "$$)", "$$;"], ["\u2581return", "\u25818", "\u2581+", "\u2581size", "\u2581+", "\u2581bytesRemaining", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581fill", "$$Field", "$$s(", "$$byte[]", "\u2581data,", "\u2581int", "\u2581offset,", "\u2581Escher", "$$Record", "$$Factory", "\u2581record", "$$Factory", "$$)", "\u2581{"], ["\u2581int", "\u2581bytesRemaining", "\u2581=", "\u2581read", "$$Head", "$$er(", "\u2581data,", "\u2581offset", "\u2581)", "$$;"], ["\u2581int", "\u2581pos", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581offset", "\u2581+", "\u25818", "$$;"], ["\u2581int", "\u2581size", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u25810;"], ["\u2581field_1_", "$$re", "$$ct", "$$X", "$$1", "\u2581=", "\u2581", "\u2581LittleEndian", "$$.get", "$$Int(", "\u2581data,", "\u2581pos", "\u2581+", "\u2581size", "\u2581)", "$$;"], ["\u2581size", "$$+", "$$=", "$$4", "$$;"], ["\u2581field_2_", "$$re", "$$ct", "$$Y", "$$1", "\u2581=", "\u2581", "\u2581LittleEndian", "$$.get", "$$Int(", "\u2581data,", "\u2581pos", "\u2581+", "\u2581size", "\u2581)", "$$;"], ["\u2581size", "$$+", "$$=", "$$4", "$$;"], ["\u2581field_3_", "$$re", "$$ct", "$$X", "$$2", "\u2581=", "\u2581", "\u2581LittleEndian", "$$.get", "$$Int(", "\u2581data,", "\u2581pos", "\u2581+", "\u2581size", "\u2581)", "$$;"], ["\u2581size", "$$+", "$$=", "$$4", "$$;"], ["\u2581field_4_", "$$re", "$$ct", "$$Y", "$$2", "\u2581=", "\u2581", "\u2581LittleEndian", "$$.get", "$$Int(", "\u2581data,", "\u2581pos", "\u2581+", "\u2581size", "\u2581)", "$$;"], ["\u2581size", "$$+", "$$=", "$$4", "$$;"], ["\u2581bytesRemaining", "\u2581-=", "\u2581size", "$$;"], ["\u2581if", "\u2581(b", "$$ytes", "$$Remaining", "\u2581!=", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Record", "$$Format", "$$Exception(\"", "$$Exp", "$$ected", "\u2581n", "$$o", "\u2581remaining", "\u2581bytes", "\u2581b", "$$ut", "\u2581g", "$$ot", "\u2581\"", "\u2581+", "\u2581bytesRemaining", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u25818", "\u2581+", "\u2581size", "\u2581+", "\u2581bytesRemaining", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateCloudFrontOriginAccessIdentityResponse CreateCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateCloudFrontOriginAccessIdentityRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateCloudFrontOriginAccessIdentityResponseUnmarshaller.Instance;\n    return Invoke<CreateCloudFrontOriginAccessIdentityResponse>(request, options);\n}\n", "java": "public CreateCloudFrontOriginAccessIdentityResult createCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateCloudFrontOriginAccessIdentity(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Response", "\u2581Create", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$(Create", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Result", "\u2581create", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$(Create", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$Cloud", "$$Fr", "$$ont", "$$Origin", "$$Access", "$$Identity", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool isNamespaceAware() {\n    return getFeature(org.xmlpull.v1.XmlPullParserClass.FEATURE_PROCESS_NAMESPACES);\n}\n", "java": "public boolean isNamespaceAware() {\n    return getFeature (XmlPullParser.FEATURE_PROCESS_NAMESPACES);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581is", "$$Namespace", "$$A", "$$w", "$$are", "$$()", "\u2581{"], ["\u2581return", "\u2581get", "$$F", "$$e", "$$atu", "$$re", "$$(", "$$or", "$$g.", "$$x", "$$m", "$$l", "$$p", "$$ull", "$$.", "$$v", "$$1.", "$$X", "$$m", "$$l", "$$P", "$$ull", "$$Parser", "$$Class.", "$$F", "$$E", "$$AT", "$$U", "$$RE", "$$_P", "$$RO", "$$CE", "$$SS", "$$_", "$$N", "$$AM", "$$E", "$$S", "$$P", "$$A", "$$CE", "$$S", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$Namespace", "$$A", "$$w", "$$are", "$$()", "\u2581{"], ["\u2581return", "\u2581get", "$$F", "$$e", "$$atu", "$$re", "\u2581(", "$$X", "$$m", "$$l", "$$P", "$$ull", "$$Parser", "$$.", "$$F", "$$E", "$$AT", "$$U", "$$RE", "$$_P", "$$RO", "$$CE", "$$SS", "$$_", "$$N", "$$AM", "$$E", "$$S", "$$P", "$$A", "$$CE", "$$S", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetOverridable(bool on) {\n    overridable = on;\n}\n", "java": "public void setOverridable(boolean on) {\n    overridable = on;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$O", "$$verri", "$$d", "$$able", "$$(bool", "\u2581on", "$$)", "\u2581{"], ["\u2581o", "$$verri", "$$d", "$$able", "\u2581=", "\u2581on", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$O", "$$verri", "$$d", "$$able", "$$(boolean", "\u2581on", "$$)", "\u2581{"], ["\u2581o", "$$verri", "$$d", "$$able", "\u2581=", "\u2581on", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string getClassName() {\n    return className;\n}\n", "java": "public String getClassName() {\n    return className;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581get", "$$Class", "$$Name()", "\u2581{"], ["\u2581return", "\u2581c", "$$lass", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Class", "$$Name()", "\u2581{"], ["\u2581return", "\u2581c", "$$lass", "$$Name", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DirectoryReader GetIndexReader() {\n    lock (this) {\n        if (indexReader != null) {\n            indexReader.IncRef();\n        }\n        return indexReader;\n    }\n}\n", "java": "public synchronized DirectoryReader getIndexReader() {\n    if (indexReader != null) {\n        indexReader.incRef();\n    }\n    return indexReader;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581D", "$$irectory", "$$Reader", "\u2581Get", "$$Index", "$$Reader", "$$()", "\u2581{"], ["\u2581lock", "\u2581(this)", "\u2581{"], ["\u2581if", "\u2581(index", "$$Reader", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581index", "$$Read", "$$er.", "$$In", "$$c", "$$Ref", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581index", "$$Reader", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581synchronized", "\u2581D", "$$irectory", "$$Reader", "\u2581get", "$$Index", "$$Reader", "$$()", "\u2581{"], ["\u2581if", "\u2581(index", "$$Reader", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581index", "$$Read", "$$er.", "$$in", "$$c", "$$Ref", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581index", "$$Reader", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int indexOfKey(int key) {\n    return binarySearch(mKeys, 0, mSize, key);\n}\n", "java": "public int indexOfKey(int key) {\n    return binarySearch(mKeys, 0, mSize, key);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581index", "$$Of", "$$Key", "$$(int", "\u2581key)", "\u2581{"], ["\u2581return", "\u2581b", "$$inary", "$$Search", "$$(m", "$$Key", "$$s,", "\u25810,", "\u2581m", "$$Size,", "\u2581key)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581index", "$$Of", "$$Key", "$$(int", "\u2581key)", "\u2581{"], ["\u2581return", "\u2581b", "$$inary", "$$Search", "$$(m", "$$Key", "$$s,", "\u25810,", "\u2581m", "$$Size,", "\u2581key)", "$$;"], ["\u2581}"]]}, {"cs": "public BlankRecord(RecordInputStream in1) {\n    field_1_row = in1.ReadUShort();\n    field_2_col = in1.ReadShort();\n    field_3_xf = in1.ReadShort();\n}\n", "java": "public BlankRecord(RecordInputStream in) {\n    field_1_row = in.readUShort();\n    field_2_col = in.readShort();\n    field_3_xf  = in.readShort();\n}\n", "cs_t": [["\u2581public", "\u2581B", "$$lank", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581field_1_", "$$row", "\u2581=", "\u2581in1.Read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581field_2_", "$$col", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581field_3_", "$$x", "$$f", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581B", "$$lank", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581field_1_", "$$row", "\u2581=", "\u2581in.read", "$$U", "$$Short", "$$()", "$$;"], ["\u2581field_2_", "$$col", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581field_3_", "$$x", "$$f", "\u2581", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public override long length() {\n    return length_Renamed;\n}\n", "java": "public long length() {\n    return length;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581long", "\u2581length", "$$()", "\u2581{"], ["\u2581return", "\u2581length", "$$_", "$$Ren", "$$ame", "$$d", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581long", "\u2581length", "$$()", "\u2581{"], ["\u2581return", "\u2581length", "$$;"], ["\u2581}"]]}, {"cs": "public PasswordRecord(RecordInputStream in1) {\n    field_1_password = in1.ReadShort();\n}\n", "java": "public PasswordRecord(RecordInputStream in) {\n    field_1_password = in.readShort();\n}\n", "cs_t": [["\u2581public", "\u2581P", "$$assword", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581field_1_", "$$p", "$$assword", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581P", "$$assword", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581field_1_", "$$p", "$$assword", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public HashMap(int capacity, float loadFactor) : this(capacity) {\n    if (loadFactor <= 0 || float.IsNaN(loadFactor)) {\n        throw new System.ArgumentException(\"Load factor: \" + loadFactor);\n    }\n}\n", "java": "public HashMap(int capacity, float loadFactor) {\n    this(capacity);\n    if (loadFactor <= 0 || Float.isNaN(loadFactor)) {\n        throw new IllegalArgumentException(\"Load factor: \" + loadFactor);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581Hash", "$$Map", "$$(int", "\u2581capacity", "$$,", "\u2581float", "\u2581load", "$$Fa", "$$ctor", "$$)", "\u2581:", "\u2581this", "$$(c", "$$apacity", "$$)", "\u2581{"], ["\u2581if", "\u2581(", "$$load", "$$Fa", "$$ctor", "\u2581<=", "\u25810", "\u2581||", "\u2581float", "$$.Is", "$$N", "$$a", "$$N", "$$(", "$$load", "$$Fa", "$$ctor", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.ArgumentException(\"", "$$Load", "\u2581fa", "$$ctor", "$$:", "\u2581\"", "\u2581+", "\u2581load", "$$Fa", "$$ctor", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Hash", "$$Map", "$$(int", "\u2581capacity", "$$,", "\u2581float", "\u2581load", "$$Fa", "$$ctor", "$$)", "\u2581{"], ["\u2581this", "$$(c", "$$apacity", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$load", "$$Fa", "$$ctor", "\u2581<=", "\u25810", "\u2581||", "\u2581F", "$$loat", "$$.is", "$$N", "$$a", "$$N", "$$(", "$$load", "$$Fa", "$$ctor", "$$))", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException(\"", "$$Load", "\u2581fa", "$$ctor", "$$:", "\u2581\"", "\u2581+", "\u2581load", "$$Fa", "$$ctor", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override void Run() {\n    long lastReopenStartNS = DateTime.UtcNow.Ticks * 100;\n    while (!finish) {\n        bool hasWaiting;\n        lock (this)hasWaiting = waitingGen > searchingGen;\n        long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);\n        long sleepNS = nextReopenStartNS - Time.NanoTime();\n        if (sleepNS > 0)\n#if !NETSTANDARD1_6try {\n#endif\nreopenCond.WaitOne(TimeSpan.FromMilliseconds(sleepNS / Time.MILLISECONDS_PER_NANOSECOND));\n#if !NETSTANDARD1_6}\n#pragma warning disable 168\ncatch (ThreadInterruptedException ie)\n#pragma warning restore 168\n {Thread.CurrentThread.Interrupt(); return;}\n#endif\nif (finish) {\n                    break;\n                }\n        lastReopenStartNS = Time.NanoTime();\n        refreshStartGen = writer.GetAndIncrementGeneration();\n        try {\n            manager.MaybeRefreshBlocking();\n        }\n        catch (System.IO.IOException ioe) {\n            throw new Exception(ioe.ToString(), ioe);\n        }\n    }\n    RefreshDone();\n}\n", "java": "public void run() {\n    long lastReopenStartNS = System.nanoTime();\n    while (!finish) {\n        while (!finish) {\n            reopenLock.lock();\n            try {\n                boolean hasWaiting = waitingGen > searchingGen;\n                final long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);\n                final long sleepNS = nextReopenStartNS - System.nanoTime();\n                if (sleepNS > 0) {\n                    reopenCond.awaitNanos(sleepNS);\n                }\n                else {\n                    break;\n                }\n            }\n            catch (InterruptedException ie) {\n                Thread.currentThread().interrupt();\n                return;\n            }\n            finally {\n                reopenLock.unlock();\n            }\n        }\n        if (finish) {\n            break;\n        }\n        lastReopenStartNS = System.nanoTime();\n        refreshStartGen = writer.getMaxCompletedSequenceNumber();\n        try {\n            manager.maybeRefreshBlocking();\n        }\n        catch (IOException ioe) {\n            throw new RuntimeException(ioe);\n        }\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Run", "$$()", "\u2581{"], ["\u2581long", "\u2581last", "$$Re", "$$open", "$$Start", "$$N", "$$S", "\u2581=", "\u2581Date", "$$Time", "$$.", "$$U", "$$t", "$$c", "$$N", "$$ow", "$$.", "$$T", "$$i", "$$ck", "$$s", "\u2581*", "\u25811", "$$00", "$$;"], ["\u2581while", "\u2581(!", "$$fin", "$$ish", "$$)", "\u2581{"], ["\u2581bool", "\u2581has", "$$W", "$$a", "$$it", "$$ing", "$$;"], ["\u2581lock", "\u2581(this)", "$$has", "$$W", "$$a", "$$it", "$$ing", "\u2581=", "\u2581w", "$$a", "$$it", "$$ing", "$$Gen", "\u2581>", "\u2581se", "$$arch", "$$ing", "$$Gen", "$$;"], ["\u2581long", "\u2581next", "$$Re", "$$open", "$$Start", "$$N", "$$S", "\u2581=", "\u2581last", "$$Re", "$$open", "$$Start", "$$N", "$$S", "\u2581+", "\u2581(", "$$has", "$$W", "$$a", "$$it", "$$ing", "\u2581?", "\u2581target", "$$Min", "$$St", "$$ale", "$$N", "$$S", "\u2581:", "\u2581target", "$$Max", "$$St", "$$ale", "$$N", "$$S", "$$)", "$$;"], ["\u2581long", "\u2581s", "$$le", "$$e", "$$p", "$$N", "$$S", "\u2581=", "\u2581next", "$$Re", "$$open", "$$Start", "$$N", "$$S", "\u2581-", "\u2581", "$$Time", "$$.N", "$$an", "$$o", "$$Time", "$$()", "$$;"], ["\u2581if", "\u2581(s", "$$le", "$$e", "$$p", "$$N", "$$S", "\u2581>", "\u25810)"], ["\u2581", "$$#", "$$if", "\u2581!", "$$N", "$$E", "$$T", "$$ST", "$$AN", "$$D", "$$AR", "$$D", "$$1_", "$$6", "$$t", "$$ry", "\u2581{"], ["\u2581", "$$#", "$$end", "$$if"], ["\u2581re", "$$open", "$$Con", "$$d", "$$.", "$$W", "$$a", "$$it", "$$On", "$$e", "$$(", "$$Time", "$$Span", "$$.", "$$From", "$$M", "$$illi", "$$se", "$$cond", "$$s(", "$$s", "$$le", "$$e", "$$p", "$$N", "$$S", "\u2581/", "\u2581", "$$Time", "$$.M", "$$I", "$$LL", "$$I", "$$SE", "$$C", "$$ON", "$$D", "$$S_", "$$P", "$$ER", "$$_", "$$N", "$$AN", "$$O", "$$SE", "$$C", "$$ON", "$$D", "$$))", "$$;"], ["\u2581", "$$#", "$$if", "\u2581!", "$$N", "$$E", "$$T", "$$ST", "$$AN", "$$D", "$$AR", "$$D", "$$1_", "$$6", "$$}"], ["\u2581", "$$#", "$$p", "$$ra", "$$g", "$$ma", "\u2581w", "$$arn", "$$ing", "\u2581dis", "$$able", "\u258116", "$$8"], ["\u2581catch", "\u2581(", "$$Thread", "$$Inter", "$$r", "$$up", "$$ted", "$$Exception", "\u2581i", "$$e", "$$)"], ["\u2581", "$$#", "$$p", "$$ra", "$$g", "$$ma", "\u2581w", "$$arn", "$$ing", "\u2581r", "$$estore", "\u258116", "$$8"], ["\u2581{", "$$Thread", "$$.C", "$$urrent", "$$Thread", "$$.", "$$Inter", "$$r", "$$up", "$$t", "$$()", "$$;", "\u2581return", "$$;", "$$}"], ["\u2581", "$$#", "$$end", "$$if"], ["\u2581if", "\u2581(f", "$$in", "$$ish", "$$)", "\u2581{"], ["\u2581break", "$$;"], ["\u2581}"], ["\u2581last", "$$Re", "$$open", "$$Start", "$$N", "$$S", "\u2581=", "\u2581", "$$Time", "$$.N", "$$an", "$$o", "$$Time", "$$()", "$$;"], ["\u2581ref", "$$resh", "$$Start", "$$Gen", "\u2581=", "\u2581w", "$$riter", "$$.Get", "$$And", "$$Increment", "$$Gen", "$$eration", "$$()", "$$;"], ["\u2581try", "\u2581{"], ["\u2581m", "$$an", "$$ag", "$$er.", "$$M", "$$ay", "$$be", "$$Ref", "$$resh", "$$Block", "$$ing", "$$()", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$System", "$$.", "$$IO", "$$.", "$$I", "$$OException", "\u2581i", "$$o", "$$e", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581", "$$Exception(", "$$io", "$$e", "$$.ToString()", "$$,", "\u2581i", "$$o", "$$e", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581Ref", "$$resh", "$$D", "$$one", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581r", "$$un", "$$()", "\u2581{"], ["\u2581long", "\u2581last", "$$Re", "$$open", "$$Start", "$$N", "$$S", "\u2581=", "\u2581System.", "$$n", "$$an", "$$o", "$$Time", "$$()", "$$;"], ["\u2581while", "\u2581(!", "$$fin", "$$ish", "$$)", "\u2581{"], ["\u2581while", "\u2581(!", "$$fin", "$$ish", "$$)", "\u2581{"], ["\u2581re", "$$open", "$$Lock", "$$.", "$$lock", "$$()", "$$;"], ["\u2581try", "\u2581{"], ["\u2581boolean", "\u2581has", "$$W", "$$a", "$$it", "$$ing", "\u2581=", "\u2581w", "$$a", "$$it", "$$ing", "$$Gen", "\u2581>", "\u2581se", "$$arch", "$$ing", "$$Gen", "$$;"], ["\u2581final", "\u2581long", "\u2581next", "$$Re", "$$open", "$$Start", "$$N", "$$S", "\u2581=", "\u2581last", "$$Re", "$$open", "$$Start", "$$N", "$$S", "\u2581+", "\u2581(", "$$has", "$$W", "$$a", "$$it", "$$ing", "\u2581?", "\u2581target", "$$Min", "$$St", "$$ale", "$$N", "$$S", "\u2581:", "\u2581target", "$$Max", "$$St", "$$ale", "$$N", "$$S", "$$)", "$$;"], ["\u2581final", "\u2581long", "\u2581s", "$$le", "$$e", "$$p", "$$N", "$$S", "\u2581=", "\u2581next", "$$Re", "$$open", "$$Start", "$$N", "$$S", "\u2581-", "\u2581System.", "$$n", "$$an", "$$o", "$$Time", "$$()", "$$;"], ["\u2581if", "\u2581(s", "$$le", "$$e", "$$p", "$$N", "$$S", "\u2581>", "\u25810)", "\u2581{"], ["\u2581re", "$$open", "$$Con", "$$d", "$$.", "$$aw", "$$a", "$$it", "$$N", "$$an", "$$o", "$$s(", "$$s", "$$le", "$$e", "$$p", "$$N", "$$S", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581break", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581catch", "\u2581(", "$$Inter", "$$r", "$$up", "$$ted", "$$Exception", "\u2581i", "$$e", "$$)", "\u2581{"], ["\u2581", "$$Thread", "$$.c", "$$urrent", "$$Thread", "$$().", "$$int", "$$err", "$$up", "$$t", "$$()", "$$;"], ["\u2581return", "$$;"], ["\u2581}"], ["\u2581finally", "\u2581{"], ["\u2581re", "$$open", "$$Lock", "$$.", "$$un", "$$lock", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581if", "\u2581(f", "$$in", "$$ish", "$$)", "\u2581{"], ["\u2581break", "$$;"], ["\u2581}"], ["\u2581last", "$$Re", "$$open", "$$Start", "$$N", "$$S", "\u2581=", "\u2581System.", "$$n", "$$an", "$$o", "$$Time", "$$()", "$$;"], ["\u2581ref", "$$resh", "$$Start", "$$Gen", "\u2581=", "\u2581w", "$$riter", "$$.get", "$$Max", "$$Comp", "$$lete", "$$d", "$$Sequence", "$$Number", "$$()", "$$;"], ["\u2581try", "\u2581{"], ["\u2581m", "$$an", "$$ag", "$$er.", "$$ma", "$$y", "$$be", "$$Ref", "$$resh", "$$Block", "$$ing", "$$()", "$$;"], ["\u2581}"], ["\u2581catch", "\u2581(IOException", "\u2581i", "$$o", "$$e", "$$)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Runtime", "$$Exception(", "$$io", "$$e", "$$)", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public DeleteLoginProfileRequest(string userName) {\n    _userName = userName;\n}\n", "java": "public DeleteLoginProfileRequest(String userName) {\n    setUserName(userName);\n}\n", "cs_t": [["\u2581public", "\u2581Delete", "$$Log", "$$in", "$$Profile", "$$Request(string", "\u2581user", "$$Name)", "\u2581{"], ["\u2581_", "$$user", "$$Name", "\u2581=", "\u2581user", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Log", "$$in", "$$Profile", "$$Request(String", "\u2581user", "$$Name)", "\u2581{"], ["\u2581set", "$$User", "$$Name(", "$$user", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual E pollFirst() {\n    return (_size == 0) ? default(E) : removeFirstImpl();\n}\n", "java": "public E pollFirst() {\n    return (size == 0) ? null : removeFirstImpl();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581E", "\u2581p", "$$ol", "$$l", "$$First", "$$()", "\u2581{"], ["\u2581return", "\u2581(_", "$$size", "\u2581==", "\u25810)", "\u2581?", "\u2581default", "$$(", "$$E", "$$)", "\u2581:", "\u2581remove", "$$First", "$$Impl", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581E", "\u2581p", "$$ol", "$$l", "$$First", "$$()", "\u2581{"], ["\u2581return", "\u2581(", "$$size", "\u2581==", "\u25810)", "\u2581?", "\u2581null", "\u2581:", "\u2581remove", "$$First", "$$Impl", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public CreatePhotoRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"CreatePhoto\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public CreatePhotoRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"CreatePhoto\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581Create", "$$Photo", "$$Request():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Create", "$$Photo\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$Photo", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Create", "$$Photo\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string GetName() {\n    return \"resolve\";\n}\n", "java": "public String getName() {\n    return \"resolve\";\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581Get", "$$Name()", "\u2581{"], ["\u2581return", "\u2581\"", "$$res", "$$ol", "$$ve", "$$\"", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Name()", "\u2581{"], ["\u2581return", "\u2581\"", "$$res", "$$ol", "$$ve", "$$\"", "$$;"], ["\u2581}"]]}, {"cs": "public virtual int FindEndOffset(StringBuilder buffer, int start) {\n    if (start > buffer.Length || start < 0) return start;\n    int offset, count = m_maxScan;\n    for (offset = start; offset < buffer.Length && count > 0; count--) {\n        if (m_boundaryChars.Contains(buffer[offset])) return offset;\n        offset++;\n    }\n    return start;\n}\n", "java": "public int findEndOffset(StringBuilder buffer, int start) {\n    if( start > buffer.length() || start < 0 ) return start;\n    int offset, count = maxScan;\n    for( offset = start; offset < buffer.length() && count > 0; count-- ) {\n        if( boundaryChars.contains( buffer.charAt( offset ) ) ) return offset;\n        offset++;\n    }\n    return start;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581int", "\u2581F", "$$ind", "$$End", "$$Offset", "$$(String", "$$Builder", "\u2581buffer,", "\u2581int", "\u2581start", "$$)", "\u2581{"], ["\u2581if", "\u2581(start", "\u2581>", "\u2581buffer", "$$.Length", "\u2581||", "\u2581start", "\u2581<", "\u25810)", "\u2581return", "\u2581start", "$$;"], ["\u2581int", "\u2581offset,", "\u2581count", "\u2581=", "\u2581m_", "$$max", "$$Sc", "$$an", "$$;"], ["\u2581for", "\u2581(", "$$offset", "\u2581=", "\u2581start", "$$;", "\u2581offset", "\u2581<", "\u2581buffer", "$$.Length", "\u2581&&", "\u2581count", "\u2581>", "\u25810;", "\u2581count", "$$--", "$$)", "\u2581{"], ["\u2581if", "\u2581(m", "$$_", "$$bo", "$$und", "$$ary", "$$Char", "$$s.", "$$Contain", "$$s(", "$$buffer", "$$[offset", "$$]", "$$))", "\u2581return", "\u2581offset", "$$;"], ["\u2581offset", "$$++", "$$;"], ["\u2581}"], ["\u2581return", "\u2581start", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581int", "\u2581find", "$$End", "$$Offset", "$$(String", "$$Builder", "\u2581buffer,", "\u2581int", "\u2581start", "$$)", "\u2581{"], ["\u2581if(", "\u2581start", "\u2581>", "\u2581buffer", "$$.length()", "\u2581||", "\u2581start", "\u2581<", "\u25810", "\u2581)", "\u2581return", "\u2581start", "$$;"], ["\u2581int", "\u2581offset,", "\u2581count", "\u2581=", "\u2581max", "$$Sc", "$$an", "$$;"], ["\u2581for", "$$(", "\u2581offset", "\u2581=", "\u2581start", "$$;", "\u2581offset", "\u2581<", "\u2581buffer", "$$.length()", "\u2581&&", "\u2581count", "\u2581>", "\u25810;", "\u2581count", "$$--", "\u2581)", "\u2581{"], ["\u2581if(", "\u2581bo", "$$und", "$$ary", "$$Char", "$$s.", "$$con", "$$tain", "$$s(", "\u2581buffer", "$$.char", "$$At(", "\u2581offset", "\u2581)", "\u2581)", "\u2581)", "\u2581return", "\u2581offset", "$$;"], ["\u2581offset", "$$++", "$$;"], ["\u2581}"], ["\u2581return", "\u2581start", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetObjectChecker(ObjectChecker oc) {\n    objCheck = oc;\n}\n", "java": "public void setObjectChecker(ObjectChecker oc) {\n    objCheck = oc;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Object", "$$Check", "$$er(", "$$Object", "$$Check", "$$er", "\u2581o", "$$c", "$$)", "\u2581{"], ["\u2581obj", "$$Check", "\u2581=", "\u2581o", "$$c", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Object", "$$Check", "$$er(", "$$Object", "$$Check", "$$er", "\u2581o", "$$c", "$$)", "\u2581{"], ["\u2581obj", "$$Check", "\u2581=", "\u2581o", "$$c", "$$;"], ["\u2581}"]]}, {"cs": "public BaseRef(AreaEval ae) {\n    _refEval = null;\n    _areaEval = ae;\n    _firstRowIndex = ae.FirstRow;\n    _firstColumnIndex = ae.FirstColumn;\n    _height = ae.LastRow - ae.FirstRow + 1;\n    _width = ae.LastColumn - ae.FirstColumn + 1;\n}\n", "java": "public BaseRef(AreaEval ae) {\n    _refEval = null;\n    _areaEval = ae;\n    _firstRowIndex = ae.getFirstRow();\n    _firstColumnIndex = ae.getFirstColumn();\n    _height = ae.getLastRow() - ae.getFirstRow() + 1;\n    _width = ae.getLastColumn() - ae.getFirstColumn() + 1;\n}\n", "cs_t": [["\u2581public", "\u2581B", "$$ase", "$$Ref", "$$(", "$$Area", "$$Eval", "\u2581a", "$$e", "$$)", "\u2581{"], ["\u2581_", "$$ref", "$$Eval", "\u2581=", "\u2581null", "$$;"], ["\u2581_", "$$a", "$$rea", "$$Eval", "\u2581=", "\u2581a", "$$e", "$$;"], ["\u2581_first", "$$Row", "$$Index", "\u2581=", "\u2581a", "$$e", "$$.", "$$FirstRow", "$$;"], ["\u2581_first", "$$Column", "$$Index", "\u2581=", "\u2581a", "$$e", "$$.", "$$FirstColumn", "$$;"], ["\u2581_", "$$h", "$$eight", "\u2581=", "\u2581a", "$$e", "$$.", "$$LastRow", "\u2581-", "\u2581a", "$$e", "$$.", "$$FirstRow", "\u2581+", "\u25811", "$$;"], ["\u2581_", "$$w", "$$idth", "\u2581=", "\u2581a", "$$e", "$$.", "$$Last", "$$Column", "\u2581-", "\u2581a", "$$e", "$$.", "$$FirstColumn", "\u2581+", "\u25811", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581B", "$$ase", "$$Ref", "$$(", "$$Area", "$$Eval", "\u2581a", "$$e", "$$)", "\u2581{"], ["\u2581_", "$$ref", "$$Eval", "\u2581=", "\u2581null", "$$;"], ["\u2581_", "$$a", "$$rea", "$$Eval", "\u2581=", "\u2581a", "$$e", "$$;"], ["\u2581_first", "$$Row", "$$Index", "\u2581=", "\u2581a", "$$e", "$$.get", "$$FirstRow", "$$()", "$$;"], ["\u2581_first", "$$Column", "$$Index", "\u2581=", "\u2581a", "$$e", "$$.get", "$$FirstColumn", "$$()", "$$;"], ["\u2581_", "$$h", "$$eight", "\u2581=", "\u2581a", "$$e", "$$.get", "$$LastRow", "$$()", "\u2581-", "\u2581a", "$$e", "$$.get", "$$FirstRow", "$$()", "\u2581+", "\u25811", "$$;"], ["\u2581_", "$$w", "$$idth", "\u2581=", "\u2581a", "$$e", "$$.get", "$$Last", "$$Column", "$$()", "\u2581-", "\u2581a", "$$e", "$$.get", "$$FirstColumn", "$$()", "\u2581+", "\u25811", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateVpcEndpointResponse CreateVpcEndpoint(CreateVpcEndpointRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateVpcEndpointRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateVpcEndpointResponseUnmarshaller.Instance;\n    return Invoke<CreateVpcEndpointResponse>(request, options);\n}\n", "java": "public CreateVpcEndpointResult createVpcEndpoint(CreateVpcEndpointRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateVpcEndpoint(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$VpcEndpoint", "$$Response", "\u2581Create", "$$VpcEndpoint", "$$(Create", "$$VpcEndpoint", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$VpcEndpoint", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$VpcEndpoint", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$VpcEndpoint", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$VpcEndpoint", "$$Result", "\u2581create", "$$VpcEndpoint", "$$(Create", "$$VpcEndpoint", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$VpcEndpoint", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DeregisterWorkspaceDirectoryResponse DeregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DeregisterWorkspaceDirectoryRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DeregisterWorkspaceDirectoryResponseUnmarshaller.Instance;\n    return Invoke<DeregisterWorkspaceDirectoryResponse>(request, options);\n}\n", "java": "public DeregisterWorkspaceDirectoryResult deregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request) {\n    request = beforeClientExecution(request);\n    return executeDeregisterWorkspaceDirectory(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Deregister", "$$Workspace", "$$Directory", "$$Response", "\u2581Deregister", "$$Workspace", "$$Directory", "$$(", "$$De", "$$register", "$$Workspace", "$$Directory", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Deregister", "$$Workspace", "$$Directory", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Deregister", "$$Workspace", "$$Directory", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$De", "$$register", "$$Workspace", "$$Directory", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Deregister", "$$Workspace", "$$Directory", "$$Result", "\u2581de", "$$register", "$$Workspace", "$$Directory", "$$(", "$$De", "$$register", "$$Workspace", "$$Directory", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$De", "$$register", "$$Workspace", "$$Directory", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public ChartFRTInfoRecord(RecordInputStream in1) {\n    rt = in1.ReadShort();\n    grbitFrt = in1.ReadShort();\n    verOriginator = (byte)in1.ReadByte();\n    verWriter = (byte)in1.ReadByte();\n    int cCFRTID = in1.ReadShort();\n    rgCFRTID = new CFRTID[cCFRTID];\n    for (int i = 0; i < cCFRTID; i++) {\n        rgCFRTID[i] = new CFRTID(in1);\n    }\n}\n", "java": "public ChartFRTInfoRecord(RecordInputStream in) {\n    rt = in.readShort();\n    grbitFrt = in.readShort();\n    verOriginator = in.readByte();\n    verWriter = in.readByte();\n    int cCFRTID = in.readShort();\n    rgCFRTID = new CFRTID[cCFRTID];\n    for (int i = 0; i < cCFRTID; i++) {\n        rgCFRTID[i] = new CFRTID(in);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581Ch", "$$art", "$$F", "$$R", "$$T", "$$Info", "$$Record(RecordInputStream", "\u2581in1)", "\u2581{"], ["\u2581r", "$$t", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581g", "$$r", "$$bit", "$$F", "$$rt", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581v", "$$er", "$$Origin", "$$ator", "\u2581=", "\u2581(byte)", "$$in", "$$1.Read", "$$Byte", "$$()", "$$;"], ["\u2581v", "$$er", "$$Writer", "\u2581=", "\u2581(byte)", "$$in", "$$1.Read", "$$Byte", "$$()", "$$;"], ["\u2581int", "\u2581c", "$$C", "$$F", "$$R", "$$T", "$$ID", "\u2581=", "\u2581in1.Read", "$$Short", "$$()", "$$;"], ["\u2581r", "$$g", "$$C", "$$F", "$$R", "$$T", "$$ID", "\u2581=", "\u2581new", "\u2581CF", "$$R", "$$T", "$$ID", "$$[", "$$c", "$$C", "$$F", "$$R", "$$T", "$$ID", "$$]", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581c", "$$C", "$$F", "$$R", "$$T", "$$ID", "$$;", "\u2581i++)", "\u2581{"], ["\u2581r", "$$g", "$$C", "$$F", "$$R", "$$T", "$$ID", "$$[i]", "\u2581=", "\u2581new", "\u2581CF", "$$R", "$$T", "$$ID", "$$(in", "$$1)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Ch", "$$art", "$$F", "$$R", "$$T", "$$Info", "$$Record(RecordInputStream", "\u2581in)", "\u2581{"], ["\u2581r", "$$t", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581g", "$$r", "$$bit", "$$F", "$$rt", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581v", "$$er", "$$Origin", "$$ator", "\u2581=", "\u2581in.read", "$$Byte", "$$()", "$$;"], ["\u2581v", "$$er", "$$Writer", "\u2581=", "\u2581in.read", "$$Byte", "$$()", "$$;"], ["\u2581int", "\u2581c", "$$C", "$$F", "$$R", "$$T", "$$ID", "\u2581=", "\u2581in.read", "$$Short", "$$()", "$$;"], ["\u2581r", "$$g", "$$C", "$$F", "$$R", "$$T", "$$ID", "\u2581=", "\u2581new", "\u2581CF", "$$R", "$$T", "$$ID", "$$[", "$$c", "$$C", "$$F", "$$R", "$$T", "$$ID", "$$]", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581c", "$$C", "$$F", "$$R", "$$T", "$$ID", "$$;", "\u2581i++)", "\u2581{"], ["\u2581r", "$$g", "$$C", "$$F", "$$R", "$$T", "$$ID", "$$[i]", "\u2581=", "\u2581new", "\u2581CF", "$$R", "$$T", "$$ID", "$$(in", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override Merger NewMerger(Repository db) {\n    return new StrategyOneSided.OneSide(db, treeIndex);\n}\n", "java": "public Merger newMerger(Repository db) {\n    return new OneSide(db, treeIndex);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581M", "$$er", "$$ger", "\u2581N", "$$ew", "$$M", "$$er", "$$g", "$$er(", "$$Repository", "\u2581db", "$$)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581St", "$$r", "$$ategy", "$$On", "$$e", "$$S", "$$i", "$$ded", "$$.", "$$On", "$$e", "$$S", "$$ide", "$$(d", "$$b", "$$,", "\u2581t", "$$ree", "$$Index)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581M", "$$er", "$$ger", "\u2581new", "$$M", "$$er", "$$g", "$$er(", "$$Repository", "\u2581db", "$$)", "\u2581{"], ["\u2581return", "\u2581new", "\u2581", "$$On", "$$e", "$$S", "$$ide", "$$(d", "$$b", "$$,", "\u2581t", "$$ree", "$$Index)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual CreateDataSourceFromRedshiftResponse CreateDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = CreateDataSourceFromRedshiftRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = CreateDataSourceFromRedshiftResponseUnmarshaller.Instance;\n    return Invoke<CreateDataSourceFromRedshiftResponse>(request, options);\n}\n", "java": "public CreateDataSourceFromRedshiftResult createDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request) {\n    request = beforeClientExecution(request);\n    return executeCreateDataSourceFromRedshift(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Create", "$$DataSource", "$$From", "$$Re", "$$d", "$$sh", "$$ift", "$$Response", "\u2581Create", "$$DataSource", "$$From", "$$Re", "$$d", "$$sh", "$$ift", "$$(Create", "$$DataSource", "$$From", "$$Re", "$$d", "$$sh", "$$ift", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Create", "$$DataSource", "$$From", "$$Re", "$$d", "$$sh", "$$ift", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Create", "$$DataSource", "$$From", "$$Re", "$$d", "$$sh", "$$ift", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Create", "$$DataSource", "$$From", "$$Re", "$$d", "$$sh", "$$ift", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Create", "$$DataSource", "$$From", "$$Re", "$$d", "$$sh", "$$ift", "$$Result", "\u2581create", "$$DataSource", "$$From", "$$Re", "$$d", "$$sh", "$$ift", "$$(Create", "$$DataSource", "$$From", "$$Re", "$$d", "$$sh", "$$ift", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeCreate", "$$DataSource", "$$From", "$$Re", "$$d", "$$sh", "$$ift", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override void ClearDFA() {\n    for (int d = 0; d < decisionToDFA.Length; d++) {\n        decisionToDFA[d] = new DFA(atn.GetDecisionState(d), d);\n    }\n}\n", "java": "public void clearDFA() {\n    for (int d = 0; d < decisionToDFA.length; d++) {\n        decisionToDFA[d] = new DFA(atn.getDecisionState(d), d);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581C", "$$lear", "$$DFA", "$$()", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581d", "\u2581=", "\u25810;", "\u2581d", "\u2581<", "\u2581decision", "$$To", "$$DFA", "$$.Length;", "\u2581d", "$$++)", "\u2581{"], ["\u2581decision", "$$To", "$$DFA", "$$[", "$$d", "$$]", "\u2581=", "\u2581new", "\u2581D", "$$FA", "$$(", "$$at", "$$n", "$$.Get", "$$Decision", "$$State", "$$(d", "$$),", "\u2581d", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581c", "$$lear", "$$DFA", "$$()", "\u2581{"], ["\u2581for", "\u2581(int", "\u2581d", "\u2581=", "\u25810;", "\u2581d", "\u2581<", "\u2581decision", "$$To", "$$DFA", "$$.length;", "\u2581d", "$$++)", "\u2581{"], ["\u2581decision", "$$To", "$$DFA", "$$[", "$$d", "$$]", "\u2581=", "\u2581new", "\u2581D", "$$FA", "$$(", "$$at", "$$n", "$$.get", "$$Decision", "$$State", "$$(d", "$$),", "\u2581d", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public void RemoveName(String name) {\n    int index = GetNameIndex(name);\n    RemoveName(index);\n}\n", "java": "public void removeName(String name) {\n    int index = getNameIndex(name);\n    removeName(index);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581Remove", "$$Name", "$$(String", "\u2581name)", "\u2581{"], ["\u2581int", "\u2581index", "\u2581=", "\u2581Get", "$$Name", "$$Index", "$$(name", "$$)", "$$;"], ["\u2581Remove", "$$Name", "$$(index", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581remove", "$$Name", "$$(String", "\u2581name)", "\u2581{"], ["\u2581int", "\u2581index", "\u2581=", "\u2581get", "$$Name", "$$Index", "$$(name", "$$)", "$$;"], ["\u2581remove", "$$Name", "$$(index", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[RightMargin]\\n\");\n    buffer.Append(\"    .margin               = \").Append(\" (\").Append(Margin).Append(\" )\\n\");\n    buffer.Append(\"[/RightMargin]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append( \"[RightMargin]\\n\" );\n    buffer.append( \"    .margin               = \" ).append( \" (\" ).append( getMargin() ).append( \" )\\n\" );\n    buffer.append( \"[/RightMargin]\\n\" );\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$R", "$$ight", "$$M", "$$argin", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$m", "$$argin", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\")", "$$.Append(\"", "\u2581(", "$$\").Append(", "$$M", "$$argin", "$$)", "$$.Append(\"", "\u2581)", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"[/", "$$R", "$$ight", "$$M", "$$argin", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(", "\u2581\"", "$$[", "$$R", "$$ight", "$$M", "$$argin", "$$]", "$$\\n", "$$\"", "\u2581)", "$$;"], ["\u2581buffer.append(", "\u2581\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$m", "$$argin", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\"", "\u2581)", "$$.append(", "\u2581\"", "\u2581(\"", "\u2581)", "$$.append(", "\u2581get", "$$M", "$$argin", "$$()", "\u2581)", "$$.append(", "\u2581\"", "\u2581)", "$$\\n", "$$\"", "\u2581)", "$$;"], ["\u2581buffer.append(", "\u2581\"", "$$[/", "$$R", "$$ight", "$$M", "$$argin", "$$]", "$$\\n", "$$\"", "\u2581)", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public override Object Clone() {\n    return new RefreshAllRecord(_options);\n}\n", "java": "public RefreshAllRecord clone() {\n    return copy();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581Object", "\u2581Clone()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581Ref", "$$resh", "$$All", "$$Record(", "$$_options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Ref", "$$resh", "$$All", "$$Record", "\u2581clone()", "\u2581{"], ["\u2581return", "\u2581copy", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig): base(queryConfig) {\n    Add(new WildcardQueryNodeProcessor());\n    Add(new MultiFieldQueryNodeProcessor());\n    Add(new FuzzyQueryNodeProcessor());\n    Add(new MatchAllDocsQueryNodeProcessor());\n    Add(new OpenRangeQueryNodeProcessor());\n    Add(new NumericQueryNodeProcessor());\n    Add(new NumericRangeQueryNodeProcessor());\n    Add(new LowercaseExpandedTermsQueryNodeProcessor());\n    Add(new TermRangeQueryNodeProcessor());\n    Add(new AllowLeadingWildcardProcessor());\n    Add(new AnalyzerQueryNodeProcessor());\n    Add(new PhraseSlopQueryNodeProcessor());\n    Add(new BooleanQuery2ModifierNodeProcessor());\n    Add(new NoChildOptimizationQueryNodeProcessor());\n    Add(new RemoveDeletedQueryNodesProcessor());\n    Add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    Add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    Add(new DefaultPhraseSlopQueryNodeProcessor());\n    Add(new BoostQueryNodeProcessor());\n    Add(new MultiTermRewriteMethodProcessor());\n}\n", "java": "public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n    add(new WildcardQueryNodeProcessor());\n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new RegexpQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());\n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());\n    add(new MultiTermRewriteMethodProcessor());\n}\n", "cs_t": [["\u2581public", "\u2581St", "$$andard", "$$QueryNode", "$$Processor", "$$Pipeline", "$$(", "$$Query", "$$Config", "$$Handler", "\u2581query", "$$Config", "$$):", "\u2581base", "$$(", "$$query", "$$Config", "$$)", "\u2581{"], ["\u2581Add(", "$$new", "\u2581W", "$$ild", "$$c", "$$ard", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581M", "$$ulti", "$$Field", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581F", "$$u", "$$zz", "$$y", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581Match", "$$All", "$$Docs", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581", "$$Open", "$$Range", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581Numeric", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581Numeric", "$$Range", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581", "$$Lower", "$$c", "$$ase", "$$Exp", "$$an", "$$ded", "$$Terms", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581Term", "$$Range", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581A", "$$l", "$$low", "$$L", "$$ead", "$$ing", "$$W", "$$ild", "$$c", "$$ard", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581An", "$$alyzer", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581P", "$$h", "$$rase", "$$S", "$$lo", "$$p", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581Boolean", "$$Query", "$$2", "$$Mod", "$$i", "$$fier", "$$Node", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581N", "$$o", "$$Child", "$$Op", "$$tim", "$$ization", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581Remove", "$$Delete", "$$dQuery", "$$Nodes", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581Remove", "$$Empty", "$$Non", "$$Le", "$$af", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581Boolean", "$$Single", "$$Child", "$$Op", "$$tim", "$$ization", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581De", "$$fault", "$$Phrase", "$$S", "$$lo", "$$p", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581Bo", "$$ost", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581Add(", "$$new", "\u2581M", "$$ulti", "$$Term", "$$Re", "$$write", "$$Method", "$$Processor", "$$())", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581St", "$$andard", "$$QueryNode", "$$Processor", "$$Pipeline", "$$(", "$$Query", "$$Config", "$$Handler", "\u2581query", "$$Config", "$$)", "\u2581{"], ["\u2581super(", "$$query", "$$Config", "$$)", "$$;"], ["\u2581add(", "$$new", "\u2581W", "$$ild", "$$c", "$$ard", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581M", "$$ulti", "$$Field", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581F", "$$u", "$$zz", "$$y", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581Re", "$$g", "$$exp", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581Match", "$$All", "$$Docs", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581", "$$Open", "$$Range", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581", "$$Point", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581", "$$Point", "$$Range", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581Term", "$$Range", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581A", "$$l", "$$low", "$$L", "$$ead", "$$ing", "$$W", "$$ild", "$$c", "$$ard", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581An", "$$alyzer", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581P", "$$h", "$$rase", "$$S", "$$lo", "$$p", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581Boolean", "$$Query", "$$2", "$$Mod", "$$i", "$$fier", "$$Node", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581N", "$$o", "$$Child", "$$Op", "$$tim", "$$ization", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581Remove", "$$Delete", "$$dQuery", "$$Nodes", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581Remove", "$$Empty", "$$Non", "$$Le", "$$af", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581Boolean", "$$Single", "$$Child", "$$Op", "$$tim", "$$ization", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581De", "$$fault", "$$Phrase", "$$S", "$$lo", "$$p", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581Bo", "$$ost", "$$QueryNode", "$$Processor", "$$())", "$$;"], ["\u2581add(", "$$new", "\u2581M", "$$ulti", "$$Term", "$$Re", "$$write", "$$Method", "$$Processor", "$$())", "$$;"], ["\u2581}"]]}, {"cs": "public String FormatAsString(String sheetName, bool useAbsoluteAddress) {\n    StringBuilder sb = new StringBuilder();\n    if (sheetName != null) {\n        sb.Append(SheetNameFormatter.Format(sheetName));\n        sb.Append(\"!\");\n    }\n    CellReference cellRefFrom = new CellReference(FirstRow, FirstColumn,useAbsoluteAddress, useAbsoluteAddress);\n    CellReference cellRefTo = new CellReference(LastRow, LastColumn,useAbsoluteAddress, useAbsoluteAddress);\n    sb.Append(cellRefFrom.FormatAsString());\n    if (!cellRefFrom.Equals(cellRefTo)|| IsFullColumnRange || IsFullRowRange) {\n        sb.Append(':');\n        sb.Append(cellRefTo.FormatAsString());\n    }\n    return sb.ToString();\n}\n", "java": "public String formatAsString(String sheetName, boolean useAbsoluteAddress) {\n    StringBuilder sb = new StringBuilder();\n    if (sheetName != null) {\n        sb.append(SheetNameFormatter.format(sheetName));\n        sb.append(\"!\");\n    }\n    CellReference cellRefFrom = new CellReference(getFirstRow(), getFirstColumn(),useAbsoluteAddress, useAbsoluteAddress);\n    CellReference cellRefTo = new CellReference(getLastRow(), getLastColumn(),useAbsoluteAddress, useAbsoluteAddress);\n    sb.append(cellRefFrom.formatAsString());\n    if(!cellRefFrom.equals(cellRefTo)|| isFullColumnRange() || isFullRowRange()) {\n        sb.append(':');\n        sb.append(cellRefTo.formatAsString());\n    }\n    return sb.toString();\n}\n", "cs_t": [["\u2581public", "\u2581String", "\u2581Format", "$$As", "$$String(String", "\u2581sheet", "$$Name,", "\u2581bool", "\u2581use", "$$A", "$$bs", "$$ol", "$$ute", "$$Addres", "$$s)", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$sheet", "$$Name", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581sb.Append(", "$$SheetName", "$$Format", "$$ter", "$$.Format", "$$(", "$$sheet", "$$Name", "$$))", "$$;"], ["\u2581sb.Append(\"", "$$!", "$$\")", "$$;"], ["\u2581}"], ["\u2581Cell", "$$Reference", "\u2581cell", "$$Ref", "$$From", "\u2581=", "\u2581new", "\u2581Cell", "$$Reference", "$$(", "$$First", "$$Row,", "\u2581F", "$$irst", "$$Column", "$$,", "$$use", "$$A", "$$bs", "$$ol", "$$ute", "$$Addres", "$$s,", "\u2581use", "$$A", "$$bs", "$$ol", "$$ute", "$$Addres", "$$s)", "$$;"], ["\u2581Cell", "$$Reference", "\u2581cell", "$$Ref", "$$To", "\u2581=", "\u2581new", "\u2581Cell", "$$Reference", "$$(", "$$Last", "$$Row,", "\u2581L", "$$ast", "$$Column", "$$,", "$$use", "$$A", "$$bs", "$$ol", "$$ute", "$$Addres", "$$s,", "\u2581use", "$$A", "$$bs", "$$ol", "$$ute", "$$Addres", "$$s)", "$$;"], ["\u2581sb.Append(", "$$cell", "$$Ref", "$$From", "$$.Format", "$$As", "$$String()", "$$)", "$$;"], ["\u2581if", "\u2581(!", "$$cell", "$$Ref", "$$From", "$$.Equals(", "$$cell", "$$Ref", "$$To", "$$)", "$$|", "$$|", "\u2581Is", "$$Full", "$$Column", "$$Range", "\u2581||", "\u2581Is", "$$Full", "$$Row", "$$Range", "$$)", "\u2581{"], ["\u2581sb.Append(", "$$'", "$$:", "$$')", "$$;"], ["\u2581sb.Append(", "$$cell", "$$Ref", "$$To", "$$.Format", "$$As", "$$String()", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581sb", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581format", "$$As", "$$String(String", "\u2581sheet", "$$Name,", "\u2581boolean", "\u2581use", "$$A", "$$bs", "$$ol", "$$ute", "$$Addres", "$$s)", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581if", "\u2581(", "$$sheet", "$$Name", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581sb.append(", "$$SheetName", "$$Format", "$$ter", "$$.format", "$$(", "$$sheet", "$$Name", "$$))", "$$;"], ["\u2581sb.append(\"", "$$!", "$$\")", "$$;"], ["\u2581}"], ["\u2581Cell", "$$Reference", "\u2581cell", "$$Ref", "$$From", "\u2581=", "\u2581new", "\u2581Cell", "$$Reference", "$$(get", "$$FirstRow", "$$(),", "\u2581get", "$$FirstColumn", "$$(),", "$$use", "$$A", "$$bs", "$$ol", "$$ute", "$$Addres", "$$s,", "\u2581use", "$$A", "$$bs", "$$ol", "$$ute", "$$Addres", "$$s)", "$$;"], ["\u2581Cell", "$$Reference", "\u2581cell", "$$Ref", "$$To", "\u2581=", "\u2581new", "\u2581Cell", "$$Reference", "$$(get", "$$LastRow", "$$(),", "\u2581get", "$$Last", "$$Column", "$$(),", "$$use", "$$A", "$$bs", "$$ol", "$$ute", "$$Addres", "$$s,", "\u2581use", "$$A", "$$bs", "$$ol", "$$ute", "$$Addres", "$$s)", "$$;"], ["\u2581sb.append(", "$$cell", "$$Ref", "$$From", "$$.format", "$$As", "$$String()", "$$)", "$$;"], ["\u2581if(", "$$!", "$$cell", "$$Ref", "$$From", "$$.equals(", "$$cell", "$$Ref", "$$To", "$$)", "$$|", "$$|", "\u2581is", "$$Full", "$$Column", "$$Range", "$$()", "\u2581||", "\u2581is", "$$Full", "$$Row", "$$Range", "$$())", "\u2581{"], ["\u2581sb", "$$.append('", "$$:", "$$')", "$$;"], ["\u2581sb.append(", "$$cell", "$$Ref", "$$To", "$$.format", "$$As", "$$String()", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581sb", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.ByteBuffer put(int index, byte value) {\n    throw new System.NotImplementedException();\n}\n", "java": "public ByteBuffer put(int index, byte value) {\n    throw new ReadOnlyBufferException();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.ByteBuffer", "\u2581put", "$$(int", "\u2581index,", "\u2581byte", "\u2581value)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.NotImplemented", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ByteBuffer", "\u2581put", "$$(int", "\u2581index,", "\u2581byte", "\u2581value)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void Mode(int m) {\n    _mode = m;\n}\n", "java": "public void mode(int m) {\n    _mode = m;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581M", "$$ode", "$$(int", "\u2581m", "$$)", "\u2581{"], ["\u2581_", "$$m", "$$ode", "\u2581=", "\u2581m", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581mode", "$$(int", "\u2581m", "$$)", "\u2581{"], ["\u2581_", "$$m", "$$ode", "\u2581=", "\u2581m", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.ShortBuffer slice() {\n    return new java.nio.ReadWriteShortArrayBuffer(remaining(), backingArray, offset +_position);\n}\n", "java": "public ShortBuffer slice() {\n    return new ReadWriteShortArrayBuffer(remaining(), backingArray, offset + position);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.", "$$Short", "$$Buffer", "\u2581slice", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581java.nio.Read", "$$Write", "$$Short", "$$Array", "$$Buffer", "$$(re", "$$maining", "$$(),", "\u2581b", "$$ackingArray,", "\u2581offset", "\u2581+", "$$_", "$$position", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Sh", "$$ort", "$$Buffer", "\u2581slice", "$$()", "\u2581{"], ["\u2581return", "\u2581new", "\u2581Read", "$$Write", "$$Short", "$$Array", "$$Buffer", "$$(re", "$$maining", "$$(),", "\u2581b", "$$ackingArray,", "\u2581offset", "\u2581+", "\u2581position", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void Set(int index, long n) {\n    if (count < index) {\n        throw Sharpen.Extensions.CreateIndexOutOfRangeException(index);\n    }\n    else {\n        if (count == index) {\n            Add(n);\n        }\n        else {\n            entries[index] = n;\n        }\n    }\n}\n", "java": "public void set(int index, long n) {\n    if (count < index)throw new ArrayIndexOutOfBoundsException(index);\n    else if (count == index)add(n);\n    elseentries[index] = n;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$(int", "\u2581index,", "\u2581long", "\u2581n", "$$)", "\u2581{"], ["\u2581if", "\u2581(count", "\u2581<", "\u2581index)", "\u2581{"], ["\u2581throw", "\u2581Sharpen.", "$$Ex", "$$tension", "$$s.", "$$Create", "$$IndexOutOf", "$$Range", "$$Exception(", "$$index", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581if", "\u2581(count", "\u2581==", "\u2581index)", "\u2581{"], ["\u2581Add(", "$$n", "$$)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581", "$$entries", "$$[index", "$$]", "\u2581=", "\u2581n", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$(int", "\u2581index,", "\u2581long", "\u2581n", "$$)", "\u2581{"], ["\u2581if", "\u2581(count", "\u2581<", "\u2581index)", "$$throw", "\u2581new", "\u2581Array", "$$IndexOutOf", "$$Bounds", "$$Exception(", "$$index", "$$)", "$$;"], ["\u2581else", "\u2581if", "\u2581(count", "\u2581==", "\u2581index)", "$$add(", "$$n", "$$)", "$$;"], ["\u2581else", "$$entries", "$$[index", "$$]", "\u2581=", "\u2581n", "$$;"], ["\u2581}"]]}, {"cs": "public override java.nio.ByteBuffer putFloat(float value) {\n    throw new java.nio.ReadOnlyBufferException();\n}\n", "java": "public ByteBuffer putFloat(float value) {\n    throw new ReadOnlyBufferException();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581java.nio.ByteBuffer", "\u2581put", "$$Float", "$$(float", "\u2581value)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581java.nio.Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ByteBuffer", "\u2581put", "$$Float", "$$(float", "\u2581value)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581Read", "$$OnlyBuffer", "$$Exception", "$$()", "$$;"], ["\u2581}"]]}, {"cs": "public static double Max(double[] values) {\n    double max = double.NegativeInfinity;\n    for (int i = 0, iSize = values.Length; i < iSize; i++) {\n        max = Math.Max(max, values[i]);\n    }\n    return max;\n}\n", "java": "public static double max(double[] values) {\n    double max = Double.NEGATIVE_INFINITY;\n    for (double value : values) {\n        max = Math.max(max, value);\n    }\n    return max;\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581M", "$$ax", "$$(double", "$$[]", "\u2581values", "$$)", "\u2581{"], ["\u2581double", "\u2581max", "\u2581=", "\u2581double", "$$.N", "$$eg", "$$ative", "$$In", "$$fin", "$$ity", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810,", "\u2581i", "$$Size", "\u2581=", "\u2581values", "$$.Length;", "\u2581i", "\u2581<", "\u2581i", "$$Size", "$$;", "\u2581i++)", "\u2581{"], ["\u2581max", "\u2581=", "\u2581Math.", "$$Max", "$$(", "$$max", "$$,", "\u2581values", "$$[i]", "$$)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581max", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581double", "\u2581max", "$$(double", "$$[]", "\u2581values", "$$)", "\u2581{"], ["\u2581double", "\u2581max", "\u2581=", "\u2581Double", "$$.N", "$$E", "$$G", "$$AT", "$$I", "$$V", "$$E_", "$$IN", "$$F", "$$IN", "$$IT", "$$Y", "$$;"], ["\u2581for", "\u2581(d", "$$ouble", "\u2581value", "\u2581:", "\u2581values", "$$)", "\u2581{"], ["\u2581max", "\u2581=", "\u2581Math.", "$$max", "$$(", "$$max", "$$,", "\u2581value)", "$$;"], ["\u2581}"], ["\u2581return", "\u2581max", "$$;"], ["\u2581}"]]}, {"cs": "public UpdateRepoWebhookRequest(): base(\"cr\", \"2016-06-07\", \"UpdateRepoWebhook\", \"cr\", \"openAPI\") {\n    UriPattern = \"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]\";\n    Method = MethodType.POST;\n}\n", "java": "public UpdateRepoWebhookRequest() {\n    super(\"cr\", \"2016-06-07\", \"UpdateRepoWebhook\", \"cr\");\n    setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]\");\n    setMethod(MethodType.POST);\n}\n", "cs_t": [["\u2581public", "\u2581Update", "$$Repo", "$$Web", "$$ho", "$$ok", "$$Request():", "\u2581base(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"", "$$Update", "$$Repo", "$$Web", "$$ho", "$$ok", "$$\",", "\u2581\"", "$$cr\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581", "$$UriPattern", "\u2581=", "\u2581\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]/", "$$w", "$$eb", "$$ho", "$$ok", "$$s", "$$/[", "$$Web", "$$ho", "$$ok", "$$Id", "$$]", "$$\"", "$$;"], ["\u2581Method", "\u2581=", "\u2581MethodType.POST", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Update", "$$Repo", "$$Web", "$$ho", "$$ok", "$$Request()", "\u2581{"], ["\u2581super(\"", "$$cr\",", "\u2581\"2016-06-07\",", "\u2581\"", "$$Update", "$$Repo", "$$Web", "$$ho", "$$ok", "$$\",", "\u2581\"", "$$cr", "$$\")", "$$;"], ["\u2581set", "$$UriPattern", "$$(\"/", "$$re", "$$pos", "$$/[Repo", "$$Namespace", "$$]", "$$/[Repo", "$$Name", "$$]/", "$$w", "$$eb", "$$ho", "$$ok", "$$s", "$$/[", "$$Web", "$$ho", "$$ok", "$$Id", "$$]", "$$\")", "$$;"], ["\u2581setMethod(Method", "$$Type.POST", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public DeleteAttributesRequest(string domainName, string itemName, List<Attribute> attributes, UpdateCondition expected) {\n    _domainName = domainName;\n    _itemName = itemName;\n    _attributes = attributes;\n    _expected = expected;\n}\n", "java": "public DeleteAttributesRequest(String domainName, String itemName, java.util.List<Attribute> attributes, UpdateCondition expected) {\n    setDomainName(domainName);\n    setItemName(itemName);\n    setAttributes(attributes);\n    setExpected(expected);\n}\n", "cs_t": [["\u2581public", "\u2581Delete", "$$Attributes", "$$Request(string", "\u2581d", "$$omain", "$$Name,", "\u2581string", "\u2581i", "$$tem", "$$Name,", "\u2581List<", "$$Attribute", "$$>", "\u2581at", "$$tributes", "$$,", "\u2581Update", "$$Con", "$$d", "$$ition", "\u2581expected", "$$)", "\u2581{"], ["\u2581_d", "$$omain", "$$Name", "\u2581=", "\u2581d", "$$omain", "$$Name", "$$;"], ["\u2581_", "$$i", "$$tem", "$$Name", "\u2581=", "\u2581i", "$$tem", "$$Name", "$$;"], ["\u2581_", "$$at", "$$tributes", "\u2581=", "\u2581at", "$$tributes", "$$;"], ["\u2581_", "$$expected", "\u2581=", "\u2581expected", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Attributes", "$$Request(String", "\u2581d", "$$omain", "$$Name,", "\u2581String", "\u2581i", "$$tem", "$$Name,", "\u2581java.util.", "$$List<", "$$Attribute", "$$>", "\u2581at", "$$tributes", "$$,", "\u2581Update", "$$Con", "$$d", "$$ition", "\u2581expected", "$$)", "\u2581{"], ["\u2581set", "$$Domain", "$$Name", "$$(d", "$$omain", "$$Name)", "$$;"], ["\u2581set", "$$Item", "$$Name", "$$(i", "$$tem", "$$Name)", "$$;"], ["\u2581set", "$$Attributes", "$$(", "$$at", "$$tributes", "$$)", "$$;"], ["\u2581set", "$$Exp", "$$ec", "$$te", "$$d(", "$$expected", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    StringBuilder sb = new StringBuilder();\n    sb.Append(\"[SXPI]\\n\");\n    for (int i = 0; i < _fieldInfos.Length; i++) {\n        sb.Append(\"    item[\").Append(i).Append(\"]=\");\n        _fieldInfos[i].AppendDebugInfo(sb);\n        sb.Append('\\n');\n    }\n    sb.Append(\"[/SXPI]\\n\");\n    return sb.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"[SXPI]\\n\");\n    for (int i = 0; i < _fieldInfos.length; i++) {\n        sb.append(\"    item[\").append(i).append(\"]=\");\n        _fieldInfos[i].appendDebugInfo(sb);\n        sb.append('\\n');\n    }\n    sb.append(\"[/SXPI]\\n\");\n    return sb.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581sb.Append(\"", "$$[", "$$S", "$$X", "$$P", "$$I", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581_", "$$field", "$$Info", "$$s.Length;", "\u2581i++)", "\u2581{"], ["\u2581sb.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581i", "$$tem", "$$[", "$$\").Append(", "$$i)", "$$.Append(\"", "$$]", "$$=", "$$\")", "$$;"], ["\u2581_", "$$field", "$$Info", "$$s[i]", "$$.Ap", "$$pend", "$$De", "$$bug", "$$Info", "$$(s", "$$b", "$$)", "$$;"], ["\u2581sb.Append(", "$$'", "$$\\n", "$$')", "$$;"], ["\u2581}"], ["\u2581sb.Append(\"", "$$[/", "$$S", "$$X", "$$P", "$$I", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581sb.append(\"", "$$[", "$$S", "$$X", "$$P", "$$I", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581for", "\u2581(int", "\u2581i", "\u2581=", "\u25810;", "\u2581i", "\u2581<", "\u2581_", "$$field", "$$Info", "$$s.length;", "\u2581i++)", "\u2581{"], ["\u2581sb.append(\"", "\u2581", "\u2581", "\u2581", "\u2581i", "$$tem", "$$[", "$$\").append(", "$$i)", "$$.append(\"", "$$]", "$$=", "$$\")", "$$;"], ["\u2581_", "$$field", "$$Info", "$$s[i]", "$$.ap", "$$pend", "$$De", "$$bug", "$$Info", "$$(s", "$$b", "$$)", "$$;"], ["\u2581sb", "$$.append('", "$$\\n", "$$')", "$$;"], ["\u2581}"], ["\u2581sb.append(\"", "$$[/", "$$S", "$$X", "$$P", "$$I", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual bool IsSuccessful() {\n    if (mergeResult != null) {\n        return mergeResult.GetMergeStatus().IsSuccessful();\n    }\n    else {\n        if (rebaseResult != null) {\n            return rebaseResult.GetStatus().IsSuccessful();\n        }\n    }\n    return true;\n}\n", "java": "public boolean isSuccessful() {\n    if (mergeResult != null)return mergeResult.getMergeStatus().isSuccessful();\n    else if (rebaseResult != null)return rebaseResult.getStatus().isSuccessful();\n    return true;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581bool", "\u2581Is", "$$S", "$$uc", "$$cess", "$$f", "$$ul", "$$()", "\u2581{"], ["\u2581if", "\u2581(m", "$$erge", "$$Result", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581m", "$$erge", "$$Result", "$$.Get", "$$Merge", "$$Status", "$$().", "$$Is", "$$S", "$$uc", "$$cess", "$$f", "$$ul", "$$()", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581if", "\u2581(re", "$$base", "$$Result", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581return", "\u2581re", "$$base", "$$Result", "$$.Get", "$$Status", "$$().", "$$Is", "$$S", "$$uc", "$$cess", "$$f", "$$ul", "$$()", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$S", "$$uc", "$$cess", "$$f", "$$ul", "$$()", "\u2581{"], ["\u2581if", "\u2581(m", "$$erge", "$$Result", "\u2581!=", "\u2581null)", "$$return", "\u2581m", "$$erge", "$$Result", "$$.get", "$$Merge", "$$Status", "$$().", "$$is", "$$S", "$$uc", "$$cess", "$$f", "$$ul", "$$()", "$$;"], ["\u2581else", "\u2581if", "\u2581(re", "$$base", "$$Result", "\u2581!=", "\u2581null)", "$$return", "\u2581re", "$$base", "$$Result", "$$.get", "$$Status", "$$().", "$$is", "$$S", "$$uc", "$$cess", "$$f", "$$ul", "$$()", "$$;"], ["\u2581return", "\u2581true", "$$;"], ["\u2581}"]]}, {"cs": "public virtual void SetBytesValue(byte[] value) {\n    SetBytesValue(new BytesRef(value));\n}\n", "java": "public void setBytesValue(byte[] value) {\n    setBytesValue(new BytesRef(value));\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581void", "\u2581Set", "$$Bytes", "$$Value", "$$(byte[]", "\u2581value)", "\u2581{"], ["\u2581Set", "$$Bytes", "$$Value", "$$(new", "\u2581BytesRef", "$$(value", "$$))", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581set", "$$Bytes", "$$Value", "$$(byte[]", "\u2581value)", "\u2581{"], ["\u2581set", "$$Bytes", "$$Value", "$$(new", "\u2581BytesRef", "$$(value", "$$))", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeConnectionsResponse DescribeConnections(DescribeConnectionsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeConnectionsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeConnectionsResponseUnmarshaller.Instance;\n    return Invoke<DescribeConnectionsResponse>(request, options);\n}\n", "java": "public DescribeConnectionsResult describeConnections(DescribeConnectionsRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeConnections(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Connection", "$$sResponse", "\u2581Describe", "$$Connection", "$$s(Describe", "$$Connection", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Connection", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Connection", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Connection", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Connection", "$$sResult", "\u2581describe", "$$Connection", "$$s(Describe", "$$Connection", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Connection", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public DeletePhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"DeletePhotos\", \"cloudphoto\", \"openAPI\") {\n    Protocol = ProtocolType.HTTPS;\n}\n", "java": "public DeletePhotosRequest() {\n    super(\"CloudPhoto\", \"2017-07-11\", \"DeletePhotos\", \"cloudphoto\");\n    setProtocol(ProtocolType.HTTPS);\n}\n", "cs_t": [["\u2581public", "\u2581Delete", "$$Photo", "$$sRequest", "$$():", "\u2581base(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Delete", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\",", "\u2581\"openAPI\")", "\u2581{"], ["\u2581Protocol", "\u2581=", "\u2581ProtocolType.HTTPS", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Photo", "$$sRequest", "$$()", "\u2581{"], ["\u2581super(\"", "$$CloudPhoto\",", "\u2581\"2017-07-11\",", "\u2581\"", "$$Delete", "$$Photo", "$$s\",", "\u2581\"cloudphoto", "$$\")", "$$;"], ["\u2581setProtocol(ProtocolType.HTTPS", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public void add(E @object) {\n    iterator.add(@object);\n    subList.sizeChanged(true);\n    end++;\n}\n", "java": "public void add(E object) {\n    iterator.add(object);\n    subList.sizeChanged(true);\n    end++;\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581add(", "$$E", "\u2581@object)", "\u2581{"], ["\u2581iterator", "$$.add(", "$$@", "$$object", "$$)", "$$;"], ["\u2581sub", "$$List", "$$.size", "$$Change", "$$d(", "$$t", "$$rue", "$$)", "$$;"], ["\u2581end", "$$++", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581add(", "$$E", "\u2581object)", "\u2581{"], ["\u2581iterator", "$$.add(", "$$object", "$$)", "$$;"], ["\u2581sub", "$$List", "$$.size", "$$Change", "$$d(", "$$t", "$$rue", "$$)", "$$;"], ["\u2581end", "$$++", "$$;"], ["\u2581}"]]}, {"cs": "public static java.nio.ByteBuffer allocate(int capacity_1) {\n    if (capacity_1 < 0) {\n        throw new System.ArgumentException();\n    }\n    return new java.nio.ReadWriteHeapByteBuffer(capacity_1);\n}\n", "java": "public static ByteBuffer allocate(int capacity) {\n    if (capacity < 0) {\n        throw new IllegalArgumentException();\n    }\n    return new ReadWriteHeapByteBuffer(capacity);\n}\n", "cs_t": [["\u2581public", "\u2581static", "\u2581java.nio.ByteBuffer", "\u2581all", "$$oc", "$$ate", "$$(int", "\u2581capacity", "$$_", "$$1)", "\u2581{"], ["\u2581if", "\u2581(c", "$$apacity", "$$_1", "\u2581<", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581System.Ar", "$$gumentException", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581new", "\u2581java.nio.Read", "$$Write", "$$He", "$$ap", "$$ByteBuffer", "$$(c", "$$apacity", "$$_", "$$1)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581static", "\u2581ByteBuffer", "\u2581all", "$$oc", "$$ate", "$$(int", "\u2581capacity", "$$)", "\u2581{"], ["\u2581if", "\u2581(c", "$$apacity", "\u2581<", "\u25810)", "\u2581{"], ["\u2581throw", "\u2581new", "\u2581IllegalArgumentException", "$$()", "$$;"], ["\u2581}"], ["\u2581return", "\u2581new", "\u2581Read", "$$Write", "$$He", "$$ap", "$$ByteBuffer", "$$(c", "$$apacity", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual SrndQuery GetSubQuery(int qn) {\n    return m_queries[qn];\n}\n", "java": "public SrndQuery getSubQuery(int qn) {\n    return queries.get(qn);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581S", "$$rndQuery", "\u2581Get", "$$Sub", "$$Query", "$$(int", "\u2581q", "$$n", "$$)", "\u2581{"], ["\u2581return", "\u2581m_", "$$qu", "$$eries", "$$[", "$$q", "$$n", "$$]", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$rndQuery", "\u2581get", "$$Sub", "$$Query", "$$(int", "\u2581q", "$$n", "$$)", "\u2581{"], ["\u2581return", "\u2581qu", "$$eries", "$$.get(", "$$q", "$$n", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override float CurrentScore(int docId, string field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {\n    if (numPayloadsSeen == 0) {\n        return currentPayloadScore;\n    }\n    else {\n        return Math.Min(currentPayloadScore, currentScore);\n    }\n}\n", "java": "public float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {\n    if (numPayloadsSeen == 0) {\n        return currentPayloadScore;\n    }\n    else {\n        return Math.min(currentPayloadScore, currentScore);\n    }\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581float", "\u2581C", "$$urrent", "$$Score", "$$(int", "\u2581doc", "$$Id,", "\u2581string", "\u2581field", "$$,", "\u2581int", "\u2581start,", "\u2581int", "\u2581end,", "\u2581int", "\u2581num", "$$Payload", "$$s", "$$Se", "$$en", "$$,", "\u2581float", "\u2581current", "$$Score", "$$,", "\u2581float", "\u2581current", "$$Payload", "$$Score", "$$)", "\u2581{"], ["\u2581if", "\u2581(n", "$$um", "$$Payload", "$$s", "$$Se", "$$en", "\u2581==", "\u25810)", "\u2581{"], ["\u2581return", "\u2581current", "$$Payload", "$$Score", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581Math.", "$$Min", "$$(c", "$$urrent", "$$Payload", "$$Score", "$$,", "\u2581current", "$$Score", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581float", "\u2581current", "$$Score", "$$(int", "\u2581doc", "$$Id,", "\u2581String", "\u2581field", "$$,", "\u2581int", "\u2581start,", "\u2581int", "\u2581end,", "\u2581int", "\u2581num", "$$Payload", "$$s", "$$Se", "$$en", "$$,", "\u2581float", "\u2581current", "$$Score", "$$,", "\u2581float", "\u2581current", "$$Payload", "$$Score", "$$)", "\u2581{"], ["\u2581if", "\u2581(n", "$$um", "$$Payload", "$$s", "$$Se", "$$en", "\u2581==", "\u25810)", "\u2581{"], ["\u2581return", "\u2581current", "$$Payload", "$$Score", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581return", "\u2581Math.", "$$min", "$$(c", "$$urrent", "$$Payload", "$$Score", "$$,", "\u2581current", "$$Score", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[BLANK]\\n\");\n    buffer.Append(\"row       = \").Append(HexDump.ShortToHex(Row)).Append(\"\\n\");\n    buffer.Append(\"col       = \").Append(HexDump.ShortToHex(Column)).Append(\"\\n\");\n    buffer.Append(\"xf        = \").Append(HexDump.ShortToHex(XFIndex)).Append(\"\\n\");\n    buffer.Append(\"[/BLANK]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"[BLANK]\\n\");\n    sb.append(\"    row= \").append(HexDump.shortToHex(getRow())).append(\"\\n\");\n    sb.append(\"    col= \").append(HexDump.shortToHex(getColumn())).append(\"\\n\");\n    sb.append(\"    xf = \").append(HexDump.shortToHex(getXFIndex())).append(\"\\n\");\n    sb.append(\"[/BLANK]\\n\");\n    return sb.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$B", "$$L", "$$AN", "$$K", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "$$row", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$HexDump.Short", "$$ToHex(", "$$Row", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "$$col", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$HexDump.Short", "$$ToHex(", "$$Column", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "$$x", "$$f", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\").Append(", "$$HexDump.Short", "$$ToHex(", "$$X", "$$F", "$$Index", "$$))", "$$.Append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"[/", "$$B", "$$L", "$$AN", "$$K", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581sb", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581sb.append(\"", "$$[", "$$B", "$$L", "$$AN", "$$K", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581sb.append(\"", "\u2581", "\u2581", "\u2581", "\u2581row", "$$=", "\u2581\").append(", "$$HexDump.short", "$$ToHex(", "$$get", "$$Row", "$$()))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581sb.append(\"", "\u2581", "\u2581", "\u2581", "\u2581col", "$$=", "\u2581\").append(", "$$HexDump.short", "$$ToHex(", "$$get", "$$Column", "$$()))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581sb.append(\"", "\u2581", "\u2581", "\u2581", "\u2581x", "$$f", "\u2581=", "\u2581\").append(", "$$HexDump.short", "$$ToHex(", "$$get", "$$X", "$$F", "$$Index", "$$()))", "$$.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581sb.append(\"", "$$[/", "$$B", "$$L", "$$AN", "$$K", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581sb", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual DescribeLogPatternResponse DescribeLogPattern(DescribeLogPatternRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = DescribeLogPatternRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = DescribeLogPatternResponseUnmarshaller.Instance;\n    return Invoke<DescribeLogPatternResponse>(request, options);\n}\n", "java": "public DescribeLogPatternResult describeLogPattern(DescribeLogPatternRequest request) {\n    request = beforeClientExecution(request);\n    return executeDescribeLogPattern(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Describe", "$$Log", "$$Pattern", "$$Response", "\u2581Describe", "$$Log", "$$Pattern", "$$(Describe", "$$Log", "$$Pattern", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Describe", "$$Log", "$$Pattern", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Describe", "$$Log", "$$Pattern", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Describe", "$$Log", "$$Pattern", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Describe", "$$Log", "$$Pattern", "$$Result", "\u2581describe", "$$Log", "$$Pattern", "$$(Describe", "$$Log", "$$Pattern", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeDescribe", "$$Log", "$$Pattern", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual RegisterTransitGatewayMulticastGroupMembersResponse RegisterTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = RegisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;\n    return Invoke<RegisterTransitGatewayMulticastGroupMembersResponse>(request, options);\n}\n", "java": "public RegisterTransitGatewayMulticastGroupMembersResult registerTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request) {\n    request = beforeClientExecution(request);\n    return executeRegisterTransitGatewayMulticastGroupMembers(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Register", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$sResponse", "\u2581Register", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$s(", "$$Re", "$$gister", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Register", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Register", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Re", "$$gister", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Register", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$sResult", "\u2581re", "$$gister", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$s(", "$$Re", "$$gister", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Re", "$$gister", "$$TransitGatewayMulticast", "$$Group", "$$Member", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetPhoneNumberSettingsResponse GetPhoneNumberSettings(GetPhoneNumberSettingsRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetPhoneNumberSettingsRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetPhoneNumberSettingsResponseUnmarshaller.Instance;\n    return Invoke<GetPhoneNumberSettingsResponse>(request, options);\n}\n", "java": "public GetPhoneNumberSettingsResult getPhoneNumberSettings(GetPhoneNumberSettingsRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetPhoneNumberSettings(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$PhoneNumber", "$$Setting", "$$sResponse", "\u2581Get", "$$PhoneNumber", "$$Setting", "$$s(Get", "$$PhoneNumber", "$$Setting", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$PhoneNumber", "$$Setting", "$$s", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$PhoneNumber", "$$Setting", "$$s", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$PhoneNumber", "$$Setting", "$$sResponse>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$PhoneNumber", "$$Setting", "$$sResult", "\u2581get", "$$PhoneNumber", "$$Setting", "$$s(Get", "$$PhoneNumber", "$$Setting", "$$sRequest", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$PhoneNumber", "$$Setting", "$$s", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual ObjectId GetData() {\n    return data;\n}\n", "java": "public ObjectId getData() {\n    return data;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581ObjectId", "\u2581Get", "$$Data", "$$()", "\u2581{"], ["\u2581return", "\u2581data", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581ObjectId", "\u2581get", "$$Data", "$$()", "\u2581{"], ["\u2581return", "\u2581data", "$$;"], ["\u2581}"]]}, {"cs": "public override bool isDirect() {\n    return false;\n}\n", "java": "public boolean isDirect() {\n    return false;\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581bool", "\u2581is", "$$Direct", "$$()", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581is", "$$Direct", "$$()", "\u2581{"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"]]}, {"cs": "public DeleteServerCertificateRequest(string serverCertificateName) {\n    _serverCertificateName = serverCertificateName;\n}\n", "java": "public DeleteServerCertificateRequest(String serverCertificateName) {\n    setServerCertificateName(serverCertificateName);\n}\n", "cs_t": [["\u2581public", "\u2581Delete", "$$Server", "$$Certificate", "$$Request(string", "\u2581s", "$$erver", "$$Certificate", "$$Name)", "\u2581{"], ["\u2581_", "$$ser", "$$ver", "$$Certificate", "$$Name", "\u2581=", "\u2581s", "$$erver", "$$Certificate", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Delete", "$$Server", "$$Certificate", "$$Request(String", "\u2581s", "$$erver", "$$Certificate", "$$Name)", "\u2581{"], ["\u2581set", "$$Server", "$$Certificate", "$$Name(", "$$ser", "$$ver", "$$Certificate", "$$Name)", "$$;"], ["\u2581}"]]}, {"cs": "public java.lang.StringBuffer append(bool b) {\n    return append(b ? \"true\" : \"false\");\n}\n", "java": "public StringBuffer append(double d) {\n    RealToString.getInstance().appendDouble(this, d);\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581java.lang.String", "$$Buffer", "\u2581append(", "$$bo", "$$ol", "\u2581b)", "\u2581{"], ["\u2581return", "\u2581append(", "$$b", "\u2581?", "\u2581\"", "$$t", "$$rue", "$$\"", "\u2581:", "\u2581\"", "$$f", "$$alse", "$$\")", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "$$Buffer", "\u2581append(", "$$d", "$$ouble", "\u2581d", "$$)", "\u2581{"], ["\u2581Re", "$$al", "$$To", "$$String", "$$.get", "$$Instance", "$$()", "$$.ap", "$$pend", "$$Double", "$$(this,", "\u2581d", "$$)", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetEvaluationResponse GetEvaluation(GetEvaluationRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetEvaluationRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetEvaluationResponseUnmarshaller.Instance;\n    return Invoke<GetEvaluationResponse>(request, options);\n}\n", "java": "public GetEvaluationResult getEvaluation(GetEvaluationRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetEvaluation(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Evaluation", "$$Response", "\u2581Get", "$$Evaluation", "$$(Get", "$$Evaluation", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Evaluation", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Evaluation", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Evaluation", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Evaluation", "$$Result", "\u2581get", "$$Evaluation", "$$(Get", "$$Evaluation", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Evaluation", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public BRAIRecord GetDataName() {\n    return dataName;\n}\n", "java": "public LinkedDataRecord getDataName() {\n    return dataName;\n}\n", "cs_t": [["\u2581public", "\u2581B", "$$R", "$$A", "$$I", "$$Record", "\u2581Get", "$$Data", "$$Name()", "\u2581{"], ["\u2581return", "\u2581data", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581L", "$$ink", "$$ed", "$$Data", "$$Record", "\u2581get", "$$Data", "$$Name()", "\u2581{"], ["\u2581return", "\u2581data", "$$Name", "$$;"], ["\u2581}"]]}, {"cs": "public bool find(int start_1) {\n    findPos = start_1;\n    if (findPos < _regionStart) {\n        findPos = _regionStart;\n    }\n    else {\n        if (findPos >= _regionEnd) {\n            matchFound = false;\n            return false;\n        }\n    }\n    matchFound = findImpl(address, input, findPos, matchOffsets);\n    if (matchFound) {\n        findPos = matchOffsets[1];\n    }\n    return matchFound;\n}\n", "java": "public boolean find(int start) {\n    findPos = start;\n    if (findPos < regionStart) {\n        findPos = regionStart;\n    }\n    else if (findPos >= regionEnd) {\n        matchFound = false;\n        return false;\n    }\n    matchFound = findImpl(address, input, findPos, matchOffsets);\n    if (matchFound) {\n        findPos = matchOffsets[1];\n    }\n    return matchFound;\n}\n", "cs_t": [["\u2581public", "\u2581bool", "\u2581fin", "$$d(", "$$int", "\u2581start", "$$_", "$$1)", "\u2581{"], ["\u2581find", "$$Pos", "\u2581=", "\u2581start", "$$_1", "$$;"], ["\u2581if", "\u2581(f", "$$ind", "$$Pos", "\u2581<", "\u2581_re", "$$gion", "$$Start", "$$)", "\u2581{"], ["\u2581find", "$$Pos", "\u2581=", "\u2581_re", "$$gion", "$$Start", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581if", "\u2581(f", "$$ind", "$$Pos", "\u2581>=", "\u2581_re", "$$gion", "$$End", "$$)", "\u2581{"], ["\u2581match", "$$Found", "\u2581=", "\u2581false", "$$;"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581match", "$$Found", "\u2581=", "\u2581find", "$$Impl", "$$(", "$$add", "$$res", "$$s,", "\u2581input,", "\u2581find", "$$Po", "$$s,", "\u2581match", "$$Offset", "$$s)", "$$;"], ["\u2581if", "\u2581(m", "$$atch", "$$Found", "$$)", "\u2581{"], ["\u2581find", "$$Pos", "\u2581=", "\u2581match", "$$Offset", "$$s[", "$$1", "$$]", "$$;"], ["\u2581}"], ["\u2581return", "\u2581match", "$$Found", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581boolean", "\u2581fin", "$$d(", "$$int", "\u2581start", "$$)", "\u2581{"], ["\u2581find", "$$Pos", "\u2581=", "\u2581start", "$$;"], ["\u2581if", "\u2581(f", "$$ind", "$$Pos", "\u2581<", "\u2581region", "$$Start", "$$)", "\u2581{"], ["\u2581find", "$$Pos", "\u2581=", "\u2581region", "$$Start", "$$;"], ["\u2581}"], ["\u2581else", "\u2581if", "\u2581(f", "$$ind", "$$Pos", "\u2581>=", "\u2581region", "$$End", "$$)", "\u2581{"], ["\u2581match", "$$Found", "\u2581=", "\u2581false", "$$;"], ["\u2581return", "\u2581false", "$$;"], ["\u2581}"], ["\u2581match", "$$Found", "\u2581=", "\u2581find", "$$Impl", "$$(", "$$add", "$$res", "$$s,", "\u2581input,", "\u2581find", "$$Po", "$$s,", "\u2581match", "$$Offset", "$$s)", "$$;"], ["\u2581if", "\u2581(m", "$$atch", "$$Found", "$$)", "\u2581{"], ["\u2581find", "$$Pos", "\u2581=", "\u2581match", "$$Offset", "$$s[", "$$1", "$$]", "$$;"], ["\u2581}"], ["\u2581return", "\u2581match", "$$Found", "$$;"], ["\u2581}"]]}, {"cs": "public virtual GetLifecyclePolicyPreviewResponse GetLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = GetLifecyclePolicyPreviewRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = GetLifecyclePolicyPreviewResponseUnmarshaller.Instance;\n    return Invoke<GetLifecyclePolicyPreviewResponse>(request, options);\n}\n", "java": "public GetLifecyclePolicyPreviewResult getLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request) {\n    request = beforeClientExecution(request);\n    return executeGetLifecyclePolicyPreview(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Get", "$$Lifecycle", "$$Policy", "$$Pre", "$$vi", "$$ew", "$$Response", "\u2581Get", "$$Lifecycle", "$$Policy", "$$Pre", "$$vi", "$$ew", "$$(Get", "$$Lifecycle", "$$Policy", "$$Pre", "$$vi", "$$ew", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Get", "$$Lifecycle", "$$Policy", "$$Pre", "$$vi", "$$ew", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Get", "$$Lifecycle", "$$Policy", "$$Pre", "$$vi", "$$ew", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<Get", "$$Lifecycle", "$$Policy", "$$Pre", "$$vi", "$$ew", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Get", "$$Lifecycle", "$$Policy", "$$Pre", "$$vi", "$$ew", "$$Result", "\u2581get", "$$Lifecycle", "$$Policy", "$$Pre", "$$vi", "$$ew", "$$(Get", "$$Lifecycle", "$$Policy", "$$Pre", "$$vi", "$$ew", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581executeGet", "$$Lifecycle", "$$Policy", "$$Pre", "$$vi", "$$ew", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public SinglePositionTokenStream(string word) {\n    termAtt = AddAttribute<ICharTermAttribute>();\n    posIncrAtt = AddAttribute<IPositionIncrementAttribute>();\n    this.word = word;\n    returned = true;\n}\n", "java": "public SinglePositionTokenStream(String word) {\n    termAtt = addAttribute(CharTermAttribute.class);\n    posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n    this.word = word;\n    returned = true;\n}\n", "cs_t": [["\u2581public", "\u2581S", "$$ingle", "$$Position", "$$TokenStream", "$$(string", "\u2581word", "$$)", "\u2581{"], ["\u2581term", "$$Att", "\u2581=", "\u2581Add", "$$Attribute", "$$<", "$$I", "$$Char", "$$Term", "$$Attribute", "$$>", "$$()", "$$;"], ["\u2581pos", "$$In", "$$cr", "$$Att", "\u2581=", "\u2581Add", "$$Attribute", "$$<", "$$I", "$$Position", "$$Increment", "$$Attribute", "$$>", "$$()", "$$;"], ["\u2581this.", "$$word", "\u2581=", "\u2581word", "$$;"], ["\u2581return", "$$ed", "\u2581=", "\u2581true", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581S", "$$ingle", "$$Position", "$$TokenStream", "$$(String", "\u2581word", "$$)", "\u2581{"], ["\u2581term", "$$Att", "\u2581=", "\u2581add", "$$Attribute", "$$(", "$$Char", "$$Term", "$$Attribute", "$$.c", "$$las", "$$s)", "$$;"], ["\u2581pos", "$$In", "$$cr", "$$Att", "\u2581=", "\u2581add", "$$Attribute", "$$(", "$$Position", "$$Increment", "$$Attribute", "$$.c", "$$las", "$$s)", "$$;"], ["\u2581this.", "$$word", "\u2581=", "\u2581word", "$$;"], ["\u2581return", "$$ed", "\u2581=", "\u2581true", "$$;"], ["\u2581}"]]}, {"cs": "public override void Serialize(ILittleEndianOutput out1) {\n    out1.WriteShort(field_1_print_gridlines);\n}\n", "java": "public void serialize(LittleEndianOutput out) {\n    out.writeShort(field_1_print_gridlines);\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581void", "\u2581Serialize(ILittleEndianOutput", "\u2581out1)", "\u2581{"], ["\u2581out1.WriteShort(", "$$field_1_", "$$p", "$$rint", "$$_", "$$g", "$$ri", "$$d", "$$l", "$$ines", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581serialize(LittleEndianOutput", "\u2581out)", "\u2581{"], ["\u2581out.writeShort(", "$$field_1_", "$$p", "$$rint", "$$_", "$$g", "$$ri", "$$d", "$$l", "$$ines", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override string ToString() {\n    StringBuilder s = new StringBuilder();\n    s.Append(Constants.TypeString(Type));\n    s.Append(' ');\n    s.Append(Name);\n    s.Append(' ');\n    s.Append(commitTime);\n    s.Append(' ');\n    AppendCoreFlags(s);\n    return s.ToString();\n}\n", "java": "public String toString() {\n    final StringBuilder s = new StringBuilder();\n    s.append(Constants.typeString(getType()));\n    s.append(' ');\n    s.append(name());\n    s.append(' ');\n    s.append(commitTime);\n    s.append(' ');\n    appendCoreFlags(s);\n    return s.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581string", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581s", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581s", "$$.Append(", "$$Constants.", "$$Type", "$$String(", "$$Type", "$$))", "$$;"], ["\u2581s", "$$.Append('", "\u2581'", "$$)", "$$;"], ["\u2581s", "$$.Append(", "$$Name)", "$$;"], ["\u2581s", "$$.Append('", "\u2581'", "$$)", "$$;"], ["\u2581s", "$$.Append(", "$$com", "$$mit", "$$Time", "$$)", "$$;"], ["\u2581s", "$$.Append('", "\u2581'", "$$)", "$$;"], ["\u2581Ap", "$$pend", "$$Co", "$$re", "$$Flag", "$$s(", "$$s)", "$$;"], ["\u2581return", "\u2581s", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581final", "\u2581StringBuilder", "\u2581s", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581s", "$$.append(", "$$Constants.", "$$type", "$$String(", "$$get", "$$Type()", "$$))", "$$;"], ["\u2581s", "$$.append('", "\u2581'", "$$)", "$$;"], ["\u2581s", "$$.append(", "$$name", "$$())", "$$;"], ["\u2581s", "$$.append('", "\u2581'", "$$)", "$$;"], ["\u2581s", "$$.append(", "$$com", "$$mit", "$$Time", "$$)", "$$;"], ["\u2581s", "$$.append('", "\u2581'", "$$)", "$$;"], ["\u2581append", "$$Co", "$$re", "$$Flag", "$$s(", "$$s)", "$$;"], ["\u2581return", "\u2581s", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual NGit.Api.LsRemoteCommand SetRemote(string remote) {\n    CheckCallable();\n    this.remote = remote;\n    return this;\n}\n", "java": "public LsRemoteCommand setRemote(String remote) {\n    checkCallable();\n    this.remote = remote;\n    return this;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581NGit.Api.", "$$L", "$$s", "$$Re", "$$mote", "$$Command", "\u2581Set", "$$Re", "$$mote", "$$(string", "\u2581re", "$$mote", "$$)", "\u2581{"], ["\u2581Check", "$$Callable", "$$()", "$$;"], ["\u2581this.", "$$re", "$$mote", "\u2581=", "\u2581re", "$$mote", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581L", "$$s", "$$Re", "$$mote", "$$Command", "\u2581set", "$$Re", "$$mote", "$$(String", "\u2581re", "$$mote", "$$)", "\u2581{"], ["\u2581check", "$$Callable", "$$()", "$$;"], ["\u2581this.", "$$re", "$$mote", "\u2581=", "\u2581re", "$$mote", "$$;"], ["\u2581return", "\u2581this", "$$;"], ["\u2581}"]]}, {"cs": "public void CollapseRow(int rowNumber) {\n    int startRow = FindStartOfRowOutlineGroup(rowNumber);\n    RowRecord rowRecord = GetRow(startRow);\n    int lastRow = WriteHidden(rowRecord, startRow, true);\n    if (GetRow(lastRow + 1) != null) {\n        GetRow(lastRow + 1).Colapsed = (true);\n    }\n    else {\n        RowRecord row = CreateRow(lastRow + 1);\n        row.Colapsed = (true);\n        InsertRow(row);\n    }\n}\n", "java": "public void collapseRow(int rowNumber) {\n    int startRow = findStartOfRowOutlineGroup(rowNumber);\n    RowRecord rowRecord = getRow(startRow);\n    int nextRowIx = writeHidden(rowRecord, startRow);\n    RowRecord row = getRow(nextRowIx);\n    if (row == null) {\n        row = createRow(nextRowIx);\n        insertRow(row);\n    }\n    row.setColapsed(true);\n}\n", "cs_t": [["\u2581public", "\u2581void", "\u2581", "$$Col", "$$l", "$$ap", "$$se", "$$Row", "$$(int", "\u2581row", "$$Number", "$$)", "\u2581{"], ["\u2581int", "\u2581start", "$$Row", "\u2581=", "\u2581F", "$$ind", "$$Start", "$$Of", "$$Row", "$$Out", "$$line", "$$Group", "$$(", "$$row", "$$Number", "$$)", "$$;"], ["\u2581Row", "$$Record", "\u2581row", "$$Record", "\u2581=", "\u2581Get", "$$Row", "$$(start", "$$Row", "$$)", "$$;"], ["\u2581int", "\u2581last", "$$Row", "\u2581=", "\u2581Write", "$$H", "$$id", "$$d", "$$en", "$$(", "$$row", "$$Record", "$$,", "\u2581start", "$$Row,", "\u2581true", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$Get", "$$Row", "$$(", "$$last", "$$Row", "\u2581+", "\u25811)", "\u2581!=", "\u2581null)", "\u2581{"], ["\u2581Get", "$$Row", "$$(", "$$last", "$$Row", "\u2581+", "\u25811)", "$$.", "$$Col", "$$ap", "$$sed", "\u2581=", "\u2581(true)", "$$;"], ["\u2581}"], ["\u2581else", "\u2581{"], ["\u2581Row", "$$Record", "\u2581row", "\u2581=", "\u2581Create", "$$Row", "$$(", "$$last", "$$Row", "\u2581+", "\u25811)", "$$;"], ["\u2581row", "$$.", "$$Col", "$$ap", "$$sed", "\u2581=", "\u2581(true)", "$$;"], ["\u2581In", "$$sert", "$$Row", "$$(", "$$row", "$$)", "$$;"], ["\u2581}"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581void", "\u2581col", "$$l", "$$ap", "$$se", "$$Row", "$$(int", "\u2581row", "$$Number", "$$)", "\u2581{"], ["\u2581int", "\u2581start", "$$Row", "\u2581=", "\u2581find", "$$Start", "$$Of", "$$Row", "$$Out", "$$line", "$$Group", "$$(", "$$row", "$$Number", "$$)", "$$;"], ["\u2581Row", "$$Record", "\u2581row", "$$Record", "\u2581=", "\u2581get", "$$Row", "$$(start", "$$Row", "$$)", "$$;"], ["\u2581int", "\u2581next", "$$Row", "$$Ix", "\u2581=", "\u2581write", "$$H", "$$id", "$$d", "$$en", "$$(", "$$row", "$$Record", "$$,", "\u2581start", "$$Row", "$$)", "$$;"], ["\u2581Row", "$$Record", "\u2581row", "\u2581=", "\u2581get", "$$Row", "$$(n", "$$ext", "$$Row", "$$Ix", "$$)", "$$;"], ["\u2581if", "\u2581(", "$$row", "\u2581==", "\u2581null)", "\u2581{"], ["\u2581row", "\u2581=", "\u2581create", "$$Row", "$$(n", "$$ext", "$$Row", "$$Ix", "$$)", "$$;"], ["\u2581insert", "$$Row", "$$(", "$$row", "$$)", "$$;"], ["\u2581}"], ["\u2581row", "$$.set", "$$Col", "$$ap", "$$se", "$$d(", "$$t", "$$rue", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public virtual AssociateSkillGroupWithRoomResponse AssociateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request) {\n    var options = new InvokeOptions();\n    options.RequestMarshaller = AssociateSkillGroupWithRoomRequestMarshaller.Instance;\n    options.ResponseUnmarshaller = AssociateSkillGroupWithRoomResponseUnmarshaller.Instance;\n    return Invoke<AssociateSkillGroupWithRoomResponse>(request, options);\n}\n", "java": "public AssociateSkillGroupWithRoomResult associateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request) {\n    request = beforeClientExecution(request);\n    return executeAssociateSkillGroupWithRoom(request);\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Associate", "$$SkillGroup", "$$With", "$$Room", "$$Response", "\u2581Associate", "$$SkillGroup", "$$With", "$$Room", "$$(", "$$Associate", "$$SkillGroup", "$$With", "$$Room", "$$Request", "\u2581request)", "\u2581{"], ["\u2581var", "\u2581options", "\u2581=", "\u2581new", "\u2581Invoke", "$$Options", "$$()", "$$;"], ["\u2581options.RequestMarshaller", "\u2581=", "\u2581Associate", "$$SkillGroup", "$$With", "$$Room", "$$RequestMarshaller", "$$.", "$$Instance", "$$;"], ["\u2581options.ResponseUnmarshaller", "\u2581=", "\u2581Associate", "$$SkillGroup", "$$With", "$$Room", "$$ResponseUnmarshaller", "$$.", "$$Instance", "$$;"], ["\u2581return", "\u2581Invoke<", "$$Associate", "$$SkillGroup", "$$With", "$$Room", "$$Response>(request,", "\u2581options", "$$)", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Associate", "$$SkillGroup", "$$With", "$$Room", "$$Result", "\u2581", "$$associate", "$$SkillGroup", "$$With", "$$Room", "$$(", "$$Associate", "$$SkillGroup", "$$With", "$$Room", "$$Request", "\u2581request)", "\u2581{"], ["\u2581request", "\u2581=", "\u2581beforeClientEx", "$$ecution", "$$(request", "$$)", "$$;"], ["\u2581return", "\u2581execute", "$$Associate", "$$SkillGroup", "$$With", "$$Room", "$$(request", "$$)", "$$;"], ["\u2581}"]]}, {"cs": "public override String ToString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.Append(\"[SERIESLIST]\\n\");\n    buffer.Append(\"    .seriesNumbers        = \").Append(\" (\").Append(SeriesNumbers).Append(\" )\");\n    buffer.Append(Environment.NewLine);\n    buffer.Append(\"[/SERIESLIST]\\n\");\n    return buffer.ToString();\n}\n", "java": "public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"[SERIESLIST]\\n\");\n    buffer.append(\"    .seriesNumbers= \").append(\" (\").append( Arrays.toString(getSeriesNumbers()) ).append(\" )\");\n    buffer.append(\"\\n\");\n    buffer.append(\"[/SERIESLIST]\\n\");\n    return buffer.toString();\n}\n", "cs_t": [["\u2581public", "\u2581override", "\u2581String", "\u2581ToString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.Append(\"[", "$$S", "$$ER", "$$I", "$$E", "$$S", "$$L", "$$I", "$$ST", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.Append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$ser", "$$ies", "$$Number", "$$s", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581", "\u2581=", "\u2581\")", "$$.Append(\"", "\u2581(", "$$\").Append(", "$$S", "$$eries", "$$Number", "$$s)", "$$.Append(\"", "\u2581)", "$$\")", "$$;"], ["\u2581buffer.Append(", "$$Environment", "$$.N", "$$ew", "$$Line", "$$)", "$$;"], ["\u2581buffer.Append(\"[/", "$$S", "$$ER", "$$I", "$$E", "$$S", "$$L", "$$I", "$$ST", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.ToString()", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581toString()", "\u2581{"], ["\u2581StringBuilder", "\u2581buffer", "\u2581=", "\u2581new", "\u2581StringBuilder", "$$()", "$$;"], ["\u2581buffer.append(\"[", "$$S", "$$ER", "$$I", "$$E", "$$S", "$$L", "$$I", "$$ST", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"", "\u2581", "\u2581", "\u2581", "\u2581.", "$$ser", "$$ies", "$$Number", "$$s", "$$=", "\u2581\")", "$$.append(\"", "\u2581(", "$$\").append(", "\u2581Arrays.", "$$to", "$$String(", "$$get", "$$S", "$$eries", "$$Number", "$$s", "$$())", "\u2581)", "$$.append(\"", "\u2581)", "$$\")", "$$;"], ["\u2581buffer.append(\"", "$$\\n", "$$\")", "$$;"], ["\u2581buffer.append(\"[/", "$$S", "$$ER", "$$I", "$$E", "$$S", "$$L", "$$I", "$$ST", "$$]", "$$\\n", "$$\")", "$$;"], ["\u2581return", "\u2581buffer", "$$.toString()", "$$;"], ["\u2581}"]]}, {"cs": "public virtual QueryConfigHandler GetQueryConfigHandler() {\n    return this.queryConfig;\n}\n", "java": "public QueryConfigHandler getQueryConfigHandler() {\n    return this.queryConfig;\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581Query", "$$Config", "$$Handler", "\u2581Get", "$$Query", "$$Config", "$$Handler", "$$()", "\u2581{"], ["\u2581return", "\u2581this.", "$$query", "$$Config", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581Query", "$$Config", "$$Handler", "\u2581get", "$$Query", "$$Config", "$$Handler", "$$()", "\u2581{"], ["\u2581return", "\u2581this.", "$$query", "$$Config", "$$;"], ["\u2581}"]]}, {"cs": "public virtual string GetClassArg() {\n    if (null != originalArgs) {\n        string className = originalArgs[CLASS_NAME];\n        if (null != className) {\n            return className;\n        }\n    }\n    return this.GetType().Name;\n}\n", "java": "public String getClassArg() {\n    if (null != originalArgs) {\n        String className = originalArgs.get(CLASS_NAME);\n        if (null != className) {\n            return className;\n        }\n    }\n    return getClass().getName();\n}\n", "cs_t": [["\u2581public", "\u2581virtual", "\u2581string", "\u2581Get", "$$Class", "$$Arg", "$$()", "\u2581{"], ["\u2581if", "\u2581(n", "$$ull", "\u2581!=", "\u2581original", "$$Arg", "$$s)", "\u2581{"], ["\u2581string", "\u2581c", "$$lass", "$$Name", "\u2581=", "\u2581original", "$$Arg", "$$s[", "$$C", "$$LA", "$$SS", "$$_", "$$N", "$$AM", "$$E", "$$]", "$$;"], ["\u2581if", "\u2581(n", "$$ull", "\u2581!=", "\u2581c", "$$lass", "$$Name)", "\u2581{"], ["\u2581return", "\u2581c", "$$lass", "$$Name", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581this.", "$$Get", "$$Type().", "$$Name", "$$;"], ["\u2581}"]], "java_t": [["\u2581public", "\u2581String", "\u2581get", "$$Class", "$$Arg", "$$()", "\u2581{"], ["\u2581if", "\u2581(n", "$$ull", "\u2581!=", "\u2581original", "$$Arg", "$$s)", "\u2581{"], ["\u2581String", "\u2581c", "$$lass", "$$Name", "\u2581=", "\u2581original", "$$Arg", "$$s.get", "$$(", "$$C", "$$LA", "$$SS", "$$_", "$$N", "$$AM", "$$E", "$$)", "$$;"], ["\u2581if", "\u2581(n", "$$ull", "\u2581!=", "\u2581c", "$$lass", "$$Name)", "\u2581{"], ["\u2581return", "\u2581c", "$$lass", "$$Name", "$$;"], ["\u2581}"], ["\u2581}"], ["\u2581return", "\u2581get", "$$Class().get", "$$Name()", "$$;"], ["\u2581}"]]}]